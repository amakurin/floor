var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.TRUSTED_SITE = true;
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name);
  };
  goog.implicitNamespaces_ = {};
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
if (!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && (typeof value.splice != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")))) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call"))) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isDef = function(val) {
  return val !== undefined;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for (var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value);
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.subs = function(str, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement);
  }
  return str;
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && (ch >= " " && ch <= "~") || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;");
  } else {
    if (!goog.string.allRe_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;");
    }
    return str;
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1;
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && (index < s.length && stringLength > 0)) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || (goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]));
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    this.stack = (new Error).stack || "";
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return(value);
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if (arr.reduce) {
    if (opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val);
    } else {
      return arr.reduce(f, val);
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if (arr.reduceRight) {
    if (opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val);
    } else {
      return arr.reduceRight(f, val);
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || (!goog.isArrayLike(arr2) || arr1.length != arr2.length)) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn);
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2156";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  3960797560), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__9742__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__9742 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__9742__delegate.call(this, args);
    };
    G__9742.cljs$lang$maxFixedArity = 0;
    G__9742.cljs$lang$applyTo = function(arglist__9743) {
      var args = cljs.core.seq(arglist__9743);
      return G__9742__delegate(args);
    };
    G__9742.cljs$core$IFn$_invoke$arity$variadic = G__9742__delegate;
    return G__9742;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false;
      } else {
        return null;
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3391__auto__ = ty;
    if (cljs.core.truth_(and__3391__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3391__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4090__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4090__auto__)) {
    var s = temp__4090__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4251__auto___9744 = len;
  var i_9745 = 0;
  while (true) {
    if (i_9745 < n__4251__auto___9744) {
      new_arr[i_9745] = arr[i_9745];
      var G__9746 = i_9745 + 1;
      i_9745 = G__9746;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__9747__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__9747 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9747__delegate.call(this, array, i, idxs);
    };
    G__9747.cljs$lang$maxFixedArity = 2;
    G__9747.cljs$lang$applyTo = function(arglist__9748) {
      var array = cljs.core.first(arglist__9748);
      arglist__9748 = cljs.core.next(arglist__9748);
      var i = cljs.core.first(arglist__9748);
      var idxs = cljs.core.rest(arglist__9748);
      return G__9747__delegate(array, i, idxs);
    };
    G__9747.cljs$core$IFn$_invoke$arity$variadic = G__9747__delegate;
    return G__9747;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__9749__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__9749 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__9749__delegate.call(this, array, idx, idx2, idxv);
    };
    G__9749.cljs$lang$maxFixedArity = 3;
    G__9749.cljs$lang$applyTo = function(arglist__9750) {
      var array = cljs.core.first(arglist__9750);
      arglist__9750 = cljs.core.next(arglist__9750);
      var idx = cljs.core.first(arglist__9750);
      arglist__9750 = cljs.core.next(arglist__9750);
      var idx2 = cljs.core.first(arglist__9750);
      var idxv = cljs.core.rest(arglist__9750);
      return G__9749__delegate(array, idx, idx2, idxv);
    };
    G__9749.cljs$core$IFn$_invoke$arity$variadic = G__9749__delegate;
    return G__9749;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj9752 = {};
  return obj9752;
}();
cljs.core.IFn = function() {
  var obj9754 = {};
  return obj9754;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj9756 = {};
  return obj9756;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3391__auto__ = value;
    if (and__3391__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4030__auto__ = value == null ? null : value;
    return function() {
      var or__3403__auto__ = cljs.core._clone[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._clone["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj9758 = {};
  return obj9758;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._count[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._count["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj9760 = {};
  return obj9760;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._empty[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._empty["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj9762 = {};
  return obj9762;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._conj[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._conj["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj9764 = {};
  return obj9764;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3391__auto__ = coll;
      if (and__3391__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4030__auto__ = coll == null ? null : coll;
      return function() {
        var or__3403__auto__ = cljs.core._nth[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._nth["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3391__auto__ = coll;
      if (and__3391__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4030__auto__ = coll == null ? null : coll;
      return function() {
        var or__3403__auto__ = cljs.core._nth[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._nth["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj9766 = {};
  return obj9766;
}();
cljs.core.ISeq = function() {
  var obj9768 = {};
  return obj9768;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._first[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._first["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._rest[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._rest["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj9770 = {};
  return obj9770;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._next[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._next["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj9772 = {};
  return obj9772;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3391__auto__ = o;
      if (and__3391__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4030__auto__ = o == null ? null : o;
      return function() {
        var or__3403__auto__ = cljs.core._lookup[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._lookup["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3391__auto__ = o;
      if (and__3391__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4030__auto__ = o == null ? null : o;
      return function() {
        var or__3403__auto__ = cljs.core._lookup[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._lookup["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj9774 = {};
  return obj9774;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._assoc[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._assoc["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj9776 = {};
  return obj9776;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._dissoc[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._dissoc["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj9778 = {};
  return obj9778;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._key[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._key["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._val[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._val["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj9780 = {};
  return obj9780;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._disjoin[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._disjoin["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj9782 = {};
  return obj9782;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._peek[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._peek["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._pop[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._pop["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj9784 = {};
  return obj9784;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._assoc_n[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj9786 = {};
  return obj9786;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3391__auto__ = o;
    if (and__3391__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4030__auto__ = o == null ? null : o;
    return function() {
      var or__3403__auto__ = cljs.core._deref[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._deref["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj9788 = {};
  return obj9788;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3391__auto__ = o;
    if (and__3391__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4030__auto__ = o == null ? null : o;
    return function() {
      var or__3403__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj9790 = {};
  return obj9790;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3391__auto__ = o;
    if (and__3391__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4030__auto__ = o == null ? null : o;
    return function() {
      var or__3403__auto__ = cljs.core._meta[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._meta["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj9792 = {};
  return obj9792;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3391__auto__ = o;
    if (and__3391__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4030__auto__ = o == null ? null : o;
    return function() {
      var or__3403__auto__ = cljs.core._with_meta[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._with_meta["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj9794 = {};
  return obj9794;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3391__auto__ = coll;
      if (and__3391__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4030__auto__ = coll == null ? null : coll;
      return function() {
        var or__3403__auto__ = cljs.core._reduce[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._reduce["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3391__auto__ = coll;
      if (and__3391__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4030__auto__ = coll == null ? null : coll;
      return function() {
        var or__3403__auto__ = cljs.core._reduce[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._reduce["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj9796 = {};
  return obj9796;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj9798 = {};
  return obj9798;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3391__auto__ = o;
    if (and__3391__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4030__auto__ = o == null ? null : o;
    return function() {
      var or__3403__auto__ = cljs.core._equiv[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._equiv["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj9800 = {};
  return obj9800;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3391__auto__ = o;
    if (and__3391__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4030__auto__ = o == null ? null : o;
    return function() {
      var or__3403__auto__ = cljs.core._hash[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._hash["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj9802 = {};
  return obj9802;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3391__auto__ = o;
    if (and__3391__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4030__auto__ = o == null ? null : o;
    return function() {
      var or__3403__auto__ = cljs.core._seq[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._seq["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj9804 = {};
  return obj9804;
}();
cljs.core.IList = function() {
  var obj9806 = {};
  return obj9806;
}();
cljs.core.IRecord = function() {
  var obj9808 = {};
  return obj9808;
}();
cljs.core.IReversible = function() {
  var obj9810 = {};
  return obj9810;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._rseq[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._rseq["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj9812 = {};
  return obj9812;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._entry_key[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._entry_key["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._comparator[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._comparator["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj9814 = {};
  return obj9814;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3391__auto__ = writer;
    if (and__3391__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4030__auto__ = writer == null ? null : writer;
    return function() {
      var or__3403__auto__ = cljs.core._write[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._write["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3391__auto__ = writer;
    if (and__3391__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4030__auto__ = writer == null ? null : writer;
    return function() {
      var or__3403__auto__ = cljs.core._flush[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._flush["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj9816 = {};
  return obj9816;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3391__auto__ = o;
    if (and__3391__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4030__auto__ = o == null ? null : o;
    return function() {
      var or__3403__auto__ = cljs.core._pr_writer[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj9818 = {};
  return obj9818;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3391__auto__ = d;
    if (and__3391__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4030__auto__ = d == null ? null : d;
    return function() {
      var or__3403__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj9820 = {};
  return obj9820;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = cljs.core._notify_watches[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = cljs.core._add_watch[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._add_watch["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = cljs.core._remove_watch[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj9822 = {};
  return obj9822;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._as_transient[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._as_transient["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj9824 = {};
  return obj9824;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3391__auto__ = tcoll;
    if (and__3391__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4030__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3403__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3391__auto__ = tcoll;
    if (and__3391__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4030__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3403__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj9826 = {};
  return obj9826;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3391__auto__ = tcoll;
    if (and__3391__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4030__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3403__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj9828 = {};
  return obj9828;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3391__auto__ = tcoll;
    if (and__3391__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4030__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3403__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj9830 = {};
  return obj9830;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3391__auto__ = tcoll;
    if (and__3391__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4030__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3403__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3391__auto__ = tcoll;
    if (and__3391__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4030__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3403__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj9832 = {};
  return obj9832;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3391__auto__ = tcoll;
    if (and__3391__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4030__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3403__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj9834 = {};
  return obj9834;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3391__auto__ = x;
    if (and__3391__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4030__auto__ = x == null ? null : x;
    return function() {
      var or__3403__auto__ = cljs.core._compare[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._compare["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj9836 = {};
  return obj9836;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._drop_first[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._drop_first["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj9838 = {};
  return obj9838;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._chunked_first[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj9840 = {};
  return obj9840;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._chunked_next[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj9842 = {};
  return obj9842;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3391__auto__ = x;
    if (and__3391__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4030__auto__ = x == null ? null : x;
    return function() {
      var or__3403__auto__ = cljs.core._name[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._name["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3391__auto__ = x;
    if (and__3391__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4030__auto__ = x == null ? null : x;
    return function() {
      var or__3403__auto__ = cljs.core._namespace[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._namespace["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("");
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3391__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3391__auto__) {
        return b.ns;
      } else {
        return and__3391__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return cljs.core.compare.call(null, a.name, b.name);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3814__auto__ = self__._hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__9844 = null;
  var G__9844__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__9844__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__9844 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9844__2.call(this, self__, coll);
      case 3:
        return G__9844__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9844;
}();
cljs.core.Symbol.prototype.apply = function(self__, args9843) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9843)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__9846 = value;
  if (G__9846) {
    var bit__4053__auto__ = G__9846.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4053__auto__ || G__9846.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__9846.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__9846);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__9846);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__9848 = coll;
      if (G__9848) {
        var bit__4046__auto__ = G__9848.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4046__auto__ || G__9848.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__9850 = coll;
      if (G__9850) {
        var bit__4046__auto__ = G__9850.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4046__auto__ || G__9850.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__9852 = coll;
      if (G__9852) {
        var bit__4046__auto__ = G__9852.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4046__auto__ || G__9852.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__9854 = coll;
      if (G__9854) {
        var bit__4046__auto__ = G__9854.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4046__auto__ || G__9854.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__9855__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__9856 = y;
            var G__9857 = cljs.core.first.call(null, more);
            var G__9858 = cljs.core.next.call(null, more);
            x = G__9856;
            y = G__9857;
            more = G__9858;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__9855 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9855__delegate.call(this, x, y, more);
    };
    G__9855.cljs$lang$maxFixedArity = 2;
    G__9855.cljs$lang$applyTo = function(arglist__9859) {
      var x = cljs.core.first(arglist__9859);
      arglist__9859 = cljs.core.next(arglist__9859);
      var y = cljs.core.first(arglist__9859);
      var more = cljs.core.rest(arglist__9859);
      return G__9855__delegate(x, y, more);
    };
    G__9855.cljs$core$IFn$_invoke$arity$variadic = G__9855__delegate;
    return G__9855;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__9860 = nval;
            var G__9861 = n + 1;
            val = G__9860;
            n = G__9861;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__9862 = nval;
          var G__9863 = n + 1;
          val__$1 = G__9862;
          n = G__9863;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__9864 = nval;
          var G__9865 = n + 1;
          val__$1 = G__9864;
          n = G__9865;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__9866 = nval;
            var G__9867 = n + 1;
            val = G__9866;
            n = G__9867;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__9868 = nval;
          var G__9869 = n + 1;
          val__$1 = G__9868;
          n = G__9869;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__9870 = nval;
          var G__9871 = n + 1;
          val__$1 = G__9870;
          n = G__9871;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__9873 = x;
  if (G__9873) {
    var bit__4053__auto__ = G__9873.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4053__auto__ || G__9873.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__9873.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__9873);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__9873);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__9875 = x;
  if (G__9875) {
    var bit__4053__auto__ = G__9875.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4053__auto__ || G__9875.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__9875.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__9875);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__9875);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__9876 = sn;
      s = G__9876;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__9877__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__9878 = conj.call(null, coll, x);
          var G__9879 = cljs.core.first.call(null, xs);
          var G__9880 = cljs.core.next.call(null, xs);
          coll = G__9878;
          x = G__9879;
          xs = G__9880;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__9877 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9877__delegate.call(this, coll, x, xs);
    };
    G__9877.cljs$lang$maxFixedArity = 2;
    G__9877.cljs$lang$applyTo = function(arglist__9881) {
      var coll = cljs.core.first(arglist__9881);
      arglist__9881 = cljs.core.next(arglist__9881);
      var x = cljs.core.first(arglist__9881);
      var xs = cljs.core.rest(arglist__9881);
      return G__9877__delegate(coll, x, xs);
    };
    G__9877.cljs$core$IFn$_invoke$arity$variadic = G__9877__delegate;
    return G__9877;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__9882 = cljs.core.next.call(null, s);
      var G__9883 = acc + 1;
      s = G__9882;
      acc = G__9883;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__9885 = coll;
      if (G__9885) {
        var bit__4046__auto__ = G__9885.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4046__auto__ || G__9885.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count.call(null, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__9886 = cljs.core.next.call(null, coll);
              var G__9887 = n - 1;
              coll = G__9886;
              n = G__9887;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__9888 = cljs.core.next.call(null, coll);
              var G__9889 = n - 1;
              var G__9890 = not_found;
              coll = G__9888;
              n = G__9889;
              not_found = G__9890;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (coll == null) {
      return null;
    } else {
      if (function() {
        var G__9895 = coll;
        if (G__9895) {
          var bit__4046__auto__ = G__9895.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4046__auto__ || G__9895.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._nth.call(null, coll, n);
      } else {
        if (coll instanceof Array) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if (function() {
                  var G__9896 = coll;
                  if (G__9896) {
                    var bit__4053__auto__ = G__9896.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4053__auto__ || G__9896.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__9896.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9896);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9896);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(coll == null)) {
      if (function() {
        var G__9897 = coll;
        if (G__9897) {
          var bit__4046__auto__ = G__9897.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4046__auto__ || G__9897.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._nth.call(null, coll, n, not_found);
      } else {
        if (coll instanceof Array) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if (function() {
                  var G__9898 = coll;
                  if (G__9898) {
                    var bit__4053__auto__ = G__9898.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4053__auto__ || G__9898.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__9898.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9898);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9898);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__9901 = o;
        if (G__9901) {
          var bit__4046__auto__ = G__9901.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4046__auto__ || G__9901.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__9902 = o;
        if (G__9902) {
          var bit__4046__auto__ = G__9902.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4046__auto__ || G__9902.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays.call(null, [k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__9903__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__9904 = ret;
          var G__9905 = cljs.core.first.call(null, kvs);
          var G__9906 = cljs.core.second.call(null, kvs);
          var G__9907 = cljs.core.nnext.call(null, kvs);
          coll = G__9904;
          k = G__9905;
          v = G__9906;
          kvs = G__9907;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__9903 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__9903__delegate.call(this, coll, k, v, kvs);
    };
    G__9903.cljs$lang$maxFixedArity = 3;
    G__9903.cljs$lang$applyTo = function(arglist__9908) {
      var coll = cljs.core.first(arglist__9908);
      arglist__9908 = cljs.core.next(arglist__9908);
      var k = cljs.core.first(arglist__9908);
      arglist__9908 = cljs.core.next(arglist__9908);
      var v = cljs.core.first(arglist__9908);
      var kvs = cljs.core.rest(arglist__9908);
      return G__9903__delegate(coll, k, v, kvs);
    };
    G__9903.cljs$core$IFn$_invoke$arity$variadic = G__9903__delegate;
    return G__9903;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__9909__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__9910 = ret;
            var G__9911 = cljs.core.first.call(null, ks);
            var G__9912 = cljs.core.next.call(null, ks);
            coll = G__9910;
            k = G__9911;
            ks = G__9912;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__9909 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9909__delegate.call(this, coll, k, ks);
    };
    G__9909.cljs$lang$maxFixedArity = 2;
    G__9909.cljs$lang$applyTo = function(arglist__9913) {
      var coll = cljs.core.first(arglist__9913);
      arglist__9913 = cljs.core.next(arglist__9913);
      var k = cljs.core.first(arglist__9913);
      var ks = cljs.core.rest(arglist__9913);
      return G__9909__delegate(coll, k, ks);
    };
    G__9909.cljs$core$IFn$_invoke$arity$variadic = G__9909__delegate;
    return G__9909;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3403__auto__ = goog.isFunction(f);
  if (or__3403__auto__) {
    return or__3403__auto__;
  } else {
    var G__9917 = f;
    if (G__9917) {
      var bit__4053__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3403__auto____$1 = bit__4053__auto__;
        if (cljs.core.truth_(or__3403__auto____$1)) {
          return or__3403__auto____$1;
        } else {
          return G__9917.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__9917.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__9917);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__9917);
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__9925 = o;
    if (G__9925) {
      var bit__4053__auto__ = G__9925.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4053__auto__ || G__9925.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__9925.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__9925);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__9925);
    }
  }()) {
    return with_meta.call(null, function() {
      if (typeof cljs.core.t9926 !== "undefined") {
      } else {
        cljs.core.t9926 = function(meta, o, with_meta, meta9927) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta9927 = meta9927;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217;
        };
        cljs.core.t9926.cljs$lang$type = true;
        cljs.core.t9926.cljs$lang$ctorStr = "cljs.core/t9926";
        cljs.core.t9926.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
          return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/t9926");
        };
        cljs.core.t9926.prototype.call = function() {
          var G__9930__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__9930 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
            }
            return G__9930__delegate.call(this, self__, args);
          };
          G__9930.cljs$lang$maxFixedArity = 1;
          G__9930.cljs$lang$applyTo = function(arglist__9931) {
            var self__ = cljs.core.first(arglist__9931);
            var args = cljs.core.rest(arglist__9931);
            return G__9930__delegate(self__, args);
          };
          G__9930.cljs$core$IFn$_invoke$arity$variadic = G__9930__delegate;
          return G__9930;
        }();
        cljs.core.t9926.prototype.apply = function(self__, args9929) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9929)));
        };
        cljs.core.t9926.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
          var G__9932__delegate = function(args) {
            var _ = this;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__9932 = function(var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__9932__delegate.call(this, args);
          };
          G__9932.cljs$lang$maxFixedArity = 0;
          G__9932.cljs$lang$applyTo = function(arglist__9933) {
            var args = cljs.core.seq(arglist__9933);
            return G__9932__delegate(args);
          };
          G__9932.cljs$core$IFn$_invoke$arity$variadic = G__9932__delegate;
          return G__9932;
        }();
        cljs.core.t9926.prototype.cljs$core$Fn$ = true;
        cljs.core.t9926.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9928) {
          var self__ = this;
          var _9928__$1 = this;
          return self__.meta9927;
        };
        cljs.core.t9926.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9928, meta9927__$1) {
          var self__ = this;
          var _9928__$1 = this;
          return new cljs.core.t9926(self__.meta, self__.o, self__.with_meta, meta9927__$1);
        };
        cljs.core.__GT_t9926 = function __GT_t9926(meta__$1, o__$1, with_meta__$1, meta9927) {
          return new cljs.core.t9926(meta__$1, o__$1, with_meta__$1, meta9927);
        };
      }
      return new cljs.core.t9926(meta, o, with_meta, null);
    }(), meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3391__auto__ = !(o == null);
    if (and__3391__auto__) {
      var G__9937 = o;
      if (G__9937) {
        var bit__4053__auto__ = G__9937.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4053__auto__ || G__9937.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__9937.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__9937);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__9937);
      }
    } else {
      return and__3391__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__9938__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__9939 = ret;
            var G__9940 = cljs.core.first.call(null, ks);
            var G__9941 = cljs.core.next.call(null, ks);
            coll = G__9939;
            k = G__9940;
            ks = G__9941;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__9938 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9938__delegate.call(this, coll, k, ks);
    };
    G__9938.cljs$lang$maxFixedArity = 2;
    G__9938.cljs$lang$applyTo = function(arglist__9942) {
      var coll = cljs.core.first(arglist__9942);
      arglist__9942 = cljs.core.next(arglist__9942);
      var k = cljs.core.first(arglist__9942);
      var ks = cljs.core.rest(arglist__9942);
      return G__9938__delegate(coll, k, ks);
    };
    G__9938.cljs$core$IFn$_invoke$arity$variadic = G__9938__delegate;
    return G__9938;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.string_hash_cache = function() {
  var obj9944 = {};
  return obj9944;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj9948 = {};
      return obj9948;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__9950 = o;
    if (G__9950) {
      var bit__4046__auto__ = G__9950.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4046__auto__ || G__9950.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.check_string_hash_cache.call(null, o);
          } else {
            if (o == null) {
              return 0;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return cljs.core._hash.call(null, o);
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__9952 = x;
    if (G__9952) {
      var bit__4053__auto__ = G__9952.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4053__auto__ || G__9952.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__9952.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__9952);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__9952);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__9954 = x;
    if (G__9954) {
      var bit__4053__auto__ = G__9954.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4053__auto__ || G__9954.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__9954.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__9954);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__9954);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__9956 = x;
  if (G__9956) {
    var bit__4053__auto__ = G__9956.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4053__auto__ || G__9956.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__9956.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__9956);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__9956);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__9958 = x;
  if (G__9958) {
    var bit__4053__auto__ = G__9958.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4053__auto__ || G__9958.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__9958.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__9958);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__9958);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__9960 = x;
  if (G__9960) {
    var bit__4053__auto__ = G__9960.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4053__auto__ || G__9960.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__9960.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__9960);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__9960);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__9962 = x;
  if (G__9962) {
    var bit__4053__auto__ = G__9962.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4053__auto__ || G__9962.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__9962.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__9962);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__9962);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__9964 = x;
    if (G__9964) {
      var bit__4053__auto__ = G__9964.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4053__auto__ || G__9964.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__9964.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__9964);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__9964);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__9966 = x;
  if (G__9966) {
    var bit__4053__auto__ = G__9966.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4053__auto__ || G__9966.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__9966.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__9966);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__9966);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__9968 = x;
  if (G__9968) {
    var bit__4046__auto__ = G__9968.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4046__auto__ || G__9968.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj9972 = {};
    return obj9972;
  };
  var js_obj__1 = function() {
    var G__9973__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__9973 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__9973__delegate.call(this, keyvals);
    };
    G__9973.cljs$lang$maxFixedArity = 0;
    G__9973.cljs$lang$applyTo = function(arglist__9974) {
      var keyvals = cljs.core.seq(arglist__9974);
      return G__9973__delegate(keyvals);
    };
    G__9973.cljs$core$IFn$_invoke$arity$variadic = G__9973__delegate;
    return G__9973;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(val, key, obj__$1) {
    return keys.push(key);
  });
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__9975 = i__$1 + 1;
      var G__9976 = j__$1 + 1;
      var G__9977 = len__$1 - 1;
      i__$1 = G__9975;
      j__$1 = G__9976;
      len__$1 = G__9977;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__9978 = i__$1 - 1;
      var G__9979 = j__$1 - 1;
      var G__9980 = len__$1 - 1;
      i__$1 = G__9978;
      j__$1 = G__9979;
      len__$1 = G__9980;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj9982 = {};
  return obj9982;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__9984 = s;
    if (G__9984) {
      var bit__4053__auto__ = G__9984.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4053__auto__ || G__9984.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__9984.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9984);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9984);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__9986 = s;
  if (G__9986) {
    var bit__4053__auto__ = G__9986.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4053__auto__ || G__9986.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__9986.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__9986);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__9986);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3403__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3403__auto__) {
    return or__3403__auto__;
  } else {
    var G__9990 = f;
    if (G__9990) {
      var bit__4053__auto__ = G__9990.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4053__auto__ || G__9990.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__9990.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__9990);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__9990);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && (!isNaN(n) && (!(n === Infinity) && parseFloat(n) === parseInt(n, 10)));
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && (cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__9991__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, x], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__9992 = cljs.core.conj.call(null, s, x__$1);
              var G__9993 = etc;
              s = G__9992;
              xs = G__9993;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__9991 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9991__delegate.call(this, x, y, more);
    };
    G__9991.cljs$lang$maxFixedArity = 2;
    G__9991.cljs$lang$applyTo = function(arglist__9994) {
      var x = cljs.core.first(arglist__9994);
      arglist__9994 = cljs.core.next(arglist__9994);
      var y = cljs.core.first(arglist__9994);
      var more = cljs.core.rest(arglist__9994);
      return G__9991__delegate(x, y, more);
    };
    G__9991.cljs$core$IFn$_invoke$arity$variadic = G__9991__delegate;
    return G__9991;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3403__auto__ = cljs.core.seq.call(null, coll);
    if (or__3403__auto__) {
      return or__3403__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__9996 = x;
            if (G__9996) {
              var bit__4046__auto__ = G__9996.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4046__auto__ || G__9996.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.call(null, xs, ys, xl, 0);
        } else {
          return null;
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__9997 = xs;
        var G__9998 = ys;
        var G__9999 = len;
        var G__10000 = n + 1;
        xs = G__9997;
        ys = G__9998;
        len = G__9999;
        n = G__10000;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__10001 = nval;
          var G__10002 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__10001;
          coll__$1 = G__10002;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__10005 = coll;
      if (G__10005) {
        var bit__4046__auto__ = G__10005.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4046__auto__ || G__10005.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__10006 = coll;
      if (G__10006) {
        var bit__4046__auto__ = G__10006.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4046__auto__ || G__10006.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, val, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__10007__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__10007 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10007__delegate.call(this, x, y, more);
    };
    G__10007.cljs$lang$maxFixedArity = 2;
    G__10007.cljs$lang$applyTo = function(arglist__10008) {
      var x = cljs.core.first(arglist__10008);
      arglist__10008 = cljs.core.next(arglist__10008);
      var y = cljs.core.first(arglist__10008);
      var more = cljs.core.rest(arglist__10008);
      return G__10007__delegate(x, y, more);
    };
    G__10007.cljs$core$IFn$_invoke$arity$variadic = G__10007__delegate;
    return G__10007;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__10009__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__10009 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10009__delegate.call(this, x, y, more);
    };
    G__10009.cljs$lang$maxFixedArity = 2;
    G__10009.cljs$lang$applyTo = function(arglist__10010) {
      var x = cljs.core.first(arglist__10010);
      arglist__10010 = cljs.core.next(arglist__10010);
      var y = cljs.core.first(arglist__10010);
      var more = cljs.core.rest(arglist__10010);
      return G__10009__delegate(x, y, more);
    };
    G__10009.cljs$core$IFn$_invoke$arity$variadic = G__10009__delegate;
    return G__10009;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__10011__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__10011 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10011__delegate.call(this, x, y, more);
    };
    G__10011.cljs$lang$maxFixedArity = 2;
    G__10011.cljs$lang$applyTo = function(arglist__10012) {
      var x = cljs.core.first(arglist__10012);
      arglist__10012 = cljs.core.next(arglist__10012);
      var y = cljs.core.first(arglist__10012);
      var more = cljs.core.rest(arglist__10012);
      return G__10011__delegate(x, y, more);
    };
    G__10011.cljs$core$IFn$_invoke$arity$variadic = G__10011__delegate;
    return G__10011;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__10013__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__10013 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10013__delegate.call(this, x, y, more);
    };
    G__10013.cljs$lang$maxFixedArity = 2;
    G__10013.cljs$lang$applyTo = function(arglist__10014) {
      var x = cljs.core.first(arglist__10014);
      arglist__10014 = cljs.core.next(arglist__10014);
      var y = cljs.core.first(arglist__10014);
      var more = cljs.core.rest(arglist__10014);
      return G__10013__delegate(x, y, more);
    };
    G__10013.cljs$core$IFn$_invoke$arity$variadic = G__10013__delegate;
    return G__10013;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__10015__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__10016 = y;
            var G__10017 = cljs.core.first.call(null, more);
            var G__10018 = cljs.core.next.call(null, more);
            x = G__10016;
            y = G__10017;
            more = G__10018;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10015 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10015__delegate.call(this, x, y, more);
    };
    G__10015.cljs$lang$maxFixedArity = 2;
    G__10015.cljs$lang$applyTo = function(arglist__10019) {
      var x = cljs.core.first(arglist__10019);
      arglist__10019 = cljs.core.next(arglist__10019);
      var y = cljs.core.first(arglist__10019);
      var more = cljs.core.rest(arglist__10019);
      return G__10015__delegate(x, y, more);
    };
    G__10015.cljs$core$IFn$_invoke$arity$variadic = G__10015__delegate;
    return G__10015;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__10020__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__10021 = y;
            var G__10022 = cljs.core.first.call(null, more);
            var G__10023 = cljs.core.next.call(null, more);
            x = G__10021;
            y = G__10022;
            more = G__10023;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10020 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10020__delegate.call(this, x, y, more);
    };
    G__10020.cljs$lang$maxFixedArity = 2;
    G__10020.cljs$lang$applyTo = function(arglist__10024) {
      var x = cljs.core.first(arglist__10024);
      arglist__10024 = cljs.core.next(arglist__10024);
      var y = cljs.core.first(arglist__10024);
      var more = cljs.core.rest(arglist__10024);
      return G__10020__delegate(x, y, more);
    };
    G__10020.cljs$core$IFn$_invoke$arity$variadic = G__10020__delegate;
    return G__10020;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__10025__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__10026 = y;
            var G__10027 = cljs.core.first.call(null, more);
            var G__10028 = cljs.core.next.call(null, more);
            x = G__10026;
            y = G__10027;
            more = G__10028;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10025 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10025__delegate.call(this, x, y, more);
    };
    G__10025.cljs$lang$maxFixedArity = 2;
    G__10025.cljs$lang$applyTo = function(arglist__10029) {
      var x = cljs.core.first(arglist__10029);
      arglist__10029 = cljs.core.next(arglist__10029);
      var y = cljs.core.first(arglist__10029);
      var more = cljs.core.rest(arglist__10029);
      return G__10025__delegate(x, y, more);
    };
    G__10025.cljs$core$IFn$_invoke$arity$variadic = G__10025__delegate;
    return G__10025;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__10030__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__10031 = y;
            var G__10032 = cljs.core.first.call(null, more);
            var G__10033 = cljs.core.next.call(null, more);
            x = G__10031;
            y = G__10032;
            more = G__10033;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10030 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10030__delegate.call(this, x, y, more);
    };
    G__10030.cljs$lang$maxFixedArity = 2;
    G__10030.cljs$lang$applyTo = function(arglist__10034) {
      var x = cljs.core.first(arglist__10034);
      arglist__10034 = cljs.core.next(arglist__10034);
      var y = cljs.core.first(arglist__10034);
      var more = cljs.core.rest(arglist__10034);
      return G__10030__delegate(x, y, more);
    };
    G__10030.cljs$core$IFn$_invoke$arity$variadic = G__10030__delegate;
    return G__10030;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3710__auto__ = x;
    var y__3711__auto__ = y;
    return x__3710__auto__ > y__3711__auto__ ? x__3710__auto__ : y__3711__auto__;
  };
  var max__3 = function() {
    var G__10035__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3710__auto__ = x;
        var y__3711__auto__ = y;
        return x__3710__auto__ > y__3711__auto__ ? x__3710__auto__ : y__3711__auto__;
      }(), more);
    };
    var G__10035 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10035__delegate.call(this, x, y, more);
    };
    G__10035.cljs$lang$maxFixedArity = 2;
    G__10035.cljs$lang$applyTo = function(arglist__10036) {
      var x = cljs.core.first(arglist__10036);
      arglist__10036 = cljs.core.next(arglist__10036);
      var y = cljs.core.first(arglist__10036);
      var more = cljs.core.rest(arglist__10036);
      return G__10035__delegate(x, y, more);
    };
    G__10035.cljs$core$IFn$_invoke$arity$variadic = G__10035__delegate;
    return G__10035;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3717__auto__ = x;
    var y__3718__auto__ = y;
    return x__3717__auto__ < y__3718__auto__ ? x__3717__auto__ : y__3718__auto__;
  };
  var min__3 = function() {
    var G__10037__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3717__auto__ = x;
        var y__3718__auto__ = y;
        return x__3717__auto__ < y__3718__auto__ ? x__3717__auto__ : y__3718__auto__;
      }(), more);
    };
    var G__10037 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10037__delegate.call(this, x, y, more);
    };
    G__10037.cljs$lang$maxFixedArity = 2;
    G__10037.cljs$lang$applyTo = function(arglist__10038) {
      var x = cljs.core.first(arglist__10038);
      arglist__10038 = cljs.core.next(arglist__10038);
      var y = cljs.core.first(arglist__10038);
      var more = cljs.core.rest(arglist__10038);
      return G__10037__delegate(x, y, more);
    };
    G__10037.cljs$core$IFn$_invoke$arity$variadic = G__10037__delegate;
    return G__10037;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      } else {
        return null;
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__10039__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__10039 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10039__delegate.call(this, x, y, more);
    };
    G__10039.cljs$lang$maxFixedArity = 2;
    G__10039.cljs$lang$applyTo = function(arglist__10040) {
      var x = cljs.core.first(arglist__10040);
      arglist__10040 = cljs.core.next(arglist__10040);
      var y = cljs.core.first(arglist__10040);
      var more = cljs.core.rest(arglist__10040);
      return G__10039__delegate(x, y, more);
    };
    G__10039.cljs$core$IFn$_invoke$arity$variadic = G__10039__delegate;
    return G__10039;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__10041__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__10041 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10041__delegate.call(this, x, y, more);
    };
    G__10041.cljs$lang$maxFixedArity = 2;
    G__10041.cljs$lang$applyTo = function(arglist__10042) {
      var x = cljs.core.first(arglist__10042);
      arglist__10042 = cljs.core.next(arglist__10042);
      var y = cljs.core.first(arglist__10042);
      var more = cljs.core.rest(arglist__10042);
      return G__10041__delegate(x, y, more);
    };
    G__10041.cljs$core$IFn$_invoke$arity$variadic = G__10041__delegate;
    return G__10041;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__10043__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__10043 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10043__delegate.call(this, x, y, more);
    };
    G__10043.cljs$lang$maxFixedArity = 2;
    G__10043.cljs$lang$applyTo = function(arglist__10044) {
      var x = cljs.core.first(arglist__10044);
      arglist__10044 = cljs.core.next(arglist__10044);
      var y = cljs.core.first(arglist__10044);
      var more = cljs.core.rest(arglist__10044);
      return G__10043__delegate(x, y, more);
    };
    G__10043.cljs$core$IFn$_invoke$arity$variadic = G__10043__delegate;
    return G__10043;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__10045__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__10045 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10045__delegate.call(this, x, y, more);
    };
    G__10045.cljs$lang$maxFixedArity = 2;
    G__10045.cljs$lang$applyTo = function(arglist__10046) {
      var x = cljs.core.first(arglist__10046);
      arglist__10046 = cljs.core.next(arglist__10046);
      var y = cljs.core.first(arglist__10046);
      var more = cljs.core.rest(arglist__10046);
      return G__10045__delegate(x, y, more);
    };
    G__10045.cljs$core$IFn$_invoke$arity$variadic = G__10045__delegate;
    return G__10045;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__10047__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__10047 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10047__delegate.call(this, x, y, more);
    };
    G__10047.cljs$lang$maxFixedArity = 2;
    G__10047.cljs$lang$applyTo = function(arglist__10048) {
      var x = cljs.core.first(arglist__10048);
      arglist__10048 = cljs.core.next(arglist__10048);
      var y = cljs.core.first(arglist__10048);
      var more = cljs.core.rest(arglist__10048);
      return G__10047__delegate(x, y, more);
    };
    G__10047.cljs$core$IFn$_invoke$arity$variadic = G__10047__delegate;
    return G__10047;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x;
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract__3 = function() {
    var G__10049__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more);
    };
    var G__10049 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10049__delegate.call(this, x, y, more);
    };
    G__10049.cljs$lang$maxFixedArity = 2;
    G__10049.cljs$lang$applyTo = function(arglist__10050) {
      var x = cljs.core.first(arglist__10050);
      arglist__10050 = cljs.core.next(arglist__10050);
      var y = cljs.core.first(arglist__10050);
      var more = cljs.core.rest(arglist__10050);
      return G__10049__delegate(x, y, more);
    };
    G__10049.cljs$core$IFn$_invoke$arity$variadic = G__10049__delegate;
    return G__10049;
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract;
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x;
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract_int__3 = function() {
    var G__10051__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more);
    };
    var G__10051 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10051__delegate.call(this, x, y, more);
    };
    G__10051.cljs$lang$maxFixedArity = 2;
    G__10051.cljs$lang$applyTo = function(arglist__10052) {
      var x = cljs.core.first(arglist__10052);
      arglist__10052 = cljs.core.next(arglist__10052);
      var y = cljs.core.first(arglist__10052);
      var more = cljs.core.rest(arglist__10052);
      return G__10051__delegate(x, y, more);
    };
    G__10051.cljs$core$IFn$_invoke$arity$variadic = G__10051__delegate;
    return G__10051;
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__10053__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__10054 = y;
            var G__10055 = cljs.core.first.call(null, more);
            var G__10056 = cljs.core.next.call(null, more);
            x = G__10054;
            y = G__10055;
            more = G__10056;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10053 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10053__delegate.call(this, x, y, more);
    };
    G__10053.cljs$lang$maxFixedArity = 2;
    G__10053.cljs$lang$applyTo = function(arglist__10057) {
      var x = cljs.core.first(arglist__10057);
      arglist__10057 = cljs.core.next(arglist__10057);
      var y = cljs.core.first(arglist__10057);
      var more = cljs.core.rest(arglist__10057);
      return G__10053__delegate(x, y, more);
    };
    G__10053.cljs$core$IFn$_invoke$arity$variadic = G__10053__delegate;
    return G__10053;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__10058 = n__$1 - 1;
      var G__10059 = cljs.core.next.call(null, xs);
      n__$1 = G__10058;
      xs = G__10059;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return x.toString();
    }
  };
  var str__2 = function() {
    var G__10060__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__10061 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__10062 = cljs.core.next.call(null, more);
          sb = G__10061;
          more = G__10062;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__10060 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__10060__delegate.call(this, x, ys);
    };
    G__10060.cljs$lang$maxFixedArity = 1;
    G__10060.cljs$lang$applyTo = function(arglist__10063) {
      var x = cljs.core.first(arglist__10063);
      var ys = cljs.core.rest(arglist__10063);
      return G__10060__delegate(x, ys);
    };
    G__10060.cljs$core$IFn$_invoke$arity$variadic = G__10060__delegate;
    return G__10060;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__10064 = cljs.core.next.call(null, xs);
            var G__10065 = cljs.core.next.call(null, ys);
            xs = G__10064;
            ys = G__10065;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__10066 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__10067 = cljs.core.next.call(null, s);
        res = G__10066;
        s = G__10067;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__10068 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__10069 = cljs.core.next.call(null, s);
      h = G__10068;
      s = G__10069;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__10070 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__10071 = cljs.core.next.call(null, s__$1);
      h = G__10070;
      s__$1 = G__10071;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__10078_10084 = cljs.core.seq.call(null, fn_map);
  var chunk__10079_10085 = null;
  var count__10080_10086 = 0;
  var i__10081_10087 = 0;
  while (true) {
    if (i__10081_10087 < count__10080_10086) {
      var vec__10082_10088 = cljs.core._nth.call(null, chunk__10079_10085, i__10081_10087);
      var key_name_10089 = cljs.core.nth.call(null, vec__10082_10088, 0, null);
      var f_10090 = cljs.core.nth.call(null, vec__10082_10088, 1, null);
      var str_name_10091 = cljs.core.name.call(null, key_name_10089);
      obj[str_name_10091] = f_10090;
      var G__10092 = seq__10078_10084;
      var G__10093 = chunk__10079_10085;
      var G__10094 = count__10080_10086;
      var G__10095 = i__10081_10087 + 1;
      seq__10078_10084 = G__10092;
      chunk__10079_10085 = G__10093;
      count__10080_10086 = G__10094;
      i__10081_10087 = G__10095;
      continue;
    } else {
      var temp__4092__auto___10096 = cljs.core.seq.call(null, seq__10078_10084);
      if (temp__4092__auto___10096) {
        var seq__10078_10097__$1 = temp__4092__auto___10096;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10078_10097__$1)) {
          var c__4151__auto___10098 = cljs.core.chunk_first.call(null, seq__10078_10097__$1);
          var G__10099 = cljs.core.chunk_rest.call(null, seq__10078_10097__$1);
          var G__10100 = c__4151__auto___10098;
          var G__10101 = cljs.core.count.call(null, c__4151__auto___10098);
          var G__10102 = 0;
          seq__10078_10084 = G__10099;
          chunk__10079_10085 = G__10100;
          count__10080_10086 = G__10101;
          i__10081_10087 = G__10102;
          continue;
        } else {
          var vec__10083_10103 = cljs.core.first.call(null, seq__10078_10097__$1);
          var key_name_10104 = cljs.core.nth.call(null, vec__10083_10103, 0, null);
          var f_10105 = cljs.core.nth.call(null, vec__10083_10103, 1, null);
          var str_name_10106 = cljs.core.name.call(null, key_name_10104);
          obj[str_name_10106] = f_10105;
          var G__10107 = cljs.core.next.call(null, seq__10078_10097__$1);
          var G__10108 = null;
          var G__10109 = 0;
          var G__10110 = 0;
          seq__10078_10084 = G__10107;
          chunk__10079_10085 = G__10108;
          count__10080_10086 = G__10109;
          i__10081_10087 = G__10110;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/List");
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__10112 = coll;
  if (G__10112) {
    var bit__4053__auto__ = G__10112.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4053__auto__ || G__10112.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__10112.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__10112);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__10112);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__10113 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__10113;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__10114 = i - 1;
        var G__10115 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__10114;
        r = G__10115;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__10116) {
    var xs = cljs.core.seq(arglist__10116);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3403__auto__ = coll == null;
    if (or__3403__auto__) {
      return or__3403__auto__;
    } else {
      var G__10120 = coll;
      if (G__10120) {
        var bit__4046__auto__ = G__10120.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4046__auto__ || G__10120.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__10122 = x;
  if (G__10122) {
    var bit__4053__auto__ = G__10122.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4053__auto__ || G__10122.cljs$core$IList$) {
      return true;
    } else {
      if (!G__10122.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__10122);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__10122);
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._hash == null) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name)) + 2654435769;
    return self__._hash;
  } else {
    return self__._hash;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__10124 = null;
  var G__10124__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__10124__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__10124 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10124__2.call(this, self__, coll);
      case 3:
        return G__10124__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10124;
}();
cljs.core.Keyword.prototype.apply = function(self__, args10123) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10123)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__10126 = x;
    if (G__10126) {
      var bit__4046__auto__ = G__10126.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4046__auto__ || G__10126.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__10127 = ls.sval();
        ls = G__10127;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__10129 = s;
    if (G__10129) {
      var bit__4046__auto__ = G__10129.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4046__auto__ || G__10129.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__10130 = cljs.core.next.call(null, s__$1);
      s__$1 = G__10130;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_10131 = 0;
  var xs_10132 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_10132) {
      ret[i_10131] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_10132));
      var G__10133 = i_10131 + 1;
      var G__10134 = cljs.core.next.call(null, xs_10132);
      i_10131 = G__10133;
      xs_10132 = G__10134;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__10135 = i + 1;
          var G__10136 = cljs.core.next.call(null, s__$1);
          i = G__10135;
          s__$1 = G__10136;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4251__auto___10137 = size;
      var i_10138 = 0;
      while (true) {
        if (i_10138 < n__4251__auto___10137) {
          a[i_10138] = init_val_or_seq;
          var G__10139 = i_10138 + 1;
          i_10138 = G__10139;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__10140 = i + 1;
          var G__10141 = cljs.core.next.call(null, s__$1);
          i = G__10140;
          s__$1 = G__10141;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4251__auto___10142 = size;
      var i_10143 = 0;
      while (true) {
        if (i_10143 < n__4251__auto___10142) {
          a[i_10143] = init_val_or_seq;
          var G__10144 = i_10143 + 1;
          i_10143 = G__10144;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__10145 = i + 1;
          var G__10146 = cljs.core.next.call(null, s__$1);
          i = G__10145;
          s__$1 = G__10146;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4251__auto___10147 = size;
      var i_10148 = 0;
      while (true) {
        if (i_10148 < n__4251__auto___10147) {
          a[i_10148] = init_val_or_seq;
          var G__10149 = i_10148 + 1;
          i_10148 = G__10149;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__10150 = i + 1;
          var G__10151 = cljs.core.next.call(null, s__$1);
          i = G__10150;
          s__$1 = G__10151;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4251__auto___10152 = size;
      var i_10153 = 0;
      while (true) {
        if (i_10153 < n__4251__auto___10152) {
          a[i_10153] = init_val_or_seq;
          var G__10154 = i_10153 + 1;
          i_10153 = G__10154;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__10155 = cljs.core.next.call(null, s__$1);
        var G__10156 = i - 1;
        var G__10157 = sum + 1;
        s__$1 = G__10155;
        i = G__10156;
        sum = G__10157;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__10158__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__10158 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10158__delegate.call(this, x, y, zs);
    };
    G__10158.cljs$lang$maxFixedArity = 2;
    G__10158.cljs$lang$applyTo = function(arglist__10159) {
      var x = cljs.core.first(arglist__10159);
      arglist__10159 = cljs.core.next(arglist__10159);
      var y = cljs.core.first(arglist__10159);
      var zs = cljs.core.rest(arglist__10159);
      return G__10158__delegate(x, y, zs);
    };
    G__10158.cljs$core$IFn$_invoke$arity$variadic = G__10158__delegate;
    return G__10158;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__10160__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__10160 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__10160__delegate.call(this, a, b, c, d, more);
    };
    G__10160.cljs$lang$maxFixedArity = 4;
    G__10160.cljs$lang$applyTo = function(arglist__10161) {
      var a = cljs.core.first(arglist__10161);
      arglist__10161 = cljs.core.next(arglist__10161);
      var b = cljs.core.first(arglist__10161);
      arglist__10161 = cljs.core.next(arglist__10161);
      var c = cljs.core.first(arglist__10161);
      arglist__10161 = cljs.core.next(arglist__10161);
      var d = cljs.core.first(arglist__10161);
      var more = cljs.core.rest(arglist__10161);
      return G__10160__delegate(a, b, c, d, more);
    };
    G__10160.cljs$core$IFn$_invoke$arity$variadic = G__10160__delegate;
    return G__10160;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__10162__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__10163 = ntcoll;
          var G__10164 = cljs.core.first.call(null, vals);
          var G__10165 = cljs.core.next.call(null, vals);
          tcoll = G__10163;
          val = G__10164;
          vals = G__10165;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__10162 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10162__delegate.call(this, tcoll, val, vals);
    };
    G__10162.cljs$lang$maxFixedArity = 2;
    G__10162.cljs$lang$applyTo = function(arglist__10166) {
      var tcoll = cljs.core.first(arglist__10166);
      arglist__10166 = cljs.core.next(arglist__10166);
      var val = cljs.core.first(arglist__10166);
      var vals = cljs.core.rest(arglist__10166);
      return G__10162__delegate(tcoll, val, vals);
    };
    G__10162.cljs$core$IFn$_invoke$arity$variadic = G__10162__delegate;
    return G__10162;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__10167__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__10168 = ntcoll;
          var G__10169 = cljs.core.first.call(null, kvs);
          var G__10170 = cljs.core.second.call(null, kvs);
          var G__10171 = cljs.core.nnext.call(null, kvs);
          tcoll = G__10168;
          key = G__10169;
          val = G__10170;
          kvs = G__10171;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__10167 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10167__delegate.call(this, tcoll, key, val, kvs);
    };
    G__10167.cljs$lang$maxFixedArity = 3;
    G__10167.cljs$lang$applyTo = function(arglist__10172) {
      var tcoll = cljs.core.first(arglist__10172);
      arglist__10172 = cljs.core.next(arglist__10172);
      var key = cljs.core.first(arglist__10172);
      arglist__10172 = cljs.core.next(arglist__10172);
      var val = cljs.core.first(arglist__10172);
      var kvs = cljs.core.rest(arglist__10172);
      return G__10167__delegate(tcoll, key, val, kvs);
    };
    G__10167.cljs$core$IFn$_invoke$arity$variadic = G__10167__delegate;
    return G__10167;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__10173__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__10174 = ntcoll;
          var G__10175 = cljs.core.first.call(null, ks);
          var G__10176 = cljs.core.next.call(null, ks);
          tcoll = G__10174;
          key = G__10175;
          ks = G__10176;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__10173 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10173__delegate.call(this, tcoll, key, ks);
    };
    G__10173.cljs$lang$maxFixedArity = 2;
    G__10173.cljs$lang$applyTo = function(arglist__10177) {
      var tcoll = cljs.core.first(arglist__10177);
      arglist__10177 = cljs.core.next(arglist__10177);
      var key = cljs.core.first(arglist__10177);
      var ks = cljs.core.rest(arglist__10177);
      return G__10173__delegate(tcoll, key, ks);
    };
    G__10173.cljs$core$IFn$_invoke$arity$variadic = G__10173__delegate;
    return G__10173;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__10178__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__10179 = ntcoll;
          var G__10180 = cljs.core.first.call(null, vals);
          var G__10181 = cljs.core.next.call(null, vals);
          tcoll = G__10179;
          val = G__10180;
          vals = G__10181;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__10178 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10178__delegate.call(this, tcoll, val, vals);
    };
    G__10178.cljs$lang$maxFixedArity = 2;
    G__10178.cljs$lang$applyTo = function(arglist__10182) {
      var tcoll = cljs.core.first(arglist__10182);
      arglist__10182 = cljs.core.next(arglist__10182);
      var val = cljs.core.first(arglist__10182);
      var vals = cljs.core.rest(arglist__10182);
      return G__10178__delegate(tcoll, val, vals);
    };
    G__10178.cljs$core$IFn$_invoke$arity$variadic = G__10178__delegate;
    return G__10178;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a);
      } else {
        return f.call(null, a);
      }
    } else {
      var b = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a, b);
        } else {
          return f.call(null, a, b);
        }
      } else {
        var c = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a, b, c);
          } else {
            return f.call(null, a, b, c);
          }
        } else {
          var d = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a, b, c, d);
            } else {
              return f.call(null, a, b, c, d);
            }
          } else {
            var e = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e);
              } else {
                return f.call(null, a, b, c, d, e);
              }
            } else {
              var f__$1 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f__$1.cljs$core$IFn$_invoke$arity$6) {
                  return f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1);
                } else {
                  return f__$1.call(null, a, b, c, d, e, f__$1);
                }
              } else {
                var g = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f__$1.cljs$core$IFn$_invoke$arity$7) {
                    return f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g);
                  } else {
                    return f__$1.call(null, a, b, c, d, e, f__$1, g);
                  }
                } else {
                  var h = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f__$1.cljs$core$IFn$_invoke$arity$8) {
                      return f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h);
                    } else {
                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h);
                    }
                  } else {
                    var i = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f__$1.cljs$core$IFn$_invoke$arity$9) {
                        return f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i);
                      } else {
                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i);
                      }
                    } else {
                      var j = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f__$1.cljs$core$IFn$_invoke$arity$10) {
                          return f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j);
                        } else {
                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j);
                        }
                      } else {
                        var k = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f__$1.cljs$core$IFn$_invoke$arity$11) {
                            return f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k);
                          } else {
                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k);
                          }
                        } else {
                          var l = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f__$1.cljs$core$IFn$_invoke$arity$12) {
                              return f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l);
                            } else {
                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l);
                            }
                          } else {
                            var m = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f__$1.cljs$core$IFn$_invoke$arity$13) {
                                return f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
                              } else {
                                return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
                              }
                            } else {
                              var n = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f__$1.cljs$core$IFn$_invoke$arity$14) {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
                                } else {
                                  return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
                                }
                              } else {
                                var o = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f__$1.cljs$core$IFn$_invoke$arity$15) {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
                                  } else {
                                    return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
                                  }
                                } else {
                                  var p = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f__$1.cljs$core$IFn$_invoke$arity$16) {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
                                    } else {
                                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
                                    }
                                  } else {
                                    var q = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f__$1.cljs$core$IFn$_invoke$arity$17) {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
                                      } else {
                                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
                                      }
                                    } else {
                                      var r = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f__$1.cljs$core$IFn$_invoke$arity$18) {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
                                        } else {
                                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
                                        }
                                      } else {
                                        var s = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f__$1.cljs$core$IFn$_invoke$arity$19) {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
                                          } else {
                                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
                                          }
                                        } else {
                                          var t = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f__$1.cljs$core$IFn$_invoke$arity$20) {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
                                            } else {
                                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__10183__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__10183 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__10183__delegate.call(this, f, a, b, c, d, args);
    };
    G__10183.cljs$lang$maxFixedArity = 5;
    G__10183.cljs$lang$applyTo = function(arglist__10184) {
      var f = cljs.core.first(arglist__10184);
      arglist__10184 = cljs.core.next(arglist__10184);
      var a = cljs.core.first(arglist__10184);
      arglist__10184 = cljs.core.next(arglist__10184);
      var b = cljs.core.first(arglist__10184);
      arglist__10184 = cljs.core.next(arglist__10184);
      var c = cljs.core.first(arglist__10184);
      arglist__10184 = cljs.core.next(arglist__10184);
      var d = cljs.core.first(arglist__10184);
      var args = cljs.core.rest(arglist__10184);
      return G__10183__delegate(f, a, b, c, d, args);
    };
    G__10183.cljs$core$IFn$_invoke$arity$variadic = G__10183__delegate;
    return G__10183;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__10185__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__10185 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__10185__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__10185.cljs$lang$maxFixedArity = 6;
    G__10185.cljs$lang$applyTo = function(arglist__10186) {
      var obj = cljs.core.first(arglist__10186);
      arglist__10186 = cljs.core.next(arglist__10186);
      var f = cljs.core.first(arglist__10186);
      arglist__10186 = cljs.core.next(arglist__10186);
      var a = cljs.core.first(arglist__10186);
      arglist__10186 = cljs.core.next(arglist__10186);
      var b = cljs.core.first(arglist__10186);
      arglist__10186 = cljs.core.next(arglist__10186);
      var c = cljs.core.first(arglist__10186);
      arglist__10186 = cljs.core.next(arglist__10186);
      var d = cljs.core.first(arglist__10186);
      var args = cljs.core.rest(arglist__10186);
      return G__10185__delegate(obj, f, a, b, c, d, args);
    };
    G__10185.cljs$core$IFn$_invoke$arity$variadic = G__10185__delegate;
    return G__10185;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__10187__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__10187 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10187__delegate.call(this, x, y, more);
    };
    G__10187.cljs$lang$maxFixedArity = 2;
    G__10187.cljs$lang$applyTo = function(arglist__10188) {
      var x = cljs.core.first(arglist__10188);
      arglist__10188 = cljs.core.next(arglist__10188);
      var y = cljs.core.first(arglist__10188);
      var more = cljs.core.rest(arglist__10188);
      return G__10187__delegate(x, y, more);
    };
    G__10187.cljs$core$IFn$_invoke$arity$variadic = G__10187__delegate;
    return G__10187;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__10189 = pred;
        var G__10190 = cljs.core.next.call(null, coll);
        pred = G__10189;
        coll = G__10190;
        continue;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3403__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        var G__10191 = pred;
        var G__10192 = cljs.core.next.call(null, coll);
        pred = G__10191;
        coll = G__10192;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__10193 = null;
    var G__10193__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__10193__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__10193__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__10193__3 = function() {
      var G__10194__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__10194 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__10194__delegate.call(this, x, y, zs);
      };
      G__10194.cljs$lang$maxFixedArity = 2;
      G__10194.cljs$lang$applyTo = function(arglist__10195) {
        var x = cljs.core.first(arglist__10195);
        arglist__10195 = cljs.core.next(arglist__10195);
        var y = cljs.core.first(arglist__10195);
        var zs = cljs.core.rest(arglist__10195);
        return G__10194__delegate(x, y, zs);
      };
      G__10194.cljs$core$IFn$_invoke$arity$variadic = G__10194__delegate;
      return G__10194;
    }();
    G__10193 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__10193__0.call(this);
        case 1:
          return G__10193__1.call(this, x);
        case 2:
          return G__10193__2.call(this, x, y);
        default:
          return G__10193__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10193.cljs$lang$maxFixedArity = 2;
    G__10193.cljs$lang$applyTo = G__10193__3.cljs$lang$applyTo;
    return G__10193;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__10196__delegate = function(args) {
      return x;
    };
    var G__10196 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__10196__delegate.call(this, args);
    };
    G__10196.cljs$lang$maxFixedArity = 0;
    G__10196.cljs$lang$applyTo = function(arglist__10197) {
      var args = cljs.core.seq(arglist__10197);
      return G__10196__delegate(args);
    };
    G__10196.cljs$core$IFn$_invoke$arity$variadic = G__10196__delegate;
    return G__10196;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__10198 = null;
      var G__10198__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__10198__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__10198__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__10198__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__10198__4 = function() {
        var G__10199__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__10199 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10199__delegate.call(this, x, y, z, args);
        };
        G__10199.cljs$lang$maxFixedArity = 3;
        G__10199.cljs$lang$applyTo = function(arglist__10200) {
          var x = cljs.core.first(arglist__10200);
          arglist__10200 = cljs.core.next(arglist__10200);
          var y = cljs.core.first(arglist__10200);
          arglist__10200 = cljs.core.next(arglist__10200);
          var z = cljs.core.first(arglist__10200);
          var args = cljs.core.rest(arglist__10200);
          return G__10199__delegate(x, y, z, args);
        };
        G__10199.cljs$core$IFn$_invoke$arity$variadic = G__10199__delegate;
        return G__10199;
      }();
      G__10198 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10198__0.call(this);
          case 1:
            return G__10198__1.call(this, x);
          case 2:
            return G__10198__2.call(this, x, y);
          case 3:
            return G__10198__3.call(this, x, y, z);
          default:
            return G__10198__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10198.cljs$lang$maxFixedArity = 3;
      G__10198.cljs$lang$applyTo = G__10198__4.cljs$lang$applyTo;
      return G__10198;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__10201 = null;
      var G__10201__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__10201__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__10201__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__10201__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__10201__4 = function() {
        var G__10202__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__10202 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10202__delegate.call(this, x, y, z, args);
        };
        G__10202.cljs$lang$maxFixedArity = 3;
        G__10202.cljs$lang$applyTo = function(arglist__10203) {
          var x = cljs.core.first(arglist__10203);
          arglist__10203 = cljs.core.next(arglist__10203);
          var y = cljs.core.first(arglist__10203);
          arglist__10203 = cljs.core.next(arglist__10203);
          var z = cljs.core.first(arglist__10203);
          var args = cljs.core.rest(arglist__10203);
          return G__10202__delegate(x, y, z, args);
        };
        G__10202.cljs$core$IFn$_invoke$arity$variadic = G__10202__delegate;
        return G__10202;
      }();
      G__10201 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10201__0.call(this);
          case 1:
            return G__10201__1.call(this, x);
          case 2:
            return G__10201__2.call(this, x, y);
          case 3:
            return G__10201__3.call(this, x, y, z);
          default:
            return G__10201__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10201.cljs$lang$maxFixedArity = 3;
      G__10201.cljs$lang$applyTo = G__10201__4.cljs$lang$applyTo;
      return G__10201;
    }();
  };
  var comp__4 = function() {
    var G__10204__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__10205__delegate = function(args) {
          var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
          var fs__$2 = cljs.core.next.call(null, fs__$1);
          while (true) {
            if (fs__$2) {
              var G__10206 = cljs.core.first.call(null, fs__$2).call(null, ret);
              var G__10207 = cljs.core.next.call(null, fs__$2);
              ret = G__10206;
              fs__$2 = G__10207;
              continue;
            } else {
              return ret;
            }
            break;
          }
        };
        var G__10205 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__10205__delegate.call(this, args);
        };
        G__10205.cljs$lang$maxFixedArity = 0;
        G__10205.cljs$lang$applyTo = function(arglist__10208) {
          var args = cljs.core.seq(arglist__10208);
          return G__10205__delegate(args);
        };
        G__10205.cljs$core$IFn$_invoke$arity$variadic = G__10205__delegate;
        return G__10205;
      }();
    };
    var G__10204 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10204__delegate.call(this, f1, f2, f3, fs);
    };
    G__10204.cljs$lang$maxFixedArity = 3;
    G__10204.cljs$lang$applyTo = function(arglist__10209) {
      var f1 = cljs.core.first(arglist__10209);
      arglist__10209 = cljs.core.next(arglist__10209);
      var f2 = cljs.core.first(arglist__10209);
      arglist__10209 = cljs.core.next(arglist__10209);
      var f3 = cljs.core.first(arglist__10209);
      var fs = cljs.core.rest(arglist__10209);
      return G__10204__delegate(f1, f2, f3, fs);
    };
    G__10204.cljs$core$IFn$_invoke$arity$variadic = G__10204__delegate;
    return G__10204;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__10210__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__10210 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__10210__delegate.call(this, args);
      };
      G__10210.cljs$lang$maxFixedArity = 0;
      G__10210.cljs$lang$applyTo = function(arglist__10211) {
        var args = cljs.core.seq(arglist__10211);
        return G__10210__delegate(args);
      };
      G__10210.cljs$core$IFn$_invoke$arity$variadic = G__10210__delegate;
      return G__10210;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__10212__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__10212 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__10212__delegate.call(this, args);
      };
      G__10212.cljs$lang$maxFixedArity = 0;
      G__10212.cljs$lang$applyTo = function(arglist__10213) {
        var args = cljs.core.seq(arglist__10213);
        return G__10212__delegate(args);
      };
      G__10212.cljs$core$IFn$_invoke$arity$variadic = G__10212__delegate;
      return G__10212;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__10214__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__10214 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__10214__delegate.call(this, args);
      };
      G__10214.cljs$lang$maxFixedArity = 0;
      G__10214.cljs$lang$applyTo = function(arglist__10215) {
        var args = cljs.core.seq(arglist__10215);
        return G__10214__delegate(args);
      };
      G__10214.cljs$core$IFn$_invoke$arity$variadic = G__10214__delegate;
      return G__10214;
    }();
  };
  var partial__5 = function() {
    var G__10216__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__10217__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__10217 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__10217__delegate.call(this, args);
        };
        G__10217.cljs$lang$maxFixedArity = 0;
        G__10217.cljs$lang$applyTo = function(arglist__10218) {
          var args = cljs.core.seq(arglist__10218);
          return G__10217__delegate(args);
        };
        G__10217.cljs$core$IFn$_invoke$arity$variadic = G__10217__delegate;
        return G__10217;
      }();
    };
    var G__10216 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__10216__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__10216.cljs$lang$maxFixedArity = 4;
    G__10216.cljs$lang$applyTo = function(arglist__10219) {
      var f = cljs.core.first(arglist__10219);
      arglist__10219 = cljs.core.next(arglist__10219);
      var arg1 = cljs.core.first(arglist__10219);
      arglist__10219 = cljs.core.next(arglist__10219);
      var arg2 = cljs.core.first(arglist__10219);
      arglist__10219 = cljs.core.next(arglist__10219);
      var arg3 = cljs.core.first(arglist__10219);
      var more = cljs.core.rest(arglist__10219);
      return G__10216__delegate(f, arg1, arg2, arg3, more);
    };
    G__10216.cljs$core$IFn$_invoke$arity$variadic = G__10216__delegate;
    return G__10216;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__10220 = null;
      var G__10220__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__10220__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__10220__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__10220__4 = function() {
        var G__10221__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__10221 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10221__delegate.call(this, a, b, c, ds);
        };
        G__10221.cljs$lang$maxFixedArity = 3;
        G__10221.cljs$lang$applyTo = function(arglist__10222) {
          var a = cljs.core.first(arglist__10222);
          arglist__10222 = cljs.core.next(arglist__10222);
          var b = cljs.core.first(arglist__10222);
          arglist__10222 = cljs.core.next(arglist__10222);
          var c = cljs.core.first(arglist__10222);
          var ds = cljs.core.rest(arglist__10222);
          return G__10221__delegate(a, b, c, ds);
        };
        G__10221.cljs$core$IFn$_invoke$arity$variadic = G__10221__delegate;
        return G__10221;
      }();
      G__10220 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__10220__1.call(this, a);
          case 2:
            return G__10220__2.call(this, a, b);
          case 3:
            return G__10220__3.call(this, a, b, c);
          default:
            return G__10220__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10220.cljs$lang$maxFixedArity = 3;
      G__10220.cljs$lang$applyTo = G__10220__4.cljs$lang$applyTo;
      return G__10220;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__10223 = null;
      var G__10223__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__10223__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__10223__4 = function() {
        var G__10224__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__10224 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10224__delegate.call(this, a, b, c, ds);
        };
        G__10224.cljs$lang$maxFixedArity = 3;
        G__10224.cljs$lang$applyTo = function(arglist__10225) {
          var a = cljs.core.first(arglist__10225);
          arglist__10225 = cljs.core.next(arglist__10225);
          var b = cljs.core.first(arglist__10225);
          arglist__10225 = cljs.core.next(arglist__10225);
          var c = cljs.core.first(arglist__10225);
          var ds = cljs.core.rest(arglist__10225);
          return G__10224__delegate(a, b, c, ds);
        };
        G__10224.cljs$core$IFn$_invoke$arity$variadic = G__10224__delegate;
        return G__10224;
      }();
      G__10223 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__10223__2.call(this, a, b);
          case 3:
            return G__10223__3.call(this, a, b, c);
          default:
            return G__10223__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10223.cljs$lang$maxFixedArity = 3;
      G__10223.cljs$lang$applyTo = G__10223__4.cljs$lang$applyTo;
      return G__10223;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__10226 = null;
      var G__10226__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__10226__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__10226__4 = function() {
        var G__10227__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__10227 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10227__delegate.call(this, a, b, c, ds);
        };
        G__10227.cljs$lang$maxFixedArity = 3;
        G__10227.cljs$lang$applyTo = function(arglist__10228) {
          var a = cljs.core.first(arglist__10228);
          arglist__10228 = cljs.core.next(arglist__10228);
          var b = cljs.core.first(arglist__10228);
          arglist__10228 = cljs.core.next(arglist__10228);
          var c = cljs.core.first(arglist__10228);
          var ds = cljs.core.rest(arglist__10228);
          return G__10227__delegate(a, b, c, ds);
        };
        G__10227.cljs$core$IFn$_invoke$arity$variadic = G__10227__delegate;
        return G__10227;
      }();
      G__10226 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__10226__2.call(this, a, b);
          case 3:
            return G__10226__3.call(this, a, b, c);
          default:
            return G__10226__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10226.cljs$lang$maxFixedArity = 3;
      G__10226.cljs$lang$applyTo = G__10226__4.cljs$lang$applyTo;
      return G__10226;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4251__auto___10229 = size;
          var i_10230 = 0;
          while (true) {
            if (i_10230 < n__4251__auto___10229) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_10230, cljs.core._nth.call(null, c, i_10230)));
              var G__10231 = i_10230 + 1;
              i_10230 = G__10231;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4251__auto___10232 = size;
        var i_10233 = 0;
        while (true) {
          if (i_10233 < n__4251__auto___10232) {
            var x_10234 = f.call(null, cljs.core._nth.call(null, c, i_10233));
            if (x_10234 == null) {
            } else {
              cljs.core.chunk_append.call(null, b, x_10234);
            }
            var G__10235 = i_10233 + 1;
            i_10233 = G__10235;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
      } else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if (x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s));
        } else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4251__auto___10236 = size;
          var i_10237 = 0;
          while (true) {
            if (i_10237 < n__4251__auto___10236) {
              var x_10238 = f.call(null, idx + i_10237, cljs.core._nth.call(null, c, i_10237));
              if (x_10238 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_10238);
              }
              var G__10239 = i_10237 + 1;
              i_10237 = G__10239;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if (x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi.call(null, 0, coll);
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3391__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3391__auto__)) {
            return p.call(null, y);
          } else {
            return and__3391__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3391__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3391__auto__)) {
            var and__3391__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3391__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3391__auto____$1;
            }
          } else {
            return and__3391__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__10246__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__10246 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10246__delegate.call(this, x, y, z, args);
        };
        G__10246.cljs$lang$maxFixedArity = 3;
        G__10246.cljs$lang$applyTo = function(arglist__10247) {
          var x = cljs.core.first(arglist__10247);
          arglist__10247 = cljs.core.next(arglist__10247);
          var y = cljs.core.first(arglist__10247);
          arglist__10247 = cljs.core.next(arglist__10247);
          var z = cljs.core.first(arglist__10247);
          var args = cljs.core.rest(arglist__10247);
          return G__10246__delegate(x, y, z, args);
        };
        G__10246.cljs$core$IFn$_invoke$arity$variadic = G__10246__delegate;
        return G__10246;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3391__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3391__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3391__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3391__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3391__auto__)) {
            var and__3391__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3391__auto____$1)) {
              var and__3391__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3391__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3391__auto____$2;
              }
            } else {
              return and__3391__auto____$1;
            }
          } else {
            return and__3391__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3391__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3391__auto__)) {
            var and__3391__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3391__auto____$1)) {
              var and__3391__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3391__auto____$2)) {
                var and__3391__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3391__auto____$3)) {
                  var and__3391__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3391__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3391__auto____$4;
                  }
                } else {
                  return and__3391__auto____$3;
                }
              } else {
                return and__3391__auto____$2;
              }
            } else {
              return and__3391__auto____$1;
            }
          } else {
            return and__3391__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__10248__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__10240_SHARP_) {
            var and__3391__auto__ = p1.call(null, p1__10240_SHARP_);
            if (cljs.core.truth_(and__3391__auto__)) {
              return p2.call(null, p1__10240_SHARP_);
            } else {
              return and__3391__auto__;
            }
          }, args));
        };
        var G__10248 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10248__delegate.call(this, x, y, z, args);
        };
        G__10248.cljs$lang$maxFixedArity = 3;
        G__10248.cljs$lang$applyTo = function(arglist__10249) {
          var x = cljs.core.first(arglist__10249);
          arglist__10249 = cljs.core.next(arglist__10249);
          var y = cljs.core.first(arglist__10249);
          arglist__10249 = cljs.core.next(arglist__10249);
          var z = cljs.core.first(arglist__10249);
          var args = cljs.core.rest(arglist__10249);
          return G__10248__delegate(x, y, z, args);
        };
        G__10248.cljs$core$IFn$_invoke$arity$variadic = G__10248__delegate;
        return G__10248;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3391__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3391__auto__)) {
            var and__3391__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3391__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3391__auto____$1;
            }
          } else {
            return and__3391__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3391__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3391__auto__)) {
            var and__3391__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3391__auto____$1)) {
              var and__3391__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3391__auto____$2)) {
                var and__3391__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3391__auto____$3)) {
                  var and__3391__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3391__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3391__auto____$4;
                  }
                } else {
                  return and__3391__auto____$3;
                }
              } else {
                return and__3391__auto____$2;
              }
            } else {
              return and__3391__auto____$1;
            }
          } else {
            return and__3391__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3391__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3391__auto__)) {
            var and__3391__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3391__auto____$1)) {
              var and__3391__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3391__auto____$2)) {
                var and__3391__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3391__auto____$3)) {
                  var and__3391__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3391__auto____$4)) {
                    var and__3391__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3391__auto____$5)) {
                      var and__3391__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3391__auto____$6)) {
                        var and__3391__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3391__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3391__auto____$7;
                        }
                      } else {
                        return and__3391__auto____$6;
                      }
                    } else {
                      return and__3391__auto____$5;
                    }
                  } else {
                    return and__3391__auto____$4;
                  }
                } else {
                  return and__3391__auto____$3;
                }
              } else {
                return and__3391__auto____$2;
              }
            } else {
              return and__3391__auto____$1;
            }
          } else {
            return and__3391__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__10250__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__10241_SHARP_) {
            var and__3391__auto__ = p1.call(null, p1__10241_SHARP_);
            if (cljs.core.truth_(and__3391__auto__)) {
              var and__3391__auto____$1 = p2.call(null, p1__10241_SHARP_);
              if (cljs.core.truth_(and__3391__auto____$1)) {
                return p3.call(null, p1__10241_SHARP_);
              } else {
                return and__3391__auto____$1;
              }
            } else {
              return and__3391__auto__;
            }
          }, args));
        };
        var G__10250 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10250__delegate.call(this, x, y, z, args);
        };
        G__10250.cljs$lang$maxFixedArity = 3;
        G__10250.cljs$lang$applyTo = function(arglist__10251) {
          var x = cljs.core.first(arglist__10251);
          arglist__10251 = cljs.core.next(arglist__10251);
          var y = cljs.core.first(arglist__10251);
          arglist__10251 = cljs.core.next(arglist__10251);
          var z = cljs.core.first(arglist__10251);
          var args = cljs.core.rest(arglist__10251);
          return G__10250__delegate(x, y, z, args);
        };
        G__10250.cljs$core$IFn$_invoke$arity$variadic = G__10250__delegate;
        return G__10250;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__10252__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true;
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__10242_SHARP_) {
            return p1__10242_SHARP_.call(null, x);
          }, ps__$1);
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__10243_SHARP_) {
            var and__3391__auto__ = p1__10243_SHARP_.call(null, x);
            if (cljs.core.truth_(and__3391__auto__)) {
              return p1__10243_SHARP_.call(null, y);
            } else {
              return and__3391__auto__;
            }
          }, ps__$1);
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__10244_SHARP_) {
            var and__3391__auto__ = p1__10244_SHARP_.call(null, x);
            if (cljs.core.truth_(and__3391__auto__)) {
              var and__3391__auto____$1 = p1__10244_SHARP_.call(null, y);
              if (cljs.core.truth_(and__3391__auto____$1)) {
                return p1__10244_SHARP_.call(null, z);
              } else {
                return and__3391__auto____$1;
              }
            } else {
              return and__3391__auto__;
            }
          }, ps__$1);
        };
        var epn__4 = function() {
          var G__10253__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__10245_SHARP_) {
              return cljs.core.every_QMARK_.call(null, p1__10245_SHARP_, args);
            }, ps__$1));
          };
          var G__10253 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__10253__delegate.call(this, x, y, z, args);
          };
          G__10253.cljs$lang$maxFixedArity = 3;
          G__10253.cljs$lang$applyTo = function(arglist__10254) {
            var x = cljs.core.first(arglist__10254);
            arglist__10254 = cljs.core.next(arglist__10254);
            var y = cljs.core.first(arglist__10254);
            arglist__10254 = cljs.core.next(arglist__10254);
            var z = cljs.core.first(arglist__10254);
            var args = cljs.core.rest(arglist__10254);
            return G__10253__delegate(x, y, z, args);
          };
          G__10253.cljs$core$IFn$_invoke$arity$variadic = G__10253__delegate;
          return G__10253;
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
        epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
        epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
        epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
        epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
        return epn;
      }();
    };
    var G__10252 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10252__delegate.call(this, p1, p2, p3, ps);
    };
    G__10252.cljs$lang$maxFixedArity = 3;
    G__10252.cljs$lang$applyTo = function(arglist__10255) {
      var p1 = cljs.core.first(arglist__10255);
      arglist__10255 = cljs.core.next(arglist__10255);
      var p2 = cljs.core.first(arglist__10255);
      arglist__10255 = cljs.core.next(arglist__10255);
      var p3 = cljs.core.first(arglist__10255);
      var ps = cljs.core.rest(arglist__10255);
      return G__10252__delegate(p1, p2, p3, ps);
    };
    G__10252.cljs$core$IFn$_invoke$arity$variadic = G__10252__delegate;
    return G__10252;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3403__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3403__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3403__auto____$1)) {
            return or__3403__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__10262__delegate = function(x, y, z, args) {
          var or__3403__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__10262 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10262__delegate.call(this, x, y, z, args);
        };
        G__10262.cljs$lang$maxFixedArity = 3;
        G__10262.cljs$lang$applyTo = function(arglist__10263) {
          var x = cljs.core.first(arglist__10263);
          arglist__10263 = cljs.core.next(arglist__10263);
          var y = cljs.core.first(arglist__10263);
          arglist__10263 = cljs.core.next(arglist__10263);
          var z = cljs.core.first(arglist__10263);
          var args = cljs.core.rest(arglist__10263);
          return G__10262__delegate(x, y, z, args);
        };
        G__10262.cljs$core$IFn$_invoke$arity$variadic = G__10262__delegate;
        return G__10262;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3403__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3403__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3403__auto____$1)) {
            return or__3403__auto____$1;
          } else {
            var or__3403__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3403__auto____$2)) {
              return or__3403__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3403__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3403__auto____$1)) {
            return or__3403__auto____$1;
          } else {
            var or__3403__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3403__auto____$2)) {
              return or__3403__auto____$2;
            } else {
              var or__3403__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3403__auto____$3)) {
                return or__3403__auto____$3;
              } else {
                var or__3403__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3403__auto____$4)) {
                  return or__3403__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__10264__delegate = function(x, y, z, args) {
          var or__3403__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return cljs.core.some.call(null, function(p1__10256_SHARP_) {
              var or__3403__auto____$1 = p1.call(null, p1__10256_SHARP_);
              if (cljs.core.truth_(or__3403__auto____$1)) {
                return or__3403__auto____$1;
              } else {
                return p2.call(null, p1__10256_SHARP_);
              }
            }, args);
          }
        };
        var G__10264 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10264__delegate.call(this, x, y, z, args);
        };
        G__10264.cljs$lang$maxFixedArity = 3;
        G__10264.cljs$lang$applyTo = function(arglist__10265) {
          var x = cljs.core.first(arglist__10265);
          arglist__10265 = cljs.core.next(arglist__10265);
          var y = cljs.core.first(arglist__10265);
          arglist__10265 = cljs.core.next(arglist__10265);
          var z = cljs.core.first(arglist__10265);
          var args = cljs.core.rest(arglist__10265);
          return G__10264__delegate(x, y, z, args);
        };
        G__10264.cljs$core$IFn$_invoke$arity$variadic = G__10264__delegate;
        return G__10264;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3403__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3403__auto____$1)) {
            return or__3403__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3403__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3403__auto____$1)) {
            return or__3403__auto____$1;
          } else {
            var or__3403__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3403__auto____$2)) {
              return or__3403__auto____$2;
            } else {
              var or__3403__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3403__auto____$3)) {
                return or__3403__auto____$3;
              } else {
                var or__3403__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3403__auto____$4)) {
                  return or__3403__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3403__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3403__auto____$1)) {
            return or__3403__auto____$1;
          } else {
            var or__3403__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3403__auto____$2)) {
              return or__3403__auto____$2;
            } else {
              var or__3403__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3403__auto____$3)) {
                return or__3403__auto____$3;
              } else {
                var or__3403__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3403__auto____$4)) {
                  return or__3403__auto____$4;
                } else {
                  var or__3403__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3403__auto____$5)) {
                    return or__3403__auto____$5;
                  } else {
                    var or__3403__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3403__auto____$6)) {
                      return or__3403__auto____$6;
                    } else {
                      var or__3403__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3403__auto____$7)) {
                        return or__3403__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__10266__delegate = function(x, y, z, args) {
          var or__3403__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return cljs.core.some.call(null, function(p1__10257_SHARP_) {
              var or__3403__auto____$1 = p1.call(null, p1__10257_SHARP_);
              if (cljs.core.truth_(or__3403__auto____$1)) {
                return or__3403__auto____$1;
              } else {
                var or__3403__auto____$2 = p2.call(null, p1__10257_SHARP_);
                if (cljs.core.truth_(or__3403__auto____$2)) {
                  return or__3403__auto____$2;
                } else {
                  return p3.call(null, p1__10257_SHARP_);
                }
              }
            }, args);
          }
        };
        var G__10266 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10266__delegate.call(this, x, y, z, args);
        };
        G__10266.cljs$lang$maxFixedArity = 3;
        G__10266.cljs$lang$applyTo = function(arglist__10267) {
          var x = cljs.core.first(arglist__10267);
          arglist__10267 = cljs.core.next(arglist__10267);
          var y = cljs.core.first(arglist__10267);
          arglist__10267 = cljs.core.next(arglist__10267);
          var z = cljs.core.first(arglist__10267);
          var args = cljs.core.rest(arglist__10267);
          return G__10266__delegate(x, y, z, args);
        };
        G__10266.cljs$core$IFn$_invoke$arity$variadic = G__10266__delegate;
        return G__10266;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__10268__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null;
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__10258_SHARP_) {
            return p1__10258_SHARP_.call(null, x);
          }, ps__$1);
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__10259_SHARP_) {
            var or__3403__auto__ = p1__10259_SHARP_.call(null, x);
            if (cljs.core.truth_(or__3403__auto__)) {
              return or__3403__auto__;
            } else {
              return p1__10259_SHARP_.call(null, y);
            }
          }, ps__$1);
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__10260_SHARP_) {
            var or__3403__auto__ = p1__10260_SHARP_.call(null, x);
            if (cljs.core.truth_(or__3403__auto__)) {
              return or__3403__auto__;
            } else {
              var or__3403__auto____$1 = p1__10260_SHARP_.call(null, y);
              if (cljs.core.truth_(or__3403__auto____$1)) {
                return or__3403__auto____$1;
              } else {
                return p1__10260_SHARP_.call(null, z);
              }
            }
          }, ps__$1);
        };
        var spn__4 = function() {
          var G__10269__delegate = function(x, y, z, args) {
            var or__3403__auto__ = spn.call(null, x, y, z);
            if (cljs.core.truth_(or__3403__auto__)) {
              return or__3403__auto__;
            } else {
              return cljs.core.some.call(null, function(p1__10261_SHARP_) {
                return cljs.core.some.call(null, p1__10261_SHARP_, args);
              }, ps__$1);
            }
          };
          var G__10269 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__10269__delegate.call(this, x, y, z, args);
          };
          G__10269.cljs$lang$maxFixedArity = 3;
          G__10269.cljs$lang$applyTo = function(arglist__10270) {
            var x = cljs.core.first(arglist__10270);
            arglist__10270 = cljs.core.next(arglist__10270);
            var y = cljs.core.first(arglist__10270);
            arglist__10270 = cljs.core.next(arglist__10270);
            var z = cljs.core.first(arglist__10270);
            var args = cljs.core.rest(arglist__10270);
            return G__10269__delegate(x, y, z, args);
          };
          G__10269.cljs$core$IFn$_invoke$arity$variadic = G__10269__delegate;
          return G__10269;
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
        spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
        spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
        spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
        spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
        return spn;
      }();
    };
    var G__10268 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10268__delegate.call(this, p1, p2, p3, ps);
    };
    G__10268.cljs$lang$maxFixedArity = 3;
    G__10268.cljs$lang$applyTo = function(arglist__10271) {
      var p1 = cljs.core.first(arglist__10271);
      arglist__10271 = cljs.core.next(arglist__10271);
      var p2 = cljs.core.first(arglist__10271);
      arglist__10271 = cljs.core.next(arglist__10271);
      var p3 = cljs.core.first(arglist__10271);
      var ps = cljs.core.rest(arglist__10271);
      return G__10268__delegate(p1, p2, p3, ps);
    };
    G__10268.cljs$core$IFn$_invoke$arity$variadic = G__10268__delegate;
    return G__10268;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4251__auto___10273 = size;
          var i_10274 = 0;
          while (true) {
            if (i_10274 < n__4251__auto___10273) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_10274)));
              var G__10275 = i_10274 + 1;
              i_10274 = G__10275;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && (s2 && s3)) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__10276__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(p1__10272_SHARP_) {
        return cljs.core.apply.call(null, f, p1__10272_SHARP_);
      }, step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__10276 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__10276__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__10276.cljs$lang$maxFixedArity = 4;
    G__10276.cljs$lang$applyTo = function(arglist__10277) {
      var f = cljs.core.first(arglist__10277);
      arglist__10277 = cljs.core.next(arglist__10277);
      var c1 = cljs.core.first(arglist__10277);
      arglist__10277 = cljs.core.next(arglist__10277);
      var c2 = cljs.core.first(arglist__10277);
      arglist__10277 = cljs.core.next(arglist__10277);
      var c3 = cljs.core.first(arglist__10277);
      var colls = cljs.core.rest(arglist__10277);
      return G__10276__delegate(f, c1, c2, c3, colls);
    };
    G__10276.cljs$core$IFn$_invoke$arity$variadic = G__10276__delegate;
    return G__10276;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (n__$1 > 0 && s) {
        var G__10278 = n__$1 - 1;
        var G__10279 = cljs.core.rest.call(null, s);
        n__$1 = G__10278;
        coll__$1 = G__10279;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, n, coll);
  }, null, null);
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__10280 = cljs.core.next.call(null, s);
      var G__10281 = cljs.core.next.call(null, lead);
      s = G__10280;
      lead = G__10281;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (cljs.core.truth_(function() {
        var and__3391__auto__ = s;
        if (and__3391__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s));
        } else {
          return and__3391__auto__;
        }
      }())) {
        var G__10282 = pred__$1;
        var G__10283 = cljs.core.rest.call(null, s);
        pred__$1 = G__10282;
        coll__$1 = G__10283;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, pred, coll);
  }, null, null);
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__10284__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__10284 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10284__delegate.call(this, c1, c2, colls);
    };
    G__10284.cljs$lang$maxFixedArity = 2;
    G__10284.cljs$lang$applyTo = function(arglist__10285) {
      var c1 = cljs.core.first(arglist__10285);
      arglist__10285 = cljs.core.next(arglist__10285);
      var c2 = cljs.core.first(arglist__10285);
      var colls = cljs.core.rest(arglist__10285);
      return G__10284__delegate(c1, c2, colls);
    };
    G__10284.cljs$core$IFn$_invoke$arity$variadic = G__10284__delegate;
    return G__10284;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll));
  };
  var mapcat__3 = function() {
    var G__10286__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls));
    };
    var G__10286 = function(f, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10286__delegate.call(this, f, coll, colls);
    };
    G__10286.cljs$lang$maxFixedArity = 2;
    G__10286.cljs$lang$applyTo = function(arglist__10287) {
      var f = cljs.core.first(arglist__10287);
      arglist__10287 = cljs.core.next(arglist__10287);
      var coll = cljs.core.first(arglist__10287);
      var colls = cljs.core.rest(arglist__10287);
      return G__10286__delegate(f, coll, colls);
    };
    G__10286.cljs$core$IFn$_invoke$arity$variadic = G__10286__delegate;
    return G__10286;
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4251__auto___10288 = size;
        var i_10289 = 0;
        while (true) {
          if (i_10289 < n__4251__auto___10288) {
            if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_10289)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_10289));
            } else {
            }
            var G__10290 = i_10289 + 1;
            i_10289 = G__10290;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
      } else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if (cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r));
        } else {
          return filter.call(null, pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__10291_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__10291_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function into(to, from) {
  if (!(to == null)) {
    if (function() {
      var G__10293 = to;
      if (G__10293) {
        var bit__4046__auto__ = G__10293.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4046__auto__ || G__10293.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from));
    } else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__10294__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__10294 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__10294__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__10294.cljs$lang$maxFixedArity = 4;
    G__10294.cljs$lang$applyTo = function(arglist__10295) {
      var f = cljs.core.first(arglist__10295);
      arglist__10295 = cljs.core.next(arglist__10295);
      var c1 = cljs.core.first(arglist__10295);
      arglist__10295 = cljs.core.next(arglist__10295);
      var c2 = cljs.core.first(arglist__10295);
      arglist__10295 = cljs.core.next(arglist__10295);
      var c3 = cljs.core.first(arglist__10295);
      var colls = cljs.core.rest(arglist__10295);
      return G__10294__delegate(f, c1, c2, c3, colls);
    };
    G__10294.cljs$core$IFn$_invoke$arity$variadic = G__10294__delegate;
    return G__10294;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__10297 = m__$1;
          if (G__10297) {
            var bit__4053__auto__ = G__10297.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4053__auto__ || G__10297.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__10297.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__10297);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__10297);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__10298 = sentinel;
            var G__10299 = m__$2;
            var G__10300 = cljs.core.next.call(null, ks__$1);
            sentinel = G__10298;
            m__$1 = G__10299;
            ks__$1 = G__10300;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__10301, v) {
  var vec__10303 = p__10301;
  var k = cljs.core.nth.call(null, vec__10303, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__10303, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__10304, f) {
    var vec__10314 = p__10304;
    var k = cljs.core.nth.call(null, vec__10314, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__10314, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__10305, f, a) {
    var vec__10315 = p__10305;
    var k = cljs.core.nth.call(null, vec__10315, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__10315, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__10306, f, a, b) {
    var vec__10316 = p__10306;
    var k = cljs.core.nth.call(null, vec__10316, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__10316, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__10307, f, a, b, c) {
    var vec__10317 = p__10307;
    var k = cljs.core.nth.call(null, vec__10317, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__10317, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__10319__delegate = function(m, p__10308, f, a, b, c, args) {
      var vec__10318 = p__10308;
      var k = cljs.core.nth.call(null, vec__10318, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__10318, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__10319 = function(m, p__10308, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__10319__delegate.call(this, m, p__10308, f, a, b, c, args);
    };
    G__10319.cljs$lang$maxFixedArity = 6;
    G__10319.cljs$lang$applyTo = function(arglist__10320) {
      var m = cljs.core.first(arglist__10320);
      arglist__10320 = cljs.core.next(arglist__10320);
      var p__10308 = cljs.core.first(arglist__10320);
      arglist__10320 = cljs.core.next(arglist__10320);
      var f = cljs.core.first(arglist__10320);
      arglist__10320 = cljs.core.next(arglist__10320);
      var a = cljs.core.first(arglist__10320);
      arglist__10320 = cljs.core.next(arglist__10320);
      var b = cljs.core.first(arglist__10320);
      arglist__10320 = cljs.core.next(arglist__10320);
      var c = cljs.core.first(arglist__10320);
      var args = cljs.core.rest(arglist__10320);
      return G__10319__delegate(m, p__10308, f, a, b, c, args);
    };
    G__10319.cljs$core$IFn$_invoke$arity$variadic = G__10319__delegate;
    return G__10319;
  }();
  update_in = function(m, p__10308, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__10308, f);
      case 4:
        return update_in__4.call(this, m, p__10308, f, a);
      case 5:
        return update_in__5.call(this, m, p__10308, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__10308, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__10308, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__3973__auto__, writer__3974__auto__, opts__3975__auto__) {
  return cljs.core._write.call(null, writer__3974__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__10321 = ll - 5;
      var G__10322 = r;
      ll = G__10321;
      ret = G__10322;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    if (i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail;
    } else {
      var node = pv.root;
      var level = pv.shift;
      while (true) {
        if (level > 0) {
          var G__10323 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
          var G__10324 = level - 5;
          node = G__10323;
          level = G__10324;
          continue;
        } else {
          return node.arr;
        }
        break;
      }
    }
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found);
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= k && k < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= k) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[k & 31] = v;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, k, v), self__.tail, null);
    }
  } else {
    if (k === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, v);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__10326 = null;
  var G__10326__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__10326__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__10326 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10326__2.call(this, self__, k);
      case 3:
        return G__10326__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10326;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args10325) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10325)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while (true) {
          if (j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2;
            } else {
              var G__10327 = j + 1;
              var G__10328 = init__$2;
              j = G__10327;
              init__$1 = G__10328;
              continue;
            }
          } else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1);
      } else {
        var G__10329 = i + step_init[0];
        i = G__10329;
        continue;
      }
    } else {
      return step_init[1];
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4251__auto___10330 = len;
    var i_10331 = 0;
    while (true) {
      if (i_10331 < n__4251__auto___10330) {
        new_tail[i_10331] = self__.tail[i_10331];
        var G__10332 = i_10331 + 1;
        i_10331 = G__10332;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start);
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt < 32) {
      return cljs.core.array_seq.call(null, self__.tail);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.call(null, coll__$1, 0, 0);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.array_for.call(null, coll__$1, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
          } else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._assoc.call(null, coll__$1, n, val);
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__10333 = i + 1;
        var G__10334 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__10333;
        out = G__10334;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray.call(null, args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__10335) {
    var args = cljs.core.seq(arglist__10335);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if (s == null) {
    return null;
  } else {
    return s;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if (s == null) {
    return cljs.core.List.EMPTY;
  } else {
    return s;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32400159;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + key;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3710__auto__ = self__.end;
    var y__3711__auto__ = v_pos + 1;
    return x__3710__auto__ > y__3711__auto__ ? x__3710__auto__ : y__3711__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__10337 = null;
  var G__10337__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__10337__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__10337 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10337__2.call(this, self__, k);
      case 3:
        return G__10337__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10337;
}();
cljs.core.Subvec.prototype.apply = function(self__, args10336) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10336)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function subvec_seq(i) {
    if (i === self__.end) {
      return null;
    } else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function() {
        return subvec_seq.call(null, i + 1);
      }, null, null));
    }
  };
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._assoc.call(null, coll__$1, n, val);
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__10338 = meta;
      var G__10339 = v.v;
      var G__10340 = v.start + start;
      var G__10341 = v.start + end;
      var G__10342 = __hash;
      meta = G__10338;
      v = G__10339;
      start = G__10340;
      end = G__10341;
      __hash = G__10342;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || (end < 0 || (start > c || end > c))) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj10346 = {};
    return obj10346;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if (0 <= i && i < tv.cnt) {
    if (i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail;
    } else {
      var root = tv.root;
      var node = root;
      var level = tv.shift;
      while (true) {
        if (level > 0) {
          var G__10347 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
          var G__10348 = level - 5;
          node = G__10347;
          level = G__10348;
          continue;
        } else {
          return node.arr;
        }
        break;
      }
    }
  } else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__10350 = null;
  var G__10350__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10350__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10350 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10350__2.call(this, self__, k);
      case 3:
        return G__10350__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10350;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args10349) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10349)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function go(level, node) {
          var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
          if (level === 0) {
            cljs.core.pv_aset.call(null, node__$1, n & 31, val);
            return node__$1;
          } else {
            var subidx = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
            return node__$1;
          }
        }.call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        } else {
          return null;
        }
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
              if (!(nr == null)) {
                return nr;
              } else {
                return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
              }
            }();
            if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            } else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            }
          } else {
            return null;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3403__auto__ = self__.rear;
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3403__auto__ = self__.front;
    if (cljs.core.truth_(or__3403__auto__)) {
      return or__3403__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__10351 = i + incr;
        i = G__10351;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__10352 = i + 1;
      var G__10353 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__10352;
      out = G__10353;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj10357 = {};
    return obj10357;
  }();
  var l = ks.length;
  var i_10358 = 0;
  while (true) {
    if (i_10358 < l) {
      var k_10359 = ks[i_10358];
      new_obj[k_10359] = obj[k_10359];
      var G__10360 = i_10358 + 1;
      i_10358 = G__10360;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__10363 = null;
  var G__10363__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10363__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10363 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10363__2.call(this, self__, k);
      case 3:
        return G__10363__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10363;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args10362) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10362)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__10364 = cljs.core.rest.call(null, keys__$1);
        var G__10365 = init__$2;
        keys__$1 = G__10364;
        init__$1 = G__10365;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__10361_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__10361_SHARP_, self__.strobj[p1__10361_SHARP_]], null);
    }, self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj10367 = {};
  return obj10367;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__10368 = i + 2;
          i = G__10368;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__10369 = i + 2;
          i = G__10369;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__10370 = i + 2;
          i = G__10370;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__10371 = i + 2;
          i = G__10371;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__10372 = i + 2;
          i = G__10372;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_10373 = 0;
  while (true) {
    if (i_10373 < l) {
      narr[i_10373] = arr[i_10373];
      var G__10374 = i_10373 + 1;
      i_10373 = G__10374;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj10377 = {};
    return obj10377;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__10378 = cljs.core.aclone.call(null, self__.arr);
          G__10378[idx + 1] = v;
          return G__10378;
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__10379 = null;
  var G__10379__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10379__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10379 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10379__2.call(this, self__, k);
      case 3:
        return G__10379__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10379;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args10375) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10375)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__10380 = i + 2;
        var G__10381 = init__$2;
        i = G__10380;
        init__$1 = G__10381;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__10382 = s + 2;
            var G__10383 = d;
            s = G__10382;
            d = G__10383;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__10384 = s + 2;
              var G__10385 = d + 2;
              s = G__10384;
              d = G__10385;
              continue;
            } else {
              return null;
            }
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__10386 = i + 2;
        var G__10387 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__10386;
        ret = G__10387;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__10388_10390 = self__.arr;
      G__10388_10390.pop();
      G__10388_10390.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__10389 = o;
      if (G__10389) {
        var bit__4053__auto__ = G__10389.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4053__auto__ || G__10389.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__10389.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__10389);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__10389);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__10391 = cljs.core.next.call(null, es);
          var G__10392 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__10391;
          tcoll__$2 = G__10392;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__10393 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__10394 = i + 2;
      out = G__10393;
      i = G__10394;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__3973__auto__, writer__3974__auto__, opts__3975__auto__) {
  return cljs.core._write.call(null, writer__3974__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.call(null, key, other);
      } else {
        return null;
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__10397 = cljs.core.aclone.call(null, arr);
    G__10397[i] = a;
    return G__10397;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__10398 = cljs.core.aclone.call(null, arr);
    G__10398[i] = a;
    G__10398[j] = b;
    return G__10398;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__10399 = i + 2;
        var G__10400 = init__$2;
        i = G__10399;
        init__$1 = G__10400;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_10401 = 0;
        var j_10402 = 0;
        while (true) {
          if (i_10401 < 32) {
            if ((self__.bitmap >>> i_10401 & 1) === 0) {
              var G__10403 = i_10401 + 1;
              var G__10404 = j_10402;
              i_10401 = G__10403;
              j_10402 = G__10404;
              continue;
            } else {
              nodes[i_10401] = !(self__.arr[j_10402] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_10402]), self__.arr[j_10402], self__.arr[j_10402 + 1], added_leaf_QMARK_) : self__.arr[j_10402 + 1];
              var G__10405 = i_10401 + 1;
              var G__10406 = j_10402 + 2;
              i_10401 = G__10405;
              j_10402 = G__10406;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable;
        } else {
          return null;
        }
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx);
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_10407 = 0;
      var j_10408 = 0;
      while (true) {
        if (i_10407 < 32) {
          if ((self__.bitmap >>> i_10407 & 1) === 0) {
            var G__10409 = i_10407 + 1;
            var G__10410 = j_10408;
            i_10407 = G__10409;
            j_10408 = G__10410;
            continue;
          } else {
            nodes[i_10407] = !(self__.arr[j_10408] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_10408]), self__.arr[j_10408], self__.arr[j_10408 + 1], added_leaf_QMARK_) : self__.arr[j_10408 + 1];
            var G__10411 = i_10407 + 1;
            var G__10412 = j_10408 + 2;
            i_10407 = G__10411;
            j_10408 = G__10412;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__10413 = i + 1;
        var G__10414 = j + 2;
        var G__10415 = bitmap | 1 << i;
        i = G__10413;
        j = G__10414;
        bitmap = G__10415;
        continue;
      } else {
        var G__10416 = i + 1;
        var G__10417 = j;
        var G__10418 = bitmap;
        i = G__10416;
        j = G__10417;
        bitmap = G__10418;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__10419 = i + 1;
          var G__10420 = init__$2;
          i = G__10419;
          init__$1 = G__10420;
          continue;
        }
      } else {
        var G__10421 = i + 1;
        var G__10422 = init__$1;
        i = G__10421;
        init__$1 = G__10422;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        } else {
          return null;
        }
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__10423 = i + 2;
        i = G__10423;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4090__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__10424 = j + 2;
                j = G__10424;
                continue;
              }
            } else {
              var G__10425 = j + 2;
              j = G__10425;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4090__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__10426 = j + 1;
              j = G__10426;
              continue;
            }
          } else {
            var G__10427 = j + 1;
            j = G__10427;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj10430 = {};
    return obj10430;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__10431 = null;
  var G__10431__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10431__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10431 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10431__2.call(this, self__, k);
      case 3:
        return G__10431__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10431;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args10428) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10428)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if (new_root === self__.root) {
          return coll__$1;
        } else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__10432 = i + 1;
      var G__10433 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__10432;
      out = G__10433;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__10434 = o;
      if (G__10434) {
        var bit__4053__auto__ = G__10434.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4053__auto__ || G__10434.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__10434.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__10434);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__10434);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__10435 = cljs.core.next.call(null, es);
          var G__10436 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__10435;
          tcoll__$1 = G__10436;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__10437 = ascending_QMARK_ ? t.left : t.right;
      var G__10438 = cljs.core.conj.call(null, stack__$1, t);
      t = G__10437;
      stack__$1 = G__10438;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__10440 = null;
  var G__10440__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10440__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10440 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10440__2.call(this, self__, k);
      case 3:
        return G__10440__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10440;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args10439) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10439)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.call = function() {
  var G__10442 = null;
  var G__10442__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10442__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10442 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10442__2.call(this, self__, k);
      case 3:
        return G__10442__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10442;
}();
cljs.core.RedNode.prototype.apply = function(self__, args10441) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10441)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if (!(ins == null)) {
            return tree.add_right(ins);
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append.call(null, left.right, right.left);
            if (app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
            } else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
            }
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if (!(del == null) || !(found[0] == null)) {
            if (tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
            } else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
            }
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__10444 = null;
  var G__10444__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10444__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10444 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10444__2.call(this, self__, k);
      case 3:
        return G__10444__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10444;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args10443) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10443)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__10445 = t.left;
          t = G__10445;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__10446 = t.right;
            t = G__10446;
            continue;
          } else {
            return null;
          }
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__10447 = cljs.core.conj.call(null, stack, t);
              var G__10448 = t.left;
              stack = G__10447;
              t = G__10448;
              continue;
            } else {
              var G__10449 = stack;
              var G__10450 = t.right;
              stack = G__10449;
              t = G__10450;
              continue;
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if (c > 0) {
                var G__10451 = cljs.core.conj.call(null, stack, t);
                var G__10452 = t.right;
                stack = G__10451;
                t = G__10452;
                continue;
              } else {
                var G__10453 = stack;
                var G__10454 = t.left;
                stack = G__10453;
                t = G__10454;
                continue;
              }
            } else {
              return null;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__10455 = cljs.core.nnext.call(null, in$);
        var G__10456 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__10455;
        out = G__10456;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__10457) {
    var keyvals = cljs.core.seq(arglist__10457);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__10458) {
    var keyvals = cljs.core.seq(arglist__10458);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj10462 = {};
      return obj10462;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__10463 = cljs.core.nnext.call(null, kvs);
        kvs = G__10463;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__10464) {
    var keyvals = cljs.core.seq(arglist__10464);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__10465 = cljs.core.nnext.call(null, in$);
        var G__10466 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__10465;
        out = G__10466;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__10467) {
    var keyvals = cljs.core.seq(arglist__10467);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__10468 = cljs.core.nnext.call(null, in$);
        var G__10469 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__10468;
        out = G__10469;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__10470) {
    var comparator = cljs.core.first(arglist__10470);
    var keyvals = cljs.core.rest(arglist__10470);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__10471 = self__.mseq;
    if (G__10471) {
      var bit__4053__auto__ = G__10471.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4053__auto__ || G__10471.cljs$core$INext$) {
        return true;
      } else {
        if (!G__10471.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10471);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10471);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__10472 = self__.mseq;
    if (G__10472) {
      var bit__4053__auto__ = G__10472.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4053__auto__ || G__10472.cljs$core$INext$) {
        return true;
      } else {
        if (!G__10472.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10472);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10472);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__10473 = self__.mseq;
    if (G__10473) {
      var bit__4053__auto__ = G__10473.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4053__auto__ || G__10473.cljs$core$INext$) {
        return true;
      } else {
        if (!G__10473.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10473);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10473);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__10474 = self__.mseq;
    if (G__10474) {
      var bit__4053__auto__ = G__10474.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4053__auto__ || G__10474.cljs$core$INext$) {
        return true;
      } else {
        if (!G__10474.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10474);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10474);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__10475_SHARP_, p2__10476_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3403__auto__ = p1__10475_SHARP_;
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__10476_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__10477) {
    var maps = cljs.core.seq(arglist__10477);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3403__auto__ = m1;
            if (cljs.core.truth_(or__3403__auto__)) {
              return or__3403__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__10478) {
    var f = cljs.core.first(arglist__10478);
    var maps = cljs.core.rest(arglist__10478);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__10479 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__10480 = cljs.core.next.call(null, keys);
      ret = G__10479;
      keys = G__10480;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__10483 = null;
  var G__10483__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10483__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10483 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10483__2.call(this, self__, k);
      case 3:
        return G__10483__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10483;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args10482) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10482)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__10481_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__10481_SHARP_);
  }, other));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__10484 = i + 1;
        var G__10485 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__10484;
        out = G__10485;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__10486 = i + 1;
        var G__10487 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__10486;
        out = G__10487;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__10489 = null;
  var G__10489__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__10489__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__10489 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10489__2.call(this, self__, k);
      case 3:
        return G__10489__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10489;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args10488) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10488)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__10492 = null;
  var G__10492__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10492__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10492 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10492__2.call(this, self__, k);
      case 3:
        return G__10492__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10492;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args10491) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10491)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__10490_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__10490_SHARP_);
  }, other));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4245__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4245__auto__.length) {
        var G__10493 = i + 1;
        var G__10494 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__10493;
        res = G__10494;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while (true) {
          if (!(in$__$1 == null)) {
            var G__10495 = cljs.core._next.call(null, in$__$1);
            var G__10496 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
            in$__$1 = G__10495;
            out = G__10496;
            continue;
          } else {
            return cljs.core._persistent_BANG_.call(null, out);
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__10497__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__10497 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__10497__delegate.call(this, keys);
    };
    G__10497.cljs$lang$maxFixedArity = 0;
    G__10497.cljs$lang$applyTo = function(arglist__10498) {
      var keys = cljs.core.seq(arglist__10498);
      return G__10497__delegate(keys);
    };
    G__10497.cljs$core$IFn$_invoke$arity$variadic = G__10497__delegate;
    return G__10497;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__10499) {
    var keys = cljs.core.seq(arglist__10499);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__10500) {
    var comparator = cljs.core.first(arglist__10500);
    var keys = cljs.core.rest(arglist__10500);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function replace(smap, coll) {
  if (cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if (cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
      } else {
        return v;
      }
    }, coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
  } else {
    return cljs.core.map.call(null, function(p1__10501_SHARP_) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, p1__10501_SHARP_);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second.call(null, e);
      } else {
        return p1__10501_SHARP_;
      }
    }, coll);
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__10508, seen__$1) {
        while (true) {
          var vec__10509 = p__10508;
          var f = cljs.core.nth.call(null, vec__10509, 0, null);
          var xs__$1 = vec__10509;
          var temp__4092__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4092__auto__) {
            var s = temp__4092__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__10510 = cljs.core.rest.call(null, s);
              var G__10511 = seen__$1;
              p__10508 = G__10510;
              seen__$1 = G__10511;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__10512 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__10513 = cljs.core.next.call(null, s__$1);
      ret = G__10512;
      s__$1 = G__10513;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__10515 = x;
    if (G__10515) {
      var bit__4046__auto__ = G__10515.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4046__auto__ || G__10515.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__10516 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__10517 = cljs.core.next.call(null, ks);
      var G__10518 = cljs.core.next.call(null, vs);
      map = G__10516;
      ks = G__10517;
      vs = G__10518;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__10521__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10519_SHARP_, p2__10520_SHARP_) {
        return max_key.call(null, k, p1__10519_SHARP_, p2__10520_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__10521 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10521__delegate.call(this, k, x, y, more);
    };
    G__10521.cljs$lang$maxFixedArity = 3;
    G__10521.cljs$lang$applyTo = function(arglist__10522) {
      var k = cljs.core.first(arglist__10522);
      arglist__10522 = cljs.core.next(arglist__10522);
      var x = cljs.core.first(arglist__10522);
      arglist__10522 = cljs.core.next(arglist__10522);
      var y = cljs.core.first(arglist__10522);
      var more = cljs.core.rest(arglist__10522);
      return G__10521__delegate(k, x, y, more);
    };
    G__10521.cljs$core$IFn$_invoke$arity$variadic = G__10521__delegate;
    return G__10521;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__10525__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10523_SHARP_, p2__10524_SHARP_) {
        return min_key.call(null, k, p1__10523_SHARP_, p2__10524_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__10525 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10525__delegate.call(this, k, x, y, more);
    };
    G__10525.cljs$lang$maxFixedArity = 3;
    G__10525.cljs$lang$applyTo = function(arglist__10526) {
      var k = cljs.core.first(arglist__10526);
      arglist__10526 = cljs.core.next(arglist__10526);
      var x = cljs.core.first(arglist__10526);
      arglist__10526 = cljs.core.next(arglist__10526);
      var y = cljs.core.first(arglist__10526);
      var more = cljs.core.rest(arglist__10526);
      return G__10525__delegate(k, x, y, more);
    };
    G__10525.cljs$core$IFn$_invoke$arity$variadic = G__10525__delegate;
    return G__10525;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__10529 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__10529, 0, null);
        var s = vec__10529;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__10530 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__10530, 0, null);
      var s = vec__10530;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__10533 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__10533, 0, null);
        var s = vec__10533;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__10534 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__10534, 0, null);
      var s = vec__10534;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, rng__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil((self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv) {
        return function(p1__10535_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__10535_SHARP_));
        };
      }(fst, fv), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__10546 = null;
      var G__10546__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__10546__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__10546__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__10546__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__10546__4 = function() {
        var G__10547__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__10547 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10547__delegate.call(this, x, y, z, args);
        };
        G__10547.cljs$lang$maxFixedArity = 3;
        G__10547.cljs$lang$applyTo = function(arglist__10548) {
          var x = cljs.core.first(arglist__10548);
          arglist__10548 = cljs.core.next(arglist__10548);
          var y = cljs.core.first(arglist__10548);
          arglist__10548 = cljs.core.next(arglist__10548);
          var z = cljs.core.first(arglist__10548);
          var args = cljs.core.rest(arglist__10548);
          return G__10547__delegate(x, y, z, args);
        };
        G__10547.cljs$core$IFn$_invoke$arity$variadic = G__10547__delegate;
        return G__10547;
      }();
      G__10546 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10546__0.call(this);
          case 1:
            return G__10546__1.call(this, x);
          case 2:
            return G__10546__2.call(this, x, y);
          case 3:
            return G__10546__3.call(this, x, y, z);
          default:
            return G__10546__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10546.cljs$lang$maxFixedArity = 3;
      G__10546.cljs$lang$applyTo = G__10546__4.cljs$lang$applyTo;
      return G__10546;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__10549 = null;
      var G__10549__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__10549__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__10549__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__10549__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__10549__4 = function() {
        var G__10550__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__10550 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10550__delegate.call(this, x, y, z, args);
        };
        G__10550.cljs$lang$maxFixedArity = 3;
        G__10550.cljs$lang$applyTo = function(arglist__10551) {
          var x = cljs.core.first(arglist__10551);
          arglist__10551 = cljs.core.next(arglist__10551);
          var y = cljs.core.first(arglist__10551);
          arglist__10551 = cljs.core.next(arglist__10551);
          var z = cljs.core.first(arglist__10551);
          var args = cljs.core.rest(arglist__10551);
          return G__10550__delegate(x, y, z, args);
        };
        G__10550.cljs$core$IFn$_invoke$arity$variadic = G__10550__delegate;
        return G__10550;
      }();
      G__10549 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10549__0.call(this);
          case 1:
            return G__10549__1.call(this, x);
          case 2:
            return G__10549__2.call(this, x, y);
          case 3:
            return G__10549__3.call(this, x, y, z);
          default:
            return G__10549__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10549.cljs$lang$maxFixedArity = 3;
      G__10549.cljs$lang$applyTo = G__10549__4.cljs$lang$applyTo;
      return G__10549;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__10552 = null;
      var G__10552__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__10552__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__10552__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__10552__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__10552__4 = function() {
        var G__10553__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__10553 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10553__delegate.call(this, x, y, z, args);
        };
        G__10553.cljs$lang$maxFixedArity = 3;
        G__10553.cljs$lang$applyTo = function(arglist__10554) {
          var x = cljs.core.first(arglist__10554);
          arglist__10554 = cljs.core.next(arglist__10554);
          var y = cljs.core.first(arglist__10554);
          arglist__10554 = cljs.core.next(arglist__10554);
          var z = cljs.core.first(arglist__10554);
          var args = cljs.core.rest(arglist__10554);
          return G__10553__delegate(x, y, z, args);
        };
        G__10553.cljs$core$IFn$_invoke$arity$variadic = G__10553__delegate;
        return G__10553;
      }();
      G__10552 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10552__0.call(this);
          case 1:
            return G__10552__1.call(this, x);
          case 2:
            return G__10552__2.call(this, x, y);
          case 3:
            return G__10552__3.call(this, x, y, z);
          default:
            return G__10552__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10552.cljs$lang$maxFixedArity = 3;
      G__10552.cljs$lang$applyTo = G__10552__4.cljs$lang$applyTo;
      return G__10552;
    }();
  };
  var juxt__4 = function() {
    var G__10555__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__10556 = null;
        var G__10556__0 = function() {
          return cljs.core.reduce.call(null, function(p1__10536_SHARP_, p2__10537_SHARP_) {
            return cljs.core.conj.call(null, p1__10536_SHARP_, p2__10537_SHARP_.call(null));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__10556__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__10538_SHARP_, p2__10539_SHARP_) {
            return cljs.core.conj.call(null, p1__10538_SHARP_, p2__10539_SHARP_.call(null, x));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__10556__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__10540_SHARP_, p2__10541_SHARP_) {
            return cljs.core.conj.call(null, p1__10540_SHARP_, p2__10541_SHARP_.call(null, x, y));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__10556__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__10542_SHARP_, p2__10543_SHARP_) {
            return cljs.core.conj.call(null, p1__10542_SHARP_, p2__10543_SHARP_.call(null, x, y, z));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__10556__4 = function() {
          var G__10557__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__10544_SHARP_, p2__10545_SHARP_) {
              return cljs.core.conj.call(null, p1__10544_SHARP_, cljs.core.apply.call(null, p2__10545_SHARP_, x, y, z, args));
            }, cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__10557 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__10557__delegate.call(this, x, y, z, args);
          };
          G__10557.cljs$lang$maxFixedArity = 3;
          G__10557.cljs$lang$applyTo = function(arglist__10558) {
            var x = cljs.core.first(arglist__10558);
            arglist__10558 = cljs.core.next(arglist__10558);
            var y = cljs.core.first(arglist__10558);
            arglist__10558 = cljs.core.next(arglist__10558);
            var z = cljs.core.first(arglist__10558);
            var args = cljs.core.rest(arglist__10558);
            return G__10557__delegate(x, y, z, args);
          };
          G__10557.cljs$core$IFn$_invoke$arity$variadic = G__10557__delegate;
          return G__10557;
        }();
        G__10556 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__10556__0.call(this);
            case 1:
              return G__10556__1.call(this, x);
            case 2:
              return G__10556__2.call(this, x, y);
            case 3:
              return G__10556__3.call(this, x, y, z);
            default:
              return G__10556__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10556.cljs$lang$maxFixedArity = 3;
        G__10556.cljs$lang$applyTo = G__10556__4.cljs$lang$applyTo;
        return G__10556;
      }();
    };
    var G__10555 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10555__delegate.call(this, f, g, h, fs);
    };
    G__10555.cljs$lang$maxFixedArity = 3;
    G__10555.cljs$lang$applyTo = function(arglist__10559) {
      var f = cljs.core.first(arglist__10559);
      arglist__10559 = cljs.core.next(arglist__10559);
      var g = cljs.core.first(arglist__10559);
      arglist__10559 = cljs.core.next(arglist__10559);
      var h = cljs.core.first(arglist__10559);
      var fs = cljs.core.rest(arglist__10559);
      return G__10555__delegate(f, g, h, fs);
    };
    G__10555.cljs$core$IFn$_invoke$arity$variadic = G__10555__delegate;
    return G__10555;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__10560 = cljs.core.next.call(null, coll);
        coll = G__10560;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__10561 = n - 1;
        var G__10562 = cljs.core.next.call(null, coll);
        n = G__10561;
        coll = G__10562;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  } else {
    return null;
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
    }, null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__10564 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__10564, 0, null);
  var flags = cljs.core.nth.call(null, vec__10564, 1, null);
  var pattern = cljs.core.nth.call(null, vec__10564, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_10566 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_10567__$1 = cljs.core.next.call(null, coll);
      var n_10568 = (new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts);
      while (true) {
        if (coll_10567__$1 && (n_10568 == null || !(n_10568 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_10567__$1), writer, opts);
          var G__10569 = cljs.core.next.call(null, coll_10567__$1);
          var G__10570 = n_10568 - 1;
          coll_10567__$1 = G__10569;
          n_10568 = G__10570;
          continue;
        } else {
        }
        break;
      }
      if (cljs.core.truth_((new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts))) {
        cljs.core._write.call(null, writer, sep);
        print_one.call(null, "...", writer, opts);
      } else {
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_10566;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__10575 = cljs.core.seq.call(null, ss);
    var chunk__10576 = null;
    var count__10577 = 0;
    var i__10578 = 0;
    while (true) {
      if (i__10578 < count__10577) {
        var s = cljs.core._nth.call(null, chunk__10576, i__10578);
        cljs.core._write.call(null, writer, s);
        var G__10579 = seq__10575;
        var G__10580 = chunk__10576;
        var G__10581 = count__10577;
        var G__10582 = i__10578 + 1;
        seq__10575 = G__10579;
        chunk__10576 = G__10580;
        count__10577 = G__10581;
        i__10578 = G__10582;
        continue;
      } else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__10575);
        if (temp__4092__auto__) {
          var seq__10575__$1 = temp__4092__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__10575__$1)) {
            var c__4151__auto__ = cljs.core.chunk_first.call(null, seq__10575__$1);
            var G__10583 = cljs.core.chunk_rest.call(null, seq__10575__$1);
            var G__10584 = c__4151__auto__;
            var G__10585 = cljs.core.count.call(null, c__4151__auto__);
            var G__10586 = 0;
            seq__10575 = G__10583;
            chunk__10576 = G__10584;
            count__10577 = G__10585;
            i__10578 = G__10586;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__10575__$1);
            cljs.core._write.call(null, writer, s);
            var G__10587 = cljs.core.next.call(null, seq__10575__$1);
            var G__10588 = null;
            var G__10589 = 0;
            var G__10590 = 0;
            seq__10575 = G__10587;
            chunk__10576 = G__10588;
            count__10577 = G__10589;
            i__10578 = G__10590;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__10591) {
    var writer = cljs.core.first(arglist__10591);
    var ss = cljs.core.rest(arglist__10591);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj10593 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj10593;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if (cljs.core.truth_(function() {
          var and__3391__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if (cljs.core.truth_(and__3391__auto__)) {
            var and__3391__auto____$1 = function() {
              var G__10599 = obj;
              if (G__10599) {
                var bit__4053__auto__ = G__10599.cljs$lang$protocol_mask$partition0$ & 131072;
                if (bit__4053__auto__ || G__10599.cljs$core$IMeta$) {
                  return true;
                } else {
                  if (!G__10599.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__10599);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__10599);
              }
            }();
            if (and__3391__auto____$1) {
              return cljs.core.meta.call(null, obj);
            } else {
              return and__3391__auto____$1;
            }
          } else {
            return and__3391__auto__;
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ");
        } else {
        }
        if (obj == null) {
          return cljs.core._write.call(null, writer, "nil");
        } else {
          if (obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
          } else {
            if (function() {
              var G__10600 = obj;
              if (G__10600) {
                var bit__4046__auto__ = G__10600.cljs$lang$protocol_mask$partition0$ & 2147483648;
                if (bit__4046__auto__ || G__10600.cljs$core$IPrintWithWriter$) {
                  return true;
                } else {
                  return false;
                }
              } else {
                return false;
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts);
            } else {
              if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""));
              } else {
                if (cljs.core.object_QMARK_.call(null, obj)) {
                  cljs.core._write.call(null, writer, "#js ");
                  return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                  }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
                } else {
                  if (obj instanceof Array) {
                    return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                  } else {
                    if (goog.isString(obj)) {
                      if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).cljs$core$IFn$_invoke$arity$1(opts))) {
                        return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                      } else {
                        return cljs.core._write.call(null, writer, obj);
                      }
                    } else {
                      if (cljs.core.fn_QMARK_.call(null, obj)) {
                        return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                      } else {
                        if (obj instanceof Date) {
                          var normalize = function(n, len) {
                            var ns = [cljs.core.str(n)].join("");
                            while (true) {
                              if (cljs.core.count.call(null, ns) < len) {
                                var G__10602 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                                ns = G__10602;
                                continue;
                              } else {
                                return ns;
                              }
                              break;
                            }
                          };
                          return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                        } else {
                          if (cljs.core.regexp_QMARK_.call(null, obj)) {
                            return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                          } else {
                            if (function() {
                              var G__10601 = obj;
                              if (G__10601) {
                                var bit__4053__auto__ = G__10601.cljs$lang$protocol_mask$partition0$ & 2147483648;
                                if (bit__4053__auto__ || G__10601.cljs$core$IPrintWithWriter$) {
                                  return true;
                                } else {
                                  if (!G__10601.cljs$lang$protocol_mask$partition0$) {
                                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__10601);
                                  } else {
                                    return false;
                                  }
                                }
                              } else {
                                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__10601);
                              }
                            }()) {
                              return cljs.core._pr_writer.call(null, obj, writer, opts);
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__10607 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__10608 = null;
  var count__10609 = 0;
  var i__10610 = 0;
  while (true) {
    if (i__10610 < count__10609) {
      var obj = cljs.core._nth.call(null, chunk__10608, i__10610);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__10611 = seq__10607;
      var G__10612 = chunk__10608;
      var G__10613 = count__10609;
      var G__10614 = i__10610 + 1;
      seq__10607 = G__10611;
      chunk__10608 = G__10612;
      count__10609 = G__10613;
      i__10610 = G__10614;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__10607);
      if (temp__4092__auto__) {
        var seq__10607__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10607__$1)) {
          var c__4151__auto__ = cljs.core.chunk_first.call(null, seq__10607__$1);
          var G__10615 = cljs.core.chunk_rest.call(null, seq__10607__$1);
          var G__10616 = c__4151__auto__;
          var G__10617 = cljs.core.count.call(null, c__4151__auto__);
          var G__10618 = 0;
          seq__10607 = G__10615;
          chunk__10608 = G__10616;
          count__10609 = G__10617;
          i__10610 = G__10618;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__10607__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__10619 = cljs.core.next.call(null, seq__10607__$1);
          var G__10620 = null;
          var G__10621 = 0;
          var G__10622 = 0;
          seq__10607 = G__10619;
          chunk__10608 = G__10620;
          count__10609 = G__10621;
          i__10610 = G__10622;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__10623) {
    var objs = cljs.core.seq(arglist__10623);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__10624) {
    var objs = cljs.core.seq(arglist__10624);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__10625) {
    var objs = cljs.core.seq(arglist__10625);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__10626) {
    var objs = cljs.core.seq(arglist__10626);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__10627) {
    var objs = cljs.core.seq(arglist__10627);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__10628) {
    var objs = cljs.core.seq(arglist__10628);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__10629) {
    var objs = cljs.core.seq(arglist__10629);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__10630) {
    var objs = cljs.core.seq(arglist__10630);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 2;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__10631 = cljs.core.seq.call(null, self__.watches);
  var chunk__10632 = null;
  var count__10633 = 0;
  var i__10634 = 0;
  while (true) {
    if (i__10634 < count__10633) {
      var vec__10635 = cljs.core._nth.call(null, chunk__10632, i__10634);
      var key = cljs.core.nth.call(null, vec__10635, 0, null);
      var f = cljs.core.nth.call(null, vec__10635, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__10637 = seq__10631;
      var G__10638 = chunk__10632;
      var G__10639 = count__10633;
      var G__10640 = i__10634 + 1;
      seq__10631 = G__10637;
      chunk__10632 = G__10638;
      count__10633 = G__10639;
      i__10634 = G__10640;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__10631);
      if (temp__4092__auto__) {
        var seq__10631__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10631__$1)) {
          var c__4151__auto__ = cljs.core.chunk_first.call(null, seq__10631__$1);
          var G__10641 = cljs.core.chunk_rest.call(null, seq__10631__$1);
          var G__10642 = c__4151__auto__;
          var G__10643 = cljs.core.count.call(null, c__4151__auto__);
          var G__10644 = 0;
          seq__10631 = G__10641;
          chunk__10632 = G__10642;
          count__10633 = G__10643;
          i__10634 = G__10644;
          continue;
        } else {
          var vec__10636 = cljs.core.first.call(null, seq__10631__$1);
          var key = cljs.core.nth.call(null, vec__10636, 0, null);
          var f = cljs.core.nth.call(null, vec__10636, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__10645 = cljs.core.next.call(null, seq__10631__$1);
          var G__10646 = null;
          var G__10647 = 0;
          var G__10648 = 0;
          seq__10631 = G__10645;
          chunk__10632 = G__10646;
          count__10633 = G__10647;
          i__10634 = G__10648;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__10652__delegate = function(x, p__10649) {
      var map__10651 = p__10649;
      var map__10651__$1 = cljs.core.seq_QMARK_.call(null, map__10651) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10651) : map__10651;
      var validator = cljs.core.get.call(null, map__10651__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.call(null, map__10651__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__10652 = function(x, var_args) {
      var p__10649 = null;
      if (arguments.length > 1) {
        p__10649 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__10652__delegate.call(this, x, p__10649);
    };
    G__10652.cljs$lang$maxFixedArity = 1;
    G__10652.cljs$lang$applyTo = function(arglist__10653) {
      var x = cljs.core.first(arglist__10653);
      var p__10649 = cljs.core.rest(arglist__10653);
      return G__10652__delegate(x, p__10649);
    };
    G__10652.cljs$core$IFn$_invoke$arity$variadic = G__10652__delegate;
    return G__10652;
  }();
  atom = function(x, var_args) {
    var p__10649 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var validate_10654 = a.validator;
  if (validate_10654 == null) {
  } else {
    if (cljs.core.truth_(validate_10654.call(null, new_value))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))))].join(""));
    }
  }
  var old_value_10655 = a.state;
  a.state = new_value;
  if (a.watches == null) {
  } else {
    cljs.core._notify_watches.call(null, a, old_value_10655, new_value);
  }
  return new_value;
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z));
  };
  var swap_BANG___6 = function() {
    var G__10656__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more));
    };
    var G__10656 = function(a, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 5) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__10656__delegate.call(this, a, f, x, y, z, more);
    };
    G__10656.cljs$lang$maxFixedArity = 5;
    G__10656.cljs$lang$applyTo = function(arglist__10657) {
      var a = cljs.core.first(arglist__10657);
      arglist__10657 = cljs.core.next(arglist__10657);
      var f = cljs.core.first(arglist__10657);
      arglist__10657 = cljs.core.next(arglist__10657);
      var x = cljs.core.first(arglist__10657);
      arglist__10657 = cljs.core.next(arglist__10657);
      var y = cljs.core.first(arglist__10657);
      arglist__10657 = cljs.core.next(arglist__10657);
      var z = cljs.core.first(arglist__10657);
      var more = cljs.core.rest(arglist__10657);
      return G__10656__delegate(a, f, x, y, z, more);
    };
    G__10656.cljs$core$IFn$_invoke$arity$variadic = G__10656__delegate;
    return G__10656;
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__10658) {
    var iref = cljs.core.first(arglist__10658);
    arglist__10658 = cljs.core.next(arglist__10658);
    var f = cljs.core.first(arglist__10658);
    var args = cljs.core.rest(arglist__10658);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state));
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, self__.state, function(p__10659) {
    var map__10660 = p__10659;
    var map__10660__$1 = cljs.core.seq_QMARK_.call(null, map__10660) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10660) : map__10660;
    var curr_state = map__10660__$1;
    var done = cljs.core.get.call(null, map__10660__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
    if (cljs.core.truth_(done)) {
      return curr_state;
    } else {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.call(null)], null);
    }
  }));
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.IEncodeJS = function() {
  var obj10662 = {};
  return obj10662;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3391__auto__ = x;
    if (and__3391__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4030__auto__ = x == null ? null : x;
    return function() {
      var or__3403__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3391__auto__ = x;
    if (and__3391__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4030__auto__ = x == null ? null : x;
    return function() {
      var or__3403__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__10664 = k;
    if (G__10664) {
      var bit__4053__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3403__auto__ = bit__4053__auto__;
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return G__10664.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__10664.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__10664);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__10664);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || (typeof k === "number" || (k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol))) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__10678 = x;
      if (G__10678) {
        var bit__4053__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3403__auto__ = bit__4053__auto__;
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return G__10678.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__10678.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__10678);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__10678);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj10680 = {};
              return obj10680;
            }();
            var seq__10681_10691 = cljs.core.seq.call(null, x);
            var chunk__10682_10692 = null;
            var count__10683_10693 = 0;
            var i__10684_10694 = 0;
            while (true) {
              if (i__10684_10694 < count__10683_10693) {
                var vec__10685_10695 = cljs.core._nth.call(null, chunk__10682_10692, i__10684_10694);
                var k_10696 = cljs.core.nth.call(null, vec__10685_10695, 0, null);
                var v_10697 = cljs.core.nth.call(null, vec__10685_10695, 1, null);
                m[cljs.core.key__GT_js.call(null, k_10696)] = clj__GT_js.call(null, v_10697);
                var G__10698 = seq__10681_10691;
                var G__10699 = chunk__10682_10692;
                var G__10700 = count__10683_10693;
                var G__10701 = i__10684_10694 + 1;
                seq__10681_10691 = G__10698;
                chunk__10682_10692 = G__10699;
                count__10683_10693 = G__10700;
                i__10684_10694 = G__10701;
                continue;
              } else {
                var temp__4092__auto___10702 = cljs.core.seq.call(null, seq__10681_10691);
                if (temp__4092__auto___10702) {
                  var seq__10681_10703__$1 = temp__4092__auto___10702;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__10681_10703__$1)) {
                    var c__4151__auto___10704 = cljs.core.chunk_first.call(null, seq__10681_10703__$1);
                    var G__10705 = cljs.core.chunk_rest.call(null, seq__10681_10703__$1);
                    var G__10706 = c__4151__auto___10704;
                    var G__10707 = cljs.core.count.call(null, c__4151__auto___10704);
                    var G__10708 = 0;
                    seq__10681_10691 = G__10705;
                    chunk__10682_10692 = G__10706;
                    count__10683_10693 = G__10707;
                    i__10684_10694 = G__10708;
                    continue;
                  } else {
                    var vec__10686_10709 = cljs.core.first.call(null, seq__10681_10703__$1);
                    var k_10710 = cljs.core.nth.call(null, vec__10686_10709, 0, null);
                    var v_10711 = cljs.core.nth.call(null, vec__10686_10709, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_10710)] = clj__GT_js.call(null, v_10711);
                    var G__10712 = cljs.core.next.call(null, seq__10681_10703__$1);
                    var G__10713 = null;
                    var G__10714 = 0;
                    var G__10715 = 0;
                    seq__10681_10691 = G__10712;
                    chunk__10682_10692 = G__10713;
                    count__10683_10693 = G__10714;
                    i__10684_10694 = G__10715;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__10687_10716 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__10688_10717 = null;
              var count__10689_10718 = 0;
              var i__10690_10719 = 0;
              while (true) {
                if (i__10690_10719 < count__10689_10718) {
                  var x_10720__$1 = cljs.core._nth.call(null, chunk__10688_10717, i__10690_10719);
                  arr.push(x_10720__$1);
                  var G__10721 = seq__10687_10716;
                  var G__10722 = chunk__10688_10717;
                  var G__10723 = count__10689_10718;
                  var G__10724 = i__10690_10719 + 1;
                  seq__10687_10716 = G__10721;
                  chunk__10688_10717 = G__10722;
                  count__10689_10718 = G__10723;
                  i__10690_10719 = G__10724;
                  continue;
                } else {
                  var temp__4092__auto___10725 = cljs.core.seq.call(null, seq__10687_10716);
                  if (temp__4092__auto___10725) {
                    var seq__10687_10726__$1 = temp__4092__auto___10725;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__10687_10726__$1)) {
                      var c__4151__auto___10727 = cljs.core.chunk_first.call(null, seq__10687_10726__$1);
                      var G__10728 = cljs.core.chunk_rest.call(null, seq__10687_10726__$1);
                      var G__10729 = c__4151__auto___10727;
                      var G__10730 = cljs.core.count.call(null, c__4151__auto___10727);
                      var G__10731 = 0;
                      seq__10687_10716 = G__10728;
                      chunk__10688_10717 = G__10729;
                      count__10689_10718 = G__10730;
                      i__10690_10719 = G__10731;
                      continue;
                    } else {
                      var x_10732__$1 = cljs.core.first.call(null, seq__10687_10726__$1);
                      arr.push(x_10732__$1);
                      var G__10733 = cljs.core.next.call(null, seq__10687_10726__$1);
                      var G__10734 = null;
                      var G__10735 = 0;
                      var G__10736 = 0;
                      seq__10687_10716 = G__10733;
                      chunk__10688_10717 = G__10734;
                      count__10689_10718 = G__10735;
                      i__10690_10719 = G__10736;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj10738 = {};
  return obj10738;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3391__auto__ = x;
    if (and__3391__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4030__auto__ = x == null ? null : x;
    return function() {
      var or__3403__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__10759__delegate = function(x, opts) {
      if (function() {
        var G__10749 = x;
        if (G__10749) {
          var bit__4053__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3403__auto__ = bit__4053__auto__;
            if (cljs.core.truth_(or__3403__auto__)) {
              return or__3403__auto__;
            } else {
              return G__10749.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__10749.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__10749);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__10749);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__10750 = opts;
          var map__10750__$1 = cljs.core.seq_QMARK_.call(null, map__10750) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10750) : map__10750;
          var keywordize_keys = cljs.core.get.call(null, map__10750__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__10750, map__10750__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4120__auto__ = function(map__10750, map__10750__$1, keywordize_keys, keyfn) {
                          return function iter__10755(s__10756) {
                            return new cljs.core.LazySeq(null, function(map__10750, map__10750__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__10756__$1 = s__10756;
                                while (true) {
                                  var temp__4092__auto__ = cljs.core.seq.call(null, s__10756__$1);
                                  if (temp__4092__auto__) {
                                    var s__10756__$2 = temp__4092__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__10756__$2)) {
                                      var c__4118__auto__ = cljs.core.chunk_first.call(null, s__10756__$2);
                                      var size__4119__auto__ = cljs.core.count.call(null, c__4118__auto__);
                                      var b__10758 = cljs.core.chunk_buffer.call(null, size__4119__auto__);
                                      if (function() {
                                        var i__10757 = 0;
                                        while (true) {
                                          if (i__10757 < size__4119__auto__) {
                                            var k = cljs.core._nth.call(null, c__4118__auto__, i__10757);
                                            cljs.core.chunk_append.call(null, b__10758, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__10760 = i__10757 + 1;
                                            i__10757 = G__10760;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10758), iter__10755.call(null, cljs.core.chunk_rest.call(null, s__10756__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10758), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__10756__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__10755.call(null, cljs.core.rest.call(null, s__10756__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__10750, map__10750__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__10750, map__10750__$1, keywordize_keys, keyfn);
                        return iter__4120__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1;
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            };
          }(map__10750, map__10750__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__10759 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__10759__delegate.call(this, x, opts);
    };
    G__10759.cljs$lang$maxFixedArity = 1;
    G__10759.cljs$lang$applyTo = function(arglist__10761) {
      var x = cljs.core.first(arglist__10761);
      var opts = cljs.core.rest(arglist__10761);
      return G__10759__delegate(x, opts);
    };
    G__10759.cljs$core$IFn$_invoke$arity$variadic = G__10759__delegate;
    return G__10759;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__10762__delegate = function(args) {
      var temp__4090__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var v = temp__4090__auto__;
        return v;
      } else {
        var ret = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
        return ret;
      }
    };
    var G__10762 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__10762__delegate.call(this, args);
    };
    G__10762.cljs$lang$maxFixedArity = 0;
    G__10762.cljs$lang$applyTo = function(arglist__10763) {
      var args = cljs.core.seq(arglist__10763);
      return G__10762__delegate(args);
    };
    G__10762.cljs$core$IFn$_invoke$arity$variadic = G__10762__delegate;
    return G__10762;
  }();
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__10764 = ret;
        f = G__10764;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__10765__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__10765 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__10765__delegate.call(this, f, args);
    };
    G__10765.cljs$lang$maxFixedArity = 1;
    G__10765.cljs$lang$applyTo = function(arglist__10766) {
      var f = cljs.core.first(arglist__10766);
      var args = cljs.core.rest(arglist__10766);
      return G__10765__delegate(f, args);
    };
    G__10765.cljs$core$IFn$_invoke$arity$variadic = G__10765__delegate;
    return G__10765;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, coll);
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__10767) {
    var f = cljs.core.first(arglist__10767);
    var args = cljs.core.rest(arglist__10767);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3403__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3403__auto__) {
      return or__3403__auto__;
    } else {
      var or__3403__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3403__auto____$1) {
        return or__3403__auto____$1;
      } else {
        var and__3391__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3391__auto__) {
          var and__3391__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3391__auto____$1) {
            var and__3391__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3391__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__10768 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__10769 = i + 1;
                  ret = G__10768;
                  i = G__10769;
                  continue;
                }
                break;
              }
            } else {
              return and__3391__auto____$2;
            }
          } else {
            return and__3391__auto____$1;
          }
        } else {
          return and__3391__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3403__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3403__auto__)) {
      return or__3403__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__10770_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__10770_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__10770_SHARP_), cljs.core.second.call(null, p1__10770_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__10771_SHARP_, p2__10772_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__10771_SHARP_, p2__10772_SHARP_);
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3403__auto__ = cljs.core.truth_(function() {
    var and__3391__auto__ = xprefs;
    if (cljs.core.truth_(and__3391__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3391__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3403__auto__)) {
    return or__3403__auto__;
  } else {
    var or__3403__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__10773 = cljs.core.rest.call(null, ps);
          ps = G__10773;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3403__auto____$1)) {
      return or__3403__auto____$1;
    } else {
      var or__3403__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__10774 = cljs.core.rest.call(null, ps);
            ps = G__10774;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3403__auto____$2)) {
        return or__3403__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3403__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3403__auto__)) {
    return or__3403__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__10777) {
    var vec__10778 = p__10777;
    var k = cljs.core.nth.call(null, vec__10778, 0, null);
    var _ = cljs.core.nth.call(null, vec__10778, 1, null);
    var e = vec__10778;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3403__auto__ = be == null;
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj10780 = {};
  return obj10780;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3391__auto__ = mf;
    if (and__3391__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4030__auto__ = mf == null ? null : mf;
    return function() {
      var or__3403__auto__ = cljs.core._reset[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._reset["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3391__auto__ = mf;
    if (and__3391__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4030__auto__ = mf == null ? null : mf;
    return function() {
      var or__3403__auto__ = cljs.core._add_method[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._add_method["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3391__auto__ = mf;
    if (and__3391__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4030__auto__ = mf == null ? null : mf;
    return function() {
      var or__3403__auto__ = cljs.core._remove_method[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._remove_method["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3391__auto__ = mf;
    if (and__3391__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4030__auto__ = mf == null ? null : mf;
    return function() {
      var or__3403__auto__ = cljs.core._prefer_method[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3391__auto__ = mf;
    if (and__3391__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4030__auto__ = mf == null ? null : mf;
    return function() {
      var or__3403__auto__ = cljs.core._get_method[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._get_method["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3391__auto__ = mf;
    if (and__3391__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4030__auto__ = mf == null ? null : mf;
    return function() {
      var or__3403__auto__ = cljs.core._methods[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._methods["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3391__auto__ = mf;
    if (and__3391__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4030__auto__ = mf == null ? null : mf;
    return function() {
      var or__3403__auto__ = cljs.core._prefers[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._prefers["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if (function() {
    var and__3391__auto__ = mf;
    if (and__3391__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args);
  } else {
    var x__4030__auto__ = mf == null ? null : mf;
    return function() {
      var or__3403__auto__ = cljs.core._dispatch[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._dispatch["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args);
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, name, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args);
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$2) {
    return null;
  });
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4090__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn;
  } else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
  });
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.do_dispatch.call(null, mf__$1, self__.name, self__.dispatch_fn, args);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__10781__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args);
  };
  var G__10781 = function(_, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return G__10781__delegate.call(this, _, args);
  };
  G__10781.cljs$lang$maxFixedArity = 1;
  G__10781.cljs$lang$applyTo = function(arglist__10782) {
    var _ = cljs.core.first(arglist__10782);
    var args = cljs.core.rest(arglist__10782);
    return G__10781__delegate(_, args);
  };
  G__10781.cljs$core$IFn$_invoke$arity$variadic = G__10781__delegate;
  return G__10781;
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__3973__auto__, writer__3974__auto__, opts__3975__auto__) {
  return cljs.core._write.call(null, writer__3974__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0;
        } else {
          return null;
        }
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, new cljs.core.Symbol(null, 
  "recur", "recur", -1532142362, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, "js*", "js*", -1640426054, 
  null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "try", "try", -1640416396, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], null), null), x);
};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.ASSUME_ANY_VERSION = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || (goog.userAgent.ASSUME_GECKO || (goog.userAgent.ASSUME_MOBILE_WEBKIT || (goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA)));
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null;
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"];
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if (!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && (!goog.userAgent.detectedWebkit_ && navigator.product == "Gecko");
  }
};
if (!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_();
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.ASSUME_ANDROID = false;
goog.userAgent.ASSUME_IPHONE = false;
goog.userAgent.ASSUME_IPAD = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || (goog.userAgent.ASSUME_WINDOWS || (goog.userAgent.ASSUME_LINUX || (goog.userAgent.ASSUME_X11 || (goog.userAgent.ASSUME_ANDROID || (goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD)))));
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && ua.indexOf("Android") >= 0;
  goog.userAgent.detectedIPhone_ = !!ua && ua.indexOf("iPhone") >= 0;
  goog.userAgent.detectedIPad_ = !!ua && ua.indexOf("iPad") >= 0;
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion;
  } else {
    if (goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/;
      } else {
        if (goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/;
        }
      }
    }
    if (re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : "";
    }
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || (goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0));
};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", 
POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", 
MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROVER:"MSPointerOver", MSPOINTEROUT:"MSPointerOut", MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend"};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      } else {
        return null;
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll);
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll));
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__10893 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__10893;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__10897 = cljs.core._EQ_;
    var expr__10898 = limit;
    if (cljs.core.truth_(pred__10897.call(null, 1, expr__10898))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__10897.call(null, 2, expr__10898))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4090__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4090__auto__)) {
            var m = temp__4090__auto__;
            var index = s__$1.indexOf(m);
            var G__10900 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__10901 = limit__$1 - 1;
            var G__10902 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__10900;
            limit__$1 = G__10901;
            parts = G__10902;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__10903 = index - 1;
        index = G__10903;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4090__auto___10904 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4090__auto___10904)) {
        var replacement_10905 = temp__4090__auto___10904;
        buffer.append([cljs.core.str(replacement_10905)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__10906 = index + 1;
      index = G__10906;
      continue;
    }
    break;
  }
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj13698 = {};
  return obj13698;
}();
cljs.reader.read_char = function read_char(reader) {
  if (function() {
    var and__3391__auto__ = reader;
    if (and__3391__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__4030__auto__ = reader == null ? null : reader;
    return function() {
      var or__3403__auto__ = cljs.reader.read_char[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.reader.read_char["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if (function() {
    var and__3391__auto__ = reader;
    if (and__3391__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4030__auto__ = reader == null ? null : reader;
    return function() {
      var or__3403__auto__ = cljs.reader.unread[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.reader.unread["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3403__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__3403__auto__)) {
    return or__3403__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if (arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return reader_error__delegate.call(this, rdr, msg);
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__13699) {
    var rdr = cljs.core.first(arglist__13699);
    var msg = cljs.core.rest(arglist__13699);
    return reader_error__delegate(rdr, msg);
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error;
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3391__auto__ = !(ch === "#");
  if (and__3391__auto__) {
    var and__3391__auto____$1 = !(ch === "'");
    if (and__3391__auto____$1) {
      var and__3391__auto____$2 = !(ch === ":");
      if (and__3391__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__3391__auto____$2;
      }
    } else {
      return and__3391__auto____$1;
    }
  } else {
    return and__3391__auto__;
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || (cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch))) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__13700 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__13701 = cljs.reader.read_char.call(null, rdr);
      sb = G__13700;
      ch = G__13701;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || (ch === "\r" || ch == null)) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3 = groups[2];
  if (!(group3 == null || group3.length < 1)) {
    return 0;
  } else {
    var negate = "-" === groups[1] ? -1 : 1;
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[7]) ? [groups[7], parseInt(groups[7])] : new cljs.core.Keyword(null, "default", "default", 2558708147) ? [null, null] : null;
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      return negate * parseInt(n, radix);
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator) / parseInt(denominator);
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s);
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_number = function match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return null;
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__13702 = cljs.reader.read_char.call(null, rdr);
      ch = G__13702;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4090__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var macrofn = temp__4090__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__13703 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__13703;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__13704 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__13704;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4090__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4090__auto__)) {
      var obj = temp__4090__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch);
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__3403__auto__ = ch == null;
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3403__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__13705 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__13706 = cljs.reader.read_char.call(null, reader);
      buffer = G__13705;
      ch = G__13706;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__13707 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__13708 = cljs.reader.read_char.call(null, reader);
        buffer = G__13707;
        ch = G__13708;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
            var G__13709 = function() {
              buffer.append(ch);
              return buffer;
            }();
            var G__13710 = cljs.reader.read_char.call(null, reader);
            buffer = G__13709;
            ch = G__13710;
            continue;
          } else {
            return null;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(goog.string.contains(token, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || (name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1))) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return f;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__13712 = o;
    if (G__13712) {
      var bit__4053__auto__ = G__13712.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4053__auto__ || G__13712.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__13712.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__13712);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__13712);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", -1545057749, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    return null;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return null;
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__13713 = reader;
        var G__13714 = eof_is_error;
        var G__13715 = sentinel;
        var G__13716 = is_recursive;
        reader = G__13713;
        eof_is_error = G__13714;
        sentinel = G__13715;
        is_recursive = G__13716;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__13717 = cljs.reader.read_comment.call(null, reader, ch);
          var G__13718 = eof_is_error;
          var G__13719 = sentinel;
          var G__13720 = is_recursive;
          reader = G__13717;
          eof_is_error = G__13718;
          sentinel = G__13719;
          is_recursive = G__13720;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var f = cljs.reader.macros.call(null, ch);
            var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? cljs.reader.read_symbol.call(null, reader, ch) : null;
            if (res === reader) {
              var G__13721 = reader;
              var G__13722 = eof_is_error;
              var G__13723 = sentinel;
              var G__13724 = is_recursive;
              reader = G__13721;
              eof_is_error = G__13722;
              sentinel = G__13723;
              is_recursive = G__13724;
              continue;
            } else {
              return res;
            }
          } else {
            return null;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, true, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var b = new goog.string.StringBuffer(s);
        while (true) {
          if (b.getLength() < width) {
            var G__13725 = b.append("0");
            b = G__13725;
            continue;
          } else {
            return b.toString();
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div);
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(month, leap_year_QMARK_) {
    return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
  };
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__13727 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__13727, 0, null);
  var years = cljs.core.nth.call(null, vec__13727, 1, null);
  var months = cljs.core.nth.call(null, vec__13727, 2, null);
  var days = cljs.core.nth.call(null, vec__13727, 3, null);
  var hours = cljs.core.nth.call(null, vec__13727, 4, null);
  var minutes = cljs.core.nth.call(null, vec__13727, 5, null);
  var seconds = cljs.core.nth.call(null, vec__13727, 6, null);
  var fraction = cljs.core.nth.call(null, vec__13727, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__13727, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__13727, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__13727, 10, null);
  var v = vec__13727;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3403__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__3403__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__3403__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__3403__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__3403__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__3403__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3403__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3403__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4090__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4090__auto__)) {
    var vec__13729 = temp__4090__auto__;
    var years = cljs.core.nth.call(null, vec__13729, 0, null);
    var months = cljs.core.nth.call(null, vec__13729, 1, null);
    var days = cljs.core.nth.call(null, vec__13729, 2, null);
    var hours = cljs.core.nth.call(null, vec__13729, 3, null);
    var minutes = cljs.core.nth.call(null, vec__13729, 4, null);
    var seconds = cljs.core.nth.call(null, vec__13729, 5, null);
    var ms = cljs.core.nth.call(null, vec__13729, 6, null);
    var offset = cljs.core.nth.call(null, vec__13729, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""));
  }
};
cljs.reader.read_date = function read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__13742_13754 = cljs.core.seq.call(null, form);
    var chunk__13743_13755 = null;
    var count__13744_13756 = 0;
    var i__13745_13757 = 0;
    while (true) {
      if (i__13745_13757 < count__13744_13756) {
        var x_13758 = cljs.core._nth.call(null, chunk__13743_13755, i__13745_13757);
        arr.push(x_13758);
        var G__13759 = seq__13742_13754;
        var G__13760 = chunk__13743_13755;
        var G__13761 = count__13744_13756;
        var G__13762 = i__13745_13757 + 1;
        seq__13742_13754 = G__13759;
        chunk__13743_13755 = G__13760;
        count__13744_13756 = G__13761;
        i__13745_13757 = G__13762;
        continue;
      } else {
        var temp__4092__auto___13763 = cljs.core.seq.call(null, seq__13742_13754);
        if (temp__4092__auto___13763) {
          var seq__13742_13764__$1 = temp__4092__auto___13763;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__13742_13764__$1)) {
            var c__4151__auto___13765 = cljs.core.chunk_first.call(null, seq__13742_13764__$1);
            var G__13766 = cljs.core.chunk_rest.call(null, seq__13742_13764__$1);
            var G__13767 = c__4151__auto___13765;
            var G__13768 = cljs.core.count.call(null, c__4151__auto___13765);
            var G__13769 = 0;
            seq__13742_13754 = G__13766;
            chunk__13743_13755 = G__13767;
            count__13744_13756 = G__13768;
            i__13745_13757 = G__13769;
            continue;
          } else {
            var x_13770 = cljs.core.first.call(null, seq__13742_13764__$1);
            arr.push(x_13770);
            var G__13771 = cljs.core.next.call(null, seq__13742_13764__$1);
            var G__13772 = null;
            var G__13773 = 0;
            var G__13774 = 0;
            seq__13742_13754 = G__13771;
            chunk__13743_13755 = G__13772;
            count__13744_13756 = G__13773;
            i__13745_13757 = G__13774;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj13747 = {};
        return obj13747;
      }();
      var seq__13748_13775 = cljs.core.seq.call(null, form);
      var chunk__13749_13776 = null;
      var count__13750_13777 = 0;
      var i__13751_13778 = 0;
      while (true) {
        if (i__13751_13778 < count__13750_13777) {
          var vec__13752_13779 = cljs.core._nth.call(null, chunk__13749_13776, i__13751_13778);
          var k_13780 = cljs.core.nth.call(null, vec__13752_13779, 0, null);
          var v_13781 = cljs.core.nth.call(null, vec__13752_13779, 1, null);
          obj[cljs.core.name.call(null, k_13780)] = v_13781;
          var G__13782 = seq__13748_13775;
          var G__13783 = chunk__13749_13776;
          var G__13784 = count__13750_13777;
          var G__13785 = i__13751_13778 + 1;
          seq__13748_13775 = G__13782;
          chunk__13749_13776 = G__13783;
          count__13750_13777 = G__13784;
          i__13751_13778 = G__13785;
          continue;
        } else {
          var temp__4092__auto___13786 = cljs.core.seq.call(null, seq__13748_13775);
          if (temp__4092__auto___13786) {
            var seq__13748_13787__$1 = temp__4092__auto___13786;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__13748_13787__$1)) {
              var c__4151__auto___13788 = cljs.core.chunk_first.call(null, seq__13748_13787__$1);
              var G__13789 = cljs.core.chunk_rest.call(null, seq__13748_13787__$1);
              var G__13790 = c__4151__auto___13788;
              var G__13791 = cljs.core.count.call(null, c__4151__auto___13788);
              var G__13792 = 0;
              seq__13748_13775 = G__13789;
              chunk__13749_13776 = G__13790;
              count__13750_13777 = G__13791;
              i__13751_13778 = G__13792;
              continue;
            } else {
              var vec__13753_13793 = cljs.core.first.call(null, seq__13748_13787__$1);
              var k_13794 = cljs.core.nth.call(null, vec__13753_13793, 0, null);
              var v_13795 = cljs.core.nth.call(null, vec__13753_13793, 1, null);
              obj[cljs.core.name.call(null, k_13794)] = v_13795;
              var G__13796 = cljs.core.next.call(null, seq__13748_13787__$1);
              var G__13797 = null;
              var G__13798 = 0;
              var G__13799 = 0;
              seq__13748_13775 = G__13796;
              chunk__13749_13776 = G__13797;
              count__13750_13777 = G__13798;
              i__13751_13778 = G__13799;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, null, [cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join(""));
      } else {
        return null;
      }
    }
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
      } else {
        return null;
      }
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return f;
  });
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return null;
  });
  return old_parser;
};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    this.creationStack = (new Error).stack;
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.Disposable.MONITORING_MODE = 0;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.bind(callback, opt_scope));
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn;
}};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersion("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersion("1.9b") || (goog.userAgent.IE && goog.userAgent.isVersion("8") || (goog.userAgent.OPERA && 
goog.userAgent.isVersion("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersion("528"))), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersion("8") || goog.userAgent.IE && !goog.userAgent.isVersion("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || (!!(goog.global["document"] && (document.documentElement && "ontouchstart" in document.documentElement)) || !!(goog.global["navigator"] && goog.global["navigator"]["msMaxTouchPoints"]))};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target;
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.defaultPrevented = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
  delete this.propagationStopped_;
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && (goog.userAgent.MAC && this.ctrlKey));
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventLike");
goog.events.Listenable = function() {
};
goog.events.Listenable.USE_LISTENABLE_INTERFACE = false;
goog.events.Listenable.IMPLEMENTED_BY_PROP_ = "__closure_listenable";
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP_] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return!!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP_]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function() {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
};
goog.events.Listener.ENABLE_MONITORING = false;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.isFunction(listener)) {
    this.isFunctionListener_ = true;
  } else {
    if (listener && (listener.handleEvent && goog.isFunction(listener.handleEvent))) {
      this.isFunctionListener_ = false;
    } else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = goog.events.ListenableKey.reserveKey();
  this.removed = false;
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if (this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject);
  }
  return this.listener.handleEvent.call(this.listener, eventObject);
};
goog.provide("goog.events");
goog.provide("goog.events.Key");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listenable");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.Key;
goog.events.ListenableType;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  var listenableKey;
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    listenableKey = src.listen((type), goog.events.wrapListener_(listener), opt_capt, opt_handler);
  } else {
    listenableKey = goog.events.listen_((src), type, listener, false, opt_capt, opt_handler);
  }
  var key = listenableKey.key;
  goog.events.listeners_[key] = listenableKey;
  return key;
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  var map = goog.events.listenerTree_;
  if (!(type in map)) {
    map[type] = {count_:0, remaining_:0};
  }
  map = map[type];
  if (!(capture in map)) {
    map[capture] = {count_:0, remaining_:0};
    map.count_++;
  }
  map = map[capture];
  var srcUid = goog.getUid(src);
  var listenerArray, listenerObj;
  map.remaining_++;
  if (!map[srcUid]) {
    listenerArray = map[srcUid] = [];
    map.count_++;
  } else {
    listenerArray = map[srcUid];
    for (var i = 0;i < listenerArray.length;i++) {
      listenerObj = listenerArray[i];
      if (listenerObj.listener == listener && listenerObj.handler == opt_handler) {
        if (listenerObj.removed) {
          break;
        }
        if (!callOnce) {
          listenerArray[i].callOnce = false;
        }
        return listenerArray[i];
      }
    }
  }
  var proxy = goog.events.getProxy();
  listenerObj = new goog.events.Listener;
  listenerObj.init(listener, proxy, src, type, capture, opt_handler);
  listenerObj.callOnce = callOnce;
  proxy.src = src;
  proxy.listener = listenerObj;
  listenerArray.push(listenerObj);
  if (!goog.events.sources_[srcUid]) {
    goog.events.sources_[srcUid] = [];
  }
  goog.events.sources_[srcUid].push(listenerObj);
  if (src.addEventListener) {
    if (src == goog.global || !src.customEvent_) {
      src.addEventListener(type, proxy, capture);
    }
  } else {
    src.attachEvent(goog.events.getOnString_(type), proxy);
  }
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  var listenableKey;
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    listenableKey = src.listenOnce((type), goog.events.wrapListener_(listener), opt_capt, opt_handler);
  } else {
    listenableKey = goog.events.listen_((src), type, listener, true, opt_capt, opt_handler);
  }
  var key = listenableKey.key;
  goog.events.listeners_[key] = listenableKey;
  return key;
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), goog.events.wrapListener_(listener), opt_capt, opt_handler);
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if (!listenerArray) {
    return false;
  }
  for (var i = 0;i < listenerArray.length;i++) {
    if (listenerArray[i].listener == listener && (listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler)) {
      return goog.events.unlistenByKey(listenerArray[i].key);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  var listener = goog.events.listeners_[key];
  if (!listener) {
    return false;
  }
  if (listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if (src.removeEventListener) {
    if (src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture);
    }
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  var srcUid = goog.getUid(src);
  if (goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if (sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid];
    }
  }
  listener.removed = true;
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if (listenerArray) {
    listenerArray.needsCleanup_ = true;
    goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  }
  delete goog.events.listeners_[key];
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.cleanUp = function(listenableKey) {
  delete goog.events.listeners_[listenableKey.key];
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if (!listenerArray.locked_) {
    if (listenerArray.needsCleanup_) {
      for (var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if (listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue;
        }
        if (oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex];
        }
        newIndex++;
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if (newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if (goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--;
        }
        if (goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type];
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  if (!noObj) {
    if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && (opt_obj && goog.events.Listenable.isImplementedBy(opt_obj))) {
      return opt_obj.removeAllListeners(opt_type);
    }
    var srcUid = goog.getUid((opt_obj));
    if (goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for (var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if (noType || opt_type == listener.type) {
          goog.events.unlistenByKey(listener.key);
          count++;
        }
      }
    }
  } else {
    goog.object.forEach(goog.events.listeners_, function(listener, key) {
      goog.events.unlistenByKey(key);
      count++;
    });
  }
  return count;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    return goog.events.getListeners_(obj, type, capture) || [];
  }
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if (type in map) {
    map = map[type];
    if (capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if (map[objUid]) {
        return map[objUid];
      }
    }
  }
  return null;
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener((type), goog.events.wrapListener_(listener), capture, opt_handler);
  }
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;i++) {
      if (!listenerArray[i].removed && (listenerArray[i].listener == listener && (listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler))) {
        return listenerArray[i];
      }
    }
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if (listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if (hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && (!!map[opt_capture] && objUid in map[opt_capture]);
    } else {
      if (!(hasType || hasCapture)) {
        return true;
      } else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture;
        });
      }
    }
  }
  return false;
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  var map = goog.events.listenerTree_;
  if (type in map) {
    map = map[type];
    if (capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject);
    }
  }
  return true;
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if (map[objUid]) {
    var remaining = --map.remaining_;
    var listenerArray = map[objUid];
    if (!listenerArray.locked_) {
      listenerArray.locked_ = 1;
    } else {
      listenerArray.locked_++;
    }
    try {
      var length = listenerArray.length;
      for (var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if (listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false;
        }
      }
    } finally {
      map.remaining_ = Math.max(remaining, map.remaining_);
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray);
    }
  }
  return Boolean(retval);
};
goog.events.fireListener = function(listener, eventObject) {
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener.key);
  }
  return listener.handleEvent(eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_);
};
goog.events.dispatchEvent = function(src, e) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    return src.dispatchEvent(e);
  }
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if (!(type in map)) {
    return true;
  }
  if (goog.isString(e)) {
    e = new goog.events.Event(e, src);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event((type), src);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || src;
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if (hasCapture) {
    ancestors = [];
    for (var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent);
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for (var i = ancestors.length - 1;!e.propagationStopped_ && (i >= 0 && targetsMap.remaining_);i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false;
    }
  }
  var hasBubble = false in map;
  if (hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if (hasCapture) {
      for (var i = 0;!e.propagationStopped_ && (i < ancestors.length && targetsMap.remaining_);i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false;
      }
    } else {
      for (var current = src;!e.propagationStopped_ && (current && targetsMap.remaining_);current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false;
      }
    }
  }
  return Boolean(rv);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if (!(type in map)) {
    return true;
  }
  map = map[type];
  var retval, targetsMap;
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var hasCapture = true in map;
    var hasBubble = false in map;
    if (hasCapture) {
      if (goog.events.isMarkedIeEvent_(ieEvent)) {
        return true;
      }
      goog.events.markIeEvent_(ieEvent);
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, (this));
    retval = true;
    try {
      if (hasCapture) {
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && (i >= 0 && targetsMap.remaining_);i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt);
        }
        if (hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for (var i = 0;!evt.propagationStopped_ && (i < ancestors.length && targetsMap.remaining_);i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt);
          }
        }
      } else {
        retval = goog.events.fireListener(listener, evt);
      }
    } finally {
      if (ancestors) {
        ancestors.length = 0;
      }
    }
    return retval;
  }
  var be = new goog.events.BrowserEvent(opt_evt, (this));
  retval = goog.events.fireListener(listener, be);
  return retval;
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener_ = function(listener) {
  if (goog.isFunction(listener)) {
    return listener;
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_] || (listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
    return listener.handleEvent(e);
  });
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    this.eventTargetListeners_ = {};
    this.reallyDisposed_ = false;
    this.actualEventTarget_ = this;
  }
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
  goog.events.Listenable.addImplementation(goog.events.EventTarget);
}
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    if (this.reallyDisposed_) {
      return true;
    }
    var ancestorsTree, ancestor = this.getParentEventTarget();
    if (ancestor) {
      ancestorsTree = [];
      var ancestorCount = 1;
      for (;ancestor;ancestor = ancestor.getParentEventTarget()) {
        ancestorsTree.push(ancestor);
        goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
      }
    }
    return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
  } else {
    return goog.events.dispatchEvent(this, e);
  }
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    this.removeAllListeners();
    this.reallyDisposed_ = true;
  } else {
    goog.events.removeAll(this);
  }
  this.parentEventTarget_ = null;
};
if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
  goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
    return this.listenInternal_(type, listener, false, opt_useCapture, opt_listenerScope);
  };
  goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
    return this.listenInternal_(type, listener, true, opt_useCapture, opt_listenerScope);
  };
  goog.events.EventTarget.prototype.listenInternal_ = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
    goog.asserts.assert(!this.reallyDisposed_, "Can not listen on disposed object.");
    var listenerArray = this.eventTargetListeners_[type] || (this.eventTargetListeners_[type] = []);
    var listenerObj;
    var index = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
    if (index > -1) {
      listenerObj = listenerArray[index];
      if (!callOnce) {
        listenerObj.callOnce = false;
      }
      return listenerObj;
    }
    listenerObj = new goog.events.Listener;
    listenerObj.init(listener, null, this, type, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
    return listenerObj;
  };
  goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
    if (!(type in this.eventTargetListeners_)) {
      return false;
    }
    var listenerArray = this.eventTargetListeners_[type];
    var index = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
    if (index > -1) {
      var listenerObj = listenerArray[index];
      goog.events.cleanUp(listenerObj);
      listenerObj.removed = true;
      return goog.array.removeAt(listenerArray, index);
    }
    return false;
  };
  goog.events.EventTarget.prototype.unlistenByKey = function(key) {
    var type = key.type;
    if (!(type in this.eventTargetListeners_)) {
      return false;
    }
    var removed = goog.array.remove(this.eventTargetListeners_[type], key);
    if (removed) {
      goog.events.cleanUp(key);
      key.removed = true;
    }
    return removed;
  };
  goog.events.EventTarget.prototype.removeAllListeners = function(opt_type, opt_capture) {
    var count = 0;
    for (var type in this.eventTargetListeners_) {
      if (!opt_type || type == opt_type) {
        var listenerArray = this.eventTargetListeners_[type];
        for (var i = 0;i < listenerArray.length;i++) {
          ++count;
          goog.events.cleanUp(listenerArray[i]);
          listenerArray[i].removed = true;
        }
        listenerArray.length = 0;
      }
    }
    return count;
  };
  goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
    goog.asserts.assert(!this.reallyDisposed_, "Can not fire listeners after dispose() completed.");
    if (!(type in this.eventTargetListeners_)) {
      return true;
    }
    var rv = true;
    var listenerArray = goog.array.clone(this.eventTargetListeners_[type]);
    for (var i = 0;i < listenerArray.length;++i) {
      var listener = listenerArray[i];
      if (listener && (!listener.removed && listener.capture == capture)) {
        if (listener.callOnce) {
          this.unlistenByKey(listener);
        }
        rv = listener.handleEvent(eventObject) !== false && rv;
      }
    }
    return rv && eventObject.returnValue_ != false;
  };
  goog.events.EventTarget.prototype.getListeners = function(type, capture) {
    var listenerArray = this.eventTargetListeners_[type];
    var rv = [];
    if (listenerArray) {
      for (var i = 0;i < listenerArray.length;++i) {
        var listenerObj = listenerArray[i];
        if (listenerObj.capture == capture) {
          rv.push(listenerObj);
        }
      }
    }
    return rv;
  };
  goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
    var listenerArray = this.eventTargetListeners_[type];
    var i = -1;
    if (listenerArray) {
      i = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
    }
    return i > -1 ? listenerArray[i] : null;
  };
  goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    return goog.object.some(this.eventTargetListeners_, function(listenersArray, type) {
      for (var i = 0;i < listenersArray.length;++i) {
        if ((!hasType || listenersArray[i].type == opt_type) && (!hasCapture || listenersArray[i].capture == opt_capture)) {
          return true;
        }
      }
      return false;
    });
  };
  goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
    this.actualEventTarget_ = target;
  };
  goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
    var type = e.type || (e);
    if (goog.isString(e)) {
      e = new goog.events.Event(e, target);
    } else {
      if (!(e instanceof goog.events.Event)) {
        var oldEvent = e;
        e = new goog.events.Event(type, target);
        goog.object.extend(e, oldEvent);
      } else {
        e.target = e.target || target;
      }
    }
    var rv = true, currentTarget;
    if (opt_ancestorsTree) {
      for (var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
        currentTarget = e.currentTarget = opt_ancestorsTree[i];
        rv = currentTarget.fireListeners(type, true, e) && rv;
      }
    }
    if (!e.propagationStopped_) {
      currentTarget = e.currentTarget = target;
      rv = currentTarget.fireListeners(type, true, e) && rv;
      if (!e.propagationStopped_) {
        rv = currentTarget.fireListeners(type, false, e) && rv;
      }
    }
    if (opt_ancestorsTree) {
      for (i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
        currentTarget = e.currentTarget = opt_ancestorsTree[i];
        rv = currentTarget.fireListeners(type, false, e) && rv;
      }
    }
    return rv;
  };
  goog.events.EventTarget.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
    for (var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.listener == listener && (listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope)) {
        return i;
      }
    }
    return-1;
  };
}
;goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if (this.timer_ && this.enabled) {
    this.stop();
    this.start();
  } else {
    if (this.timer_) {
      this.stop();
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return;
    }
    this.dispatchTick();
    if (this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now();
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if (!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now();
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if (this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null;
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    if (opt_handler) {
      listener = goog.bind(listener, opt_handler);
    }
  } else {
    if (listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  if (opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1;
  } else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      return f.call(opt_obj, val, undefined, iterator);
    }
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if (i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      } else {
        i++;
        return this.next();
      }
    }
  };
  return newIter;
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while (true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if (val1 != val2) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    } else {
      if (b1 && !b2) {
        return false;
      }
      if (!b2) {
        try {
          val2 = iterable2.next();
          return false;
        } catch (ex1) {
          if (ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true;
        }
      }
    }
  }
  return false;
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if (opt_values) {
    this.addAll(opt_values);
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if (type == "object" && val || type == "function") {
    return "o" + goog.getUid((val));
  } else {
    return type.substr(0, 1) + val;
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount();
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element);
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.add(values[i]);
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.remove(values[i]);
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear();
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty();
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this);
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for (var i = 0;i < values.length;i++) {
    var value = values[i];
    if (this.contains(value)) {
      result.add(value);
    }
  }
  return result;
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result;
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues();
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this);
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col);
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if (this.getCount() > colCount) {
    return false;
  }
  if (!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col);
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value);
  });
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false);
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if (goog.userAgent.WEBKIT && !goog.userAgent.isVersion("535.3")) {
    retVal = !retVal;
  }
  target.onerror = function(message, url, line) {
    if (oldErrorHandler) {
      oldErrorHandler(message, url, line);
    }
    logFunc({message:message, fileName:url, line:line});
    return retVal;
  };
};
goog.debug.expose = function(obj, opt_showFn) {
  if (typeof obj == "undefined") {
    return "undefined";
  }
  if (obj == null) {
    return "NULL";
  }
  var str = [];
  for (var x in obj) {
    if (!opt_showFn && goog.isFunction(obj[x])) {
      continue;
    }
    var s = x + " \x3d ";
    try {
      s += obj[x];
    } catch (e) {
      s += "*** " + e + " ***";
    }
    str.push(s);
  }
  return str.join("\n");
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space);
    };
    try {
      if (!goog.isDef(obj)) {
        str.push("undefined");
      } else {
        if (goog.isNull(obj)) {
          str.push("NULL");
        } else {
          if (goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"');
          } else {
            if (goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)));
            } else {
              if (goog.isObject(obj)) {
                if (previous.contains(obj)) {
                  str.push("*** reference loop detected ***");
                } else {
                  previous.add(obj);
                  str.push("{");
                  for (var x in obj) {
                    if (!opt_showFn && goog.isFunction(obj[x])) {
                      continue;
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace);
                  }
                  str.push("\n" + space + "}");
                }
              } else {
                str.push(obj);
              }
            }
          }
        }
      }
    } catch (e) {
      str.push("*** " + e + " ***");
    }
  };
  helper(obj, "");
  return str.join("");
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for (var i = 0;i < arr.length;i++) {
    if (goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]));
    } else {
      str.push(arr[i]);
    }
  }
  return "[ " + str.join(", ") + " ]";
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: \x3ca href\x3d"view-source:' + e.fileName + '" target\x3d"_new"\x3e' + e.fileName + "\x3c/a\x3e\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-\x3e ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-\x3e ");
    return error;
  } catch (e2) {
    return "Exception trying to expose exception! You win, we lose. " + e2;
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if (goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"};
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || (err.line || "Not available");
  } catch (e) {
    lineNumber = "Not available";
    threwError = true;
  }
  try {
    fileName = err.fileName || (err.filename || (err.sourceURL || (goog.global["$googDebugFname"] || href)));
  } catch (e) {
    fileName = "Not available";
    threwError = true;
  }
  if (threwError || (!err.lineNumber || (!err.fileName || !err.stack))) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"};
  }
  return err;
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if (!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller);
  }
  if (opt_message) {
    var x = 0;
    while (error["message" + x]) {
      ++x;
    }
    error["message" + x] = String(opt_message);
  }
  return error;
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while (fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller;
    } catch (e) {
      sb.push("[exception trying to get caller]\n");
      break;
    }
    depth++;
    if (depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break;
    }
  }
  if (opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]");
  } else {
    sb.push("[end]");
  }
  return sb.join("");
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, []);
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if (goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]");
  } else {
    if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for (var i = 0;i < args.length;i++) {
        if (i > 0) {
          sb.push(", ");
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break;
        }
        if (argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "...";
        }
        sb.push(argDesc);
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));
      } catch (e) {
        sb.push("[exception trying to get caller]\n");
      }
    } else {
      if (fn) {
        sb.push("[...long stack...]");
      } else {
        sb.push("[end]");
      }
    }
  }
  return sb.join("");
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver;
};
goog.debug.getFunctionName = function(fn) {
  if (goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn];
  }
  if (goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if (name) {
      goog.debug.fnNameCache_[fn] = name;
      return name;
    }
  }
  var functionSource = String(fn);
  if (!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if (matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method;
    } else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]";
    }
  }
  return goog.debug.fnNameCache_[functionSource];
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]");
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if (goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++;
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_;
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_;
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_;
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception;
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_;
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text;
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName;
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level;
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_;
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg;
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_;
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time;
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_;
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear();
};
goog.debug.LogBuffer.getInstance = function() {
  if (!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer;
  }
  return goog.debug.LogBuffer.instance_;
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if (this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret;
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName);
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0;
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false;
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if (!buffer[0]) {
    return;
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func((buffer[i]));
  } while (i != curIndex);
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name;
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if (!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_;
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value;
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name;
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for (var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  if (value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value];
  }
  for (var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if (level.value <= value) {
      return level;
    }
  }
  return null;
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name);
};
goog.debug.Logger.logToProfilers = function(msg) {
  if (goog.global["console"]) {
    if (goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg);
    } else {
      if (goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg);
      }
    }
  }
  if (goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg);
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_;
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    if (!this.handlers_) {
      this.handlers_ = [];
    }
    this.handlers_.push(handler);
  } else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler);
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler);
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_;
};
goog.debug.Logger.prototype.getChildren = function() {
  if (!this.children_) {
    this.children_ = {};
  }
  return this.children_;
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level;
  } else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level;
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if (!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_;
  }
  if (this.level_) {
    return this.level_;
  }
  if (this.parent_) {
    return this.parent_.getEffectiveLevel();
  }
  goog.asserts.fail("Root logger has no level set.");
  return null;
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value;
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if (this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception));
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if (goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  } else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_);
  }
  if (opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller));
  }
  return logRecord;
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception);
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception);
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception);
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception);
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if (this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord);
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while (target) {
      target.callPublish_(logRecord);
      target = target.getParent();
    }
  } else {
    for (var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if (this.handlers_) {
    for (var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent;
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger;
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if (!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG);
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_;
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return(goog.debug.LogManager.rootLogger_);
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name);
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")");
  };
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger);
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger;
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if (/^\s*$/.test(s)) {
    return false;
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""));
};
goog.json.parse = function(s) {
  var o = String(s);
  if (goog.json.isValid_(o)) {
    try {
      return(eval("(" + o + ")"));
    } catch (ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return(eval("(" + s + ")"));
};
goog.json.Replacer;
goog.json.Reviver;
goog.json.serialize = function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object);
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer;
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("");
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_((object), sb);
      break;
    case "number":
      this.serializeNumber_((object), sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if (object == null) {
        sb.push("null");
        break;
      }
      if (goog.isArray(object)) {
        this.serializeArray((object), sb);
        break;
      }
      this.serializeObject_((object), sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);;
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if (c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c];
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if (cc < 16) {
      rv += "000";
    } else {
      if (cc < 256) {
        rv += "00";
      } else {
        if (cc < 4096) {
          rv += "0";
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16);
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null");
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for (var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serialize_(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ",";
  }
  sb.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if (typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ",";
      }
    }
  }
  sb.push("}");
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return "No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return "Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return "File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return "Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return "Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return "An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return "Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return "Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return "Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return "The resource is not available offline";
    default:
      return "Unrecognized error code";
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false;
  }
};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory;
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_();
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_();
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance();
};
goog.net.XmlHttp.ASSUME_NATIVE_XHR = false;
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions();
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory((factory), (optionsFactory)));
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory;
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this);
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if (progId) {
    return new ActiveXObject(progId);
  } else {
    return new XMLHttpRequest;
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if (progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;
  }
  return options;
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR) {
    return "";
  }
  if (!this.ieProgId_ && (typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined")) {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for (var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate;
      } catch (e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return(this.ieProgId_);
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && (pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "\x26", key, "\x3d", goog.string.urlEncode(value)]);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || (followingChar == goog.uri.utils.CharCode_.EQUAL || (followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH))) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if (opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback);
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if (opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval);
  }
  if (opt_withCredentials) {
    x.setWithCredentials(opt_withCredentials);
  }
  x.send(url, opt_method, opt_content, opt_headers);
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while (instances.length) {
    instances.pop().dispose();
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo);
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_;
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type;
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials;
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_;
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if (this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false;
  } catch (err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return;
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if (opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value);
    });
  }
  var contentIsFormData = goog.global["FormData"] && content instanceof goog.global["FormData"];
  if (method == "POST" && (!headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER) && !contentIsFormData)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value);
  }, this);
  if (this.responseType_) {
    this.xhr_.responseType = this.responseType_;
  }
  if (goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_;
  }
  try {
    if (this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null;
    }
    if (this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_);
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false;
  } catch (err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if (typeof goog == "undefined") {
  } else {
    if (this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT);
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if (this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_();
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if (!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR);
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if (this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_();
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if (this.xhr_) {
    if (this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false;
    }
    this.cleanUpXhr_(true);
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this);
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if (!this.inOpen_ && (!this.inSend_ && !this.inAbort_)) {
    this.onReadyStateChangeEntryPoint_();
  } else {
    this.onReadyStateChangeHelper_();
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_();
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if (!this.active_) {
    return;
  }
  if (typeof goog == "undefined") {
  } else {
    if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && (this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2)) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"));
    } else {
      if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return;
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if (this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if (this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS);
          } else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_();
          }
        } finally {
          this.cleanUpXhr_();
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if (this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if (this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null;
    }
    if (!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY);
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange;
    } catch (e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message);
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_;
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_();
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? (this.xhr_.readyState) : goog.net.XmlHttp.ReadyState.UNINITIALIZED;
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;
  } catch (e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1;
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : "";
  } catch (e) {
    this.logger_.fine("Can not get status: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_);
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : "";
  } catch (e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getResponseBody = function() {
  try {
    if (this.xhr_ && "responseBody" in this.xhr_) {
      return this.xhr_["responseBody"];
    }
  } catch (e) {
    this.logger_.fine("Can not get responseBody: " + e.message);
  }
  return null;
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null;
  } catch (e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if (!this.xhr_) {
    return undefined;
  }
  var responseText = this.xhr_.responseText;
  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length);
  }
  return goog.json.parse(responseText);
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if (!this.xhr_) {
      return null;
    }
    if ("response" in this.xhr_) {
      return this.xhr_.response;
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if ("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer;
        }
      ;
    }
    this.logger_.severe("Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null;
  } catch (e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined;
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_;
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_);
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]";
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
});
goog.provide("floor16.xhr");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.net.XhrIo");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("goog.events");
goog.require("goog.events");
goog.require("cljs.reader");
goog.require("cljs.reader");
floor16.xhr.edn__GT_map = function edn__GT_map(t) {
  if (cljs.core.truth_(function() {
    var and__3391__auto__ = t;
    if (cljs.core.truth_(and__3391__auto__)) {
      return!cljs.core.empty_QMARK_.call(null, t);
    } else {
      return and__3391__auto__;
    }
  }())) {
    return cljs.reader.read_string.call(null, t);
  } else {
    return null;
  }
};
floor16.xhr.map__GT_edn = function map__GT_edn(m) {
  if (cljs.core.truth_(m)) {
    return cljs.core.pr_str.call(null, m);
  } else {
    return null;
  }
};
floor16.xhr.url_encode = function url_encode(string) {
  var G__14067 = string;
  var G__14067__$1 = G__14067 == null ? null : [cljs.core.str(G__14067)].join("");
  var G__14067__$2 = G__14067__$1 == null ? null : encodeURIComponent(G__14067__$1);
  var G__14067__$3 = G__14067__$2 == null ? null : G__14067__$2.replace("+", "%20");
  return G__14067__$3;
};
floor16.xhr.url_decode = function url_decode(string) {
  var G__14069 = string;
  var G__14069__$1 = G__14069 == null ? null : [cljs.core.str(G__14069)].join("");
  var G__14069__$2 = G__14069__$1 == null ? null : decodeURIComponent(G__14069__$1);
  return G__14069__$2;
};
floor16.xhr.map__GT_query = function map__GT_query(m) {
  var G__14073 = cljs.core.seq.call(null, m);
  var G__14073__$1 = G__14073 == null ? null : cljs.core.sort.call(null, G__14073);
  var G__14073__$2 = G__14073__$1 == null ? null : cljs.core.map.call(null, function(G__14073, G__14073__$1) {
    return function(p__14074) {
      var vec__14075 = p__14074;
      var k = cljs.core.nth.call(null, vec__14075, 0, null);
      var v = cljs.core.nth.call(null, vec__14075, 1, null);
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [floor16.xhr.url_encode.call(null, cljs.core.name.call(null, k)), "\x3d", floor16.xhr.url_encode.call(null, [cljs.core.str(v)].join(""))], null);
    };
  }(G__14073, G__14073__$1), G__14073__$1);
  var G__14073__$3 = G__14073__$2 == null ? null : cljs.core.interpose.call(null, "\x26", G__14073__$2);
  var G__14073__$4 = G__14073__$3 == null ? null : cljs.core.flatten.call(null, G__14073__$3);
  var G__14073__$5 = G__14073__$4 == null ? null : cljs.core.apply.call(null, cljs.core.str, G__14073__$4);
  return G__14073__$5;
};
floor16.xhr.split_param = function split_param(param) {
  return cljs.core.take.call(null, 2, cljs.core.concat.call(null, clojure.string.split.call(null, param, /=/), cljs.core.repeat.call(null, "")));
};
floor16.xhr.query__GT_map = function query__GT_map(qstr) {
  if (cljs.core.truth_(qstr)) {
    var G__14077 = clojure.string.split.call(null, qstr, /&/);
    var G__14077__$1 = G__14077 == null ? null : cljs.core.seq.call(null, G__14077);
    var G__14077__$2 = G__14077__$1 == null ? null : cljs.core.mapcat.call(null, floor16.xhr.split_param, G__14077__$1);
    var G__14077__$3 = G__14077__$2 == null ? null : cljs.core.map.call(null, floor16.xhr.url_decode, G__14077__$2);
    var G__14077__$4 = G__14077__$3 == null ? null : cljs.core.apply.call(null, cljs.core.hash_map, G__14077__$3);
    return G__14077__$4;
  } else {
    return null;
  }
};
floor16.xhr.meths = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "get", "get", 1014006472), "GET", new cljs.core.Keyword(null, "put", "put", 1014015617), "PUT", new cljs.core.Keyword(null, "post", "post", 1017351186), "POST", new cljs.core.Keyword(null, "delete", "delete", 3973413149), "DELETE"], null);
floor16.xhr.med_types = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "edn", "edn", 1014004513), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 1125876963), "application/edn", new cljs.core.Keyword(null, "to-map-encoder", "to-map-encoder", 4561511627), floor16.xhr.edn__GT_map, new cljs.core.Keyword(null, "from-map-encoder", "from-map-encoder", 2908479354), floor16.xhr.map__GT_edn], null), new cljs.core.Keyword(null, "url-encode", 
"url-encode", 3129387942), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 1125876963), "application/x-www-form-urlencoded", new cljs.core.Keyword(null, "to-map-encoder", "to-map-encoder", 4561511627), floor16.xhr.query__GT_map, new cljs.core.Keyword(null, "from-map-encoder", "from-map-encoder", 2908479354), floor16.xhr.map__GT_query], null)], null);
floor16.xhr.heads = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "accept", "accept", 3885410426), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 1125876963), "Accept", new cljs.core.Keyword(null, "decoder", "decoder", 2556338102), function(p1__14078_SHARP_) {
  return cljs.core.get_in.call(null, floor16.xhr.med_types, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__14078_SHARP_, new cljs.core.Keyword(null, "value", "value", 1125876963)], null));
}], null), new cljs.core.Keyword(null, "content-type", "content-type", 1799574400), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 1125876963), "Content-Type", new cljs.core.Keyword(null, "decoder", "decoder", 2556338102), function(p1__14079_SHARP_) {
  return cljs.core.get_in.call(null, floor16.xhr.med_types, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__14079_SHARP_, new cljs.core.Keyword(null, "value", "value", 1125876963)], null));
}], null), new cljs.core.Keyword(null, "authorization", "authorization", 3923301355), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 1125876963), "Authorization", new cljs.core.Keyword(null, "decoder", "decoder", 2556338102), cljs.core.identity], null)], null);
floor16.xhr.format_headers = function format_headers(headers) {
  return cljs.core.clj__GT_js.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__14082) {
    var vec__14083 = p__14082;
    var k = cljs.core.nth.call(null, vec__14083, 0, null);
    var v = cljs.core.nth.call(null, vec__14083, 1, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.get_in.call(null, floor16.xhr.heads, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.Keyword(null, "value", "value", 1125876963)], null)), cljs.core.get_in.call(null, floor16.xhr.heads, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.Keyword(null, "decoder", "decoder", 2556338102)], null)).call(null, 
    v)], null);
  }, headers)));
};
floor16.xhr.pre_process = function pre_process(p__14084) {
  var map__14087 = p__14084;
  var map__14087__$1 = cljs.core.seq_QMARK_.call(null, map__14087) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14087) : map__14087;
  var request = map__14087__$1;
  var headers = cljs.core.get.call(null, map__14087__$1, new cljs.core.Keyword(null, "headers", "headers", 1809212152));
  var body = cljs.core.get.call(null, map__14087__$1, new cljs.core.Keyword(null, "body", "body", 1016933652));
  var method = cljs.core.get.call(null, map__14087__$1, new cljs.core.Keyword(null, "method", "method", 4231316563));
  var url = cljs.core.get.call(null, map__14087__$1, new cljs.core.Keyword(null, "url", "url", 1014020321));
  var content_type = cljs.core.get.call(null, headers, new cljs.core.Keyword(null, "content-type", "content-type", 1799574400), new cljs.core.Keyword(null, "edn", "edn", 1014004513));
  var map__14088 = content_type.call(null, floor16.xhr.med_types);
  var map__14088__$1 = cljs.core.seq_QMARK_.call(null, map__14088) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14088) : map__14088;
  var body_encoder = cljs.core.get.call(null, map__14088__$1, new cljs.core.Keyword(null, "from-map-encoder", "from-map-encoder", 2908479354));
  var accept = cljs.core.get.call(null, headers, new cljs.core.Keyword(null, "accept", "accept", 3885410426), new cljs.core.Keyword(null, "edn", "edn", 1014004513));
  var headers__$1 = floor16.xhr.format_headers.call(null, cljs.core.assoc.call(null, cljs.core.assoc.call(null, headers, new cljs.core.Keyword(null, "content-type", "content-type", 1799574400), content_type), new cljs.core.Keyword(null, "accept", "accept", 3885410426), accept));
  return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "method", "method", 4231316563), floor16.xhr.meths.call(null, method), new cljs.core.Keyword(null, "url", "url", 1014020321), url, new cljs.core.Keyword(null, "body", "body", 1016933652), cljs.core.truth_(body) ? body_encoder.call(null, body) : null, new cljs.core.Keyword(null, "headers", "headers", 1809212152), headers__$1], null);
};
floor16.xhr.create_response = function create_response(xhr) {
  var raw_body = xhr.getResponseText();
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", 4416389988), xhr.getStatus(), new cljs.core.Keyword(null, "headers", "headers", 1809212152), xhr.getAllResponseHeaders(), new cljs.core.Keyword(null, "body", "body", 1016933652), cljs.core.truth_(function() {
    var and__3391__auto__ = raw_body;
    if (cljs.core.truth_(and__3391__auto__)) {
      return!cljs.core.empty_QMARK_.call(null, raw_body);
    } else {
      return and__3391__auto__;
    }
  }()) ? cljs.reader.read_string.call(null, raw_body) : null], null);
};
floor16.xhr.do_request = function do_request(request, on_complete) {
  var xhr = new goog.net.XhrIo;
  var map__14090 = floor16.xhr.pre_process.call(null, request);
  var map__14090__$1 = cljs.core.seq_QMARK_.call(null, map__14090) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14090) : map__14090;
  var headers = cljs.core.get.call(null, map__14090__$1, new cljs.core.Keyword(null, "headers", "headers", 1809212152));
  var body = cljs.core.get.call(null, map__14090__$1, new cljs.core.Keyword(null, "body", "body", 1016933652));
  var method = cljs.core.get.call(null, map__14090__$1, new cljs.core.Keyword(null, "method", "method", 4231316563));
  var url = cljs.core.get.call(null, map__14090__$1, new cljs.core.Keyword(null, "url", "url", 1014020321));
  goog.events.listen(xhr, goog.net.EventType.COMPLETE, function(e) {
    return on_complete.call(null, floor16.xhr.create_response.call(null, xhr));
  });
  return xhr.send(url, method, body, headers);
};
floor16.xhr.accept = function accept(request, t) {
  return cljs.core.assoc_in.call(null, request, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", 1809212152), new cljs.core.Keyword(null, "accept", "accept", 3885410426)], null), t);
};
floor16.xhr.content_type = function content_type(request, t) {
  return cljs.core.assoc_in.call(null, request, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", 1809212152), new cljs.core.Keyword(null, "content-type", "content-type", 1799574400)], null), t);
};
floor16.xhr.bearer_authorization = function bearer_authorization(request, token) {
  return cljs.core.assoc_in.call(null, request, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", 1809212152), new cljs.core.Keyword(null, "authorization", "authorization", 3923301355)], null), [cljs.core.str("Bearer "), cljs.core.str(token)].join(""));
};
goog.provide("goog.dom.vendor");
goog.require("goog.userAgent");
goog.dom.vendor.getVendorJsPrefix = function() {
  if (goog.userAgent.WEBKIT) {
    return "Webkit";
  } else {
    if (goog.userAgent.GECKO) {
      return "Moz";
    } else {
      if (goog.userAgent.IE) {
        return "ms";
      } else {
        if (goog.userAgent.OPERA) {
          return "O";
        }
      }
    }
  }
  return null;
};
goog.dom.vendor.getVendorPrefix = function() {
  if (goog.userAgent.WEBKIT) {
    return "-webkit";
  } else {
    if (goog.userAgent.GECKO) {
      return "-moz";
    } else {
      if (goog.userAgent.IE) {
        return "-ms";
      } else {
        if (goog.userAgent.OPERA) {
          return "-o";
        }
      }
    }
  }
  return null;
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj13600 = {};
  return obj13600;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3391__auto__ = port;
    if (and__3391__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4030__auto__ = port == null ? null : port;
    return function() {
      var or__3403__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj13602 = {};
  return obj13602;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if (function() {
    var and__3391__auto__ = port;
    if (and__3391__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler);
  } else {
    var x__4030__auto__ = port == null ? null : port;
    return function() {
      var or__3403__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj13604 = {};
  return obj13604;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3391__auto__ = chan;
    if (and__3391__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4030__auto__ = chan == null ? null : chan;
    return function() {
      var or__3403__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj13606 = {};
  return obj13606;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3391__auto__ = h;
    if (and__3391__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4030__auto__ = h == null ? null : h;
    return function() {
      var or__3403__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3391__auto__ = h;
    if (and__3391__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4030__auto__ = h == null ? null : h;
    return function() {
      var or__3403__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj13608 = {};
  return obj13608;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3391__auto__ = b;
    if (and__3391__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4030__auto__ = b == null ? null : b;
    return function() {
      var or__3403__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3391__auto__ = b;
    if (and__3391__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4030__auto__ = b == null ? null : b;
    return function() {
      var or__3403__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if (function() {
    var and__3391__auto__ = b;
    if (and__3391__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm);
  } else {
    var x__4030__auto__ = b == null ? null : b;
    return function() {
      var or__3403__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj13610 = {};
  return obj13610;
}();
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__13622 = cnt + 1;
      cnt = G__13622;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4251__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4251__auto__) {
      var v_13623 = this$.pop();
      if (keep_QMARK_.call(null, v_13623)) {
        this$.unshift(v_13623);
      } else {
      }
      var G__13624 = x + 1;
      x = G__13624;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", -1640531465, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, this$__$1))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't add to a full buffer"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -1337857039, null), new cljs.core.Symbol(null, "this", "this", -1636972457, null)))))].join(""));
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    return null;
  } else {
    return self__.buf.unshift(itm);
  }
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_13611 = 0;
  while (true) {
    var m_13612 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_13612 == null) {
    } else {
      m_13612.call(null);
      if (count_13611 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__13613 = count_13611 + 1;
        count_13611 = G__13613;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
if (typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null);
  };
} else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3391__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (and__3391__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3391__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if (typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0);
    } else {
      if (typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || (goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1")), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || (goog.userAgent.OPERA || goog.userAgent.WEBKIT), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className;
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || [];
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var expectedCount = classes.length + args.length;
  goog.dom.classes.add_(classes, args);
  goog.dom.classes.set(element, classes.join(" "));
  return classes.length == expectedCount;
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var newClasses = goog.dom.classes.getDifference_(classes, args);
  goog.dom.classes.set(element, newClasses.join(" "));
  return newClasses.length == classes.length - args.length;
};
goog.dom.classes.add_ = function(classes, args) {
  for (var i = 0;i < args.length;i++) {
    if (!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
    }
  }
};
goog.dom.classes.getDifference_ = function(arr1, arr2) {
  return goog.array.filter(arr1, function(item) {
    return!goog.array.contains(arr2, item);
  });
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for (var i = 0;i < classes.length;i++) {
    if (classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true;
    }
  }
  if (removed) {
    classes.push(toClass);
    goog.dom.classes.set(element, classes.join(" "));
  }
  return removed;
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if (goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove);
  } else {
    if (goog.isArray(classesToRemove)) {
      classes = goog.dom.classes.getDifference_(classes, classesToRemove);
    }
  }
  if (goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd);
  } else {
    if (goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd);
    }
  }
  goog.dom.classes.set(element, classes.join(" "));
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className);
};
goog.dom.classes.enable = function(element, className, enabled) {
  if (enabled) {
    goog.dom.classes.add(element, className);
  } else {
    goog.dom.classes.remove(element, className);
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add;
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length1;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.standardDeviation = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return Math.sqrt(variance);
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  } else {
    if (parent.getElementsByClassName) {
      return parent.getElementsByClassName(className);
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || (goog.global || window);
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && (attributes && (attributes.name || attributes.type))) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes));
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat";
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    return element.parentElement;
  }
  var parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentMode(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(element, text) {
  if ("textContent" in element) {
    element.textContent = text;
  } else {
    if (element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while (element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild);
      }
      element.firstChild.data = text;
    } else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(String(text)));
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if (attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && (index >= 0 && index < 32768);
  }
  return false;
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || (goog.global.document || document);
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if (goog.isString(element)) {
    return this.document_.getElementById(element);
  } else {
    return element;
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat";
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left;
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for (var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x);
  }
  return box;
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left);
};
if (goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return "(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)";
  };
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other);
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if (goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left;
  } else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left;
  }
  return this;
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom);
};
goog.math.Box.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.top == b.top && (a.right == b.right && (a.bottom == b.bottom && a.left == b.left));
};
goog.math.Box.contains = function(box, other) {
  if (!box || !other) {
    return false;
  }
  if (other instanceof goog.math.Box) {
    return other.left >= box.left && (other.right <= box.right && (other.top >= box.top && other.bottom <= box.bottom));
  }
  return other.x >= box.left && (other.x <= box.right && (other.y >= box.top && other.y <= box.bottom));
};
goog.math.Box.relativePositionX = function(box, coord) {
  if (coord.x < box.left) {
    return coord.x - box.left;
  } else {
    if (coord.x > box.right) {
      return coord.x - box.right;
    }
  }
  return 0;
};
goog.math.Box.relativePositionY = function(box, coord) {
  if (coord.y < box.top) {
    return coord.y - box.top;
  } else {
    if (coord.y > box.bottom) {
      return coord.y - box.bottom;
    }
  }
  return 0;
};
goog.math.Box.distance = function(box, coord) {
  var x = goog.math.Box.relativePositionX(box, coord);
  var y = goog.math.Box.relativePositionY(box, coord);
  return Math.sqrt(x * x + y * y);
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && (b.left <= a.right && (a.top <= b.bottom && b.top <= a.bottom));
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && (b.left <= a.right + padding && (a.top <= b.bottom + padding && b.top <= a.bottom + padding));
};
goog.math.Box.prototype.ceil = function() {
  this.top = Math.ceil(this.top);
  this.right = Math.ceil(this.right);
  this.bottom = Math.ceil(this.bottom);
  this.left = Math.ceil(this.left);
  return this;
};
goog.math.Box.prototype.floor = function() {
  this.top = Math.floor(this.top);
  this.right = Math.floor(this.right);
  this.bottom = Math.floor(this.bottom);
  this.left = Math.floor(this.left);
  return this;
};
goog.math.Box.prototype.round = function() {
  this.top = Math.round(this.top);
  this.right = Math.round(this.right);
  this.bottom = Math.round(this.bottom);
  this.left = Math.round(this.left);
  return this;
};
goog.math.Box.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.right += tx.x;
    this.top += tx.y;
    this.bottom += tx.y;
  } else {
    this.left += tx;
    this.right += tx;
    if (goog.isNumber(opt_ty)) {
      this.top += opt_ty;
      this.bottom += opt_ty;
    }
  }
  return this;
};
goog.math.Box.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.right *= sx;
  this.top *= sy;
  this.bottom *= sy;
  return this;
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h;
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height);
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left);
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top);
};
if (goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return "(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)";
  };
}
goog.math.Rect.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.left == b.left && (a.width == b.width && (a.top == b.top && a.height == b.height));
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if (x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if (y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true;
    }
  }
  return false;
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if (x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if (y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0);
    }
  }
  return null;
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && (b.left <= a.left + a.width && (a.top <= b.top + b.height && b.top <= a.top + a.height));
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect);
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if (!intersection || (!intersection.height || !intersection.width)) {
    return[a.clone()];
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if (b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top;
  }
  if (bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top;
  }
  if (b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height));
  }
  if (br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height));
  }
  return result;
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect);
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top;
};
goog.math.Rect.boundingRect = function(a, b) {
  if (!a || !b) {
    return null;
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone;
};
goog.math.Rect.prototype.contains = function(another) {
  if (another instanceof goog.math.Rect) {
    return this.left <= another.left && (this.left + this.width >= another.left + another.width && (this.top <= another.top && this.top + this.height >= another.top + another.height));
  } else {
    return another.x >= this.left && (another.x <= this.left + this.width && (another.y >= this.top && another.y <= this.top + this.height));
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height);
};
goog.math.Rect.prototype.ceil = function() {
  this.left = Math.ceil(this.left);
  this.top = Math.ceil(this.top);
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Rect.prototype.floor = function() {
  this.left = Math.floor(this.left);
  this.top = Math.floor(this.top);
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Rect.prototype.round = function() {
  this.left = Math.round(this.left);
  this.top = Math.round(this.top);
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Rect.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.top += tx.y;
  } else {
    this.left += tx;
    if (goog.isNumber(opt_ty)) {
      this.top += opt_ty;
    }
  }
  return this;
};
goog.math.Rect.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.width *= sx;
  this.top *= sy;
  this.height *= sy;
  return this;
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.dom.vendor");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if (goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style);
  } else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element));
  }
};
goog.style.setStyle_ = function(element, value, style) {
  var propertyName = goog.style.getVendorJsStyleName_(element, style);
  if (propertyName) {
    element.style[propertyName] = value;
  }
};
goog.style.getVendorJsStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if (element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(style);
    if (element.style[prefixedStyle] !== undefined) {
      return prefixedStyle;
    }
  }
  return camelStyle;
};
goog.style.getVendorStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if (element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(style);
    if (element.style[prefixedStyle] !== undefined) {
      return goog.dom.vendor.getVendorPrefix() + "-" + style;
    }
  }
  return style;
};
goog.style.getStyle = function(element, property) {
  var styleValue = element.style[goog.string.toCamelCase(property)];
  if (typeof styleValue !== "undefined") {
    return styleValue;
  }
  return element.style[goog.style.getVendorJsStyleName_(element, property)] || "";
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if (doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if (styles) {
      return styles[property] || (styles.getPropertyValue(property) || "");
    }
  }
  return "";
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null;
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || (goog.style.getCascadedStyle(element, style) || element.style && element.style[style]);
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position");
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor");
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX");
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY");
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex");
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign");
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor");
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && ((goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9"));
  if (arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y;
  } else {
    x = arg1;
    y = opt_arg2;
  }
  el.style.left = goog.style.getPixelStyleValue_((x), buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_((y), buggyGeckoSubPixelPos);
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop);
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if (opt_node) {
    doc = goog.dom.getOwnerDocument(opt_node);
  } else {
    doc = goog.dom.getDocument();
  }
  if (goog.userAgent.IE && (!goog.userAgent.isDocumentMode(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode())) {
    return doc.body;
  }
  return doc.documentElement;
};
goog.style.getViewportPageOffset = function(doc) {
  var body = doc.body;
  var documentElement = doc.documentElement;
  var scrollLeft = body.scrollLeft || documentElement.scrollLeft;
  var scrollTop = body.scrollTop || documentElement.scrollTop;
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if (goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop;
  }
  return(rect);
};
goog.style.getOffsetParent = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isDocumentMode(8)) {
    return element.offsetParent;
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for (var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_((parent), "position");
    skipStatic = skipStatic && (positionStyle == "static" && (parent != doc.documentElement && parent != doc.body));
    if (!skipStatic && (parent.scrollWidth > parent.clientWidth || (parent.scrollHeight > parent.clientHeight || (positionStyle == "fixed" || (positionStyle == "absolute" || positionStyle == "relative"))))) {
      return(parent);
    }
  }
  return null;
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for (var el = element;el = goog.style.getOffsetParent(el);) {
    if ((!goog.userAgent.IE || el.clientWidth != 0) && ((!goog.userAgent.WEBKIT || (el.clientHeight != 0 || el != body)) && (el != body && (el != documentElement && goog.style.getStyle_(el, "overflow") != "visible")))) {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && (visibleRect.left >= 0 && (visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left)) ? visibleRect : null;
};
goog.style.getContainerOffsetToScrollInto = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  var scrollLeft = container.scrollLeft;
  var scrollTop = container.scrollTop;
  if (opt_center) {
    scrollLeft += relX - spaceX / 2;
    scrollTop += relY - spaceY / 2;
  } else {
    scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    scrollTop += Math.min(relY, Math.max(relY - spaceY, 0));
  }
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var offset = goog.style.getContainerOffsetToScrollInto(element, container, opt_center);
  container.scrollLeft = offset.x;
  container.scrollTop = offset.y;
};
goog.style.getClientLeftTop = function(el) {
  if (goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if (goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth;
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")));
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop);
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  goog.asserts.assertObject(el, "Parameter is required");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && (doc.getBoxObjectFor && (!el.getBoundingClientRect && (positionStyle == "absolute" && ((box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0)))));
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if (el == viewportElement) {
    return pos;
  }
  if (el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y;
  } else {
    if (doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY;
    } else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if (parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0;
        }
        if (goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break;
        }
        parent = parent.offsetParent;
      } while (parent && parent != el);
      if (goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop;
      }
      for (parent = el;(parent = goog.style.getOffsetParent(parent)) && (parent != doc.body && parent != viewportElement);) {
        pos.x -= parent.scrollLeft;
        if (!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop;
        }
      }
    }
  }
  return pos;
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x;
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y;
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y;
  } while (currentWin && (currentWin != relativeWin && ((currentEl = currentWin.frameElement) && (currentWin = currentWin.parent))));
  return position;
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if (origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if (goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll());
    }
    rect.left += pos.x;
    rect.top += pos.y;
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y);
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if (el.nodeType == goog.dom.NodeType.ELEMENT) {
    el = (el);
    if (el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top;
    } else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y;
    }
    if (goog.userAgent.GECKO && !goog.userAgent.isVersion(12)) {
      pos = goog.math.Coordinate.sum(pos, goog.style.getCssTranslation(el));
    }
  } else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if (el.targetTouches) {
      targetEvent = el.targetTouches[0];
    } else {
      if (isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0];
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY;
  }
  return pos;
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if (x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x;
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy);
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if (w instanceof goog.math.Size) {
    h = w.height;
    w = w.width;
  } else {
    if (opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h;
  }
  goog.style.setWidth(element, (w));
  goog.style.setHeight(element, (h));
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if (typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px";
  }
  return value;
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true);
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true);
};
goog.style.getSize = function(element) {
  if (goog.style.getStyle_(element, "display") != "none") {
    return goog.style.getSizeWithDisplay_(element);
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var size = goog.style.getSizeWithDisplay_(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return size;
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && (!offsetWidth && !offsetHeight);
  if ((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);
  }
  return new goog.math.Size(offsetWidth, offsetHeight);
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height);
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector));
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector);
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if ("opacity" in style) {
    result = style.opacity;
  } else {
    if ("MozOpacity" in style) {
      result = style.MozOpacity;
    } else {
      if ("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if (match) {
          result = String(match[1] / 100);
        }
      }
    }
  }
  return result == "" ? result : Number(result);
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if ("opacity" in style) {
    style.opacity = alpha;
  } else {
    if ("MozOpacity" in style) {
      style.MozOpacity = alpha;
    } else {
      if ("filter" in style) {
        if (alpha === "") {
          style.filter = "";
        } else {
          style.filter = "alpha(opacity\x3d" + alpha * 100 + ")";
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src\x3d"' + src + '", sizingMethod\x3d"crop")';
  } else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat";
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if ("filter" in style) {
    style.filter = "";
  } else {
    style.backgroundImage = "none";
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none";
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none";
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if (goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString);
  } else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if (!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body);
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet);
  }
  return styleSheet;
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || (styleSheet.owningElement || (styleSheet));
  goog.dom.removeNode(node);
};
goog.style.setStyles = function(element, stylesString) {
  if (goog.userAgent.IE) {
    element.cssText = stylesString;
  } else {
    element.innerHTML = stylesString;
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word";
  } else {
    if (goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap";
    } else {
      style.whiteSpace = "pre-wrap";
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if (goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline";
  } else {
    if (goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box";
    } else {
      style.display = "inline-block";
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return "rtl" == goog.style.getStyle_(el, "direction");
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if (goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none";
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on";
    }
  }
  return false;
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if (name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if (descendants) {
      for (var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value;
      }
    }
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if (descendants) {
        for (var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value);
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight);
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom;
    } else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "border-box");
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if (ieCurrentStyle && (goog.dom.getDomHelper(doc).isCss1CompatMode() && (ieCurrentStyle.width != "auto" && (ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing)))) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height);
  } else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom);
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    } else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "content-box");
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if (goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing;
  } else {
    if (goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing;
    } else {
      style.boxSizing = boxSizing;
    }
  }
  style.width = Math.max(size.width, 0) + "px";
  style.height = Math.max(size.height, 0) + "px";
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if (/^\d+px?$/.test(value)) {
    return parseInt(value, 10);
  } else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue;
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  var value = goog.style.getCascadedStyle(element, propName);
  return value ? goog.style.getIePixelValue_(element, value, "left", "pixelLeft") : 0;
};
goog.style.getBox_ = function(element, stylePrefix) {
  if (goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = (goog.style.getComputedStyle(element, stylePrefix + "Left"));
    var right = (goog.style.getComputedStyle(element, stylePrefix + "Right"));
    var top = (goog.style.getComputedStyle(element, stylePrefix + "Top"));
    var bottom = (goog.style.getComputedStyle(element, stylePrefix + "Bottom"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding");
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin");
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if (goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0;
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if (width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width];
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft");
};
goog.style.getBorderBox = function(element) {
  if (goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = (goog.style.getComputedStyle(element, "borderLeftWidth"));
    var right = (goog.style.getComputedStyle(element, "borderRightWidth"));
    var top = (goog.style.getComputedStyle(element, "borderTopWidth"));
    var bottom = (goog.style.getComputedStyle(element, "borderBottomWidth"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if (doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName");
    } catch (e) {
      font = "";
    }
  }
  if (!font) {
    font = goog.style.getStyle_(el, "fontFamily");
  }
  var fontsArray = font.split(",");
  if (fontsArray.length > 1) {
    font = fontsArray[0];
  }
  return goog.string.stripQuotes(font, "\"'");
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null;
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if (fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10);
  }
  if (goog.userAgent.IE) {
    if (sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft");
    } else {
      if (el.parentNode && (el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_)) {
        var parentElement = (el.parentNode);
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft");
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize;
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if (keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1];
    }
  });
  return result;
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";");
  });
  return buffer.join("");
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value;
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || "";
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if (opt_className) {
    outerDiv.className = opt_className;
  }
  outerDiv.style.cssText = "overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width;
};
goog.style.MATRIX_TRANSLATION_REGEX_ = new RegExp("matrix\\([0-9\\.\\-]+, [0-9\\.\\-]+, " + "[0-9\\.\\-]+, [0-9\\.\\-]+, " + "([0-9\\.\\-]+)p?x?, ([0-9\\.\\-]+)p?x?\\)");
goog.style.getCssTranslation = function(element) {
  var property;
  if (goog.userAgent.IE) {
    property = "-ms-transform";
  } else {
    if (goog.userAgent.WEBKIT) {
      property = "-webkit-transform";
    } else {
      if (goog.userAgent.OPERA) {
        property = "-o-transform";
      } else {
        if (goog.userAgent.GECKO) {
          property = "-moz-transform";
        }
      }
    }
  }
  var transform;
  if (property) {
    transform = goog.style.getStyle_(element, property);
  }
  if (!transform) {
    transform = goog.style.getStyle_(element, "transform");
  }
  if (!transform) {
    return new goog.math.Coordinate(0, 0);
  }
  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);
  if (!matches) {
    return new goog.math.Coordinate(0, 0);
  }
  return new goog.math.Coordinate(parseFloat(matches[1]), parseFloat(matches[2]));
};
goog.provide("floor16.ui.utils");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("goog.dom");
floor16.ui.utils.el_matcher = function el_matcher(el) {
  return function(other) {
    return other === el;
  };
};
floor16.ui.utils.in_QMARK_ = function in_QMARK_(e, el) {
  var target = e.target;
  return target === el || !(goog.dom.getAncestor(target, floor16.ui.utils.el_matcher.call(null, el)) == null);
};
goog.provide("goog.history.EventType");
goog.history.EventType = {NAVIGATE:"navigate"};
goog.provide("secretary.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
secretary.core._STAR_routes_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
secretary.core.slash = /\//;
secretary.core.param_QMARK_ = function param_QMARK_(r) {
  return cljs.core._EQ_.call(null, cljs.core.first.call(null, r), ":");
};
secretary.core.component_matches_QMARK_ = function component_matches_QMARK_(r, u) {
  return secretary.core.param_QMARK_.call(null, r) || cljs.core._EQ_.call(null, r, u);
};
secretary.core.extract_component = function extract_component(r, u) {
  if (secretary.core.param_QMARK_.call(null, r)) {
    return new cljs.core.PersistentArrayMap.fromArray([cljs.core.keyword.call(null, cljs.core.subs.call(null, r, 1)), u], true, false);
  } else {
    return null;
  }
};
secretary.core.exact_match_QMARK_ = function exact_match_QMARK_(r, u) {
  return cljs.core._EQ_.call(null, r, u);
};
secretary.core.route_matches_QMARK_ = function route_matches_QMARK_(route, uri_path) {
  var r = clojure.string.split.call(null, route, secretary.core.slash);
  var u = clojure.string.split.call(null, uri_path, secretary.core.slash);
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, r), cljs.core.count.call(null, u))) {
    return cljs.core.every_QMARK_.call(null, cljs.core.true_QMARK_, cljs.core.map.call(null, function(p1__13678_SHARP_, p2__13679_SHARP_) {
      return secretary.core.component_matches_QMARK_.call(null, p1__13678_SHARP_, p2__13679_SHARP_);
    }, r, u));
  } else {
    return null;
  }
};
secretary.core.any_matches_QMARK_ = function any_matches_QMARK_(uri_path) {
  return cljs.core.some.call(null, function(p1__13680_SHARP_) {
    return secretary.core.route_matches_QMARK_.call(null, cljs.core.first.call(null, p1__13680_SHARP_), uri_path);
  }, cljs.core.deref.call(null, secretary.core._STAR_routes_STAR_));
};
secretary.core.extract_components = function extract_components(route, uri_path) {
  if (cljs.core.truth_(secretary.core.route_matches_QMARK_.call(null, route, uri_path))) {
    return cljs.core.apply.call(null, cljs.core.merge, function() {
      var iter__4120__auto__ = function iter__13685(s__13686) {
        return new cljs.core.LazySeq(null, function() {
          var s__13686__$1 = s__13686;
          while (true) {
            var temp__4092__auto__ = cljs.core.seq.call(null, s__13686__$1);
            if (temp__4092__auto__) {
              var s__13686__$2 = temp__4092__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__13686__$2)) {
                var c__4118__auto__ = cljs.core.chunk_first.call(null, s__13686__$2);
                var size__4119__auto__ = cljs.core.count.call(null, c__4118__auto__);
                var b__13688 = cljs.core.chunk_buffer.call(null, size__4119__auto__);
                if (function() {
                  var i__13687 = 0;
                  while (true) {
                    if (i__13687 < size__4119__auto__) {
                      var z = cljs.core._nth.call(null, c__4118__auto__, i__13687);
                      var c = cljs.core.apply.call(null, secretary.core.extract_component, z);
                      if (!(c == null)) {
                        cljs.core.chunk_append.call(null, b__13688, c);
                        var G__13689 = i__13687 + 1;
                        i__13687 = G__13689;
                        continue;
                      } else {
                        var G__13690 = i__13687 + 1;
                        i__13687 = G__13690;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13688), iter__13685.call(null, cljs.core.chunk_rest.call(null, s__13686__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13688), null);
                }
              } else {
                var z = cljs.core.first.call(null, s__13686__$2);
                var c = cljs.core.apply.call(null, secretary.core.extract_component, z);
                if (!(c == null)) {
                  return cljs.core.cons.call(null, c, iter__13685.call(null, cljs.core.rest.call(null, s__13686__$2)));
                } else {
                  var G__13691 = cljs.core.rest.call(null, s__13686__$2);
                  s__13686__$1 = G__13691;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4120__auto__.call(null, cljs.core.zipmap.call(null, clojure.string.split.call(null, route, secretary.core.slash), clojure.string.split.call(null, uri_path, secretary.core.slash)));
    }());
  } else {
    return null;
  }
};
secretary.core.filter_routes = function filter_routes(f, uri_path) {
  return cljs.core.filter.call(null, function(p1__13692_SHARP_) {
    return f.call(null, cljs.core.first.call(null, p1__13692_SHARP_), uri_path);
  }, cljs.core.deref.call(null, secretary.core._STAR_routes_STAR_));
};
secretary.core.dispatch_BANG_ = function dispatch_BANG_(uri_path) {
  var temp__4090__auto__ = cljs.core.first.call(null, secretary.core.filter_routes.call(null, secretary.core.exact_match_QMARK_, uri_path));
  if (cljs.core.truth_(temp__4090__auto__)) {
    var vec__13695 = temp__4090__auto__;
    var route = cljs.core.nth.call(null, vec__13695, 0, null);
    var action = cljs.core.nth.call(null, vec__13695, 1, null);
    return action.call(null, cljs.core.PersistentArrayMap.EMPTY);
  } else {
    var temp__4092__auto__ = cljs.core.seq.call(null, secretary.core.filter_routes.call(null, secretary.core.route_matches_QMARK_, uri_path));
    if (temp__4092__auto__) {
      var xs__4579__auto__ = temp__4092__auto__;
      var vec__13696 = cljs.core.first.call(null, xs__4579__auto__);
      var route = cljs.core.nth.call(null, vec__13696, 0, null);
      var action = cljs.core.nth.call(null, vec__13696, 1, null);
      return action.call(null, secretary.core.extract_components.call(null, route, uri_path));
    } else {
      return null;
    }
  }
};
goog.provide("om.dom");
goog.require("cljs.core");
om.dom.a = function() {
  var a__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var a = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return a__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  a.cljs$lang$maxFixedArity = 1;
  a.cljs$lang$applyTo = function(arglist__10907) {
    var opts__4904__auto__ = cljs.core.first(arglist__10907);
    var children__4905__auto__ = cljs.core.rest(arglist__10907);
    return a__delegate(opts__4904__auto__, children__4905__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
om.dom.abbr = function() {
  var abbr__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var abbr = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return abbr__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 1;
  abbr.cljs$lang$applyTo = function(arglist__10908) {
    var opts__4904__auto__ = cljs.core.first(arglist__10908);
    var children__4905__auto__ = cljs.core.rest(arglist__10908);
    return abbr__delegate(opts__4904__auto__, children__4905__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
om.dom.address = function() {
  var address__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var address = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return address__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  address.cljs$lang$maxFixedArity = 1;
  address.cljs$lang$applyTo = function(arglist__10909) {
    var opts__4904__auto__ = cljs.core.first(arglist__10909);
    var children__4905__auto__ = cljs.core.rest(arglist__10909);
    return address__delegate(opts__4904__auto__, children__4905__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
om.dom.area = function() {
  var area__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var area = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return area__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  area.cljs$lang$maxFixedArity = 1;
  area.cljs$lang$applyTo = function(arglist__10910) {
    var opts__4904__auto__ = cljs.core.first(arglist__10910);
    var children__4905__auto__ = cljs.core.rest(arglist__10910);
    return area__delegate(opts__4904__auto__, children__4905__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
om.dom.article = function() {
  var article__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var article = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return article__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  article.cljs$lang$maxFixedArity = 1;
  article.cljs$lang$applyTo = function(arglist__10911) {
    var opts__4904__auto__ = cljs.core.first(arglist__10911);
    var children__4905__auto__ = cljs.core.rest(arglist__10911);
    return article__delegate(opts__4904__auto__, children__4905__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
om.dom.aside = function() {
  var aside__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var aside = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return aside__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  aside.cljs$lang$maxFixedArity = 1;
  aside.cljs$lang$applyTo = function(arglist__10912) {
    var opts__4904__auto__ = cljs.core.first(arglist__10912);
    var children__4905__auto__ = cljs.core.rest(arglist__10912);
    return aside__delegate(opts__4904__auto__, children__4905__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
om.dom.audio = function() {
  var audio__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var audio = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return audio__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  audio.cljs$lang$maxFixedArity = 1;
  audio.cljs$lang$applyTo = function(arglist__10913) {
    var opts__4904__auto__ = cljs.core.first(arglist__10913);
    var children__4905__auto__ = cljs.core.rest(arglist__10913);
    return audio__delegate(opts__4904__auto__, children__4905__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
om.dom.b = function() {
  var b__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var b = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return b__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(arglist__10914) {
    var opts__4904__auto__ = cljs.core.first(arglist__10914);
    var children__4905__auto__ = cljs.core.rest(arglist__10914);
    return b__delegate(opts__4904__auto__, children__4905__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
om.dom.base = function() {
  var base__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var base = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return base__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  base.cljs$lang$maxFixedArity = 1;
  base.cljs$lang$applyTo = function(arglist__10915) {
    var opts__4904__auto__ = cljs.core.first(arglist__10915);
    var children__4905__auto__ = cljs.core.rest(arglist__10915);
    return base__delegate(opts__4904__auto__, children__4905__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
om.dom.bdi = function() {
  var bdi__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var bdi = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdi__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 1;
  bdi.cljs$lang$applyTo = function(arglist__10916) {
    var opts__4904__auto__ = cljs.core.first(arglist__10916);
    var children__4905__auto__ = cljs.core.rest(arglist__10916);
    return bdi__delegate(opts__4904__auto__, children__4905__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
om.dom.bdo = function() {
  var bdo__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var bdo = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdo__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 1;
  bdo.cljs$lang$applyTo = function(arglist__10917) {
    var opts__4904__auto__ = cljs.core.first(arglist__10917);
    var children__4905__auto__ = cljs.core.rest(arglist__10917);
    return bdo__delegate(opts__4904__auto__, children__4905__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
om.dom.big = function() {
  var big__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var big = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return big__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  big.cljs$lang$maxFixedArity = 1;
  big.cljs$lang$applyTo = function(arglist__10918) {
    var opts__4904__auto__ = cljs.core.first(arglist__10918);
    var children__4905__auto__ = cljs.core.rest(arglist__10918);
    return big__delegate(opts__4904__auto__, children__4905__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
om.dom.blockquote = function() {
  var blockquote__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var blockquote = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return blockquote__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 1;
  blockquote.cljs$lang$applyTo = function(arglist__10919) {
    var opts__4904__auto__ = cljs.core.first(arglist__10919);
    var children__4905__auto__ = cljs.core.rest(arglist__10919);
    return blockquote__delegate(opts__4904__auto__, children__4905__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
om.dom.body = function() {
  var body__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var body = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return body__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  body.cljs$lang$maxFixedArity = 1;
  body.cljs$lang$applyTo = function(arglist__10920) {
    var opts__4904__auto__ = cljs.core.first(arglist__10920);
    var children__4905__auto__ = cljs.core.rest(arglist__10920);
    return body__delegate(opts__4904__auto__, children__4905__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
om.dom.br = function() {
  var br__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var br = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return br__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  br.cljs$lang$maxFixedArity = 1;
  br.cljs$lang$applyTo = function(arglist__10921) {
    var opts__4904__auto__ = cljs.core.first(arglist__10921);
    var children__4905__auto__ = cljs.core.rest(arglist__10921);
    return br__delegate(opts__4904__auto__, children__4905__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
om.dom.button = function() {
  var button__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var button = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return button__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  button.cljs$lang$maxFixedArity = 1;
  button.cljs$lang$applyTo = function(arglist__10922) {
    var opts__4904__auto__ = cljs.core.first(arglist__10922);
    var children__4905__auto__ = cljs.core.rest(arglist__10922);
    return button__delegate(opts__4904__auto__, children__4905__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
om.dom.canvas = function() {
  var canvas__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var canvas = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return canvas__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 1;
  canvas.cljs$lang$applyTo = function(arglist__10923) {
    var opts__4904__auto__ = cljs.core.first(arglist__10923);
    var children__4905__auto__ = cljs.core.rest(arglist__10923);
    return canvas__delegate(opts__4904__auto__, children__4905__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
om.dom.caption = function() {
  var caption__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var caption = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return caption__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  caption.cljs$lang$maxFixedArity = 1;
  caption.cljs$lang$applyTo = function(arglist__10924) {
    var opts__4904__auto__ = cljs.core.first(arglist__10924);
    var children__4905__auto__ = cljs.core.rest(arglist__10924);
    return caption__delegate(opts__4904__auto__, children__4905__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
om.dom.cite = function() {
  var cite__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var cite = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return cite__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  cite.cljs$lang$maxFixedArity = 1;
  cite.cljs$lang$applyTo = function(arglist__10925) {
    var opts__4904__auto__ = cljs.core.first(arglist__10925);
    var children__4905__auto__ = cljs.core.rest(arglist__10925);
    return cite__delegate(opts__4904__auto__, children__4905__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
om.dom.code = function() {
  var code__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var code = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return code__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  code.cljs$lang$maxFixedArity = 1;
  code.cljs$lang$applyTo = function(arglist__10926) {
    var opts__4904__auto__ = cljs.core.first(arglist__10926);
    var children__4905__auto__ = cljs.core.rest(arglist__10926);
    return code__delegate(opts__4904__auto__, children__4905__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
om.dom.col = function() {
  var col__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var col = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return col__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  col.cljs$lang$maxFixedArity = 1;
  col.cljs$lang$applyTo = function(arglist__10927) {
    var opts__4904__auto__ = cljs.core.first(arglist__10927);
    var children__4905__auto__ = cljs.core.rest(arglist__10927);
    return col__delegate(opts__4904__auto__, children__4905__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
om.dom.colgroup = function() {
  var colgroup__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var colgroup = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return colgroup__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 1;
  colgroup.cljs$lang$applyTo = function(arglist__10928) {
    var opts__4904__auto__ = cljs.core.first(arglist__10928);
    var children__4905__auto__ = cljs.core.rest(arglist__10928);
    return colgroup__delegate(opts__4904__auto__, children__4905__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
om.dom.data = function() {
  var data__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var data = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return data__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  data.cljs$lang$maxFixedArity = 1;
  data.cljs$lang$applyTo = function(arglist__10929) {
    var opts__4904__auto__ = cljs.core.first(arglist__10929);
    var children__4905__auto__ = cljs.core.rest(arglist__10929);
    return data__delegate(opts__4904__auto__, children__4905__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
om.dom.datalist = function() {
  var datalist__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var datalist = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return datalist__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 1;
  datalist.cljs$lang$applyTo = function(arglist__10930) {
    var opts__4904__auto__ = cljs.core.first(arglist__10930);
    var children__4905__auto__ = cljs.core.rest(arglist__10930);
    return datalist__delegate(opts__4904__auto__, children__4905__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
om.dom.dd = function() {
  var dd__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var dd = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dd__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  dd.cljs$lang$maxFixedArity = 1;
  dd.cljs$lang$applyTo = function(arglist__10931) {
    var opts__4904__auto__ = cljs.core.first(arglist__10931);
    var children__4905__auto__ = cljs.core.rest(arglist__10931);
    return dd__delegate(opts__4904__auto__, children__4905__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
om.dom.del = function() {
  var del__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var del = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return del__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  del.cljs$lang$maxFixedArity = 1;
  del.cljs$lang$applyTo = function(arglist__10932) {
    var opts__4904__auto__ = cljs.core.first(arglist__10932);
    var children__4905__auto__ = cljs.core.rest(arglist__10932);
    return del__delegate(opts__4904__auto__, children__4905__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
om.dom.dfn = function() {
  var dfn__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var dfn = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dfn__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 1;
  dfn.cljs$lang$applyTo = function(arglist__10933) {
    var opts__4904__auto__ = cljs.core.first(arglist__10933);
    var children__4905__auto__ = cljs.core.rest(arglist__10933);
    return dfn__delegate(opts__4904__auto__, children__4905__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
om.dom.div = function() {
  var div__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var div = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return div__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  div.cljs$lang$maxFixedArity = 1;
  div.cljs$lang$applyTo = function(arglist__10934) {
    var opts__4904__auto__ = cljs.core.first(arglist__10934);
    var children__4905__auto__ = cljs.core.rest(arglist__10934);
    return div__delegate(opts__4904__auto__, children__4905__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
om.dom.dl = function() {
  var dl__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var dl = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dl__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  dl.cljs$lang$maxFixedArity = 1;
  dl.cljs$lang$applyTo = function(arglist__10935) {
    var opts__4904__auto__ = cljs.core.first(arglist__10935);
    var children__4905__auto__ = cljs.core.rest(arglist__10935);
    return dl__delegate(opts__4904__auto__, children__4905__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
om.dom.dt = function() {
  var dt__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var dt = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dt__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  dt.cljs$lang$maxFixedArity = 1;
  dt.cljs$lang$applyTo = function(arglist__10936) {
    var opts__4904__auto__ = cljs.core.first(arglist__10936);
    var children__4905__auto__ = cljs.core.rest(arglist__10936);
    return dt__delegate(opts__4904__auto__, children__4905__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
om.dom.em = function() {
  var em__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var em = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return em__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  em.cljs$lang$maxFixedArity = 1;
  em.cljs$lang$applyTo = function(arglist__10937) {
    var opts__4904__auto__ = cljs.core.first(arglist__10937);
    var children__4905__auto__ = cljs.core.rest(arglist__10937);
    return em__delegate(opts__4904__auto__, children__4905__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
om.dom.embed = function() {
  var embed__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var embed = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return embed__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  embed.cljs$lang$maxFixedArity = 1;
  embed.cljs$lang$applyTo = function(arglist__10938) {
    var opts__4904__auto__ = cljs.core.first(arglist__10938);
    var children__4905__auto__ = cljs.core.rest(arglist__10938);
    return embed__delegate(opts__4904__auto__, children__4905__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
om.dom.fieldset = function() {
  var fieldset__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var fieldset = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fieldset__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 1;
  fieldset.cljs$lang$applyTo = function(arglist__10939) {
    var opts__4904__auto__ = cljs.core.first(arglist__10939);
    var children__4905__auto__ = cljs.core.rest(arglist__10939);
    return fieldset__delegate(opts__4904__auto__, children__4905__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
om.dom.figcaption = function() {
  var figcaption__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var figcaption = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figcaption__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 1;
  figcaption.cljs$lang$applyTo = function(arglist__10940) {
    var opts__4904__auto__ = cljs.core.first(arglist__10940);
    var children__4905__auto__ = cljs.core.rest(arglist__10940);
    return figcaption__delegate(opts__4904__auto__, children__4905__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
om.dom.figure = function() {
  var figure__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var figure = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figure__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  figure.cljs$lang$maxFixedArity = 1;
  figure.cljs$lang$applyTo = function(arglist__10941) {
    var opts__4904__auto__ = cljs.core.first(arglist__10941);
    var children__4905__auto__ = cljs.core.rest(arglist__10941);
    return figure__delegate(opts__4904__auto__, children__4905__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
om.dom.footer = function() {
  var footer__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var footer = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return footer__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  footer.cljs$lang$maxFixedArity = 1;
  footer.cljs$lang$applyTo = function(arglist__10942) {
    var opts__4904__auto__ = cljs.core.first(arglist__10942);
    var children__4905__auto__ = cljs.core.rest(arglist__10942);
    return footer__delegate(opts__4904__auto__, children__4905__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
om.dom.form = function() {
  var form__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var form = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  form.cljs$lang$maxFixedArity = 1;
  form.cljs$lang$applyTo = function(arglist__10943) {
    var opts__4904__auto__ = cljs.core.first(arglist__10943);
    var children__4905__auto__ = cljs.core.rest(arglist__10943);
    return form__delegate(opts__4904__auto__, children__4905__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
om.dom.h1 = function() {
  var h1__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var h1 = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h1__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  h1.cljs$lang$maxFixedArity = 1;
  h1.cljs$lang$applyTo = function(arglist__10944) {
    var opts__4904__auto__ = cljs.core.first(arglist__10944);
    var children__4905__auto__ = cljs.core.rest(arglist__10944);
    return h1__delegate(opts__4904__auto__, children__4905__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
om.dom.h2 = function() {
  var h2__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var h2 = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h2__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  h2.cljs$lang$maxFixedArity = 1;
  h2.cljs$lang$applyTo = function(arglist__10945) {
    var opts__4904__auto__ = cljs.core.first(arglist__10945);
    var children__4905__auto__ = cljs.core.rest(arglist__10945);
    return h2__delegate(opts__4904__auto__, children__4905__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
om.dom.h3 = function() {
  var h3__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var h3 = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h3__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  h3.cljs$lang$maxFixedArity = 1;
  h3.cljs$lang$applyTo = function(arglist__10946) {
    var opts__4904__auto__ = cljs.core.first(arglist__10946);
    var children__4905__auto__ = cljs.core.rest(arglist__10946);
    return h3__delegate(opts__4904__auto__, children__4905__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
om.dom.h4 = function() {
  var h4__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var h4 = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h4__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  h4.cljs$lang$maxFixedArity = 1;
  h4.cljs$lang$applyTo = function(arglist__10947) {
    var opts__4904__auto__ = cljs.core.first(arglist__10947);
    var children__4905__auto__ = cljs.core.rest(arglist__10947);
    return h4__delegate(opts__4904__auto__, children__4905__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
om.dom.h5 = function() {
  var h5__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var h5 = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h5__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  h5.cljs$lang$maxFixedArity = 1;
  h5.cljs$lang$applyTo = function(arglist__10948) {
    var opts__4904__auto__ = cljs.core.first(arglist__10948);
    var children__4905__auto__ = cljs.core.rest(arglist__10948);
    return h5__delegate(opts__4904__auto__, children__4905__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
om.dom.h6 = function() {
  var h6__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var h6 = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h6__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  h6.cljs$lang$maxFixedArity = 1;
  h6.cljs$lang$applyTo = function(arglist__10949) {
    var opts__4904__auto__ = cljs.core.first(arglist__10949);
    var children__4905__auto__ = cljs.core.rest(arglist__10949);
    return h6__delegate(opts__4904__auto__, children__4905__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
om.dom.head = function() {
  var head__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var head = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return head__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__10950) {
    var opts__4904__auto__ = cljs.core.first(arglist__10950);
    var children__4905__auto__ = cljs.core.rest(arglist__10950);
    return head__delegate(opts__4904__auto__, children__4905__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
om.dom.header = function() {
  var header__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var header = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return header__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  header.cljs$lang$maxFixedArity = 1;
  header.cljs$lang$applyTo = function(arglist__10951) {
    var opts__4904__auto__ = cljs.core.first(arglist__10951);
    var children__4905__auto__ = cljs.core.rest(arglist__10951);
    return header__delegate(opts__4904__auto__, children__4905__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
om.dom.hr = function() {
  var hr__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var hr = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hr__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  hr.cljs$lang$maxFixedArity = 1;
  hr.cljs$lang$applyTo = function(arglist__10952) {
    var opts__4904__auto__ = cljs.core.first(arglist__10952);
    var children__4905__auto__ = cljs.core.rest(arglist__10952);
    return hr__delegate(opts__4904__auto__, children__4905__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
om.dom.html = function() {
  var html__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var html = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return html__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__10953) {
    var opts__4904__auto__ = cljs.core.first(arglist__10953);
    var children__4905__auto__ = cljs.core.rest(arglist__10953);
    return html__delegate(opts__4904__auto__, children__4905__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
om.dom.i = function() {
  var i__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var i = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return i__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  i.cljs$lang$maxFixedArity = 1;
  i.cljs$lang$applyTo = function(arglist__10954) {
    var opts__4904__auto__ = cljs.core.first(arglist__10954);
    var children__4905__auto__ = cljs.core.rest(arglist__10954);
    return i__delegate(opts__4904__auto__, children__4905__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
om.dom.iframe = function() {
  var iframe__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var iframe = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return iframe__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 1;
  iframe.cljs$lang$applyTo = function(arglist__10955) {
    var opts__4904__auto__ = cljs.core.first(arglist__10955);
    var children__4905__auto__ = cljs.core.rest(arglist__10955);
    return iframe__delegate(opts__4904__auto__, children__4905__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
om.dom.img = function() {
  var img__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var img = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return img__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  img.cljs$lang$maxFixedArity = 1;
  img.cljs$lang$applyTo = function(arglist__10956) {
    var opts__4904__auto__ = cljs.core.first(arglist__10956);
    var children__4905__auto__ = cljs.core.rest(arglist__10956);
    return img__delegate(opts__4904__auto__, children__4905__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
om.dom.ins = function() {
  var ins__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var ins = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ins__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  ins.cljs$lang$maxFixedArity = 1;
  ins.cljs$lang$applyTo = function(arglist__10957) {
    var opts__4904__auto__ = cljs.core.first(arglist__10957);
    var children__4905__auto__ = cljs.core.rest(arglist__10957);
    return ins__delegate(opts__4904__auto__, children__4905__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
om.dom.kbd = function() {
  var kbd__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var kbd = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return kbd__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 1;
  kbd.cljs$lang$applyTo = function(arglist__10958) {
    var opts__4904__auto__ = cljs.core.first(arglist__10958);
    var children__4905__auto__ = cljs.core.rest(arglist__10958);
    return kbd__delegate(opts__4904__auto__, children__4905__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
om.dom.keygen = function() {
  var keygen__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var keygen = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return keygen__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 1;
  keygen.cljs$lang$applyTo = function(arglist__10959) {
    var opts__4904__auto__ = cljs.core.first(arglist__10959);
    var children__4905__auto__ = cljs.core.rest(arglist__10959);
    return keygen__delegate(opts__4904__auto__, children__4905__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
om.dom.label = function() {
  var label__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var label = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return label__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  label.cljs$lang$maxFixedArity = 1;
  label.cljs$lang$applyTo = function(arglist__10960) {
    var opts__4904__auto__ = cljs.core.first(arglist__10960);
    var children__4905__auto__ = cljs.core.rest(arglist__10960);
    return label__delegate(opts__4904__auto__, children__4905__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
om.dom.legend = function() {
  var legend__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var legend = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return legend__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  legend.cljs$lang$maxFixedArity = 1;
  legend.cljs$lang$applyTo = function(arglist__10961) {
    var opts__4904__auto__ = cljs.core.first(arglist__10961);
    var children__4905__auto__ = cljs.core.rest(arglist__10961);
    return legend__delegate(opts__4904__auto__, children__4905__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
om.dom.li = function() {
  var li__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var li = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return li__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  li.cljs$lang$maxFixedArity = 1;
  li.cljs$lang$applyTo = function(arglist__10962) {
    var opts__4904__auto__ = cljs.core.first(arglist__10962);
    var children__4905__auto__ = cljs.core.rest(arglist__10962);
    return li__delegate(opts__4904__auto__, children__4905__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
om.dom.link = function() {
  var link__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var link = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  link.cljs$lang$maxFixedArity = 1;
  link.cljs$lang$applyTo = function(arglist__10963) {
    var opts__4904__auto__ = cljs.core.first(arglist__10963);
    var children__4905__auto__ = cljs.core.rest(arglist__10963);
    return link__delegate(opts__4904__auto__, children__4905__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
om.dom.main = function() {
  var main__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var main = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return main__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  main.cljs$lang$maxFixedArity = 1;
  main.cljs$lang$applyTo = function(arglist__10964) {
    var opts__4904__auto__ = cljs.core.first(arglist__10964);
    var children__4905__auto__ = cljs.core.rest(arglist__10964);
    return main__delegate(opts__4904__auto__, children__4905__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
om.dom.map = function() {
  var map__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var map = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  map.cljs$lang$maxFixedArity = 1;
  map.cljs$lang$applyTo = function(arglist__10965) {
    var opts__4904__auto__ = cljs.core.first(arglist__10965);
    var children__4905__auto__ = cljs.core.rest(arglist__10965);
    return map__delegate(opts__4904__auto__, children__4905__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
om.dom.mark = function() {
  var mark__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var mark = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mark__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  mark.cljs$lang$maxFixedArity = 1;
  mark.cljs$lang$applyTo = function(arglist__10966) {
    var opts__4904__auto__ = cljs.core.first(arglist__10966);
    var children__4905__auto__ = cljs.core.rest(arglist__10966);
    return mark__delegate(opts__4904__auto__, children__4905__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
om.dom.menu = function() {
  var menu__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var menu = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menu__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  menu.cljs$lang$maxFixedArity = 1;
  menu.cljs$lang$applyTo = function(arglist__10967) {
    var opts__4904__auto__ = cljs.core.first(arglist__10967);
    var children__4905__auto__ = cljs.core.rest(arglist__10967);
    return menu__delegate(opts__4904__auto__, children__4905__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
om.dom.menuitem = function() {
  var menuitem__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var menuitem = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menuitem__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 1;
  menuitem.cljs$lang$applyTo = function(arglist__10968) {
    var opts__4904__auto__ = cljs.core.first(arglist__10968);
    var children__4905__auto__ = cljs.core.rest(arglist__10968);
    return menuitem__delegate(opts__4904__auto__, children__4905__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
om.dom.meta = function() {
  var meta__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var meta = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meta__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  meta.cljs$lang$maxFixedArity = 1;
  meta.cljs$lang$applyTo = function(arglist__10969) {
    var opts__4904__auto__ = cljs.core.first(arglist__10969);
    var children__4905__auto__ = cljs.core.rest(arglist__10969);
    return meta__delegate(opts__4904__auto__, children__4905__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
om.dom.meter = function() {
  var meter__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var meter = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meter__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  meter.cljs$lang$maxFixedArity = 1;
  meter.cljs$lang$applyTo = function(arglist__10970) {
    var opts__4904__auto__ = cljs.core.first(arglist__10970);
    var children__4905__auto__ = cljs.core.rest(arglist__10970);
    return meter__delegate(opts__4904__auto__, children__4905__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
om.dom.nav = function() {
  var nav__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var nav = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return nav__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  nav.cljs$lang$maxFixedArity = 1;
  nav.cljs$lang$applyTo = function(arglist__10971) {
    var opts__4904__auto__ = cljs.core.first(arglist__10971);
    var children__4905__auto__ = cljs.core.rest(arglist__10971);
    return nav__delegate(opts__4904__auto__, children__4905__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
om.dom.noscript = function() {
  var noscript__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var noscript = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return noscript__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 1;
  noscript.cljs$lang$applyTo = function(arglist__10972) {
    var opts__4904__auto__ = cljs.core.first(arglist__10972);
    var children__4905__auto__ = cljs.core.rest(arglist__10972);
    return noscript__delegate(opts__4904__auto__, children__4905__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
om.dom.object = function() {
  var object__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var object = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return object__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  object.cljs$lang$maxFixedArity = 1;
  object.cljs$lang$applyTo = function(arglist__10973) {
    var opts__4904__auto__ = cljs.core.first(arglist__10973);
    var children__4905__auto__ = cljs.core.rest(arglist__10973);
    return object__delegate(opts__4904__auto__, children__4905__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
om.dom.ol = function() {
  var ol__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var ol = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ol__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  ol.cljs$lang$maxFixedArity = 1;
  ol.cljs$lang$applyTo = function(arglist__10974) {
    var opts__4904__auto__ = cljs.core.first(arglist__10974);
    var children__4905__auto__ = cljs.core.rest(arglist__10974);
    return ol__delegate(opts__4904__auto__, children__4905__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
om.dom.optgroup = function() {
  var optgroup__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var optgroup = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return optgroup__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 1;
  optgroup.cljs$lang$applyTo = function(arglist__10975) {
    var opts__4904__auto__ = cljs.core.first(arglist__10975);
    var children__4905__auto__ = cljs.core.rest(arglist__10975);
    return optgroup__delegate(opts__4904__auto__, children__4905__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
om.dom.output = function() {
  var output__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var output = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return output__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  output.cljs$lang$maxFixedArity = 1;
  output.cljs$lang$applyTo = function(arglist__10976) {
    var opts__4904__auto__ = cljs.core.first(arglist__10976);
    var children__4905__auto__ = cljs.core.rest(arglist__10976);
    return output__delegate(opts__4904__auto__, children__4905__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
om.dom.p = function() {
  var p__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var p = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return p__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  p.cljs$lang$maxFixedArity = 1;
  p.cljs$lang$applyTo = function(arglist__10977) {
    var opts__4904__auto__ = cljs.core.first(arglist__10977);
    var children__4905__auto__ = cljs.core.rest(arglist__10977);
    return p__delegate(opts__4904__auto__, children__4905__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
om.dom.param = function() {
  var param__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var param = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return param__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  param.cljs$lang$maxFixedArity = 1;
  param.cljs$lang$applyTo = function(arglist__10978) {
    var opts__4904__auto__ = cljs.core.first(arglist__10978);
    var children__4905__auto__ = cljs.core.rest(arglist__10978);
    return param__delegate(opts__4904__auto__, children__4905__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
om.dom.pre = function() {
  var pre__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var pre = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pre__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  pre.cljs$lang$maxFixedArity = 1;
  pre.cljs$lang$applyTo = function(arglist__10979) {
    var opts__4904__auto__ = cljs.core.first(arglist__10979);
    var children__4905__auto__ = cljs.core.rest(arglist__10979);
    return pre__delegate(opts__4904__auto__, children__4905__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
om.dom.progress = function() {
  var progress__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var progress = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return progress__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  progress.cljs$lang$maxFixedArity = 1;
  progress.cljs$lang$applyTo = function(arglist__10980) {
    var opts__4904__auto__ = cljs.core.first(arglist__10980);
    var children__4905__auto__ = cljs.core.rest(arglist__10980);
    return progress__delegate(opts__4904__auto__, children__4905__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
om.dom.q = function() {
  var q__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var q = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return q__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__10981) {
    var opts__4904__auto__ = cljs.core.first(arglist__10981);
    var children__4905__auto__ = cljs.core.rest(arglist__10981);
    return q__delegate(opts__4904__auto__, children__4905__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
om.dom.rp = function() {
  var rp__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var rp = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rp__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  rp.cljs$lang$maxFixedArity = 1;
  rp.cljs$lang$applyTo = function(arglist__10982) {
    var opts__4904__auto__ = cljs.core.first(arglist__10982);
    var children__4905__auto__ = cljs.core.rest(arglist__10982);
    return rp__delegate(opts__4904__auto__, children__4905__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
om.dom.rt = function() {
  var rt__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var rt = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rt__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  rt.cljs$lang$maxFixedArity = 1;
  rt.cljs$lang$applyTo = function(arglist__10983) {
    var opts__4904__auto__ = cljs.core.first(arglist__10983);
    var children__4905__auto__ = cljs.core.rest(arglist__10983);
    return rt__delegate(opts__4904__auto__, children__4905__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
om.dom.ruby = function() {
  var ruby__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var ruby = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ruby__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 1;
  ruby.cljs$lang$applyTo = function(arglist__10984) {
    var opts__4904__auto__ = cljs.core.first(arglist__10984);
    var children__4905__auto__ = cljs.core.rest(arglist__10984);
    return ruby__delegate(opts__4904__auto__, children__4905__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
om.dom.s = function() {
  var s__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var s = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return s__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  s.cljs$lang$maxFixedArity = 1;
  s.cljs$lang$applyTo = function(arglist__10985) {
    var opts__4904__auto__ = cljs.core.first(arglist__10985);
    var children__4905__auto__ = cljs.core.rest(arglist__10985);
    return s__delegate(opts__4904__auto__, children__4905__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
om.dom.samp = function() {
  var samp__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var samp = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return samp__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  samp.cljs$lang$maxFixedArity = 1;
  samp.cljs$lang$applyTo = function(arglist__10986) {
    var opts__4904__auto__ = cljs.core.first(arglist__10986);
    var children__4905__auto__ = cljs.core.rest(arglist__10986);
    return samp__delegate(opts__4904__auto__, children__4905__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
om.dom.script = function() {
  var script__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var script = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return script__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  script.cljs$lang$maxFixedArity = 1;
  script.cljs$lang$applyTo = function(arglist__10987) {
    var opts__4904__auto__ = cljs.core.first(arglist__10987);
    var children__4905__auto__ = cljs.core.rest(arglist__10987);
    return script__delegate(opts__4904__auto__, children__4905__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
om.dom.section = function() {
  var section__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var section = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return section__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  section.cljs$lang$maxFixedArity = 1;
  section.cljs$lang$applyTo = function(arglist__10988) {
    var opts__4904__auto__ = cljs.core.first(arglist__10988);
    var children__4905__auto__ = cljs.core.rest(arglist__10988);
    return section__delegate(opts__4904__auto__, children__4905__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
om.dom.select = function() {
  var select__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var select = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return select__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  select.cljs$lang$maxFixedArity = 1;
  select.cljs$lang$applyTo = function(arglist__10989) {
    var opts__4904__auto__ = cljs.core.first(arglist__10989);
    var children__4905__auto__ = cljs.core.rest(arglist__10989);
    return select__delegate(opts__4904__auto__, children__4905__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
om.dom.small = function() {
  var small__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var small = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return small__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  small.cljs$lang$maxFixedArity = 1;
  small.cljs$lang$applyTo = function(arglist__10990) {
    var opts__4904__auto__ = cljs.core.first(arglist__10990);
    var children__4905__auto__ = cljs.core.rest(arglist__10990);
    return small__delegate(opts__4904__auto__, children__4905__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
om.dom.source = function() {
  var source__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var source = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return source__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  source.cljs$lang$maxFixedArity = 1;
  source.cljs$lang$applyTo = function(arglist__10991) {
    var opts__4904__auto__ = cljs.core.first(arglist__10991);
    var children__4905__auto__ = cljs.core.rest(arglist__10991);
    return source__delegate(opts__4904__auto__, children__4905__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
om.dom.span = function() {
  var span__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var span = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return span__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  span.cljs$lang$maxFixedArity = 1;
  span.cljs$lang$applyTo = function(arglist__10992) {
    var opts__4904__auto__ = cljs.core.first(arglist__10992);
    var children__4905__auto__ = cljs.core.rest(arglist__10992);
    return span__delegate(opts__4904__auto__, children__4905__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
om.dom.strong = function() {
  var strong__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var strong = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return strong__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  strong.cljs$lang$maxFixedArity = 1;
  strong.cljs$lang$applyTo = function(arglist__10993) {
    var opts__4904__auto__ = cljs.core.first(arglist__10993);
    var children__4905__auto__ = cljs.core.rest(arglist__10993);
    return strong__delegate(opts__4904__auto__, children__4905__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
om.dom.style = function() {
  var style__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var style = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return style__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  style.cljs$lang$maxFixedArity = 1;
  style.cljs$lang$applyTo = function(arglist__10994) {
    var opts__4904__auto__ = cljs.core.first(arglist__10994);
    var children__4905__auto__ = cljs.core.rest(arglist__10994);
    return style__delegate(opts__4904__auto__, children__4905__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
om.dom.sub = function() {
  var sub__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var sub = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sub__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  sub.cljs$lang$maxFixedArity = 1;
  sub.cljs$lang$applyTo = function(arglist__10995) {
    var opts__4904__auto__ = cljs.core.first(arglist__10995);
    var children__4905__auto__ = cljs.core.rest(arglist__10995);
    return sub__delegate(opts__4904__auto__, children__4905__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
om.dom.summary = function() {
  var summary__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var summary = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return summary__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  summary.cljs$lang$maxFixedArity = 1;
  summary.cljs$lang$applyTo = function(arglist__10996) {
    var opts__4904__auto__ = cljs.core.first(arglist__10996);
    var children__4905__auto__ = cljs.core.rest(arglist__10996);
    return summary__delegate(opts__4904__auto__, children__4905__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
om.dom.sup = function() {
  var sup__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var sup = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sup__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  sup.cljs$lang$maxFixedArity = 1;
  sup.cljs$lang$applyTo = function(arglist__10997) {
    var opts__4904__auto__ = cljs.core.first(arglist__10997);
    var children__4905__auto__ = cljs.core.rest(arglist__10997);
    return sup__delegate(opts__4904__auto__, children__4905__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
om.dom.table = function() {
  var table__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var table = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return table__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  table.cljs$lang$maxFixedArity = 1;
  table.cljs$lang$applyTo = function(arglist__10998) {
    var opts__4904__auto__ = cljs.core.first(arglist__10998);
    var children__4905__auto__ = cljs.core.rest(arglist__10998);
    return table__delegate(opts__4904__auto__, children__4905__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
om.dom.tbody = function() {
  var tbody__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var tbody = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tbody__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 1;
  tbody.cljs$lang$applyTo = function(arglist__10999) {
    var opts__4904__auto__ = cljs.core.first(arglist__10999);
    var children__4905__auto__ = cljs.core.rest(arglist__10999);
    return tbody__delegate(opts__4904__auto__, children__4905__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
om.dom.td = function() {
  var td__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var td = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return td__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  td.cljs$lang$maxFixedArity = 1;
  td.cljs$lang$applyTo = function(arglist__11000) {
    var opts__4904__auto__ = cljs.core.first(arglist__11000);
    var children__4905__auto__ = cljs.core.rest(arglist__11000);
    return td__delegate(opts__4904__auto__, children__4905__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
om.dom.tfoot = function() {
  var tfoot__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var tfoot = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tfoot__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 1;
  tfoot.cljs$lang$applyTo = function(arglist__11001) {
    var opts__4904__auto__ = cljs.core.first(arglist__11001);
    var children__4905__auto__ = cljs.core.rest(arglist__11001);
    return tfoot__delegate(opts__4904__auto__, children__4905__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
om.dom.th = function() {
  var th__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var th = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return th__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  th.cljs$lang$maxFixedArity = 1;
  th.cljs$lang$applyTo = function(arglist__11002) {
    var opts__4904__auto__ = cljs.core.first(arglist__11002);
    var children__4905__auto__ = cljs.core.rest(arglist__11002);
    return th__delegate(opts__4904__auto__, children__4905__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
om.dom.thead = function() {
  var thead__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var thead = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return thead__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  thead.cljs$lang$maxFixedArity = 1;
  thead.cljs$lang$applyTo = function(arglist__11003) {
    var opts__4904__auto__ = cljs.core.first(arglist__11003);
    var children__4905__auto__ = cljs.core.rest(arglist__11003);
    return thead__delegate(opts__4904__auto__, children__4905__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
om.dom.time = function() {
  var time__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var time = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return time__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  time.cljs$lang$maxFixedArity = 1;
  time.cljs$lang$applyTo = function(arglist__11004) {
    var opts__4904__auto__ = cljs.core.first(arglist__11004);
    var children__4905__auto__ = cljs.core.rest(arglist__11004);
    return time__delegate(opts__4904__auto__, children__4905__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
om.dom.title = function() {
  var title__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var title = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return title__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  title.cljs$lang$maxFixedArity = 1;
  title.cljs$lang$applyTo = function(arglist__11005) {
    var opts__4904__auto__ = cljs.core.first(arglist__11005);
    var children__4905__auto__ = cljs.core.rest(arglist__11005);
    return title__delegate(opts__4904__auto__, children__4905__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
om.dom.tr = function() {
  var tr__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var tr = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tr__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  tr.cljs$lang$maxFixedArity = 1;
  tr.cljs$lang$applyTo = function(arglist__11006) {
    var opts__4904__auto__ = cljs.core.first(arglist__11006);
    var children__4905__auto__ = cljs.core.rest(arglist__11006);
    return tr__delegate(opts__4904__auto__, children__4905__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
om.dom.track = function() {
  var track__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var track = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return track__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  track.cljs$lang$maxFixedArity = 1;
  track.cljs$lang$applyTo = function(arglist__11007) {
    var opts__4904__auto__ = cljs.core.first(arglist__11007);
    var children__4905__auto__ = cljs.core.rest(arglist__11007);
    return track__delegate(opts__4904__auto__, children__4905__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
om.dom.u = function() {
  var u__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var u = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return u__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  u.cljs$lang$maxFixedArity = 1;
  u.cljs$lang$applyTo = function(arglist__11008) {
    var opts__4904__auto__ = cljs.core.first(arglist__11008);
    var children__4905__auto__ = cljs.core.rest(arglist__11008);
    return u__delegate(opts__4904__auto__, children__4905__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
om.dom.ul = function() {
  var ul__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var ul = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ul__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  ul.cljs$lang$maxFixedArity = 1;
  ul.cljs$lang$applyTo = function(arglist__11009) {
    var opts__4904__auto__ = cljs.core.first(arglist__11009);
    var children__4905__auto__ = cljs.core.rest(arglist__11009);
    return ul__delegate(opts__4904__auto__, children__4905__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
om.dom.var$ = function() {
  var var$__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var var$ = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return var$__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  var$.cljs$lang$maxFixedArity = 1;
  var$.cljs$lang$applyTo = function(arglist__11010) {
    var opts__4904__auto__ = cljs.core.first(arglist__11010);
    var children__4905__auto__ = cljs.core.rest(arglist__11010);
    return var$__delegate(opts__4904__auto__, children__4905__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
om.dom.video = function() {
  var video__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var video = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return video__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  video.cljs$lang$maxFixedArity = 1;
  video.cljs$lang$applyTo = function(arglist__11011) {
    var opts__4904__auto__ = cljs.core.first(arglist__11011);
    var children__4905__auto__ = cljs.core.rest(arglist__11011);
    return video__delegate(opts__4904__auto__, children__4905__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
om.dom.wbr = function() {
  var wbr__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var wbr = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wbr__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 1;
  wbr.cljs$lang$applyTo = function(arglist__11012) {
    var opts__4904__auto__ = cljs.core.first(arglist__11012);
    var children__4905__auto__ = cljs.core.rest(arglist__11012);
    return wbr__delegate(opts__4904__auto__, children__4905__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
om.dom.circle = function() {
  var circle__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var circle = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return circle__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  circle.cljs$lang$maxFixedArity = 1;
  circle.cljs$lang$applyTo = function(arglist__11013) {
    var opts__4904__auto__ = cljs.core.first(arglist__11013);
    var children__4905__auto__ = cljs.core.rest(arglist__11013);
    return circle__delegate(opts__4904__auto__, children__4905__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
om.dom.g = function() {
  var g__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var g = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return g__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  g.cljs$lang$maxFixedArity = 1;
  g.cljs$lang$applyTo = function(arglist__11014) {
    var opts__4904__auto__ = cljs.core.first(arglist__11014);
    var children__4905__auto__ = cljs.core.rest(arglist__11014);
    return g__delegate(opts__4904__auto__, children__4905__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
om.dom.line = function() {
  var line__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var line = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return line__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  line.cljs$lang$maxFixedArity = 1;
  line.cljs$lang$applyTo = function(arglist__11015) {
    var opts__4904__auto__ = cljs.core.first(arglist__11015);
    var children__4905__auto__ = cljs.core.rest(arglist__11015);
    return line__delegate(opts__4904__auto__, children__4905__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
om.dom.path = function() {
  var path__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var path = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return path__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  path.cljs$lang$maxFixedArity = 1;
  path.cljs$lang$applyTo = function(arglist__11016) {
    var opts__4904__auto__ = cljs.core.first(arglist__11016);
    var children__4905__auto__ = cljs.core.rest(arglist__11016);
    return path__delegate(opts__4904__auto__, children__4905__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
om.dom.polyline = function() {
  var polyline__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var polyline = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polyline__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 1;
  polyline.cljs$lang$applyTo = function(arglist__11017) {
    var opts__4904__auto__ = cljs.core.first(arglist__11017);
    var children__4905__auto__ = cljs.core.rest(arglist__11017);
    return polyline__delegate(opts__4904__auto__, children__4905__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
om.dom.rect = function() {
  var rect__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var rect = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rect__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  rect.cljs$lang$maxFixedArity = 1;
  rect.cljs$lang$applyTo = function(arglist__11018) {
    var opts__4904__auto__ = cljs.core.first(arglist__11018);
    var children__4905__auto__ = cljs.core.rest(arglist__11018);
    return rect__delegate(opts__4904__auto__, children__4905__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
om.dom.svg = function() {
  var svg__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var svg = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return svg__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  svg.cljs$lang$maxFixedArity = 1;
  svg.cljs$lang$applyTo = function(arglist__11019) {
    var opts__4904__auto__ = cljs.core.first(arglist__11019);
    var children__4905__auto__ = cljs.core.rest(arglist__11019);
    return svg__delegate(opts__4904__auto__, children__4905__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
om.dom.text = function() {
  var text__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var text = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return text__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  text.cljs$lang$maxFixedArity = 1;
  text.cljs$lang$applyTo = function(arglist__11020) {
    var opts__4904__auto__ = cljs.core.first(arglist__11020);
    var children__4905__auto__ = cljs.core.rest(arglist__11020);
    return text__delegate(opts__4904__auto__, children__4905__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
om.dom.wrap_form_element = function wrap_form_element(ctor) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }});
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input);
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea);
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option);
om.dom.render = function render(component, el) {
  return React.renderComponent(component, el);
};
om.dom.render_to_str = function render_to_str(c) {
  return React.renderComponentToString(c);
};
goog.provide("om.core");
goog.require("cljs.core");
goog.require("om.dom");
goog.require("om.dom");
om.core._STAR_read_enabled_STAR_ = false;
om.core._STAR_parent_STAR_ = null;
om.core.IInitState = function() {
  var obj10784 = {};
  return obj10784;
}();
om.core.init_state = function init_state(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = om.core.init_state[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core.init_state["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj10786 = {};
  return obj10786;
}();
om.core.should_update = function should_update(this$, next_props, next_state) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = om.core.should_update[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core.should_update["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj10788 = {};
  return obj10788;
}();
om.core.will_mount = function will_mount(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = om.core.will_mount[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core.will_mount["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj10790 = {};
  return obj10790;
}();
om.core.did_mount = function did_mount(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = om.core.did_mount[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core.did_mount["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUnmount = function() {
  var obj10792 = {};
  return obj10792;
}();
om.core.will_unmount = function will_unmount(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = om.core.will_unmount[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core.will_unmount["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj10794 = {};
  return obj10794;
}();
om.core.will_update = function will_update(this$, next_props, next_state) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = om.core.will_update[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core.will_update["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj10796 = {};
  return obj10796;
}();
om.core.did_update = function did_update(this$, prev_props, prev_state) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = om.core.did_update[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core.did_update["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state);
  }
};
om.core.IRender = function() {
  var obj10798 = {};
  return obj10798;
}();
om.core.render = function render(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = om.core.render[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core.render["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderState = function() {
  var obj10800 = {};
  return obj10800;
}();
om.core.render_state = function render_state(this$, state) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = om.core.render_state[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core.render_state["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.IValue = function() {
  var obj10802 = {};
  return obj10802;
}();
om.core._value = function _value(x) {
  if (function() {
    var and__3391__auto__ = x;
    if (and__3391__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4030__auto__ = x == null ? null : x;
    return function() {
      var or__3403__auto__ = om.core._value[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core._value["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj10804 = {};
  return obj10804;
}();
om.core._path = function _path(cursor) {
  if (function() {
    var and__3391__auto__ = cursor;
    if (and__3391__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4030__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3403__auto__ = om.core._path[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core._path["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function _state(cursor) {
  if (function() {
    var and__3391__auto__ = cursor;
    if (and__3391__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4030__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3403__auto__ = om.core._state[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core._state["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj10806 = {};
  return obj10806;
}();
om.core._to_cursor = function() {
  var _to_cursor = null;
  var _to_cursor__2 = function(value, state) {
    if (function() {
      var and__3391__auto__ = value;
      if (and__3391__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$2;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
    } else {
      var x__4030__auto__ = value == null ? null : value;
      return function() {
        var or__3403__auto__ = om.core._to_cursor[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = om.core._to_cursor["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state);
    }
  };
  var _to_cursor__3 = function(value, state, path) {
    if (function() {
      var and__3391__auto__ = value;
      if (and__3391__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$3;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
    } else {
      var x__4030__auto__ = value == null ? null : value;
      return function() {
        var or__3403__auto__ = om.core._to_cursor[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = om.core._to_cursor["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path);
    }
  };
  _to_cursor = function(value, state, path) {
    switch(arguments.length) {
      case 2:
        return _to_cursor__2.call(this, value, state);
      case 3:
        return _to_cursor__3.call(this, value, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _to_cursor.cljs$core$IFn$_invoke$arity$2 = _to_cursor__2;
  _to_cursor.cljs$core$IFn$_invoke$arity$3 = _to_cursor__3;
  return _to_cursor;
}();
om.core.transact_STAR_ = function transact_STAR_(state, path, f) {
  var old_state = cljs.core.deref.call(null, state);
  if (cljs.core.empty_QMARK_.call(null, path)) {
    cljs.core.swap_BANG_.call(null, state, f);
  } else {
    cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f);
  }
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", 1017337751), path, new cljs.core.Keyword(null, "old-value", "old-value", 1451216317), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 3626601078), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1449001181), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 3624385942), 
  cljs.core.deref.call(null, state)], null);
};
om.core.ITransact = function() {
  var obj10808 = {};
  return obj10808;
}();
om.core._transact_BANG_ = function _transact_BANG_(cursor, korks, f) {
  if (function() {
    var and__3391__auto__ = cursor;
    if (and__3391__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$3(cursor, korks, f);
  } else {
    var x__4030__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3403__auto__ = om.core._transact_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core._transact_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, korks, f);
  }
};
om.core.INotify = function() {
  var obj10810 = {};
  return obj10810;
}();
om.core._notify = function _notify(x, tx_data, root_cursor) {
  if (function() {
    var and__3391__auto__ = x;
    if (and__3391__auto__) {
      return x.om$core$INotify$_notify$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return x.om$core$INotify$_notify$arity$3(x, tx_data, root_cursor);
  } else {
    var x__4030__auto__ = x == null ? null : x;
    return function() {
      var or__3403__auto__ = om.core._notify[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core._notify["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-notify", x);
        }
      }
    }().call(null, x, tx_data, root_cursor);
  }
};
om.core.children = function children(node) {
  var c = node.props.children;
  if (cljs.core.fn_QMARK_.call(null, c)) {
    return node.props.children = function() {
      var _STAR_read_enabled_STAR_10812 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        return c.call(null, node);
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10812;
      }
    }();
  } else {
    return c;
  }
};
om.core.get_props = function get_props(x) {
  return x.props["__om_cursor"];
};
om.core.get_state = function() {
  var get_state = null;
  var get_state__1 = function(owner) {
    var state = owner.state;
    var or__3403__auto__ = state["__om_pending_state"];
    if (cljs.core.truth_(or__3403__auto__)) {
      return or__3403__auto__;
    } else {
      return state["__om_state"];
    }
  };
  var get_state__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_state.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_state.call(null, owner);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get_in.call(null, get_state.call(null, owner), korks);
        } else {
          return null;
        }
      }
    }
  };
  get_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_state__1.call(this, owner);
      case 2:
        return get_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_state.cljs$core$IFn$_invoke$arity$1 = get_state__1;
  get_state.cljs$core$IFn$_invoke$arity$2 = get_state__2;
  return get_state;
}();
om.core.get_shared = function() {
  var get_shared = null;
  var get_shared__1 = function(owner) {
    if (owner == null) {
      return null;
    } else {
      return owner.props["__om_shared"];
    }
  };
  var get_shared__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_shared.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_shared.call(null, owner);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get_in.call(null, get_shared.call(null, owner), korks);
        } else {
          return null;
        }
      }
    }
  };
  get_shared = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_shared__1.call(this, owner);
      case 2:
        return get_shared__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_shared.cljs$core$IFn$_invoke$arity$1 = get_shared__1;
  get_shared.cljs$core$IFn$_invoke$arity$2 = get_shared__2;
  return get_shared;
}();
om.core.merge_pending_state = function merge_pending_state(owner) {
  var state = owner.state;
  var temp__4092__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4092__auto__)) {
    var pending_state = temp__4092__auto__;
    var G__10814 = state;
    G__10814["__om_prev_state"] = state["__om_state"];
    G__10814["__om_state"] = pending_state;
    G__10814["__om_pending_state"] = null;
    return G__10814;
  } else {
    return null;
  }
};
om.core.merge_props_state = function() {
  var merge_props_state = null;
  var merge_props_state__1 = function(owner) {
    return merge_props_state.call(null, owner, null);
  };
  var merge_props_state__2 = function(owner, props) {
    var props__$1 = function() {
      var or__3403__auto__ = props;
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return owner.props;
      }
    }();
    var temp__4092__auto__ = props__$1["__om_state"];
    if (cljs.core.truth_(temp__4092__auto__)) {
      var props_state = temp__4092__auto__;
      var state = owner.state;
      state["__om_pending_state"] = cljs.core.merge.call(null, function() {
        var or__3403__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state["__om_state"];
        }
      }(), props_state);
      return props__$1["__om_state"] = null;
    } else {
      return null;
    }
  };
  merge_props_state = function(owner, props) {
    switch(arguments.length) {
      case 1:
        return merge_props_state__1.call(this, owner);
      case 2:
        return merge_props_state__2.call(this, owner, props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge_props_state.cljs$core$IFn$_invoke$arity$1 = merge_props_state__1;
  merge_props_state.cljs$core$IFn$_invoke$arity$2 = merge_props_state__2;
  return merge_props_state;
}();
om.core.Pure = React.createClass({"render":function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var _STAR_read_enabled_STAR_10829 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    if (function() {
      var G__10830 = c;
      if (G__10830) {
        var bit__4053__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3403__auto__ = bit__4053__auto__;
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return G__10830.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__10830.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__10830);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__10830);
      }
    }()) {
      var _STAR_parent_STAR_10831 = om.core._STAR_parent_STAR_;
      try {
        om.core._STAR_parent_STAR_ = this$;
        return om.core.render.call(null, c);
      } finally {
        om.core._STAR_parent_STAR_ = _STAR_parent_STAR_10831;
      }
    } else {
      if (function() {
        var G__10832 = c;
        if (G__10832) {
          var bit__4053__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3403__auto__ = bit__4053__auto__;
            if (cljs.core.truth_(or__3403__auto__)) {
              return or__3403__auto__;
            } else {
              return G__10832.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__10832.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__10832);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__10832);
        }
      }()) {
        var _STAR_parent_STAR_10833 = om.core._STAR_parent_STAR_;
        try {
          om.core._STAR_parent_STAR_ = this$;
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } finally {
          om.core._STAR_parent_STAR_ = _STAR_parent_STAR_10833;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return c;
        } else {
          return null;
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10829;
  }
}, "componentDidUpdate":function(prev_props, prev_state, root_node) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__10827 = c;
    if (G__10827) {
      var bit__4053__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3403__auto__ = bit__4053__auto__;
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return G__10827.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__10827.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__10827);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__10827);
    }
  }()) {
    var state_10834 = this$.state;
    var _STAR_read_enabled_STAR_10828_10835 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.did_update.call(null, c, om.core.get_props.call(null, {"props":prev_props}), function() {
        var or__3403__auto__ = state_10834["__om_prev_state"];
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state_10834["__om_state"];
        }
      }());
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10828_10835;
    }
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, "componentWillUpdate":function(next_props, next_state) {
  var this$ = this;
  var c_10836 = om.core.children.call(null, this$);
  if (function() {
    var G__10825 = c_10836;
    if (G__10825) {
      var bit__4053__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3403__auto__ = bit__4053__auto__;
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return G__10825.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__10825.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__10825);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__10825);
    }
  }()) {
    var state_10837 = this$.state;
    var _STAR_read_enabled_STAR_10826_10838 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_update.call(null, c_10836, om.core.get_props.call(null, {"props":next_props}), function() {
        var or__3403__auto__ = state_10837["__om_pending_state"];
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state_10837["__om_state"];
        }
      }());
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10826_10838;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, "componentWillUnmount":function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__10823 = c;
    if (G__10823) {
      var bit__4053__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3403__auto__ = bit__4053__auto__;
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return G__10823.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__10823.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__10823);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__10823);
    }
  }()) {
    var _STAR_read_enabled_STAR_10824 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_unmount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10824;
    }
  } else {
    return null;
  }
}, "componentDidMount":function(node) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__10821 = c;
    if (G__10821) {
      var bit__4053__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3403__auto__ = bit__4053__auto__;
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return G__10821.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__10821.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__10821);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__10821);
    }
  }()) {
    var _STAR_read_enabled_STAR_10822 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.did_mount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10822;
    }
  } else {
    return null;
  }
}, "componentWillMount":function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_10839 = om.core.children.call(null, this$);
  if (function() {
    var G__10819 = c_10839;
    if (G__10819) {
      var bit__4053__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3403__auto__ = bit__4053__auto__;
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return G__10819.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__10819.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__10819);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__10819);
    }
  }()) {
    var _STAR_read_enabled_STAR_10820_10840 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_mount.call(null, c_10839);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10820_10840;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, "shouldComponentUpdate":function(next_props, next_state) {
  var this$ = this;
  var _STAR_read_enabled_STAR_10817 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    var props = this$.props;
    var state = this$.state;
    var c = om.core.children.call(null, this$);
    om.core.merge_props_state.call(null, this$, next_props);
    if (function() {
      var G__10818 = c;
      if (G__10818) {
        var bit__4053__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3403__auto__ = bit__4053__auto__;
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return G__10818.om$core$IShouldUpdate$;
          }
        }())) {
          return true;
        } else {
          if (!G__10818.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__10818);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__10818);
      }
    }()) {
      return om.core.should_update.call(null, c, om.core.get_props.call(null, {"props":next_props}), function() {
        var or__3403__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state["__om_state"];
        }
      }());
    } else {
      if (!(om.core._value.call(null, props["__om_cursor"]) === om.core._value.call(null, next_props["__om_cursor"]))) {
        return true;
      } else {
        if (!(state["__om_pending_state"] == null)) {
          return true;
        } else {
          if (!(props["__om_index"] === next_props["__om_index"])) {
            return true;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10817;
  }
}, "getInitialState":function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3403__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3403__auto__)) {
      return or__3403__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var ret = {"__om_state":cljs.core.merge.call(null, istate, function() {
    var G__10815 = c;
    if (G__10815) {
      var bit__4053__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3403__auto__ = bit__4053__auto__;
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return G__10815.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__10815.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__10815);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__10815);
    }
  }() ? function() {
    var _STAR_read_enabled_STAR_10816 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.init_state.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10816;
    }
  }() : null)};
  props["__om_init_state"] = null;
  return ret;
}});
om.core.pure = function pure(obj) {
  return new om.core.Pure(obj);
};
om.core.path = function path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.cursor_QMARK_ = function cursor_QMARK_(x) {
  var G__10842 = x;
  if (G__10842) {
    var bit__4053__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3403__auto__ = bit__4053__auto__;
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return G__10842.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__10842.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__10842);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__10842);
  }
};
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2158397195;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "om.core/MapCursor");
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(_, k, not_found) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    var v = cljs.core._lookup.call(null, self__.value, k, not_found);
    if (!cljs.core._EQ_.call(null, v, not_found)) {
      return om.core.to_cursor.call(null, v, self__.state, cljs.core.conj.call(null, self__.path, k));
    } else {
      return not_found;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.call = function() {
  var G__10846 = null;
  var G__10846__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10846__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10846 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10846__2.call(this, self__, k);
      case 3:
        return G__10846__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10846;
}();
om.core.MapCursor.prototype.apply = function(self__, args10843) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10843)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return self__.value;
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(p__10844) {
        var vec__10845 = p__10844;
        var k = cljs.core.nth.call(null, vec__10845, 0, null);
        var v = cljs.core.nth.call(null, vec__10845, 1, null);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core.to_cursor.call(null, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
      }, self__.value);
    } else {
      return null;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$3 = function(_, korks, f) {
  var self__ = this;
  var ___$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, cljs.core.into.call(null, self__.path, korks), f);
};
om.core.__GT_MapCursor = function __GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2175181595;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "om.core/IndexedCursor");
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, null);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, not_found);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, n, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.call = function() {
  var G__10848 = null;
  var G__10848__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10848__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10848 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10848__2.call(this, self__, k);
      case 3:
        return G__10848__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10848;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args10847) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10847)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return self__.value;
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(v, i) {
        return om.core.to_cursor.call(null, v, self__.state, cljs.core.conj.call(null, self__.path, i));
      }, self__.value, cljs.core.range.call(null));
    } else {
      return null;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(_, n) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(_, n, not_found) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (n < cljs.core._count.call(null, self__.value)) {
      return om.core.to_cursor.call(null, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
    } else {
      return not_found;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$3 = function(_, korks, f) {
  var self__ = this;
  var ___$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, cljs.core.into.call(null, self__.path, korks), f);
};
om.core.__GT_IndexedCursor = function __GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function to_cursor_STAR_(val, state, path) {
  var x10850 = cljs.core.clone.call(null, val);
  x10850.cljs$core$IEquiv$ = true;
  x10850.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
    var ___$1 = this;
    if (om.core._STAR_read_enabled_STAR_) {
      if (om.core.cursor_QMARK_.call(null, other)) {
        return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
      } else {
        return cljs.core._EQ_.call(null, val, other);
      }
    } else {
      throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
    }
  };
  x10850.om$core$ITransact$ = true;
  x10850.om$core$ITransact$_transact_BANG_$arity$3 = function(_, korks, f) {
    var ___$1 = this;
    return om.core.transact_STAR_.call(null, state, cljs.core.into.call(null, path, korks), f);
  };
  x10850.om$core$ICursor$ = true;
  x10850.om$core$ICursor$_path$arity$1 = function(_) {
    var ___$1 = this;
    return path;
  };
  x10850.om$core$ICursor$_state$arity$1 = function(_) {
    var ___$1 = this;
    return state;
  };
  x10850.cljs$core$IDeref$ = true;
  x10850.cljs$core$IDeref$_deref$arity$1 = function(this$) {
    var this$__$1 = this;
    if (!om.core._STAR_read_enabled_STAR_) {
      return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path);
    } else {
      throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
    }
  };
  return x10850;
};
om.core.to_cursor = function() {
  var to_cursor = null;
  var to_cursor__1 = function(val) {
    return to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__2 = function(val, state) {
    return to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__3 = function(val, state, path) {
    if (om.core.cursor_QMARK_.call(null, val)) {
      return val;
    } else {
      if (function() {
        var G__10853 = val;
        if (G__10853) {
          var bit__4053__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3403__auto__ = bit__4053__auto__;
            if (cljs.core.truth_(or__3403__auto__)) {
              return or__3403__auto__;
            } else {
              return G__10853.om$core$IToCursor$;
            }
          }())) {
            return true;
          } else {
            if (!G__10853.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__10853);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__10853);
        }
      }()) {
        return om.core._to_cursor.call(null, val, state, path);
      } else {
        if (cljs.core.indexed_QMARK_.call(null, val)) {
          return new om.core.IndexedCursor(val, state, path);
        } else {
          if (cljs.core.map_QMARK_.call(null, val)) {
            return new om.core.MapCursor(val, state, path);
          } else {
            if (function() {
              var G__10854 = val;
              if (G__10854) {
                var bit__4053__auto__ = G__10854.cljs$lang$protocol_mask$partition1$ & 8192;
                if (bit__4053__auto__ || G__10854.cljs$core$ICloneable$) {
                  return true;
                } else {
                  if (!G__10854.cljs$lang$protocol_mask$partition1$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__10854);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__10854);
              }
            }()) {
              return om.core.to_cursor_STAR_.call(null, val, state, path);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return val;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  to_cursor = function(val, state, path) {
    switch(arguments.length) {
      case 1:
        return to_cursor__1.call(this, val);
      case 2:
        return to_cursor__2.call(this, val, state);
      case 3:
        return to_cursor__3.call(this, val, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  to_cursor.cljs$core$IFn$_invoke$arity$1 = to_cursor__1;
  to_cursor.cljs$core$IFn$_invoke$arity$2 = to_cursor__2;
  to_cursor.cljs$core$IFn$_invoke$arity$3 = to_cursor__3;
  return to_cursor;
}();
om.core.notify_STAR_ = function notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.render_all = function render_all() {
  om.core.refresh_queued = false;
  var seq__10859 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
  var chunk__10860 = null;
  var count__10861 = 0;
  var i__10862 = 0;
  while (true) {
    if (i__10862 < count__10861) {
      var f = cljs.core._nth.call(null, chunk__10860, i__10862);
      f.call(null);
      var G__10863 = seq__10859;
      var G__10864 = chunk__10860;
      var G__10865 = count__10861;
      var G__10866 = i__10862 + 1;
      seq__10859 = G__10863;
      chunk__10860 = G__10864;
      count__10861 = G__10865;
      i__10862 = G__10866;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__10859);
      if (temp__4092__auto__) {
        var seq__10859__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10859__$1)) {
          var c__4151__auto__ = cljs.core.chunk_first.call(null, seq__10859__$1);
          var G__10867 = cljs.core.chunk_rest.call(null, seq__10859__$1);
          var G__10868 = c__4151__auto__;
          var G__10869 = cljs.core.count.call(null, c__4151__auto__);
          var G__10870 = 0;
          seq__10859 = G__10867;
          chunk__10860 = G__10868;
          count__10861 = G__10869;
          i__10862 = G__10870;
          continue;
        } else {
          var f = cljs.core.first.call(null, seq__10859__$1);
          f.call(null);
          var G__10871 = cljs.core.next.call(null, seq__10859__$1);
          var G__10872 = null;
          var G__10873 = 0;
          var G__10874 = 0;
          seq__10859 = G__10871;
          chunk__10860 = G__10872;
          count__10861 = G__10873;
          i__10862 = G__10874;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_QMARK_ = function valid_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "init-state", "init-state", 4479067398), null, new cljs.core.Keyword(null, "state", "state", 1123661827), null, new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), null, new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514), null, new cljs.core.Keyword(null, "key", "key", 1014010321), null, new cljs.core.Keyword(null, 
  "shared", "shared", 4405305303), null, new cljs.core.Keyword(null, "opts", "opts", 1017322386), null, new cljs.core.Keyword(null, "fn", "fn", 1013907514), null], null), null), cljs.core.keys.call(null, m));
};
om.core.build = function() {
  var build = null;
  var build__2 = function(f, cursor) {
    return build.call(null, f, cursor, null);
  };
  var build__3 = function(f, cursor, m) {
    if (om.core.valid_QMARK_.call(null, m)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid?", "valid?", 1830611324, null), new cljs.core.Symbol(null, "m", "m", -1640531418, null))))].join(""));
    }
    if (m == null) {
      var shared = function() {
        var or__3403__auto__ = (new cljs.core.Keyword(null, "shared", "shared", 4405305303)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var pure__4938__auto__ = om.core.pure.call(null, {"children":function(this$) {
        var _STAR_read_enabled_STAR_10879 = om.core._STAR_read_enabled_STAR_;
        try {
          om.core._STAR_read_enabled_STAR_ = true;
          return f.call(null, cursor, this$);
        } finally {
          om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10879;
        }
      }, "__om_shared":shared, "__om_cursor":cursor});
      pure__4938__auto__.constructor = goog.getUid(f);
      return pure__4938__auto__;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var map__10880 = m;
        var map__10880__$1 = cljs.core.seq_QMARK_.call(null, map__10880) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10880) : map__10880;
        var opts = cljs.core.get.call(null, map__10880__$1, new cljs.core.Keyword(null, "opts", "opts", 1017322386));
        var init_state = cljs.core.get.call(null, map__10880__$1, new cljs.core.Keyword(null, "init-state", "init-state", 4479067398));
        var state = cljs.core.get.call(null, map__10880__$1, new cljs.core.Keyword(null, "state", "state", 1123661827));
        var key = cljs.core.get.call(null, map__10880__$1, new cljs.core.Keyword(null, "key", "key", 1014010321));
        var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", 1013907514));
        var cursor_SINGLEQUOTE_ = !(dataf == null) ? dataf.call(null, cursor) : cursor;
        var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 4184082563));
        var shared = function() {
          var or__3403__auto__ = (new cljs.core.Keyword(null, "shared", "shared", 4405305303)).cljs$core$IFn$_invoke$arity$1(m);
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
          }
        }();
        var pure__4938__auto__ = om.core.pure.call(null, {"children":opts == null ? function(this$) {
          var _STAR_read_enabled_STAR_10881 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            return f.call(null, cursor_SINGLEQUOTE_, this$);
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10881;
          }
        } : function(this$) {
          var _STAR_read_enabled_STAR_10882 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            return f.call(null, cursor_SINGLEQUOTE_, this$, opts);
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10882;
          }
        }, "key":rkey, "__om_shared":shared, "__om_state":state, "__om_init_state":init_state, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514)).cljs$core$IFn$_invoke$arity$1(m), "__om_cursor":cursor_SINGLEQUOTE_});
        pure__4938__auto__.constructor = goog.getUid(f);
        return pure__4938__auto__;
      } else {
        return null;
      }
    }
  };
  build = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build__2.call(this, f, cursor);
      case 3:
        return build__3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build.cljs$core$IFn$_invoke$arity$2 = build__2;
  build.cljs$core$IFn$_invoke$arity$3 = build__3;
  return build;
}();
om.core.build_all = function() {
  var build_all = null;
  var build_all__2 = function(f, xs) {
    return build_all.call(null, f, xs, null);
  };
  var build_all__3 = function(f, xs, m) {
    return cljs.core.map.call(null, function(x, i) {
      return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514), i));
    }, xs, cljs.core.range.call(null));
  };
  build_all = function(f, xs, m) {
    switch(arguments.length) {
      case 2:
        return build_all__2.call(this, f, xs);
      case 3:
        return build_all__3.call(this, f, xs, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_all.cljs$core$IFn$_invoke$arity$2 = build_all__2;
  build_all.cljs$core$IFn$_invoke$arity$3 = build_all__3;
  return build_all;
}();
om.core.root = function root(f, value, p__10883) {
  var map__10886 = p__10883;
  var map__10886__$1 = cljs.core.seq_QMARK_.call(null, map__10886) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10886) : map__10886;
  var options = map__10886__$1;
  var path = cljs.core.get.call(null, map__10886__$1, new cljs.core.Keyword(null, "path", "path", 1017337751));
  var tx_listen = cljs.core.get.call(null, map__10886__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 666878114));
  var shared = cljs.core.get.call(null, map__10886__$1, new cljs.core.Keyword(null, "shared", "shared", 4405305303));
  var target = cljs.core.get.call(null, map__10886__$1, new cljs.core.Keyword(null, "target", "target", 4427965699));
  if (!(target == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("No target specified to om.core/root"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "target", "target", 1773529930, null)))))].join(""));
  }
  var roots_SINGLEQUOTE__10888 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__10888, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__10888, target).call(null);
  } else {
  }
  var state = value instanceof cljs.core.Atom ? value : cljs.core.atom.call(null, value);
  var state__$1 = function() {
    var x10887 = state;
    x10887.om$core$INotify$ = true;
    x10887.om$core$INotify$_notify$arity$3 = function(x10887, state) {
      return function(_, tx_data, root_cursor) {
        var ___$1 = this;
        if (tx_listen == null) {
          return null;
        } else {
          return tx_listen.call(null, tx_data, root_cursor);
        }
      };
    }(x10887, state);
    return x10887;
  }();
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 4427965699), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 666878114), new cljs.core.Keyword(null, "path", "path", 1017337751));
  var rootf = function(state, state__$1, m) {
    return function rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path);
      return om.dom.render.call(null, om.core.build.call(null, f, cursor, m), target);
    };
  }(state, state__$1, m);
  var watch_key = cljs.core.gensym.call(null);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(_, ___$1, ___$2, ___$3) {
    if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
    } else {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
    }
    if (cljs.core.truth_(om.core.refresh_queued)) {
      return null;
    } else {
      om.core.refresh_queued = true;
      if (typeof requestAnimationFrame !== "undefined") {
        return requestAnimationFrame(om.core.render_all);
      } else {
        return setTimeout(om.core.render_all, 16);
      }
    }
  });
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function() {
    cljs.core.remove_watch.call(null, state__$1, watch_key);
    cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
    return React.unmountComponentAtNode(target);
  });
  return rootf.call(null);
};
om.core.transact_BANG_ = function() {
  var transact_BANG_ = null;
  var transact_BANG___2 = function(cursor, f) {
    return transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
  };
  var transact_BANG___3 = function(cursor, korks, f) {
    return transact_BANG_.call(null, cursor, korks, f, null);
  };
  var transact_BANG___4 = function(cursor, korks, f, tag) {
    var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.Keyword(null, "else", "else", 1017020587) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null) : null;
    var tx_data = om.core._transact_BANG_.call(null, cursor, korks__$1, f);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", 1014018828), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  };
  transact_BANG_ = function(cursor, korks, f, tag) {
    switch(arguments.length) {
      case 2:
        return transact_BANG___2.call(this, cursor, korks);
      case 3:
        return transact_BANG___3.call(this, cursor, korks, f);
      case 4:
        return transact_BANG___4.call(this, cursor, korks, f, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transact_BANG_.cljs$core$IFn$_invoke$arity$2 = transact_BANG___2;
  transact_BANG_.cljs$core$IFn$_invoke$arity$3 = transact_BANG___3;
  transact_BANG_.cljs$core$IFn$_invoke$arity$4 = transact_BANG___4;
  return transact_BANG_;
}();
om.core.update_BANG_ = function() {
  var update_BANG_ = null;
  var update_BANG___2 = function(cursor, v) {
    return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
      return v;
    }, null);
  };
  var update_BANG___3 = function(cursor, korks, v) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, null);
  };
  var update_BANG___4 = function(cursor, korks, v, tag) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, tag);
  };
  update_BANG_ = function(cursor, korks, v, tag) {
    switch(arguments.length) {
      case 2:
        return update_BANG___2.call(this, cursor, korks);
      case 3:
        return update_BANG___3.call(this, cursor, korks, v);
      case 4:
        return update_BANG___4.call(this, cursor, korks, v, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_BANG_.cljs$core$IFn$_invoke$arity$2 = update_BANG___2;
  update_BANG_.cljs$core$IFn$_invoke$arity$3 = update_BANG___3;
  update_BANG_.cljs$core$IFn$_invoke$arity$4 = update_BANG___4;
  return update_BANG_;
}();
om.core.get_node = function() {
  var get_node = null;
  var get_node__1 = function(owner) {
    return owner.getDOMNode();
  };
  var get_node__2 = function(owner, name) {
    var temp__4092__auto__ = owner.refs;
    if (cljs.core.truth_(temp__4092__auto__)) {
      var refs = temp__4092__auto__;
      return refs[name].getDOMNode();
    } else {
      return null;
    }
  };
  get_node = function(owner, name) {
    switch(arguments.length) {
      case 1:
        return get_node__1.call(this, owner);
      case 2:
        return get_node__2.call(this, owner, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_node.cljs$core$IFn$_invoke$arity$1 = get_node__1;
  get_node.cljs$core$IFn$_invoke$arity$2 = get_node__2;
  return get_node;
}();
om.core.set_state_BANG_ = function set_state_BANG_(owner, korks, v) {
  var _STAR_read_enabled_STAR_10890 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    var props = owner.props;
    var state = owner.state;
    var cursor = props["__om_cursor"];
    var path = om.core._path.call(null, cursor);
    var pstate = function() {
      var or__3403__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return state["__om_state"];
      }
    }();
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      state["__om_pending_state"] = cljs.core.assoc.call(null, pstate, korks, v);
    } else {
      state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, korks, v);
    }
    if (cljs.core.empty_QMARK_.call(null, path)) {
      return cljs.core.swap_BANG_.call(null, om.core._state.call(null, cursor), cljs.core.clone);
    } else {
      return cljs.core.swap_BANG_.call(null, om.core._state.call(null, cursor), cljs.core.update_in, path, cljs.core.clone);
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10890;
  }
};
om.core.get_render_state = function() {
  var get_render_state = null;
  var get_render_state__1 = function(owner) {
    return owner.state["__om_state"];
  };
  var get_render_state__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_render_state.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_render_state.call(null, owner);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get_in.call(null, get_render_state.call(null, owner), korks);
        } else {
          return null;
        }
      }
    }
  };
  get_render_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_render_state__1.call(this, owner);
      case 2:
        return get_render_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_render_state.cljs$core$IFn$_invoke$arity$1 = get_render_state__1;
  get_render_state.cljs$core$IFn$_invoke$arity$2 = get_render_state__2;
  return get_render_state;
}();
om.core.graft = function graft(value, cursor) {
  var state = om.core._state.call(null, cursor);
  var path = om.core._path.call(null, cursor);
  if (om.core.cursor_QMARK_.call(null, value)) {
    throw new Error([cljs.core.str(value), cljs.core.str(" is already a cursor.")].join(""));
  } else {
    var x10892 = cljs.core.clone.call(null, value);
    x10892.om$core$ICursor$ = true;
    x10892.om$core$ICursor$_state$arity$1 = function(_) {
      var ___$1 = this;
      return state;
    };
    x10892.om$core$ICursor$_path$arity$1 = function(_) {
      var ___$1 = this;
      return path;
    };
    x10892.om$core$ITransact$ = true;
    x10892.om$core$ITransact$_transact_BANG_$arity$3 = function(_, ___$1, ___$2) {
      var ___$3 = this;
      throw new Error("Cannot transact on graft");
    };
    return x10892;
  }
};
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.array");
goog.require("goog.events");
goog.require("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_handler) {
  goog.Disposable.call(this);
  this.handler_ = opt_handler;
  this.keys_ = [];
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture, opt_handler) {
  if (!goog.isArray(type)) {
    goog.events.EventHandler.typeArray_[0] = (type);
    type = goog.events.EventHandler.typeArray_;
  }
  for (var i = 0;i < type.length;i++) {
    var key = (goog.events.listen(src, type[i], opt_fn || this, opt_capture || false, opt_handler || (this.handler_ || this)));
    this.keys_.push(key);
  }
  return this;
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.listenOnce(src, type[i], opt_fn, opt_capture, opt_handler);
    }
  } else {
    var key = (goog.events.listenOnce(src, type, opt_fn || this, opt_capture, opt_handler || (this.handler_ || this)));
    this.keys_.push(key);
  }
  return this;
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler || (this.handler_ || this), this);
  return this;
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  return this.keys_.length;
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_handler);
    }
  } else {
    var listener = goog.events.getListener(src, type, opt_fn || this, opt_capture, opt_handler || (this.handler_ || this));
    if (listener) {
      var key = listener.key;
      goog.events.unlistenByKey(key);
      goog.array.remove(this.keys_, key);
    }
  }
  return this;
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler || (this.handler_ || this), this);
  return this;
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.array.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_.length = 0;
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll();
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.history.Event");
goog.require("goog.events.Event");
goog.require("goog.history.EventType");
goog.history.Event = function(token, isNavigation) {
  goog.events.Event.call(this, goog.history.EventType.NAVIGATE);
  this.token = token;
  this.isNavigation = isNavigation;
};
goog.inherits(goog.history.Event, goog.events.Event);
goog.provide("goog.History");
goog.provide("goog.History.Event");
goog.provide("goog.History.EventType");
goog.require("goog.Timer");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Event");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.history.Event");
goog.require("goog.history.EventType");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.History = function(opt_invisible, opt_blankPageUrl, opt_input, opt_iframe) {
  goog.events.EventTarget.call(this);
  if (opt_invisible && !opt_blankPageUrl) {
    throw Error("Can't use invisible history without providing a blank page.");
  }
  var input;
  if (opt_input) {
    input = opt_input;
  } else {
    var inputId = "history_state" + goog.History.historyCount_;
    document.write(goog.string.subs(goog.History.INPUT_TEMPLATE_, inputId, inputId));
    input = goog.dom.getElement(inputId);
  }
  this.hiddenInput_ = (input);
  this.window_ = opt_input ? goog.dom.getWindow(goog.dom.getOwnerDocument(opt_input)) : window;
  this.baseUrl_ = this.window_.location.href.split("#")[0];
  this.iframeSrc_ = opt_blankPageUrl;
  if (goog.userAgent.IE && !opt_blankPageUrl) {
    this.iframeSrc_ = window.location.protocol == "https" ? "https:///" : 'javascript:""';
  }
  this.timer_ = new goog.Timer(goog.History.PollingType.NORMAL);
  this.registerDisposable(this.timer_);
  this.userVisible_ = !opt_invisible;
  this.eventHandler_ = new goog.events.EventHandler(this);
  if (opt_invisible || goog.History.LEGACY_IE) {
    var iframe;
    if (opt_iframe) {
      iframe = opt_iframe;
    } else {
      var iframeId = "history_iframe" + goog.History.historyCount_;
      var srcAttribute = this.iframeSrc_ ? 'src\x3d"' + goog.string.htmlEscape(this.iframeSrc_) + '"' : "";
      document.write(goog.string.subs(goog.History.IFRAME_TEMPLATE_, iframeId, srcAttribute));
      iframe = goog.dom.getElement(iframeId);
    }
    this.iframe_ = (iframe);
    this.unsetIframe_ = true;
  }
  if (goog.History.LEGACY_IE) {
    this.eventHandler_.listen(this.window_, goog.events.EventType.LOAD, this.onDocumentLoaded);
    this.documentLoaded = false;
    this.shouldEnable_ = false;
  }
  if (this.userVisible_) {
    this.setHash_(this.getToken(), true);
  } else {
    this.setIframeToken_(this.hiddenInput_.value);
  }
  goog.History.historyCount_++;
};
goog.inherits(goog.History, goog.events.EventTarget);
goog.History.prototype.enabled_ = false;
goog.History.prototype.longerPolling_ = false;
goog.History.prototype.lastToken_ = null;
goog.History.HAS_ONHASHCHANGE = goog.userAgent.IE && goog.userAgent.isDocumentMode(8) || (goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.2") || goog.userAgent.WEBKIT && goog.userAgent.isVersion("532.1"));
goog.History.LEGACY_IE = goog.userAgent.IE && !goog.userAgent.isDocumentMode(8);
goog.History.HASH_ALWAYS_REQUIRED = goog.History.LEGACY_IE;
goog.History.prototype.lockedToken_ = null;
goog.History.prototype.disposeInternal = function() {
  goog.History.superClass_.disposeInternal.call(this);
  this.eventHandler_.dispose();
  this.setEnabled(false);
};
goog.History.prototype.setEnabled = function(enable) {
  if (enable == this.enabled_) {
    return;
  }
  if (goog.History.LEGACY_IE && !this.documentLoaded) {
    this.shouldEnable_ = enable;
    return;
  }
  if (enable) {
    if (goog.userAgent.OPERA) {
      this.eventHandler_.listen(this.window_.document, goog.History.INPUT_EVENTS_, this.operaDefibrillator_);
    } else {
      if (goog.userAgent.GECKO) {
        this.eventHandler_.listen(this.window_, "pageshow", this.onShow_);
      }
    }
    if (goog.History.HAS_ONHASHCHANGE && this.userVisible_) {
      this.eventHandler_.listen(this.window_, goog.events.EventType.HASHCHANGE, this.onHashChange_);
      this.enabled_ = true;
      this.dispatchEvent(new goog.history.Event(this.getToken(), false));
    } else {
      if (!goog.userAgent.IE || this.documentLoaded) {
        this.eventHandler_.listen(this.timer_, goog.Timer.TICK, goog.bind(this.check_, this, true));
        this.enabled_ = true;
        if (!goog.History.LEGACY_IE) {
          this.lastToken_ = this.getToken();
          this.dispatchEvent(new goog.history.Event(this.getToken(), false));
        }
        this.timer_.start();
      }
    }
  } else {
    this.enabled_ = false;
    this.eventHandler_.removeAll();
    this.timer_.stop();
  }
};
goog.History.prototype.onDocumentLoaded = function() {
  this.documentLoaded = true;
  if (this.hiddenInput_.value) {
    this.setIframeToken_(this.hiddenInput_.value, true);
  }
  this.setEnabled(this.shouldEnable_);
};
goog.History.prototype.onShow_ = function(e) {
  if (e.getBrowserEvent()["persisted"]) {
    this.setEnabled(false);
    this.setEnabled(true);
  }
};
goog.History.prototype.onHashChange_ = function(e) {
  var hash = this.getLocationFragment_(this.window_);
  if (hash != this.lastToken_) {
    this.update_(hash, true);
  }
};
goog.History.prototype.getToken = function() {
  if (this.lockedToken_ != null) {
    return this.lockedToken_;
  } else {
    if (this.userVisible_) {
      return this.getLocationFragment_(this.window_);
    } else {
      return this.getIframeToken_() || "";
    }
  }
};
goog.History.prototype.setToken = function(token, opt_title) {
  this.setHistoryState_(token, false, opt_title);
};
goog.History.prototype.replaceToken = function(token, opt_title) {
  this.setHistoryState_(token, true, opt_title);
};
goog.History.prototype.getLocationFragment_ = function(win) {
  var href = win.location.href;
  var index = href.indexOf("#");
  return index < 0 ? "" : href.substring(index + 1);
};
goog.History.prototype.setHistoryState_ = function(token, replace, opt_title) {
  if (this.getToken() != token) {
    if (this.userVisible_) {
      this.setHash_(token, replace);
      if (!goog.History.HAS_ONHASHCHANGE) {
        if (goog.userAgent.IE) {
          this.setIframeToken_(token, replace, opt_title);
        }
      }
      if (this.enabled_) {
        this.check_(false);
      }
    } else {
      this.setIframeToken_(token, replace);
      this.lockedToken_ = this.lastToken_ = this.hiddenInput_.value = token;
      this.dispatchEvent(new goog.history.Event(token, false));
    }
  }
};
goog.History.prototype.setHash_ = function(token, opt_replace) {
  var loc = this.window_.location;
  var url = this.baseUrl_;
  var hasHash = goog.string.contains(loc.href, "#");
  if (goog.History.HASH_ALWAYS_REQUIRED || (hasHash || token)) {
    url += "#" + token;
  }
  if (url != loc.href) {
    if (opt_replace) {
      loc.replace(url);
    } else {
      loc.href = url;
    }
  }
};
goog.History.prototype.setIframeToken_ = function(token, opt_replace, opt_title) {
  if (this.unsetIframe_ || token != this.getIframeToken_()) {
    this.unsetIframe_ = false;
    token = goog.string.urlEncode(token);
    if (goog.userAgent.IE) {
      var doc = goog.dom.getFrameContentDocument(this.iframe_);
      doc.open("text/html", opt_replace ? "replace" : undefined);
      doc.write(goog.string.subs(goog.History.IFRAME_SOURCE_TEMPLATE_, goog.string.htmlEscape((opt_title || this.window_.document.title)), token));
      doc.close();
    } else {
      var url = this.iframeSrc_ + "#" + token;
      var contentWindow = this.iframe_.contentWindow;
      if (contentWindow) {
        if (opt_replace) {
          contentWindow.location.replace(url);
        } else {
          contentWindow.location.href = url;
        }
      }
    }
  }
};
goog.History.prototype.getIframeToken_ = function() {
  if (goog.userAgent.IE) {
    var doc = goog.dom.getFrameContentDocument(this.iframe_);
    return doc.body ? goog.string.urlDecode(doc.body.innerHTML) : null;
  } else {
    var contentWindow = this.iframe_.contentWindow;
    if (contentWindow) {
      var hash;
      try {
        hash = goog.string.urlDecode(this.getLocationFragment_(contentWindow));
      } catch (e) {
        if (!this.longerPolling_) {
          this.setLongerPolling_(true);
        }
        return null;
      }
      if (this.longerPolling_) {
        this.setLongerPolling_(false);
      }
      return hash || null;
    } else {
      return null;
    }
  }
};
goog.History.prototype.check_ = function(isNavigation) {
  if (this.userVisible_) {
    var hash = this.getLocationFragment_(this.window_);
    if (hash != this.lastToken_) {
      this.update_(hash, isNavigation);
    }
  }
  if (!this.userVisible_ || goog.History.LEGACY_IE) {
    var token = this.getIframeToken_() || "";
    if (this.lockedToken_ == null || token == this.lockedToken_) {
      this.lockedToken_ = null;
      if (token != this.lastToken_) {
        this.update_(token, isNavigation);
      }
    }
  }
};
goog.History.prototype.update_ = function(token, isNavigation) {
  this.lastToken_ = this.hiddenInput_.value = token;
  if (this.userVisible_) {
    if (goog.History.LEGACY_IE) {
      this.setIframeToken_(token);
    }
    this.setHash_(token);
  } else {
    this.setIframeToken_(token);
  }
  this.dispatchEvent(new goog.history.Event(this.getToken(), isNavigation));
};
goog.History.prototype.setLongerPolling_ = function(longerPolling) {
  if (this.longerPolling_ != longerPolling) {
    this.timer_.setInterval(longerPolling ? goog.History.PollingType.LONG : goog.History.PollingType.NORMAL);
  }
  this.longerPolling_ = longerPolling;
};
goog.History.prototype.operaDefibrillator_ = function() {
  this.timer_.stop();
  this.timer_.start();
};
goog.History.INPUT_EVENTS_ = [goog.events.EventType.MOUSEDOWN, goog.events.EventType.KEYDOWN, goog.events.EventType.MOUSEMOVE];
goog.History.IFRAME_SOURCE_TEMPLATE_ = "\x3ctitle\x3e%s\x3c/title\x3e\x3cbody\x3e%s\x3c/body\x3e";
goog.History.IFRAME_TEMPLATE_ = '\x3ciframe id\x3d"%s" style\x3d"display:none" %s\x3e\x3c/iframe\x3e';
goog.History.INPUT_TEMPLATE_ = '\x3cinput type\x3d"text" name\x3d"%s" id\x3d"%s" style\x3d"display:none"\x3e';
goog.History.historyCount_ = 0;
goog.History.PollingType = {NORMAL:150, LONG:1E4};
goog.History.EventType = goog.history.EventType;
goog.History.Event = goog.history.Event;
goog.provide("floor16.navigation");
goog.require("cljs.core");
goog.require("goog.history.EventType");
goog.require("goog.History");
goog.require("goog.events.EventType");
goog.require("goog.events");
goog.require("goog.events");
goog.require("secretary.core");
goog.require("secretary.core");
goog.require("om.core");
goog.require("om.core");
cljs.core.enable_console_print_BANG_.call(null);
floor16.navigation.sys_data = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "handled-url", "handled-url", 2509932240), null, new cljs.core.Keyword(null, "pages", "pages", 1120330550), cljs.core.PersistentArrayMap.EMPTY], null));
floor16.navigation.app = function app() {
  return(new cljs.core.Keyword(null, "app", "app", 1014001043)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.navigation.sys_data));
};
floor16.navigation.get_cp = function get_cp() {
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, floor16.navigation.app.call(null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("floor16.navigation", "nav", "floor16.navigation/nav", 3308566370), new cljs.core.Keyword("floor16.navigation", "current-page", "floor16.navigation/current-page", 3958134818)], null));
};
floor16.navigation.set_cp_BANG_ = function set_cp_BANG_(page_id) {
  return cljs.core.swap_BANG_.call(null, floor16.navigation.app.call(null), cljs.core.assoc_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("floor16.navigation", "nav", "floor16.navigation/nav", 3308566370), new cljs.core.Keyword("floor16.navigation", "current-page", "floor16.navigation/current-page", 3958134818)], null), page_id);
};
floor16.navigation.handle_history_event = function handle_history_event(token) {
  cljs.core.println.call(null, "history event: ", token);
  if (cljs.core.truth_((new cljs.core.Keyword(null, "handled-url", "handled-url", 2509932240)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.navigation.sys_data)))) {
    return cljs.core.swap_BANG_.call(null, floor16.navigation.sys_data, cljs.core.dissoc, new cljs.core.Keyword(null, "handled-url", "handled-url", 2509932240));
  } else {
    return secretary.core.dispatch_BANG_.call(null, token);
  }
};
floor16.navigation.do_route = function do_route(uri, p__23831, params) {
  var map__23833 = p__23831;
  var map__23833__$1 = cljs.core.seq_QMARK_.call(null, map__23833) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23833) : map__23833;
  var page = map__23833__$1;
  var id = cljs.core.get.call(null, map__23833__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
  cljs.core.println.call(null, "Route: ", uri, " param: ", params);
  return floor16.navigation.set_cp_BANG_.call(null, id);
};
floor16.navigation.nav_sys = function nav_sys(p__23836) {
  var map__23858 = p__23836;
  var map__23858__$1 = cljs.core.seq_QMARK_.call(null, map__23858) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23858) : map__23858;
  var conf = map__23858__$1;
  var pages = cljs.core.get.call(null, map__23858__$1, new cljs.core.Keyword(null, "pages", "pages", 1120330550));
  cljs.core.swap_BANG_.call(null, floor16.navigation.sys_data, function(p1__23834_SHARP_) {
    return cljs.core.reduce.call(null, function(res, p__23859) {
      var vec__23860 = p__23859;
      var k = cljs.core.nth.call(null, vec__23860, 0, null);
      var v = cljs.core.nth.call(null, vec__23860, 1, null);
      if (cljs.core._EQ_.call(null, k, new cljs.core.Keyword(null, "pages", "pages", 1120330550))) {
        return res;
      } else {
        return cljs.core.assoc.call(null, res, k, v);
      }
    }, p1__23834_SHARP_, conf);
  });
  cljs.core.swap_BANG_.call(null, floor16.navigation.sys_data, cljs.core.assoc, new cljs.core.Keyword(null, "history", "history", 1940838406), new goog.History);
  var seq__23861_23879 = cljs.core.seq.call(null, pages);
  var chunk__23862_23880 = null;
  var count__23863_23881 = 0;
  var i__23864_23882 = 0;
  while (true) {
    if (i__23864_23882 < count__23863_23881) {
      var map__23865_23883 = cljs.core._nth.call(null, chunk__23862_23880, i__23864_23882);
      var map__23865_23884__$1 = cljs.core.seq_QMARK_.call(null, map__23865_23883) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23865_23883) : map__23865_23883;
      var p_23885 = map__23865_23884__$1;
      var uri_aliases_23886 = cljs.core.get.call(null, map__23865_23884__$1, new cljs.core.Keyword(null, "uri-aliases", "uri-aliases", 3989618447));
      var uri_23887 = cljs.core.get.call(null, map__23865_23884__$1, new cljs.core.Keyword(null, "uri", "uri", 1014020318));
      var id_23888 = cljs.core.get.call(null, map__23865_23884__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
      var seq__23866_23889 = cljs.core.seq.call(null, cljs.core.conj.call(null, function() {
        var or__3403__auto__ = uri_aliases_23886;
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return cljs.core.PersistentVector.EMPTY;
        }
      }(), function() {
        var or__3403__auto__ = uri_23887;
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return[cljs.core.str("!/"), cljs.core.str(cljs.core.name.call(null, id_23888))].join("");
        }
      }()));
      var chunk__23867_23890 = null;
      var count__23868_23891 = 0;
      var i__23869_23892 = 0;
      while (true) {
        if (i__23869_23892 < count__23868_23891) {
          var u_23893 = cljs.core._nth.call(null, chunk__23867_23890, i__23869_23892);
          cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.assoc, u_23893, function(seq__23866_23889, chunk__23867_23890, count__23868_23891, i__23869_23892, seq__23861_23879, chunk__23862_23880, count__23863_23881, i__23864_23882, u_23893, map__23865_23883, map__23865_23884__$1, p_23885, uri_aliases_23886, uri_23887, id_23888) {
            return function(params__9157__auto__) {
              var map__23870 = params__9157__auto__;
              var map__23870__$1 = cljs.core.seq_QMARK_.call(null, map__23870) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23870) : map__23870;
              var params = map__23870__$1;
              return floor16.navigation.do_route.call(null, u_23893, p_23885, params);
            };
          }(seq__23866_23889, chunk__23867_23890, count__23868_23891, i__23869_23892, seq__23861_23879, chunk__23862_23880, count__23863_23881, i__23864_23882, u_23893, map__23865_23883, map__23865_23884__$1, p_23885, uri_aliases_23886, uri_23887, id_23888));
          var G__23894 = seq__23866_23889;
          var G__23895 = chunk__23867_23890;
          var G__23896 = count__23868_23891;
          var G__23897 = i__23869_23892 + 1;
          seq__23866_23889 = G__23894;
          chunk__23867_23890 = G__23895;
          count__23868_23891 = G__23896;
          i__23869_23892 = G__23897;
          continue;
        } else {
          var temp__4092__auto___23898 = cljs.core.seq.call(null, seq__23866_23889);
          if (temp__4092__auto___23898) {
            var seq__23866_23899__$1 = temp__4092__auto___23898;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__23866_23899__$1)) {
              var c__4151__auto___23900 = cljs.core.chunk_first.call(null, seq__23866_23899__$1);
              var G__23901 = cljs.core.chunk_rest.call(null, seq__23866_23899__$1);
              var G__23902 = c__4151__auto___23900;
              var G__23903 = cljs.core.count.call(null, c__4151__auto___23900);
              var G__23904 = 0;
              seq__23866_23889 = G__23901;
              chunk__23867_23890 = G__23902;
              count__23868_23891 = G__23903;
              i__23869_23892 = G__23904;
              continue;
            } else {
              var u_23905 = cljs.core.first.call(null, seq__23866_23899__$1);
              cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.assoc, u_23905, function(seq__23866_23889, chunk__23867_23890, count__23868_23891, i__23869_23892, seq__23861_23879, chunk__23862_23880, count__23863_23881, i__23864_23882, u_23905, seq__23866_23899__$1, temp__4092__auto___23898, map__23865_23883, map__23865_23884__$1, p_23885, uri_aliases_23886, uri_23887, id_23888) {
                return function(params__9157__auto__) {
                  var map__23871 = params__9157__auto__;
                  var map__23871__$1 = cljs.core.seq_QMARK_.call(null, map__23871) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23871) : map__23871;
                  var params = map__23871__$1;
                  return floor16.navigation.do_route.call(null, u_23905, p_23885, params);
                };
              }(seq__23866_23889, chunk__23867_23890, count__23868_23891, i__23869_23892, seq__23861_23879, chunk__23862_23880, count__23863_23881, i__23864_23882, u_23905, seq__23866_23899__$1, temp__4092__auto___23898, map__23865_23883, map__23865_23884__$1, p_23885, uri_aliases_23886, uri_23887, id_23888));
              var G__23906 = cljs.core.next.call(null, seq__23866_23899__$1);
              var G__23907 = null;
              var G__23908 = 0;
              var G__23909 = 0;
              seq__23866_23889 = G__23906;
              chunk__23867_23890 = G__23907;
              count__23868_23891 = G__23908;
              i__23869_23892 = G__23909;
              continue;
            }
          } else {
          }
        }
        break;
      }
      cljs.core.swap_BANG_.call(null, floor16.navigation.sys_data, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pages", "pages", 1120330550), id_23888], null), cljs.core.assoc.call(null, p_23885, new cljs.core.Keyword(null, "uri", "uri", 1014020318), [cljs.core.str("#"), cljs.core.str(function() {
        var or__3403__auto__ = uri_23887;
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return[cljs.core.str("!/"), cljs.core.str(cljs.core.name.call(null, id_23888))].join("");
        }
      }())].join("")));
      var G__23910 = seq__23861_23879;
      var G__23911 = chunk__23862_23880;
      var G__23912 = count__23863_23881;
      var G__23913 = i__23864_23882 + 1;
      seq__23861_23879 = G__23910;
      chunk__23862_23880 = G__23911;
      count__23863_23881 = G__23912;
      i__23864_23882 = G__23913;
      continue;
    } else {
      var temp__4092__auto___23914 = cljs.core.seq.call(null, seq__23861_23879);
      if (temp__4092__auto___23914) {
        var seq__23861_23915__$1 = temp__4092__auto___23914;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__23861_23915__$1)) {
          var c__4151__auto___23916 = cljs.core.chunk_first.call(null, seq__23861_23915__$1);
          var G__23917 = cljs.core.chunk_rest.call(null, seq__23861_23915__$1);
          var G__23918 = c__4151__auto___23916;
          var G__23919 = cljs.core.count.call(null, c__4151__auto___23916);
          var G__23920 = 0;
          seq__23861_23879 = G__23917;
          chunk__23862_23880 = G__23918;
          count__23863_23881 = G__23919;
          i__23864_23882 = G__23920;
          continue;
        } else {
          var map__23872_23921 = cljs.core.first.call(null, seq__23861_23915__$1);
          var map__23872_23922__$1 = cljs.core.seq_QMARK_.call(null, map__23872_23921) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23872_23921) : map__23872_23921;
          var p_23923 = map__23872_23922__$1;
          var uri_aliases_23924 = cljs.core.get.call(null, map__23872_23922__$1, new cljs.core.Keyword(null, "uri-aliases", "uri-aliases", 3989618447));
          var uri_23925 = cljs.core.get.call(null, map__23872_23922__$1, new cljs.core.Keyword(null, "uri", "uri", 1014020318));
          var id_23926 = cljs.core.get.call(null, map__23872_23922__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
          var seq__23873_23927 = cljs.core.seq.call(null, cljs.core.conj.call(null, function() {
            var or__3403__auto__ = uri_aliases_23924;
            if (cljs.core.truth_(or__3403__auto__)) {
              return or__3403__auto__;
            } else {
              return cljs.core.PersistentVector.EMPTY;
            }
          }(), function() {
            var or__3403__auto__ = uri_23925;
            if (cljs.core.truth_(or__3403__auto__)) {
              return or__3403__auto__;
            } else {
              return[cljs.core.str("!/"), cljs.core.str(cljs.core.name.call(null, id_23926))].join("");
            }
          }()));
          var chunk__23874_23928 = null;
          var count__23875_23929 = 0;
          var i__23876_23930 = 0;
          while (true) {
            if (i__23876_23930 < count__23875_23929) {
              var u_23931 = cljs.core._nth.call(null, chunk__23874_23928, i__23876_23930);
              cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.assoc, u_23931, function(seq__23873_23927, chunk__23874_23928, count__23875_23929, i__23876_23930, seq__23861_23879, chunk__23862_23880, count__23863_23881, i__23864_23882, u_23931, map__23872_23921, map__23872_23922__$1, p_23923, uri_aliases_23924, uri_23925, id_23926, seq__23861_23915__$1, temp__4092__auto___23914) {
                return function(params__9157__auto__) {
                  var map__23877 = params__9157__auto__;
                  var map__23877__$1 = cljs.core.seq_QMARK_.call(null, map__23877) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23877) : map__23877;
                  var params = map__23877__$1;
                  return floor16.navigation.do_route.call(null, u_23931, p_23923, params);
                };
              }(seq__23873_23927, chunk__23874_23928, count__23875_23929, i__23876_23930, seq__23861_23879, chunk__23862_23880, count__23863_23881, i__23864_23882, u_23931, map__23872_23921, map__23872_23922__$1, p_23923, uri_aliases_23924, uri_23925, id_23926, seq__23861_23915__$1, temp__4092__auto___23914));
              var G__23932 = seq__23873_23927;
              var G__23933 = chunk__23874_23928;
              var G__23934 = count__23875_23929;
              var G__23935 = i__23876_23930 + 1;
              seq__23873_23927 = G__23932;
              chunk__23874_23928 = G__23933;
              count__23875_23929 = G__23934;
              i__23876_23930 = G__23935;
              continue;
            } else {
              var temp__4092__auto___23936__$1 = cljs.core.seq.call(null, seq__23873_23927);
              if (temp__4092__auto___23936__$1) {
                var seq__23873_23937__$1 = temp__4092__auto___23936__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__23873_23937__$1)) {
                  var c__4151__auto___23938 = cljs.core.chunk_first.call(null, seq__23873_23937__$1);
                  var G__23939 = cljs.core.chunk_rest.call(null, seq__23873_23937__$1);
                  var G__23940 = c__4151__auto___23938;
                  var G__23941 = cljs.core.count.call(null, c__4151__auto___23938);
                  var G__23942 = 0;
                  seq__23873_23927 = G__23939;
                  chunk__23874_23928 = G__23940;
                  count__23875_23929 = G__23941;
                  i__23876_23930 = G__23942;
                  continue;
                } else {
                  var u_23943 = cljs.core.first.call(null, seq__23873_23937__$1);
                  cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.assoc, u_23943, function(seq__23873_23927, chunk__23874_23928, count__23875_23929, i__23876_23930, seq__23861_23879, chunk__23862_23880, count__23863_23881, i__23864_23882, u_23943, seq__23873_23937__$1, temp__4092__auto___23936__$1, map__23872_23921, map__23872_23922__$1, p_23923, uri_aliases_23924, uri_23925, id_23926, seq__23861_23915__$1, temp__4092__auto___23914) {
                    return function(params__9157__auto__) {
                      var map__23878 = params__9157__auto__;
                      var map__23878__$1 = cljs.core.seq_QMARK_.call(null, map__23878) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23878) : map__23878;
                      var params = map__23878__$1;
                      return floor16.navigation.do_route.call(null, u_23943, p_23923, params);
                    };
                  }(seq__23873_23927, chunk__23874_23928, count__23875_23929, i__23876_23930, seq__23861_23879, chunk__23862_23880, count__23863_23881, i__23864_23882, u_23943, seq__23873_23937__$1, temp__4092__auto___23936__$1, map__23872_23921, map__23872_23922__$1, p_23923, uri_aliases_23924, uri_23925, id_23926, seq__23861_23915__$1, temp__4092__auto___23914));
                  var G__23944 = cljs.core.next.call(null, seq__23873_23937__$1);
                  var G__23945 = null;
                  var G__23946 = 0;
                  var G__23947 = 0;
                  seq__23873_23927 = G__23944;
                  chunk__23874_23928 = G__23945;
                  count__23875_23929 = G__23946;
                  i__23876_23930 = G__23947;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          cljs.core.swap_BANG_.call(null, floor16.navigation.sys_data, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pages", "pages", 1120330550), id_23926], null), cljs.core.assoc.call(null, p_23923, new cljs.core.Keyword(null, "uri", "uri", 1014020318), [cljs.core.str("#"), cljs.core.str(function() {
            var or__3403__auto__ = uri_23925;
            if (cljs.core.truth_(or__3403__auto__)) {
              return or__3403__auto__;
            } else {
              return[cljs.core.str("!/"), cljs.core.str(cljs.core.name.call(null, id_23926))].join("");
            }
          }())].join("")));
          var G__23948 = cljs.core.next.call(null, seq__23861_23915__$1);
          var G__23949 = null;
          var G__23950 = 0;
          var G__23951 = 0;
          seq__23861_23879 = G__23948;
          chunk__23862_23880 = G__23949;
          count__23863_23881 = G__23950;
          i__23864_23882 = G__23951;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var history = (new cljs.core.Keyword(null, "history", "history", 1940838406)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.navigation.sys_data));
  history.setEnabled(true);
  goog.events.listen(history, goog.history.EventType.NAVIGATE, function(p1__23835_SHARP_) {
    return floor16.navigation.handle_history_event.call(null, p1__23835_SHARP_.token);
  });
  return floor16.navigation.handle_history_event.call(null, history.getToken());
};
floor16.navigation.set_url = function set_url(url, title) {
  cljs.core.swap_BANG_.call(null, floor16.navigation.sys_data, cljs.core.assoc, new cljs.core.Keyword(null, "handled-url", "handled-url", 2509932240), url);
  return(new cljs.core.Keyword(null, "history", "history", 1940838406)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.navigation.sys_data)).setToken(url, title);
};
floor16.navigation.get_page = function get_page(page) {
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, floor16.navigation.sys_data), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pages", "pages", 1120330550), page], null));
};
floor16.navigation.get_pages = function get_pages(pages) {
  return cljs.core.map.call(null, function(p1__23952_SHARP_) {
    return floor16.navigation.get_page.call(null, p1__23952_SHARP_);
  }, pages);
};
floor16.navigation.get_menu = function get_menu(id) {
  var map__23954 = id.call(null, cljs.core.deref.call(null, floor16.navigation.sys_data));
  var map__23954__$1 = cljs.core.seq_QMARK_.call(null, map__23954) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23954) : map__23954;
  var menu = map__23954__$1;
  var pages = cljs.core.get.call(null, map__23954__$1, new cljs.core.Keyword(null, "pages", "pages", 1120330550));
  return cljs.core.assoc.call(null, menu, new cljs.core.Keyword(null, "pages", "pages", 1120330550), floor16.navigation.get_pages.call(null, pages));
};
floor16.navigation.curr_page = function curr_page() {
  return floor16.navigation.get_cp.call(null).call(null, (new cljs.core.Keyword(null, "pages", "pages", 1120330550)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.navigation.sys_data)));
};
floor16.navigation.current_QMARK_ = function current_QMARK_(page_id) {
  return cljs.core._EQ_.call(null, page_id, floor16.navigation.get_cp.call(null));
};
floor16.navigation.go_page = function go_page(p__23955) {
  var map__23958 = p__23955;
  var map__23958__$1 = cljs.core.seq_QMARK_.call(null, map__23958) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23958) : map__23958;
  var page_id = cljs.core.get.call(null, map__23958__$1, new cljs.core.Keyword(null, "page", "page", 1017337345));
  var data = cljs.core.get.call(null, map__23958__$1, new cljs.core.Keyword(null, "data", "data", 1016980252));
  var title = cljs.core.get.call(null, map__23958__$1, new cljs.core.Keyword(null, "title", "title", 1124275658));
  cljs.core.println.call(null, "gopage: ", page_id);
  var map__23959 = floor16.navigation.get_page.call(null, page_id);
  var map__23959__$1 = cljs.core.seq_QMARK_.call(null, map__23959) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23959) : map__23959;
  var page_title = cljs.core.get.call(null, map__23959__$1, new cljs.core.Keyword(null, "page-title", "page-title", 1212884236));
  var uri = cljs.core.get.call(null, map__23959__$1, new cljs.core.Keyword(null, "uri", "uri", 1014020318));
  floor16.navigation.set_url.call(null, uri, function() {
    var or__3403__auto__ = title;
    if (cljs.core.truth_(or__3403__auto__)) {
      return or__3403__auto__;
    } else {
      return page_title;
    }
  }());
  return floor16.navigation.set_cp_BANG_.call(null, page_id);
};
floor16.navigation.go_detail = function go_detail(url_data) {
  return null;
};
floor16.navigation.detail_page_QMARK_ = function detail_page_QMARK_() {
  return null;
};
floor16.navigation.ready_state_QMARK_ = function ready_state_QMARK_() {
  return null;
};
floor16.navigation.can_go_back_QMARK_ = function can_go_back_QMARK_() {
  return null;
};
floor16.navigation.go_back = function go_back() {
  return null;
};
floor16.navigation.master_prev = function master_prev() {
  return null;
};
floor16.navigation.master_next = function master_next() {
  return null;
};
goog.provide("floor16.cookies");
goog.require("cljs.core");
floor16.cookies.utc_string_expires = function utc_string_expires(v) {
  if (typeof v === "number") {
    var d = new Date;
    var ed = d.getTime() + v * 1E3;
    d.setTime(ed);
    return d.toUTCString();
  } else {
    return v;
  }
};
floor16.cookies.cset = function() {
  var cset__delegate = function(kw, v, p__19793) {
    var vec__19796 = p__19793;
    var map__19797 = cljs.core.nth.call(null, vec__19796, 0, null);
    var map__19797__$1 = cljs.core.seq_QMARK_.call(null, map__19797) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19797) : map__19797;
    var secure = cljs.core.get.call(null, map__19797__$1, new cljs.core.Keyword(null, "secure", "secure", 4402597609));
    var domain = cljs.core.get.call(null, map__19797__$1, new cljs.core.Keyword(null, "domain", "domain", 3982673974));
    var path = cljs.core.get.call(null, map__19797__$1, new cljs.core.Keyword(null, "path", "path", 1017337751));
    var expires = cljs.core.get.call(null, map__19797__$1, new cljs.core.Keyword(null, "expires", "expires", 3999636134));
    var path__$1 = function() {
      var or__3403__auto__ = path;
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return "/";
      }
    }();
    var expires__$1 = cljs.core.truth_(expires) ? floor16.cookies.utc_string_expires.call(null, expires) : null;
    var v__$1 = window.encodeURIComponent(v);
    var n = cljs.core.name.call(null, kw);
    var ck = [cljs.core.str(n), cljs.core.str("\x3d"), cljs.core.str(v__$1), cljs.core.str(cljs.core.truth_(path__$1) ? [cljs.core.str("; path\x3d"), cljs.core.str(path__$1)].join("") : null), cljs.core.str(cljs.core.truth_(expires__$1) ? [cljs.core.str("; expires\x3d"), cljs.core.str(expires__$1)].join("") : null), cljs.core.str(cljs.core.truth_(domain) ? [cljs.core.str("; domain\x3d"), cljs.core.str(domain)].join("") : null), cljs.core.str(cljs.core.truth_(secure) ? [cljs.core.str("; secure\x3d"), 
    cljs.core.str(secure)].join("") : null)].join("");
    return document.cookie = ck;
  };
  var cset = function(kw, v, var_args) {
    var p__19793 = null;
    if (arguments.length > 2) {
      p__19793 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return cset__delegate.call(this, kw, v, p__19793);
  };
  cset.cljs$lang$maxFixedArity = 2;
  cset.cljs$lang$applyTo = function(arglist__19798) {
    var kw = cljs.core.first(arglist__19798);
    arglist__19798 = cljs.core.next(arglist__19798);
    var v = cljs.core.first(arglist__19798);
    var p__19793 = cljs.core.rest(arglist__19798);
    return cset__delegate(kw, v, p__19793);
  };
  cset.cljs$core$IFn$_invoke$arity$variadic = cset__delegate;
  return cset;
}();
floor16.cookies.cget = function cget(kw) {
  var n = cljs.core.name.call(null, kw);
  var re = new RegExp([cljs.core.str("(?:^|; )"), cljs.core.str(n.replace(/([\.$?*|{}\(\)\[\]\\\\/\+^])/, "\\$1")), cljs.core.str("\x3d([^;]*)")].join(""));
  var m = document.cookie.match(re);
  if (cljs.core.truth_(m)) {
    return m[1];
  } else {
    return null;
  }
};
floor16.cookies.cremove = function cremove(kw) {
  return floor16.cookies.cset.call(null, kw, "", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "expires", "expires", 3999636134), -1], null));
};
goog.provide("floor16.auth");
goog.require("cljs.core");
goog.require("om.core");
goog.require("om.core");
goog.require("floor16.cookies");
goog.require("floor16.cookies");
goog.require("floor16.xhr");
goog.require("floor16.xhr");
floor16.auth.sys_data = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
floor16.auth.app = function app() {
  return(new cljs.core.Keyword(null, "app", "app", 1014001043)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.auth.sys_data));
};
floor16.auth.api_url = function api_url() {
  return(new cljs.core.Keyword(null, "api-url", "api-url", 4507306670)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.auth.sys_data));
};
floor16.auth.get_user_param = function get_user_param(kw) {
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, floor16.auth.app.call(null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "user", "user", 1017503549), kw], null));
};
floor16.auth.token = function token() {
  return floor16.auth.get_user_param.call(null, new cljs.core.Keyword(null, "token", "token", 1124445547));
};
floor16.auth.auth_coockie = function() {
  var auth_coockie__delegate = function(meth, p__21059) {
    var vec__21061 = p__21059;
    var t = cljs.core.nth.call(null, vec__21061, 0, null);
    if (cljs.core.truth_(floor16.auth.token)) {
      return meth.call(null, new cljs.core.Keyword(null, "session-id", "session-id", 2675709732), t);
    } else {
      return meth.call(null, new cljs.core.Keyword(null, "session-id", "session-id", 2675709732));
    }
  };
  var auth_coockie = function(meth, var_args) {
    var p__21059 = null;
    if (arguments.length > 1) {
      p__21059 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return auth_coockie__delegate.call(this, meth, p__21059);
  };
  auth_coockie.cljs$lang$maxFixedArity = 1;
  auth_coockie.cljs$lang$applyTo = function(arglist__21062) {
    var meth = cljs.core.first(arglist__21062);
    var p__21059 = cljs.core.rest(arglist__21062);
    return auth_coockie__delegate(meth, p__21059);
  };
  auth_coockie.cljs$core$IFn$_invoke$arity$variadic = auth_coockie__delegate;
  return auth_coockie;
}();
floor16.auth.handle_autologin_response = function handle_autologin_response() {
  return function(response) {
    cljs.core.println.call(null, "Autologin response:", response);
    if (cljs.core._EQ_.call(null, 200, (new cljs.core.Keyword(null, "status", "status", 4416389988)).cljs$core$IFn$_invoke$arity$1(response))) {
      return cljs.core.swap_BANG_.call(null, floor16.auth.app.call(null), cljs.core.assoc, new cljs.core.Keyword(null, "user", "user", 1017503549), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "body", "body", 1016933652)).cljs$core$IFn$_invoke$arity$1(response), new cljs.core.Keyword(null, "autologin", "autologin", 2687056524), true));
    } else {
      return floor16.auth.auth_coockie.call(null, floor16.cookies.cremove);
    }
  };
};
floor16.auth.auth_sys = function auth_sys(p__21064) {
  var map__21066 = p__21064;
  var map__21066__$1 = cljs.core.seq_QMARK_.call(null, map__21066) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21066) : map__21066;
  var app = cljs.core.get.call(null, map__21066__$1, new cljs.core.Keyword(null, "app", "app", 1014001043));
  var url = cljs.core.get.call(null, map__21066__$1, new cljs.core.Keyword(null, "api-url", "api-url", 4507306670));
  cljs.core.swap_BANG_.call(null, floor16.auth.sys_data, function(p1__21063_SHARP_) {
    return cljs.core.assoc.call(null, cljs.core.assoc.call(null, p1__21063_SHARP_, new cljs.core.Keyword(null, "app", "app", 1014001043), app), new cljs.core.Keyword(null, "api-url", "api-url", 4507306670), url);
  });
  var temp__4092__auto__ = floor16.auth.auth_coockie.call(null, floor16.cookies.cget);
  if (cljs.core.truth_(temp__4092__auto__)) {
    var t = temp__4092__auto__;
    return floor16.xhr.do_request.call(null, floor16.xhr.bearer_authorization.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 4231316563), new cljs.core.Keyword(null, "get", "get", 1014006472), new cljs.core.Keyword(null, "url", "url", 1014020321), floor16.auth.api_url.call(null)], null), t), floor16.auth.handle_autologin_response.call(null));
  } else {
    return null;
  }
};
floor16.auth.handle_login_response = function() {
  var handle_login_response__delegate = function(p__21067) {
    var vec__21069 = p__21067;
    var cb = cljs.core.nth.call(null, vec__21069, 0, null);
    var err_cb = cljs.core.nth.call(null, vec__21069, 1, null);
    return function(response) {
      cljs.core.println.call(null, "Login response:", response);
      if (cljs.core._EQ_.call(null, 200, (new cljs.core.Keyword(null, "status", "status", 4416389988)).cljs$core$IFn$_invoke$arity$1(response))) {
        cljs.core.swap_BANG_.call(null, floor16.auth.app.call(null), cljs.core.assoc, new cljs.core.Keyword(null, "user", "user", 1017503549), (new cljs.core.Keyword(null, "body", "body", 1016933652)).cljs$core$IFn$_invoke$arity$1(response));
        floor16.auth.auth_coockie.call(null, floor16.cookies.cset, floor16.auth.token.call(null));
        if (cljs.core.truth_(cb)) {
          return cb.call(null);
        } else {
          return null;
        }
      } else {
        if (cljs.core.truth_(err_cb)) {
          return err_cb.call(null);
        } else {
          return null;
        }
      }
    };
  };
  var handle_login_response = function(var_args) {
    var p__21067 = null;
    if (arguments.length > 0) {
      p__21067 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return handle_login_response__delegate.call(this, p__21067);
  };
  handle_login_response.cljs$lang$maxFixedArity = 0;
  handle_login_response.cljs$lang$applyTo = function(arglist__21070) {
    var p__21067 = cljs.core.seq(arglist__21070);
    return handle_login_response__delegate(p__21067);
  };
  handle_login_response.cljs$core$IFn$_invoke$arity$variadic = handle_login_response__delegate;
  return handle_login_response;
}();
floor16.auth.handle_logout_response = function handle_logout_response() {
  return function(response) {
    cljs.core.println.call(null, "Logout response:", response);
    floor16.auth.auth_coockie.call(null, floor16.cookies.cremove);
    return cljs.core.swap_BANG_.call(null, floor16.auth.app.call(null), cljs.core.dissoc, new cljs.core.Keyword(null, "user", "user", 1017503549));
  };
};
floor16.auth.get_user = function get_user() {
  return(new cljs.core.Keyword(null, "user", "user", 1017503549)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.auth.app.call(null)));
};
floor16.auth.do_login = function do_login(creds) {
  return do_login.call(null, creds, null, null);
};
floor16.auth.do_login = function do_login(creds, cb) {
  return do_login.call(null, creds, cb, null);
};
floor16.auth.do_login = function do_login(creds, cb, err_cb) {
  return floor16.xhr.do_request.call(null, floor16.xhr.content_type.call(null, floor16.xhr.accept.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "method", "method", 4231316563), new cljs.core.Keyword(null, "post", "post", 1017351186), new cljs.core.Keyword(null, "url", "url", 1014020321), floor16.auth.api_url.call(null), new cljs.core.Keyword(null, "body", "body", 1016933652), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "grant_type", "grant_type", 
  1863830511), "password", new cljs.core.Keyword(null, "username", "username", 748190792), (new cljs.core.Keyword(null, "username", "username", 748190792)).cljs$core$IFn$_invoke$arity$1(creds), new cljs.core.Keyword(null, "password", "password", 2230889997), (new cljs.core.Keyword(null, "password", "password", 2230889997)).cljs$core$IFn$_invoke$arity$1(creds)], null)], null), new cljs.core.Keyword(null, "edn", "edn", 1014004513)), new cljs.core.Keyword(null, "url-encode", "url-encode", 3129387942)), 
  floor16.auth.handle_login_response.call(null, cb, err_cb));
};
floor16.auth.do_logout = function do_logout() {
  var temp__4092__auto__ = floor16.auth.token.call(null);
  if (cljs.core.truth_(temp__4092__auto__)) {
    var t = temp__4092__auto__;
    return floor16.xhr.do_request.call(null, floor16.xhr.bearer_authorization.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 4231316563), new cljs.core.Keyword(null, "delete", "delete", 3973413149), new cljs.core.Keyword(null, "url", "url", 1014020321), floor16.auth.api_url.call(null)], null), t), floor16.auth.handle_logout_response.call(null));
  } else {
    return null;
  }
};
floor16.auth.guest_QMARK_ = function guest_QMARK_() {
  return floor16.auth.token.call(null) == null;
};
floor16.auth.autologin_QMARK_ = function autologin_QMARK_() {
  return floor16.auth.get_user_param.call(null, new cljs.core.Keyword(null, "autologin", "autologin", 2687056524));
};
goog.provide("floor16.lang");
goog.require("cljs.core");
floor16.lang.v = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ru", "ru", 1013907893), new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "ad", "ad", 1013907349), new cljs.core.PersistentArrayMap(null, 3, [1, "\u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0435", 2, "\u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f", 5, "\u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439"], null), new cljs.core.Keyword(null, "data-pager-prev", 
"data-pager-prev", 2462390130), "\u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0430\u044f", new cljs.core.Keyword(null, "data-pager-next", "data-pager-next", 2462318642), "\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f", new cljs.core.Keyword(null, "appartment", "appartment", 4044466290), "\u043a\u0432\u0430\u0440\u0442\u0438\u0440\u0430", new cljs.core.Keyword(null, "studio", "studio", 4416970056), "\u0441\u0442\u0443\u0434\u0438\u044f", new cljs.core.Keyword(null, "room", "room", 1017410637), 
new cljs.core.PersistentArrayMap(null, 3, [1, "\u043a\u043e\u043c\u043d\u0430\u0442\u0430", 2, "\u043a\u043e\u043c\u043d\u0430\u0442\u044b", 5, "\u043a\u043e\u043c\u043d\u0430\u0442"], null), new cljs.core.Keyword(null, "select-value", "select-value", 1968185554), "\u0432\u044b\u0431\u0440\u0430\u0442\u044c", new cljs.core.Keyword(null, "empty-search", "empty-search", 3924434330), "\u041f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e"], 
null)], null);
floor16.lang.vocabulary = function vocabulary() {
  return(new cljs.core.Keyword(null, "ru", "ru", 1013907893)).cljs$core$IFn$_invoke$arity$1(floor16.lang.v);
};
floor16.lang.ru_plural_form = function ru_plural_form(n) {
  var d00 = cljs.core.quot.call(null, cljs.core.rem.call(null, n, 100), 10);
  var d0 = cljs.core.rem.call(null, n, 10);
  if (cljs.core._EQ_.call(null, 1, d00)) {
    return 5;
  } else {
    if (cljs.core._EQ_.call(null, d0, 0) || d0 >= 5) {
      return 5;
    } else {
      if (d0 >= 2) {
        return 2;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 1;
        } else {
          return null;
        }
      }
    }
  }
};
floor16.lang.l = function() {
  var l__delegate = function(kw, p__9139) {
    var vec__9141 = p__9139;
    var n = cljs.core.nth.call(null, vec__9141, 0, null);
    var temp__4090__auto__ = kw.call(null, floor16.lang.vocabulary.call(null));
    if (cljs.core.truth_(temp__4090__auto__)) {
      var word = temp__4090__auto__;
      if (cljs.core.map_QMARK_.call(null, word)) {
        return cljs.core.get.call(null, word, floor16.lang.ru_plural_form.call(null, function() {
          var or__3403__auto__ = n;
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return 1;
          }
        }()));
      } else {
        return word;
      }
    } else {
      return cljs.core.name.call(null, kw);
    }
  };
  var l = function(kw, var_args) {
    var p__9139 = null;
    if (arguments.length > 1) {
      p__9139 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return l__delegate.call(this, kw, p__9139);
  };
  l.cljs$lang$maxFixedArity = 1;
  l.cljs$lang$applyTo = function(arglist__9142) {
    var kw = cljs.core.first(arglist__9142);
    var p__9139 = cljs.core.rest(arglist__9142);
    return l__delegate(kw, p__9139);
  };
  l.cljs$core$IFn$_invoke$arity$variadic = l__delegate;
  return l;
}();
floor16.lang.lstr = function() {
  var lstr__delegate = function(s, p__9143) {
    var vec__9145 = p__9143;
    var n = cljs.core.nth.call(null, vec__9145, 0, null);
    var kw = cljs.core.keyword.call(null, s);
    var temp__4090__auto__ = kw.call(null, floor16.lang.vocabulary.call(null));
    if (cljs.core.truth_(temp__4090__auto__)) {
      var word = temp__4090__auto__;
      if (cljs.core.map_QMARK_.call(null, word)) {
        return cljs.core.get.call(null, word, floor16.lang.ru_plural_form.call(null, function() {
          var or__3403__auto__ = n;
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return 1;
          }
        }()));
      } else {
        return word;
      }
    } else {
      return s;
    }
  };
  var lstr = function(s, var_args) {
    var p__9143 = null;
    if (arguments.length > 1) {
      p__9143 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return lstr__delegate.call(this, s, p__9143);
  };
  lstr.cljs$lang$maxFixedArity = 1;
  lstr.cljs$lang$applyTo = function(arglist__9146) {
    var s = cljs.core.first(arglist__9146);
    var p__9143 = cljs.core.rest(arglist__9146);
    return lstr__delegate(s, p__9143);
  };
  lstr.cljs$core$IFn$_invoke$arity$variadic = lstr__delegate;
  return lstr;
}();
goog.exportSymbol("floor16.lang.lstr", floor16.lang.lstr);
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", 4635210724));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t13628 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t13628 = function(f, fn_handler, meta13629) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta13629 = meta13629;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t13628.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t13628.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t13628";
    cljs.core.async.impl.ioc_helpers.t13628.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.ioc-helpers/t13628");
    };
    cljs.core.async.impl.ioc_helpers.t13628.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t13628.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t13628.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t13628.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13630) {
      var self__ = this;
      var _13630__$1 = this;
      return self__.meta13629;
    };
    cljs.core.async.impl.ioc_helpers.t13628.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13630, meta13629__$1) {
      var self__ = this;
      var _13630__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t13628(self__.f, self__.fn_handler, meta13629__$1);
    };
    cljs.core.async.impl.ioc_helpers.__GT_t13628 = function __GT_t13628(f__$1, fn_handler__$1, meta13629) {
      return new cljs.core.async.impl.ioc_helpers.t13628(f__$1, fn_handler__$1, meta13629);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t13628(f, fn_handler, null);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e13632) {
    if (e13632 instanceof Object) {
      var ex = e13632;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e13632;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_13635_13637 = state;
    statearr_13635_13637[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_13635_13637[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_13636_13638 = state;
    statearr_13636_13638[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_13636_13638[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
    var statearr_13641_13643 = state;
    statearr_13641_13643[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_13641_13643[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_13642_13644 = state;
    statearr_13642_13644[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_13642_13644[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__13645) {
    var map__13650 = p__13645;
    var map__13650__$1 = cljs.core.seq_QMARK_.call(null, map__13650) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13650) : map__13650;
    var opts = map__13650__$1;
    var statearr_13651_13654 = state;
    statearr_13651_13654[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4092__auto__ = cljs.core.async.do_alts.call(null, function(val) {
      var statearr_13652_13655 = state;
      statearr_13652_13655[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
    }, ports, opts);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var cb = temp__4092__auto__;
      var statearr_13653_13656 = state;
      statearr_13653_13656[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__13645 = null;
    if (arguments.length > 3) {
      p__13645 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__13645);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__13657) {
    var state = cljs.core.first(arglist__13657);
    arglist__13657 = cljs.core.next(arglist__13657);
    var cont_block = cljs.core.first(arglist__13657);
    arglist__13657 = cljs.core.next(arglist__13657);
    var ports = cljs.core.first(arglist__13657);
    var p__13645 = cljs.core.rest(arglist__13657);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__13645);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
      return null;
    }));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3984__auto__) {
  var self__ = this;
  var this__3984__auto____$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_imap.call(null, this__3984__auto____$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3989__auto__, k__3990__auto__) {
  var self__ = this;
  var this__3989__auto____$1 = this;
  return cljs.core._lookup.call(null, this__3989__auto____$1, k__3990__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3991__auto__, k13659, else__3992__auto__) {
  var self__ = this;
  var this__3991__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k13659, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893))) {
    return self__.catch_block;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k13659, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687))) {
      return self__.catch_exception;
    } else {
      if (cljs.core.keyword_identical_QMARK_.call(null, k13659, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429))) {
        return self__.finally_block;
      } else {
        if (cljs.core.keyword_identical_QMARK_.call(null, k13659, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097))) {
          return self__.continue_block;
        } else {
          if (cljs.core.keyword_identical_QMARK_.call(null, k13659, new cljs.core.Keyword(null, "prev", "prev", 1017353637))) {
            return self__.prev;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.get.call(null, self__.__extmap, k13659, else__3992__auto__);
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3996__auto__, k__3997__auto__, G__13658) {
  var self__ = this;
  var this__3996__auto____$1 = this;
  var pred__13661 = cljs.core.keyword_identical_QMARK_;
  var expr__13662 = k__3997__auto__;
  if (cljs.core.truth_(pred__13661.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), expr__13662))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__13658, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__13661.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), expr__13662))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__13658, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__13661.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), expr__13662))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__13658, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__13661.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), expr__13662))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__13658, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__13661.call(null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), expr__13662))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__13658, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3997__auto__, G__13658), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4003__auto__, writer__4004__auto__, opts__4005__auto__) {
  var self__ = this;
  var this__4003__auto____$1 = this;
  var pr_pair__4006__auto__ = function(keyval__4007__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4004__auto__, cljs.core.pr_writer, "", " ", "", opts__4005__auto__, keyval__4007__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4004__auto__, pr_pair__4006__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4005__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", 1017353637), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3994__auto__, entry__3995__auto__) {
  var self__ = this;
  var this__3994__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__3995__auto__)) {
    return cljs.core._assoc.call(null, this__3994__auto____$1, cljs.core._nth.call(null, entry__3995__auto__, 0), cljs.core._nth.call(null, entry__3995__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3994__auto____$1, entry__3995__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4001__auto__) {
  var self__ = this;
  var this__4001__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", 1017353637), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3993__auto__) {
  var self__ = this;
  var this__3993__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3985__auto__, other__3986__auto__) {
  var self__ = this;
  var this__3985__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3391__auto__ = other__3986__auto__;
    if (cljs.core.truth_(and__3391__auto__)) {
      return this__3985__auto____$1.constructor === other__3986__auto__.constructor && cljs.core.equiv_map.call(null, this__3985__auto____$1, other__3986__auto__);
    } else {
      return and__3391__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3988__auto__, G__13658) {
  var self__ = this;
  var this__3988__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__13658, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__3983__auto__) {
  var self__ = this;
  var this__3983__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3987__auto__) {
  var self__ = this;
  var this__3987__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3998__auto__, k__3999__auto__) {
  var self__ = this;
  var this__3998__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), 
  null], null), null), k__3999__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3998__auto____$1), self__.__meta), k__3999__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3999__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4023__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4023__auto__, writer__4024__auto__) {
  return cljs.core._write.call(null, writer__4024__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__13660) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).cljs$core$IFn$_invoke$arity$1(G__13660), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).cljs$core$IFn$_invoke$arity$1(G__13660), (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(G__13660), (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).cljs$core$IFn$_invoke$arity$1(G__13660), 
  (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(G__13660), null, cljs.core.dissoc.call(null, G__13660, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), new cljs.core.Keyword(null, "prev", "prev", 1017353637)));
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_13665 = state;
  statearr_13665[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_13665;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3391__auto__ = exception;
      if (cljs.core.truth_(and__3391__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3391__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3391__auto__ = exception;
        if (cljs.core.truth_(and__3391__auto__)) {
          var and__3391__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3391__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3391__auto____$1;
          }
        } else {
          return and__3391__auto__;
        }
      }())) {
        var statearr_13671 = state;
        statearr_13671[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_13671[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_13671[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_13671[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null);
        return statearr_13671;
      } else {
        if (cljs.core.truth_(function() {
          var and__3391__auto__ = exception;
          if (cljs.core.truth_(and__3391__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3391__auto__;
          }
        }())) {
          var statearr_13672_13676 = state;
          statearr_13672_13676[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__13677 = state;
          state = G__13677;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3391__auto__ = exception;
            if (cljs.core.truth_(and__3391__auto__)) {
              var and__3391__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3391__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3391__auto____$1;
              }
            } else {
              return and__3391__auto__;
            }
          }())) {
            var statearr_13673 = state;
            statearr_13673[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_13673[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
            return statearr_13673;
          } else {
            if (cljs.core.truth_(function() {
              var and__3391__auto__ = cljs.core.not.call(null, exception);
              if (and__3391__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3391__auto__;
              }
            }())) {
              var statearr_13674 = state;
              statearr_13674[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_13674[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
              return statearr_13674;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_13675 = state;
                statearr_13675[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_13675[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_13675;
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  if (false) {
                    return null;
                  } else {
                    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("No matching clause"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, false))].join(""));
                  }
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t13617 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t13617 = function(val, box, meta13618) {
      this.val = val;
      this.box = box;
      this.meta13618 = meta13618;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t13617.cljs$lang$type = true;
    cljs.core.async.impl.channels.t13617.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t13617";
    cljs.core.async.impl.channels.t13617.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.channels/t13617");
    };
    cljs.core.async.impl.channels.t13617.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t13617.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13619) {
      var self__ = this;
      var _13619__$1 = this;
      return self__.meta13618;
    };
    cljs.core.async.impl.channels.t13617.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13619, meta13618__$1) {
      var self__ = this;
      var _13619__$1 = this;
      return new cljs.core.async.impl.channels.t13617(self__.val, self__.box, meta13618__$1);
    };
    cljs.core.async.impl.channels.__GT_t13617 = function __GT_t13617(val__$1, box__$1, meta13618) {
      return new cljs.core.async.impl.channels.t13617(val__$1, box__$1, meta13618);
    };
  }
  return new cljs.core.async.impl.channels.t13617(val, box, null);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__3973__auto__, writer__3974__auto__, opts__3975__auto__) {
  return cljs.core._write.call(null, writer__3974__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    while (true) {
      var taker_13620 = self__.takes.pop();
      if (taker_13620 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_13620)) {
          var take_cb_13621 = cljs.core.async.impl.protocols.commit.call(null, taker_13620);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_13621, taker_13620) {
            return function() {
              return take_cb_13621.call(null, null);
            };
          }(take_cb_13621, taker_13620));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      return cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
    } else {
      while (true) {
        var putter = self__.puts.pop();
        if (!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, put_cb);
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            continue;
          }
        } else {
          if (self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null);
          } else {
            if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
            } else {
              self__.dirty_takes = self__.dirty_takes + 1;
            }
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 1395928862, null), new cljs.core.Symbol(null, 
              "takes", "takes", -1530407291, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
            }
            self__.takes.unbounded_unshift(handler);
            return null;
          }
        }
        break;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "val", "val", -1640415014, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, null);
  } else {
    while (true) {
      var taker = self__.takes.pop();
      if (!(taker == null)) {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker) {
            return function() {
              return take_cb.call(null, val);
            };
          }(take_cb, _, taker));
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          continue;
        }
      } else {
        if (!(self__.buf == null || cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
          } else {
            self__.dirty_puts = self__.dirty_puts + 1;
          }
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            1395928862, null), new cljs.core.Symbol(null, "puts", "puts", -1637078787, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null;
        }
      }
      break;
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed);
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, null);
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__13575 = level + 1;
        level = G__13575;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_13576 = 0;
    while (true) {
      if (i_13576 < arr.length) {
        arr[i_13576] = null;
        var G__13577 = i_13576 + 1;
        i_13576 = G__13577;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4090__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4090__auto__)) {
              var x_SINGLEQUOTE_ = temp__4090__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__13578 = x_SINGLEQUOTE_;
                x__$1 = G__13578;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__13579 = x__$1;
        var G__13580 = k;
        var G__13581 = level - 1;
        var G__13582 = update;
        x = G__13579;
        k = G__13580;
        level = G__13581;
        update = G__13582;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function iter(node) {
    return new cljs.core.LazySeq(null, function() {
      if (node == null) {
        return null;
      } else {
        return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
      }
    }, null, null);
  };
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_13583 = self__.level + 1;
      while (true) {
        if (i_13583 <= new_level + 1) {
          update[i_13583] = self__.header;
          var G__13584 = i_13583 + 1;
          i_13583 = G__13584;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_13585 = 0;
    while (true) {
      if (i_13585 <= self__.level) {
        var links_13586 = update[i_13585].forward;
        if (links_13586[i_13585] === x__$1) {
          links_13586[i_13585] = x__$1.forward[i_13585];
          var G__13587 = i_13585 + 1;
          i_13585 = G__13587;
          continue;
        } else {
          var G__13588 = i_13585 + 1;
          i_13585 = G__13588;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__13589 = x_SINGLEQUOTE_;
              x__$1 = G__13589;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__13590 = nx;
        var G__13591 = level__$1 - 1;
        x = G__13590;
        level__$1 = G__13591;
        continue;
      } else {
        var G__13592 = x;
        var G__13593 = level__$1 - 1;
        x = G__13592;
        level__$1 = G__13593;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__13594 = x_SINGLEQUOTE_;
              x__$1 = G__13594;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__13595 = nx;
        var G__13596 = level__$1 - 1;
        x = G__13595;
        level__$1 = G__13596;
        continue;
      } else {
        var G__13597 = x;
        var G__13598 = level__$1 - 1;
        x = G__13597;
        level__$1 = G__13598;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3403__auto__ = cljs.core.truth_(function() {
    var and__3391__auto__ = me;
    if (cljs.core.truth_(and__3391__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3391__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3403__auto__)) {
    return or__3403__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function() {
      cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
      return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
    }, msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.ioc_helpers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t11024 !== "undefined") {
  } else {
    cljs.core.async.t11024 = function(f, fn_handler, meta11025) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta11025 = meta11025;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t11024.cljs$lang$type = true;
    cljs.core.async.t11024.cljs$lang$ctorStr = "cljs.core.async/t11024";
    cljs.core.async.t11024.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t11024");
    };
    cljs.core.async.t11024.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t11024.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t11024.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t11024.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11026) {
      var self__ = this;
      var _11026__$1 = this;
      return self__.meta11025;
    };
    cljs.core.async.t11024.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11026, meta11025__$1) {
      var self__ = this;
      var _11026__$1 = this;
      return new cljs.core.async.t11024(self__.f, self__.fn_handler, meta11025__$1);
    };
    cljs.core.async.__GT_t11024 = function __GT_t11024(f__$1, fn_handler__$1, meta11025) {
      return new cljs.core.async.t11024(f__$1, fn_handler__$1, meta11025);
    };
  }
  return new cljs.core.async.t11024(f, fn_handler, null);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__11028 = buff;
  if (G__11028) {
    var bit__4053__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3403__auto__ = bit__4053__auto__;
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return G__11028.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__11028.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__11028);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__11028);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1);
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  if (null) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3c! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_11029 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_11029);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function() {
          return fn1.call(null, val_11029);
        });
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop() {
  return null;
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  if (null) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3e! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.call(null, port, val, cljs.core.async.nop);
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.call(null, port, val, fn0, true);
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn0));
    if (cljs.core.truth_(function() {
      var and__3391__auto__ = ret;
      if (cljs.core.truth_(and__3391__auto__)) {
        return cljs.core.not_EQ_.call(null, fn0, cljs.core.async.nop);
      } else {
        return and__3391__auto__;
      }
    }())) {
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn0.call(null);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, fn0);
      }
    } else {
    }
    return null;
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4251__auto___11030 = n;
  var x_11031 = 0;
  while (true) {
    if (x_11031 < n__4251__auto___11030) {
      a[x_11031] = 0;
      var G__11032 = x_11031 + 1;
      x_11031 = G__11032;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__11033 = i + 1;
      i = G__11033;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t11037 !== "undefined") {
  } else {
    cljs.core.async.t11037 = function(flag, alt_flag, meta11038) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta11038 = meta11038;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t11037.cljs$lang$type = true;
    cljs.core.async.t11037.cljs$lang$ctorStr = "cljs.core.async/t11037";
    cljs.core.async.t11037.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t11037");
    };
    cljs.core.async.t11037.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t11037.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.deref.call(null, self__.flag);
    };
    cljs.core.async.t11037.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.reset_BANG_.call(null, self__.flag, null);
      return true;
    };
    cljs.core.async.t11037.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11039) {
      var self__ = this;
      var _11039__$1 = this;
      return self__.meta11038;
    };
    cljs.core.async.t11037.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11039, meta11038__$1) {
      var self__ = this;
      var _11039__$1 = this;
      return new cljs.core.async.t11037(self__.flag, self__.alt_flag, meta11038__$1);
    };
    cljs.core.async.__GT_t11037 = function __GT_t11037(flag__$1, alt_flag__$1, meta11038) {
      return new cljs.core.async.t11037(flag__$1, alt_flag__$1, meta11038);
    };
  }
  return new cljs.core.async.t11037(flag, alt_flag, null);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t11043 !== "undefined") {
  } else {
    cljs.core.async.t11043 = function(cb, flag, alt_handler, meta11044) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta11044 = meta11044;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t11043.cljs$lang$type = true;
    cljs.core.async.t11043.cljs$lang$ctorStr = "cljs.core.async/t11043";
    cljs.core.async.t11043.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t11043");
    };
    cljs.core.async.t11043.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t11043.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t11043.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t11043.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11045) {
      var self__ = this;
      var _11045__$1 = this;
      return self__.meta11044;
    };
    cljs.core.async.t11043.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11045, meta11044__$1) {
      var self__ = this;
      var _11045__$1 = this;
      return new cljs.core.async.t11043(self__.cb, self__.flag, self__.alt_handler, meta11044__$1);
    };
    cljs.core.async.__GT_t11043 = function __GT_t11043(cb__$1, flag__$1, alt_handler__$1, meta11044) {
      return new cljs.core.async.t11043(cb__$1, flag__$1, alt_handler__$1, meta11044);
    };
  }
  return new cljs.core.async.t11043(cb, flag, alt_handler, null);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 4143410454)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__11046_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__11046_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3403__auto__ = wport;
            if (cljs.core.truth_(or__3403__auto__)) {
              return or__3403__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__11047 = i + 1;
          i = G__11047;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3403__auto__ = ret;
  if (cljs.core.truth_(or__3403__auto__)) {
    return or__3403__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
      var temp__4092__auto__ = function() {
        var and__3391__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3391__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3391__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4092__auto__)) {
        var got = temp__4092__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", 2558708147)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", 2558708147)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__11048) {
    var map__11050 = p__11048;
    var map__11050__$1 = cljs.core.seq_QMARK_.call(null, map__11050) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11050) : map__11050;
    var opts = map__11050__$1;
    if (null) {
      return null;
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("alts! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
    }
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__11048 = null;
    if (arguments.length > 1) {
      p__11048 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__11048);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__11051) {
    var ports = cljs.core.first(arglist__11051);
    var p__11048 = cljs.core.rest(arglist__11051);
    return alts_BANG___delegate(ports, p__11048);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t11059 !== "undefined") {
  } else {
    cljs.core.async.t11059 = function(ch, f, map_LT_, meta11060) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta11060 = meta11060;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t11059.cljs$lang$type = true;
    cljs.core.async.t11059.cljs$lang$ctorStr = "cljs.core.async/t11059";
    cljs.core.async.t11059.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t11059");
    };
    cljs.core.async.t11059.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t11059.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
    };
    cljs.core.async.t11059.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t11059.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t11062 !== "undefined") {
        } else {
          cljs.core.async.t11062 = function(fn1, _, meta11060, ch, f, map_LT_, meta11063) {
            this.fn1 = fn1;
            this._ = _;
            this.meta11060 = meta11060;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta11063 = meta11063;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t11062.cljs$lang$type = true;
          cljs.core.async.t11062.cljs$lang$ctorStr = "cljs.core.async/t11062";
          cljs.core.async.t11062.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
            return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t11062");
          };
          cljs.core.async.t11062.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t11062.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
          };
          cljs.core.async.t11062.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1);
          };
          cljs.core.async.t11062.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
            return function(f1, ___$4) {
              return function(p1__11052_SHARP_) {
                return f1.call(null, p1__11052_SHARP_ == null ? null : self__.f.call(null, p1__11052_SHARP_));
              };
            }(f1, ___$4);
          };
          cljs.core.async.t11062.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11064) {
            var self__ = this;
            var _11064__$1 = this;
            return self__.meta11063;
          };
          cljs.core.async.t11062.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11064, meta11063__$1) {
            var self__ = this;
            var _11064__$1 = this;
            return new cljs.core.async.t11062(self__.fn1, self__._, self__.meta11060, self__.ch, self__.f, self__.map_LT_, meta11063__$1);
          };
          cljs.core.async.__GT_t11062 = function __GT_t11062(fn1__$1, ___$2, meta11060__$1, ch__$2, f__$2, map_LT___$2, meta11063) {
            return new cljs.core.async.t11062(fn1__$1, ___$2, meta11060__$1, ch__$2, f__$2, map_LT___$2, meta11063);
          };
        }
        return new cljs.core.async.t11062(fn1, ___$1, self__.meta11060, self__.ch, self__.f, self__.map_LT_, null);
      }());
      if (cljs.core.truth_(function() {
        var and__3391__auto__ = ret;
        if (cljs.core.truth_(and__3391__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3391__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t11059.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t11059.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t11059.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11061) {
      var self__ = this;
      var _11061__$1 = this;
      return self__.meta11060;
    };
    cljs.core.async.t11059.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11061, meta11060__$1) {
      var self__ = this;
      var _11061__$1 = this;
      return new cljs.core.async.t11059(self__.ch, self__.f, self__.map_LT_, meta11060__$1);
    };
    cljs.core.async.__GT_t11059 = function __GT_t11059(ch__$1, f__$1, map_LT___$1, meta11060) {
      return new cljs.core.async.t11059(ch__$1, f__$1, map_LT___$1, meta11060);
    };
  }
  return new cljs.core.async.t11059(ch, f, map_LT_, null);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t11068 !== "undefined") {
  } else {
    cljs.core.async.t11068 = function(ch, f, map_GT_, meta11069) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta11069 = meta11069;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t11068.cljs$lang$type = true;
    cljs.core.async.t11068.cljs$lang$ctorStr = "cljs.core.async/t11068";
    cljs.core.async.t11068.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t11068");
    };
    cljs.core.async.t11068.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t11068.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn0);
    };
    cljs.core.async.t11068.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t11068.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t11068.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t11068.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t11068.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11070) {
      var self__ = this;
      var _11070__$1 = this;
      return self__.meta11069;
    };
    cljs.core.async.t11068.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11070, meta11069__$1) {
      var self__ = this;
      var _11070__$1 = this;
      return new cljs.core.async.t11068(self__.ch, self__.f, self__.map_GT_, meta11069__$1);
    };
    cljs.core.async.__GT_t11068 = function __GT_t11068(ch__$1, f__$1, map_GT___$1, meta11069) {
      return new cljs.core.async.t11068(ch__$1, f__$1, map_GT___$1, meta11069);
    };
  }
  return new cljs.core.async.t11068(ch, f, map_GT_, null);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t11074 !== "undefined") {
  } else {
    cljs.core.async.t11074 = function(ch, p, filter_GT_, meta11075) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta11075 = meta11075;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t11074.cljs$lang$type = true;
    cljs.core.async.t11074.cljs$lang$ctorStr = "cljs.core.async/t11074";
    cljs.core.async.t11074.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t11074");
    };
    cljs.core.async.t11074.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t11074.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
      } else {
        return cljs.core.async.impl.channels.box.call(null, null);
      }
    };
    cljs.core.async.t11074.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t11074.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t11074.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t11074.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t11074.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11076) {
      var self__ = this;
      var _11076__$1 = this;
      return self__.meta11075;
    };
    cljs.core.async.t11074.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11076, meta11075__$1) {
      var self__ = this;
      var _11076__$1 = this;
      return new cljs.core.async.t11074(self__.ch, self__.p, self__.filter_GT_, meta11075__$1);
    };
    cljs.core.async.__GT_t11074 = function __GT_t11074(ch__$1, p__$1, filter_GT___$1, meta11075) {
      return new cljs.core.async.t11074(ch__$1, p__$1, filter_GT___$1, meta11075);
    };
  }
  return new cljs.core.async.t11074(ch, p, filter_GT_, null);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6152__auto___11159 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6153__auto__ = function() {
        var switch__6137__auto__ = function(state_11138) {
          var state_val_11139 = state_11138[1];
          if (state_val_11139 === 1) {
            var state_11138__$1 = state_11138;
            var statearr_11140_11160 = state_11138__$1;
            statearr_11140_11160[2] = null;
            statearr_11140_11160[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_11139 === 2) {
              var state_11138__$1 = state_11138;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11138__$1, 4, ch);
            } else {
              if (state_val_11139 === 3) {
                var inst_11136 = state_11138[2];
                var state_11138__$1 = state_11138;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11138__$1, inst_11136);
              } else {
                if (state_val_11139 === 4) {
                  var inst_11120 = state_11138[7];
                  var inst_11120__$1 = state_11138[2];
                  var inst_11121 = inst_11120__$1 == null;
                  var state_11138__$1 = function() {
                    var statearr_11141 = state_11138;
                    statearr_11141[7] = inst_11120__$1;
                    return statearr_11141;
                  }();
                  if (cljs.core.truth_(inst_11121)) {
                    var statearr_11142_11161 = state_11138__$1;
                    statearr_11142_11161[1] = 5;
                  } else {
                    var statearr_11143_11162 = state_11138__$1;
                    statearr_11143_11162[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_11139 === 5) {
                    var inst_11123 = cljs.core.async.close_BANG_.call(null, out);
                    var state_11138__$1 = state_11138;
                    var statearr_11144_11163 = state_11138__$1;
                    statearr_11144_11163[2] = inst_11123;
                    statearr_11144_11163[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_11139 === 6) {
                      var inst_11120 = state_11138[7];
                      var inst_11125 = p.call(null, inst_11120);
                      var state_11138__$1 = state_11138;
                      if (cljs.core.truth_(inst_11125)) {
                        var statearr_11145_11164 = state_11138__$1;
                        statearr_11145_11164[1] = 8;
                      } else {
                        var statearr_11146_11165 = state_11138__$1;
                        statearr_11146_11165[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_11139 === 7) {
                        var inst_11134 = state_11138[2];
                        var state_11138__$1 = state_11138;
                        var statearr_11147_11166 = state_11138__$1;
                        statearr_11147_11166[2] = inst_11134;
                        statearr_11147_11166[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_11139 === 8) {
                          var inst_11120 = state_11138[7];
                          var state_11138__$1 = state_11138;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11138__$1, 11, out, inst_11120);
                        } else {
                          if (state_val_11139 === 9) {
                            var state_11138__$1 = state_11138;
                            var statearr_11148_11167 = state_11138__$1;
                            statearr_11148_11167[2] = null;
                            statearr_11148_11167[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_11139 === 10) {
                              var inst_11131 = state_11138[2];
                              var state_11138__$1 = function() {
                                var statearr_11149 = state_11138;
                                statearr_11149[8] = inst_11131;
                                return statearr_11149;
                              }();
                              var statearr_11150_11168 = state_11138__$1;
                              statearr_11150_11168[2] = null;
                              statearr_11150_11168[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_11139 === 11) {
                                var inst_11128 = state_11138[2];
                                var state_11138__$1 = state_11138;
                                var statearr_11151_11169 = state_11138__$1;
                                statearr_11151_11169[2] = inst_11128;
                                statearr_11151_11169[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6137__auto__) {
          return function() {
            var state_machine__6138__auto__ = null;
            var state_machine__6138__auto____0 = function() {
              var statearr_11155 = [null, null, null, null, null, null, null, null, null];
              statearr_11155[0] = state_machine__6138__auto__;
              statearr_11155[1] = 1;
              return statearr_11155;
            };
            var state_machine__6138__auto____1 = function(state_11138) {
              while (true) {
                var ret_value__6139__auto__ = function() {
                  try {
                    while (true) {
                      var result__6140__auto__ = switch__6137__auto__.call(null, state_11138);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6140__auto__;
                      }
                      break;
                    }
                  } catch (e11156) {
                    if (e11156 instanceof Object) {
                      var ex__6141__auto__ = e11156;
                      var statearr_11157_11170 = state_11138;
                      statearr_11157_11170[5] = ex__6141__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11138);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e11156;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__11171 = state_11138;
                  state_11138 = G__11171;
                  continue;
                } else {
                  return ret_value__6139__auto__;
                }
                break;
              }
            };
            state_machine__6138__auto__ = function(state_11138) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6138__auto____0.call(this);
                case 1:
                  return state_machine__6138__auto____1.call(this, state_11138);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
            return state_machine__6138__auto__;
          }();
        }(switch__6137__auto__);
      }();
      var state__6154__auto__ = function() {
        var statearr_11158 = f__6153__auto__.call(null);
        statearr_11158[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___11159;
        return statearr_11158;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
    });
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__6152__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__6153__auto__ = function() {
      var switch__6137__auto__ = function(state_11323) {
        var state_val_11324 = state_11323[1];
        if (state_val_11324 === 1) {
          var state_11323__$1 = state_11323;
          var statearr_11325_11362 = state_11323__$1;
          statearr_11325_11362[2] = null;
          statearr_11325_11362[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_11324 === 2) {
            var state_11323__$1 = state_11323;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11323__$1, 4, in$);
          } else {
            if (state_val_11324 === 3) {
              var inst_11321 = state_11323[2];
              var state_11323__$1 = state_11323;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11323__$1, inst_11321);
            } else {
              if (state_val_11324 === 4) {
                var inst_11269 = state_11323[7];
                var inst_11269__$1 = state_11323[2];
                var inst_11270 = inst_11269__$1 == null;
                var state_11323__$1 = function() {
                  var statearr_11326 = state_11323;
                  statearr_11326[7] = inst_11269__$1;
                  return statearr_11326;
                }();
                if (cljs.core.truth_(inst_11270)) {
                  var statearr_11327_11363 = state_11323__$1;
                  statearr_11327_11363[1] = 5;
                } else {
                  var statearr_11328_11364 = state_11323__$1;
                  statearr_11328_11364[1] = 6;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_11324 === 5) {
                  var inst_11272 = cljs.core.async.close_BANG_.call(null, out);
                  var state_11323__$1 = state_11323;
                  var statearr_11329_11365 = state_11323__$1;
                  statearr_11329_11365[2] = inst_11272;
                  statearr_11329_11365[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_11324 === 6) {
                    var inst_11269 = state_11323[7];
                    var inst_11274 = f.call(null, inst_11269);
                    var inst_11279 = cljs.core.seq.call(null, inst_11274);
                    var inst_11280 = inst_11279;
                    var inst_11281 = null;
                    var inst_11282 = 0;
                    var inst_11283 = 0;
                    var state_11323__$1 = function() {
                      var statearr_11330 = state_11323;
                      statearr_11330[8] = inst_11283;
                      statearr_11330[9] = inst_11280;
                      statearr_11330[10] = inst_11282;
                      statearr_11330[11] = inst_11281;
                      return statearr_11330;
                    }();
                    var statearr_11331_11366 = state_11323__$1;
                    statearr_11331_11366[2] = null;
                    statearr_11331_11366[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_11324 === 7) {
                      var inst_11319 = state_11323[2];
                      var state_11323__$1 = state_11323;
                      var statearr_11332_11367 = state_11323__$1;
                      statearr_11332_11367[2] = inst_11319;
                      statearr_11332_11367[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_11324 === 8) {
                        var inst_11283 = state_11323[8];
                        var inst_11282 = state_11323[10];
                        var inst_11285 = inst_11283 < inst_11282;
                        var inst_11286 = inst_11285;
                        var state_11323__$1 = state_11323;
                        if (cljs.core.truth_(inst_11286)) {
                          var statearr_11333_11368 = state_11323__$1;
                          statearr_11333_11368[1] = 10;
                        } else {
                          var statearr_11334_11369 = state_11323__$1;
                          statearr_11334_11369[1] = 11;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_11324 === 9) {
                          var inst_11316 = state_11323[2];
                          var state_11323__$1 = function() {
                            var statearr_11335 = state_11323;
                            statearr_11335[12] = inst_11316;
                            return statearr_11335;
                          }();
                          var statearr_11336_11370 = state_11323__$1;
                          statearr_11336_11370[2] = null;
                          statearr_11336_11370[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_11324 === 10) {
                            var inst_11283 = state_11323[8];
                            var inst_11281 = state_11323[11];
                            var inst_11288 = cljs.core._nth.call(null, inst_11281, inst_11283);
                            var state_11323__$1 = state_11323;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11323__$1, 13, out, inst_11288);
                          } else {
                            if (state_val_11324 === 11) {
                              var inst_11294 = state_11323[13];
                              var inst_11280 = state_11323[9];
                              var inst_11294__$1 = cljs.core.seq.call(null, inst_11280);
                              var state_11323__$1 = function() {
                                var statearr_11340 = state_11323;
                                statearr_11340[13] = inst_11294__$1;
                                return statearr_11340;
                              }();
                              if (inst_11294__$1) {
                                var statearr_11341_11371 = state_11323__$1;
                                statearr_11341_11371[1] = 14;
                              } else {
                                var statearr_11342_11372 = state_11323__$1;
                                statearr_11342_11372[1] = 15;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_11324 === 12) {
                                var inst_11314 = state_11323[2];
                                var state_11323__$1 = state_11323;
                                var statearr_11343_11373 = state_11323__$1;
                                statearr_11343_11373[2] = inst_11314;
                                statearr_11343_11373[1] = 9;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_11324 === 13) {
                                  var inst_11283 = state_11323[8];
                                  var inst_11280 = state_11323[9];
                                  var inst_11282 = state_11323[10];
                                  var inst_11281 = state_11323[11];
                                  var inst_11290 = state_11323[2];
                                  var inst_11291 = inst_11283 + 1;
                                  var tmp11337 = inst_11280;
                                  var tmp11338 = inst_11282;
                                  var tmp11339 = inst_11281;
                                  var inst_11280__$1 = tmp11337;
                                  var inst_11281__$1 = tmp11339;
                                  var inst_11282__$1 = tmp11338;
                                  var inst_11283__$1 = inst_11291;
                                  var state_11323__$1 = function() {
                                    var statearr_11344 = state_11323;
                                    statearr_11344[14] = inst_11290;
                                    statearr_11344[8] = inst_11283__$1;
                                    statearr_11344[9] = inst_11280__$1;
                                    statearr_11344[10] = inst_11282__$1;
                                    statearr_11344[11] = inst_11281__$1;
                                    return statearr_11344;
                                  }();
                                  var statearr_11345_11374 = state_11323__$1;
                                  statearr_11345_11374[2] = null;
                                  statearr_11345_11374[1] = 8;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_11324 === 14) {
                                    var inst_11294 = state_11323[13];
                                    var inst_11296 = cljs.core.chunked_seq_QMARK_.call(null, inst_11294);
                                    var state_11323__$1 = state_11323;
                                    if (inst_11296) {
                                      var statearr_11346_11375 = state_11323__$1;
                                      statearr_11346_11375[1] = 17;
                                    } else {
                                      var statearr_11347_11376 = state_11323__$1;
                                      statearr_11347_11376[1] = 18;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_11324 === 15) {
                                      var state_11323__$1 = state_11323;
                                      var statearr_11348_11377 = state_11323__$1;
                                      statearr_11348_11377[2] = null;
                                      statearr_11348_11377[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_11324 === 16) {
                                        var inst_11312 = state_11323[2];
                                        var state_11323__$1 = state_11323;
                                        var statearr_11349_11378 = state_11323__$1;
                                        statearr_11349_11378[2] = inst_11312;
                                        statearr_11349_11378[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_11324 === 17) {
                                          var inst_11294 = state_11323[13];
                                          var inst_11298 = cljs.core.chunk_first.call(null, inst_11294);
                                          var inst_11299 = cljs.core.chunk_rest.call(null, inst_11294);
                                          var inst_11300 = cljs.core.count.call(null, inst_11298);
                                          var inst_11280 = inst_11299;
                                          var inst_11281 = inst_11298;
                                          var inst_11282 = inst_11300;
                                          var inst_11283 = 0;
                                          var state_11323__$1 = function() {
                                            var statearr_11350 = state_11323;
                                            statearr_11350[8] = inst_11283;
                                            statearr_11350[9] = inst_11280;
                                            statearr_11350[10] = inst_11282;
                                            statearr_11350[11] = inst_11281;
                                            return statearr_11350;
                                          }();
                                          var statearr_11351_11379 = state_11323__$1;
                                          statearr_11351_11379[2] = null;
                                          statearr_11351_11379[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_11324 === 18) {
                                            var inst_11294 = state_11323[13];
                                            var inst_11303 = cljs.core.first.call(null, inst_11294);
                                            var state_11323__$1 = state_11323;
                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11323__$1, 20, out, inst_11303);
                                          } else {
                                            if (state_val_11324 === 19) {
                                              var inst_11309 = state_11323[2];
                                              var state_11323__$1 = state_11323;
                                              var statearr_11352_11380 = state_11323__$1;
                                              statearr_11352_11380[2] = inst_11309;
                                              statearr_11352_11380[1] = 16;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_11324 === 20) {
                                                var inst_11294 = state_11323[13];
                                                var inst_11305 = state_11323[2];
                                                var inst_11306 = cljs.core.next.call(null, inst_11294);
                                                var inst_11280 = inst_11306;
                                                var inst_11281 = null;
                                                var inst_11282 = 0;
                                                var inst_11283 = 0;
                                                var state_11323__$1 = function() {
                                                  var statearr_11353 = state_11323;
                                                  statearr_11353[8] = inst_11283;
                                                  statearr_11353[9] = inst_11280;
                                                  statearr_11353[10] = inst_11282;
                                                  statearr_11353[11] = inst_11281;
                                                  statearr_11353[15] = inst_11305;
                                                  return statearr_11353;
                                                }();
                                                var statearr_11354_11381 = state_11323__$1;
                                                statearr_11354_11381[2] = null;
                                                statearr_11354_11381[1] = 8;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__6137__auto__) {
        return function() {
          var state_machine__6138__auto__ = null;
          var state_machine__6138__auto____0 = function() {
            var statearr_11358 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            statearr_11358[0] = state_machine__6138__auto__;
            statearr_11358[1] = 1;
            return statearr_11358;
          };
          var state_machine__6138__auto____1 = function(state_11323) {
            while (true) {
              var ret_value__6139__auto__ = function() {
                try {
                  while (true) {
                    var result__6140__auto__ = switch__6137__auto__.call(null, state_11323);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__6140__auto__;
                    }
                    break;
                  }
                } catch (e11359) {
                  if (e11359 instanceof Object) {
                    var ex__6141__auto__ = e11359;
                    var statearr_11360_11382 = state_11323;
                    statearr_11360_11382[5] = ex__6141__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11323);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e11359;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__11383 = state_11323;
                state_11323 = G__11383;
                continue;
              } else {
                return ret_value__6139__auto__;
              }
              break;
            }
          };
          state_machine__6138__auto__ = function(state_11323) {
            switch(arguments.length) {
              case 0:
                return state_machine__6138__auto____0.call(this);
              case 1:
                return state_machine__6138__auto____1.call(this, state_11323);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
          state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
          return state_machine__6138__auto__;
        }();
      }(switch__6137__auto__);
    }();
    var state__6154__auto__ = function() {
      var statearr_11361 = f__6153__auto__.call(null);
      statearr_11361[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto__;
      return statearr_11361;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
  });
  return c__6152__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__6152__auto___11464 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6153__auto__ = function() {
        var switch__6137__auto__ = function(state_11443) {
          var state_val_11444 = state_11443[1];
          if (state_val_11444 === 1) {
            var state_11443__$1 = state_11443;
            var statearr_11445_11465 = state_11443__$1;
            statearr_11445_11465[2] = null;
            statearr_11445_11465[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_11444 === 2) {
              var state_11443__$1 = state_11443;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11443__$1, 4, from);
            } else {
              if (state_val_11444 === 3) {
                var inst_11441 = state_11443[2];
                var state_11443__$1 = state_11443;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11443__$1, inst_11441);
              } else {
                if (state_val_11444 === 4) {
                  var inst_11426 = state_11443[7];
                  var inst_11426__$1 = state_11443[2];
                  var inst_11427 = inst_11426__$1 == null;
                  var state_11443__$1 = function() {
                    var statearr_11446 = state_11443;
                    statearr_11446[7] = inst_11426__$1;
                    return statearr_11446;
                  }();
                  if (cljs.core.truth_(inst_11427)) {
                    var statearr_11447_11466 = state_11443__$1;
                    statearr_11447_11466[1] = 5;
                  } else {
                    var statearr_11448_11467 = state_11443__$1;
                    statearr_11448_11467[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_11444 === 5) {
                    var state_11443__$1 = state_11443;
                    if (cljs.core.truth_(close_QMARK_)) {
                      var statearr_11449_11468 = state_11443__$1;
                      statearr_11449_11468[1] = 8;
                    } else {
                      var statearr_11450_11469 = state_11443__$1;
                      statearr_11450_11469[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_11444 === 6) {
                      var inst_11426 = state_11443[7];
                      var state_11443__$1 = state_11443;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11443__$1, 11, to, inst_11426);
                    } else {
                      if (state_val_11444 === 7) {
                        var inst_11439 = state_11443[2];
                        var state_11443__$1 = state_11443;
                        var statearr_11451_11470 = state_11443__$1;
                        statearr_11451_11470[2] = inst_11439;
                        statearr_11451_11470[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_11444 === 8) {
                          var inst_11430 = cljs.core.async.close_BANG_.call(null, to);
                          var state_11443__$1 = state_11443;
                          var statearr_11452_11471 = state_11443__$1;
                          statearr_11452_11471[2] = inst_11430;
                          statearr_11452_11471[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_11444 === 9) {
                            var state_11443__$1 = state_11443;
                            var statearr_11453_11472 = state_11443__$1;
                            statearr_11453_11472[2] = null;
                            statearr_11453_11472[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_11444 === 10) {
                              var inst_11433 = state_11443[2];
                              var state_11443__$1 = state_11443;
                              var statearr_11454_11473 = state_11443__$1;
                              statearr_11454_11473[2] = inst_11433;
                              statearr_11454_11473[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_11444 === 11) {
                                var inst_11436 = state_11443[2];
                                var state_11443__$1 = function() {
                                  var statearr_11455 = state_11443;
                                  statearr_11455[8] = inst_11436;
                                  return statearr_11455;
                                }();
                                var statearr_11456_11474 = state_11443__$1;
                                statearr_11456_11474[2] = null;
                                statearr_11456_11474[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6137__auto__) {
          return function() {
            var state_machine__6138__auto__ = null;
            var state_machine__6138__auto____0 = function() {
              var statearr_11460 = [null, null, null, null, null, null, null, null, null];
              statearr_11460[0] = state_machine__6138__auto__;
              statearr_11460[1] = 1;
              return statearr_11460;
            };
            var state_machine__6138__auto____1 = function(state_11443) {
              while (true) {
                var ret_value__6139__auto__ = function() {
                  try {
                    while (true) {
                      var result__6140__auto__ = switch__6137__auto__.call(null, state_11443);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6140__auto__;
                      }
                      break;
                    }
                  } catch (e11461) {
                    if (e11461 instanceof Object) {
                      var ex__6141__auto__ = e11461;
                      var statearr_11462_11475 = state_11443;
                      statearr_11462_11475[5] = ex__6141__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11443);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e11461;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__11476 = state_11443;
                  state_11443 = G__11476;
                  continue;
                } else {
                  return ret_value__6139__auto__;
                }
                break;
              }
            };
            state_machine__6138__auto__ = function(state_11443) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6138__auto____0.call(this);
                case 1:
                  return state_machine__6138__auto____1.call(this, state_11443);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
            return state_machine__6138__auto__;
          }();
        }(switch__6137__auto__);
      }();
      var state__6154__auto__ = function() {
        var statearr_11463 = f__6153__auto__.call(null);
        statearr_11463[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___11464;
        return statearr_11463;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
    });
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__6152__auto___11563 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6153__auto__ = function() {
        var switch__6137__auto__ = function(state_11541) {
          var state_val_11542 = state_11541[1];
          if (state_val_11542 === 1) {
            var state_11541__$1 = state_11541;
            var statearr_11543_11564 = state_11541__$1;
            statearr_11543_11564[2] = null;
            statearr_11543_11564[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_11542 === 2) {
              var state_11541__$1 = state_11541;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11541__$1, 4, ch);
            } else {
              if (state_val_11542 === 3) {
                var inst_11539 = state_11541[2];
                var state_11541__$1 = state_11541;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11541__$1, inst_11539);
              } else {
                if (state_val_11542 === 4) {
                  var inst_11522 = state_11541[7];
                  var inst_11522__$1 = state_11541[2];
                  var inst_11523 = inst_11522__$1 == null;
                  var state_11541__$1 = function() {
                    var statearr_11544 = state_11541;
                    statearr_11544[7] = inst_11522__$1;
                    return statearr_11544;
                  }();
                  if (cljs.core.truth_(inst_11523)) {
                    var statearr_11545_11565 = state_11541__$1;
                    statearr_11545_11565[1] = 5;
                  } else {
                    var statearr_11546_11566 = state_11541__$1;
                    statearr_11546_11566[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_11542 === 5) {
                    var inst_11525 = cljs.core.async.close_BANG_.call(null, tc);
                    var inst_11526 = cljs.core.async.close_BANG_.call(null, fc);
                    var state_11541__$1 = function() {
                      var statearr_11547 = state_11541;
                      statearr_11547[8] = inst_11525;
                      return statearr_11547;
                    }();
                    var statearr_11548_11567 = state_11541__$1;
                    statearr_11548_11567[2] = inst_11526;
                    statearr_11548_11567[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_11542 === 6) {
                      var inst_11522 = state_11541[7];
                      var inst_11528 = p.call(null, inst_11522);
                      var state_11541__$1 = state_11541;
                      if (cljs.core.truth_(inst_11528)) {
                        var statearr_11549_11568 = state_11541__$1;
                        statearr_11549_11568[1] = 9;
                      } else {
                        var statearr_11550_11569 = state_11541__$1;
                        statearr_11550_11569[1] = 10;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_11542 === 7) {
                        var inst_11537 = state_11541[2];
                        var state_11541__$1 = state_11541;
                        var statearr_11551_11570 = state_11541__$1;
                        statearr_11551_11570[2] = inst_11537;
                        statearr_11551_11570[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_11542 === 8) {
                          var inst_11534 = state_11541[2];
                          var state_11541__$1 = function() {
                            var statearr_11552 = state_11541;
                            statearr_11552[9] = inst_11534;
                            return statearr_11552;
                          }();
                          var statearr_11553_11571 = state_11541__$1;
                          statearr_11553_11571[2] = null;
                          statearr_11553_11571[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_11542 === 9) {
                            var state_11541__$1 = state_11541;
                            var statearr_11554_11572 = state_11541__$1;
                            statearr_11554_11572[2] = tc;
                            statearr_11554_11572[1] = 11;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_11542 === 10) {
                              var state_11541__$1 = state_11541;
                              var statearr_11555_11573 = state_11541__$1;
                              statearr_11555_11573[2] = fc;
                              statearr_11555_11573[1] = 11;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_11542 === 11) {
                                var inst_11522 = state_11541[7];
                                var inst_11532 = state_11541[2];
                                var state_11541__$1 = state_11541;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11541__$1, 8, inst_11532, inst_11522);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6137__auto__) {
          return function() {
            var state_machine__6138__auto__ = null;
            var state_machine__6138__auto____0 = function() {
              var statearr_11559 = [null, null, null, null, null, null, null, null, null, null];
              statearr_11559[0] = state_machine__6138__auto__;
              statearr_11559[1] = 1;
              return statearr_11559;
            };
            var state_machine__6138__auto____1 = function(state_11541) {
              while (true) {
                var ret_value__6139__auto__ = function() {
                  try {
                    while (true) {
                      var result__6140__auto__ = switch__6137__auto__.call(null, state_11541);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6140__auto__;
                      }
                      break;
                    }
                  } catch (e11560) {
                    if (e11560 instanceof Object) {
                      var ex__6141__auto__ = e11560;
                      var statearr_11561_11574 = state_11541;
                      statearr_11561_11574[5] = ex__6141__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11541);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e11560;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__11575 = state_11541;
                  state_11541 = G__11575;
                  continue;
                } else {
                  return ret_value__6139__auto__;
                }
                break;
              }
            };
            state_machine__6138__auto__ = function(state_11541) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6138__auto____0.call(this);
                case 1:
                  return state_machine__6138__auto____1.call(this, state_11541);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
            return state_machine__6138__auto__;
          }();
        }(switch__6137__auto__);
      }();
      var state__6154__auto__ = function() {
        var statearr_11562 = f__6153__auto__.call(null);
        statearr_11562[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___11563;
        return statearr_11562;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
    });
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__6152__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__6153__auto__ = function() {
      var switch__6137__auto__ = function(state_11622) {
        var state_val_11623 = state_11622[1];
        if (state_val_11623 === 7) {
          var inst_11618 = state_11622[2];
          var state_11622__$1 = state_11622;
          var statearr_11624_11640 = state_11622__$1;
          statearr_11624_11640[2] = inst_11618;
          statearr_11624_11640[1] = 3;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_11623 === 6) {
            var inst_11611 = state_11622[7];
            var inst_11608 = state_11622[8];
            var inst_11615 = f.call(null, inst_11608, inst_11611);
            var inst_11608__$1 = inst_11615;
            var state_11622__$1 = function() {
              var statearr_11625 = state_11622;
              statearr_11625[8] = inst_11608__$1;
              return statearr_11625;
            }();
            var statearr_11626_11641 = state_11622__$1;
            statearr_11626_11641[2] = null;
            statearr_11626_11641[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_11623 === 5) {
              var inst_11608 = state_11622[8];
              var state_11622__$1 = state_11622;
              var statearr_11627_11642 = state_11622__$1;
              statearr_11627_11642[2] = inst_11608;
              statearr_11627_11642[1] = 7;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_11623 === 4) {
                var inst_11611 = state_11622[7];
                var inst_11611__$1 = state_11622[2];
                var inst_11612 = inst_11611__$1 == null;
                var state_11622__$1 = function() {
                  var statearr_11628 = state_11622;
                  statearr_11628[7] = inst_11611__$1;
                  return statearr_11628;
                }();
                if (cljs.core.truth_(inst_11612)) {
                  var statearr_11629_11643 = state_11622__$1;
                  statearr_11629_11643[1] = 5;
                } else {
                  var statearr_11630_11644 = state_11622__$1;
                  statearr_11630_11644[1] = 6;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_11623 === 3) {
                  var inst_11620 = state_11622[2];
                  var state_11622__$1 = state_11622;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11622__$1, inst_11620);
                } else {
                  if (state_val_11623 === 2) {
                    var state_11622__$1 = state_11622;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11622__$1, 4, ch);
                  } else {
                    if (state_val_11623 === 1) {
                      var inst_11608 = init;
                      var state_11622__$1 = function() {
                        var statearr_11631 = state_11622;
                        statearr_11631[8] = inst_11608;
                        return statearr_11631;
                      }();
                      var statearr_11632_11645 = state_11622__$1;
                      statearr_11632_11645[2] = null;
                      statearr_11632_11645[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      return null;
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__6137__auto__) {
        return function() {
          var state_machine__6138__auto__ = null;
          var state_machine__6138__auto____0 = function() {
            var statearr_11636 = [null, null, null, null, null, null, null, null, null];
            statearr_11636[0] = state_machine__6138__auto__;
            statearr_11636[1] = 1;
            return statearr_11636;
          };
          var state_machine__6138__auto____1 = function(state_11622) {
            while (true) {
              var ret_value__6139__auto__ = function() {
                try {
                  while (true) {
                    var result__6140__auto__ = switch__6137__auto__.call(null, state_11622);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__6140__auto__;
                    }
                    break;
                  }
                } catch (e11637) {
                  if (e11637 instanceof Object) {
                    var ex__6141__auto__ = e11637;
                    var statearr_11638_11646 = state_11622;
                    statearr_11638_11646[5] = ex__6141__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11622);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e11637;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__11647 = state_11622;
                state_11622 = G__11647;
                continue;
              } else {
                return ret_value__6139__auto__;
              }
              break;
            }
          };
          state_machine__6138__auto__ = function(state_11622) {
            switch(arguments.length) {
              case 0:
                return state_machine__6138__auto____0.call(this);
              case 1:
                return state_machine__6138__auto____1.call(this, state_11622);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
          state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
          return state_machine__6138__auto__;
        }();
      }(switch__6137__auto__);
    }();
    var state__6154__auto__ = function() {
      var statearr_11639 = f__6153__auto__.call(null);
      statearr_11639[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto__;
      return statearr_11639;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
  });
  return c__6152__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__6152__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6153__auto__ = function() {
        var switch__6137__auto__ = function(state_11709) {
          var state_val_11710 = state_11709[1];
          if (state_val_11710 === 1) {
            var inst_11689 = cljs.core.seq.call(null, coll);
            var inst_11690 = inst_11689;
            var state_11709__$1 = function() {
              var statearr_11711 = state_11709;
              statearr_11711[7] = inst_11690;
              return statearr_11711;
            }();
            var statearr_11712_11730 = state_11709__$1;
            statearr_11712_11730[2] = null;
            statearr_11712_11730[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_11710 === 2) {
              var inst_11690 = state_11709[7];
              var state_11709__$1 = state_11709;
              if (cljs.core.truth_(inst_11690)) {
                var statearr_11713_11731 = state_11709__$1;
                statearr_11713_11731[1] = 4;
              } else {
                var statearr_11714_11732 = state_11709__$1;
                statearr_11714_11732[1] = 5;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_11710 === 3) {
                var inst_11707 = state_11709[2];
                var state_11709__$1 = state_11709;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11709__$1, inst_11707);
              } else {
                if (state_val_11710 === 4) {
                  var inst_11690 = state_11709[7];
                  var inst_11693 = cljs.core.first.call(null, inst_11690);
                  var state_11709__$1 = state_11709;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11709__$1, 7, ch, inst_11693);
                } else {
                  if (state_val_11710 === 5) {
                    var state_11709__$1 = state_11709;
                    if (cljs.core.truth_(close_QMARK_)) {
                      var statearr_11715_11733 = state_11709__$1;
                      statearr_11715_11733[1] = 8;
                    } else {
                      var statearr_11716_11734 = state_11709__$1;
                      statearr_11716_11734[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_11710 === 6) {
                      var inst_11705 = state_11709[2];
                      var state_11709__$1 = state_11709;
                      var statearr_11717_11735 = state_11709__$1;
                      statearr_11717_11735[2] = inst_11705;
                      statearr_11717_11735[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_11710 === 7) {
                        var inst_11690 = state_11709[7];
                        var inst_11695 = state_11709[2];
                        var inst_11696 = cljs.core.next.call(null, inst_11690);
                        var inst_11690__$1 = inst_11696;
                        var state_11709__$1 = function() {
                          var statearr_11718 = state_11709;
                          statearr_11718[7] = inst_11690__$1;
                          statearr_11718[8] = inst_11695;
                          return statearr_11718;
                        }();
                        var statearr_11719_11736 = state_11709__$1;
                        statearr_11719_11736[2] = null;
                        statearr_11719_11736[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_11710 === 8) {
                          var inst_11700 = cljs.core.async.close_BANG_.call(null, ch);
                          var state_11709__$1 = state_11709;
                          var statearr_11720_11737 = state_11709__$1;
                          statearr_11720_11737[2] = inst_11700;
                          statearr_11720_11737[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_11710 === 9) {
                            var state_11709__$1 = state_11709;
                            var statearr_11721_11738 = state_11709__$1;
                            statearr_11721_11738[2] = null;
                            statearr_11721_11738[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_11710 === 10) {
                              var inst_11703 = state_11709[2];
                              var state_11709__$1 = state_11709;
                              var statearr_11722_11739 = state_11709__$1;
                              statearr_11722_11739[2] = inst_11703;
                              statearr_11722_11739[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6137__auto__) {
          return function() {
            var state_machine__6138__auto__ = null;
            var state_machine__6138__auto____0 = function() {
              var statearr_11726 = [null, null, null, null, null, null, null, null, null];
              statearr_11726[0] = state_machine__6138__auto__;
              statearr_11726[1] = 1;
              return statearr_11726;
            };
            var state_machine__6138__auto____1 = function(state_11709) {
              while (true) {
                var ret_value__6139__auto__ = function() {
                  try {
                    while (true) {
                      var result__6140__auto__ = switch__6137__auto__.call(null, state_11709);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6140__auto__;
                      }
                      break;
                    }
                  } catch (e11727) {
                    if (e11727 instanceof Object) {
                      var ex__6141__auto__ = e11727;
                      var statearr_11728_11740 = state_11709;
                      statearr_11728_11740[5] = ex__6141__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11709);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e11727;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__11741 = state_11709;
                  state_11709 = G__11741;
                  continue;
                } else {
                  return ret_value__6139__auto__;
                }
                break;
              }
            };
            state_machine__6138__auto__ = function(state_11709) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6138__auto____0.call(this);
                case 1:
                  return state_machine__6138__auto____1.call(this, state_11709);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
            return state_machine__6138__auto__;
          }();
        }(switch__6137__auto__);
      }();
      var state__6154__auto__ = function() {
        var statearr_11729 = f__6153__auto__.call(null);
        statearr_11729[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto__;
        return statearr_11729;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
    });
    return c__6152__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj11743 = {};
  return obj11743;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3391__auto__ = _;
    if (and__3391__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4030__auto__ = _ == null ? null : _;
    return function() {
      var or__3403__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj11745 = {};
  return obj11745;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3391__auto__ = m;
    if (and__3391__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4030__auto__ = m == null ? null : m;
    return function() {
      var or__3403__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3391__auto__ = m;
    if (and__3391__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4030__auto__ = m == null ? null : m;
    return function() {
      var or__3403__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3391__auto__ = m;
    if (and__3391__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4030__auto__ = m == null ? null : m;
    return function() {
      var or__3403__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t11969 !== "undefined") {
    } else {
      cljs.core.async.t11969 = function(cs, ch, mult, meta11970) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta11970 = meta11970;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t11969.cljs$lang$type = true;
      cljs.core.async.t11969.cljs$lang$ctorStr = "cljs.core.async/t11969";
      cljs.core.async.t11969.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
          return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t11969");
        };
      }(cs);
      cljs.core.async.t11969.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t11969.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t11969.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null;
        };
      }(cs);
      cljs.core.async.t11969.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t11969.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t11969.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t11969.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_11971) {
          var self__ = this;
          var _11971__$1 = this;
          return self__.meta11970;
        };
      }(cs);
      cljs.core.async.t11969.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_11971, meta11970__$1) {
          var self__ = this;
          var _11971__$1 = this;
          return new cljs.core.async.t11969(self__.cs, self__.ch, self__.mult, meta11970__$1);
        };
      }(cs);
      cljs.core.async.__GT_t11969 = function(cs) {
        return function __GT_t11969(cs__$1, ch__$1, mult__$1, meta11970) {
          return new cljs.core.async.t11969(cs__$1, ch__$1, mult__$1, meta11970);
        };
      }(cs);
    }
    return new cljs.core.async.t11969(cs, ch, mult, null);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function() {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__6152__auto___12192 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__6153__auto__ = function() {
      var switch__6137__auto__ = function(state_12106) {
        var state_val_12107 = state_12106[1];
        if (state_val_12107 === 32) {
          var inst_11974 = state_12106[7];
          var inst_12050 = state_12106[8];
          var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_12106, 31, Object, null, 30);
          var inst_12057 = cljs.core.async.put_BANG_.call(null, inst_12050, inst_11974, done);
          var state_12106__$1 = state_12106;
          var statearr_12108_12193 = state_12106__$1;
          statearr_12108_12193[2] = inst_12057;
          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12106__$1);
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_12107 === 1) {
            var state_12106__$1 = state_12106;
            var statearr_12109_12194 = state_12106__$1;
            statearr_12109_12194[2] = null;
            statearr_12109_12194[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_12107 === 33) {
              var inst_12063 = state_12106[9];
              var inst_12065 = cljs.core.chunked_seq_QMARK_.call(null, inst_12063);
              var state_12106__$1 = state_12106;
              if (inst_12065) {
                var statearr_12110_12195 = state_12106__$1;
                statearr_12110_12195[1] = 36;
              } else {
                var statearr_12111_12196 = state_12106__$1;
                statearr_12111_12196[1] = 37;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_12107 === 2) {
                var state_12106__$1 = state_12106;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12106__$1, 4, ch);
              } else {
                if (state_val_12107 === 34) {
                  var state_12106__$1 = state_12106;
                  var statearr_12112_12197 = state_12106__$1;
                  statearr_12112_12197[2] = null;
                  statearr_12112_12197[1] = 35;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_12107 === 3) {
                    var inst_12104 = state_12106[2];
                    var state_12106__$1 = state_12106;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12106__$1, inst_12104);
                  } else {
                    if (state_val_12107 === 35) {
                      var inst_12088 = state_12106[2];
                      var state_12106__$1 = state_12106;
                      var statearr_12113_12198 = state_12106__$1;
                      statearr_12113_12198[2] = inst_12088;
                      statearr_12113_12198[1] = 29;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_12107 === 4) {
                        var inst_11974 = state_12106[7];
                        var inst_11974__$1 = state_12106[2];
                        var inst_11975 = inst_11974__$1 == null;
                        var state_12106__$1 = function() {
                          var statearr_12114 = state_12106;
                          statearr_12114[7] = inst_11974__$1;
                          return statearr_12114;
                        }();
                        if (cljs.core.truth_(inst_11975)) {
                          var statearr_12115_12199 = state_12106__$1;
                          statearr_12115_12199[1] = 5;
                        } else {
                          var statearr_12116_12200 = state_12106__$1;
                          statearr_12116_12200[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_12107 === 36) {
                          var inst_12063 = state_12106[9];
                          var inst_12067 = cljs.core.chunk_first.call(null, inst_12063);
                          var inst_12068 = cljs.core.chunk_rest.call(null, inst_12063);
                          var inst_12069 = cljs.core.count.call(null, inst_12067);
                          var inst_12042 = inst_12068;
                          var inst_12043 = inst_12067;
                          var inst_12044 = inst_12069;
                          var inst_12045 = 0;
                          var state_12106__$1 = function() {
                            var statearr_12117 = state_12106;
                            statearr_12117[10] = inst_12044;
                            statearr_12117[11] = inst_12045;
                            statearr_12117[12] = inst_12042;
                            statearr_12117[13] = inst_12043;
                            return statearr_12117;
                          }();
                          var statearr_12118_12201 = state_12106__$1;
                          statearr_12118_12201[2] = null;
                          statearr_12118_12201[1] = 25;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_12107 === 5) {
                            var inst_11981 = cljs.core.deref.call(null, cs);
                            var inst_11982 = cljs.core.seq.call(null, inst_11981);
                            var inst_11983 = inst_11982;
                            var inst_11984 = null;
                            var inst_11985 = 0;
                            var inst_11986 = 0;
                            var state_12106__$1 = function() {
                              var statearr_12119 = state_12106;
                              statearr_12119[14] = inst_11983;
                              statearr_12119[15] = inst_11984;
                              statearr_12119[16] = inst_11985;
                              statearr_12119[17] = inst_11986;
                              return statearr_12119;
                            }();
                            var statearr_12120_12202 = state_12106__$1;
                            statearr_12120_12202[2] = null;
                            statearr_12120_12202[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_12107 === 37) {
                              var inst_12063 = state_12106[9];
                              var inst_12072 = cljs.core.first.call(null, inst_12063);
                              var state_12106__$1 = function() {
                                var statearr_12121 = state_12106;
                                statearr_12121[18] = inst_12072;
                                return statearr_12121;
                              }();
                              var statearr_12122_12203 = state_12106__$1;
                              statearr_12122_12203[2] = null;
                              statearr_12122_12203[1] = 41;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_12107 === 6) {
                                var inst_12034 = state_12106[19];
                                var inst_12033 = cljs.core.deref.call(null, cs);
                                var inst_12034__$1 = cljs.core.keys.call(null, inst_12033);
                                var inst_12035 = cljs.core.count.call(null, inst_12034__$1);
                                var inst_12036 = cljs.core.reset_BANG_.call(null, dctr, inst_12035);
                                var inst_12041 = cljs.core.seq.call(null, inst_12034__$1);
                                var inst_12042 = inst_12041;
                                var inst_12043 = null;
                                var inst_12044 = 0;
                                var inst_12045 = 0;
                                var state_12106__$1 = function() {
                                  var statearr_12123 = state_12106;
                                  statearr_12123[20] = inst_12036;
                                  statearr_12123[19] = inst_12034__$1;
                                  statearr_12123[10] = inst_12044;
                                  statearr_12123[11] = inst_12045;
                                  statearr_12123[12] = inst_12042;
                                  statearr_12123[13] = inst_12043;
                                  return statearr_12123;
                                }();
                                var statearr_12124_12204 = state_12106__$1;
                                statearr_12124_12204[2] = null;
                                statearr_12124_12204[1] = 25;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_12107 === 38) {
                                  var inst_12085 = state_12106[2];
                                  var state_12106__$1 = state_12106;
                                  var statearr_12125_12205 = state_12106__$1;
                                  statearr_12125_12205[2] = inst_12085;
                                  statearr_12125_12205[1] = 35;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_12107 === 7) {
                                    var inst_12102 = state_12106[2];
                                    var state_12106__$1 = state_12106;
                                    var statearr_12126_12206 = state_12106__$1;
                                    statearr_12126_12206[2] = inst_12102;
                                    statearr_12126_12206[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_12107 === 39) {
                                      var inst_12063 = state_12106[9];
                                      var inst_12081 = state_12106[2];
                                      var inst_12082 = cljs.core.next.call(null, inst_12063);
                                      var inst_12042 = inst_12082;
                                      var inst_12043 = null;
                                      var inst_12044 = 0;
                                      var inst_12045 = 0;
                                      var state_12106__$1 = function() {
                                        var statearr_12127 = state_12106;
                                        statearr_12127[21] = inst_12081;
                                        statearr_12127[10] = inst_12044;
                                        statearr_12127[11] = inst_12045;
                                        statearr_12127[12] = inst_12042;
                                        statearr_12127[13] = inst_12043;
                                        return statearr_12127;
                                      }();
                                      var statearr_12128_12207 = state_12106__$1;
                                      statearr_12128_12207[2] = null;
                                      statearr_12128_12207[1] = 25;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_12107 === 8) {
                                        var inst_11985 = state_12106[16];
                                        var inst_11986 = state_12106[17];
                                        var inst_11988 = inst_11986 < inst_11985;
                                        var inst_11989 = inst_11988;
                                        var state_12106__$1 = state_12106;
                                        if (cljs.core.truth_(inst_11989)) {
                                          var statearr_12129_12208 = state_12106__$1;
                                          statearr_12129_12208[1] = 10;
                                        } else {
                                          var statearr_12130_12209 = state_12106__$1;
                                          statearr_12130_12209[1] = 11;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_12107 === 40) {
                                          var inst_12072 = state_12106[18];
                                          var inst_12073 = state_12106[2];
                                          var inst_12074 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                          var inst_12075 = cljs.core.async.untap_STAR_.call(null, m, inst_12072);
                                          var state_12106__$1 = function() {
                                            var statearr_12131 = state_12106;
                                            statearr_12131[22] = inst_12074;
                                            statearr_12131[23] = inst_12073;
                                            return statearr_12131;
                                          }();
                                          var statearr_12132_12210 = state_12106__$1;
                                          statearr_12132_12210[2] = inst_12075;
                                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12106__$1);
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_12107 === 9) {
                                            var inst_12031 = state_12106[2];
                                            var state_12106__$1 = state_12106;
                                            var statearr_12133_12211 = state_12106__$1;
                                            statearr_12133_12211[2] = inst_12031;
                                            statearr_12133_12211[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_12107 === 41) {
                                              var inst_11974 = state_12106[7];
                                              var inst_12072 = state_12106[18];
                                              var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_12106, 40, Object, null, 39);
                                              var inst_12079 = cljs.core.async.put_BANG_.call(null, inst_12072, inst_11974, done);
                                              var state_12106__$1 = state_12106;
                                              var statearr_12134_12212 = state_12106__$1;
                                              statearr_12134_12212[2] = inst_12079;
                                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12106__$1);
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_12107 === 10) {
                                                var inst_11984 = state_12106[15];
                                                var inst_11986 = state_12106[17];
                                                var inst_11992 = cljs.core._nth.call(null, inst_11984, inst_11986);
                                                var inst_11993 = cljs.core.nth.call(null, inst_11992, 0, null);
                                                var inst_11994 = cljs.core.nth.call(null, inst_11992, 1, null);
                                                var state_12106__$1 = function() {
                                                  var statearr_12135 = state_12106;
                                                  statearr_12135[24] = inst_11993;
                                                  return statearr_12135;
                                                }();
                                                if (cljs.core.truth_(inst_11994)) {
                                                  var statearr_12136_12213 = state_12106__$1;
                                                  statearr_12136_12213[1] = 13;
                                                } else {
                                                  var statearr_12137_12214 = state_12106__$1;
                                                  statearr_12137_12214[1] = 14;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_12107 === 42) {
                                                  var state_12106__$1 = state_12106;
                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12106__$1, 45, dchan);
                                                } else {
                                                  if (state_val_12107 === 11) {
                                                    var inst_11983 = state_12106[14];
                                                    var inst_12003 = state_12106[25];
                                                    var inst_12003__$1 = cljs.core.seq.call(null, inst_11983);
                                                    var state_12106__$1 = function() {
                                                      var statearr_12138 = state_12106;
                                                      statearr_12138[25] = inst_12003__$1;
                                                      return statearr_12138;
                                                    }();
                                                    if (inst_12003__$1) {
                                                      var statearr_12139_12215 = state_12106__$1;
                                                      statearr_12139_12215[1] = 16;
                                                    } else {
                                                      var statearr_12140_12216 = state_12106__$1;
                                                      statearr_12140_12216[1] = 17;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_12107 === 43) {
                                                      var state_12106__$1 = state_12106;
                                                      var statearr_12141_12217 = state_12106__$1;
                                                      statearr_12141_12217[2] = null;
                                                      statearr_12141_12217[1] = 44;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_12107 === 12) {
                                                        var inst_12029 = state_12106[2];
                                                        var state_12106__$1 = state_12106;
                                                        var statearr_12142_12218 = state_12106__$1;
                                                        statearr_12142_12218[2] = inst_12029;
                                                        statearr_12142_12218[1] = 9;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_12107 === 44) {
                                                          var inst_12099 = state_12106[2];
                                                          var state_12106__$1 = function() {
                                                            var statearr_12143 = state_12106;
                                                            statearr_12143[26] = inst_12099;
                                                            return statearr_12143;
                                                          }();
                                                          var statearr_12144_12219 = state_12106__$1;
                                                          statearr_12144_12219[2] = null;
                                                          statearr_12144_12219[1] = 2;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          if (state_val_12107 === 13) {
                                                            var inst_11993 = state_12106[24];
                                                            var inst_11996 = cljs.core.async.close_BANG_.call(null, inst_11993);
                                                            var state_12106__$1 = state_12106;
                                                            var statearr_12145_12220 = state_12106__$1;
                                                            statearr_12145_12220[2] = inst_11996;
                                                            statearr_12145_12220[1] = 15;
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                          } else {
                                                            if (state_val_12107 === 45) {
                                                              var inst_12096 = state_12106[2];
                                                              var state_12106__$1 = state_12106;
                                                              var statearr_12149_12221 = state_12106__$1;
                                                              statearr_12149_12221[2] = inst_12096;
                                                              statearr_12149_12221[1] = 44;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                            } else {
                                                              if (state_val_12107 === 14) {
                                                                var state_12106__$1 = state_12106;
                                                                var statearr_12150_12222 = state_12106__$1;
                                                                statearr_12150_12222[2] = null;
                                                                statearr_12150_12222[1] = 15;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                              } else {
                                                                if (state_val_12107 === 15) {
                                                                  var inst_11983 = state_12106[14];
                                                                  var inst_11984 = state_12106[15];
                                                                  var inst_11985 = state_12106[16];
                                                                  var inst_11986 = state_12106[17];
                                                                  var inst_11999 = state_12106[2];
                                                                  var inst_12000 = inst_11986 + 1;
                                                                  var tmp12146 = inst_11983;
                                                                  var tmp12147 = inst_11984;
                                                                  var tmp12148 = inst_11985;
                                                                  var inst_11983__$1 = tmp12146;
                                                                  var inst_11984__$1 = tmp12147;
                                                                  var inst_11985__$1 = tmp12148;
                                                                  var inst_11986__$1 = inst_12000;
                                                                  var state_12106__$1 = function() {
                                                                    var statearr_12151 = state_12106;
                                                                    statearr_12151[14] = inst_11983__$1;
                                                                    statearr_12151[27] = inst_11999;
                                                                    statearr_12151[15] = inst_11984__$1;
                                                                    statearr_12151[16] = inst_11985__$1;
                                                                    statearr_12151[17] = inst_11986__$1;
                                                                    return statearr_12151;
                                                                  }();
                                                                  var statearr_12152_12223 = state_12106__$1;
                                                                  statearr_12152_12223[2] = null;
                                                                  statearr_12152_12223[1] = 8;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                } else {
                                                                  if (state_val_12107 === 16) {
                                                                    var inst_12003 = state_12106[25];
                                                                    var inst_12005 = cljs.core.chunked_seq_QMARK_.call(null, inst_12003);
                                                                    var state_12106__$1 = state_12106;
                                                                    if (inst_12005) {
                                                                      var statearr_12153_12224 = state_12106__$1;
                                                                      statearr_12153_12224[1] = 19;
                                                                    } else {
                                                                      var statearr_12154_12225 = state_12106__$1;
                                                                      statearr_12154_12225[1] = 20;
                                                                    }
                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                  } else {
                                                                    if (state_val_12107 === 17) {
                                                                      var state_12106__$1 = state_12106;
                                                                      var statearr_12155_12226 = state_12106__$1;
                                                                      statearr_12155_12226[2] = null;
                                                                      statearr_12155_12226[1] = 18;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                    } else {
                                                                      if (state_val_12107 === 18) {
                                                                        var inst_12027 = state_12106[2];
                                                                        var state_12106__$1 = state_12106;
                                                                        var statearr_12156_12227 = state_12106__$1;
                                                                        statearr_12156_12227[2] = inst_12027;
                                                                        statearr_12156_12227[1] = 12;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                      } else {
                                                                        if (state_val_12107 === 19) {
                                                                          var inst_12003 = state_12106[25];
                                                                          var inst_12007 = cljs.core.chunk_first.call(null, inst_12003);
                                                                          var inst_12008 = cljs.core.chunk_rest.call(null, inst_12003);
                                                                          var inst_12009 = cljs.core.count.call(null, inst_12007);
                                                                          var inst_11983 = inst_12008;
                                                                          var inst_11984 = inst_12007;
                                                                          var inst_11985 = inst_12009;
                                                                          var inst_11986 = 0;
                                                                          var state_12106__$1 = function() {
                                                                            var statearr_12157 = state_12106;
                                                                            statearr_12157[14] = inst_11983;
                                                                            statearr_12157[15] = inst_11984;
                                                                            statearr_12157[16] = inst_11985;
                                                                            statearr_12157[17] = inst_11986;
                                                                            return statearr_12157;
                                                                          }();
                                                                          var statearr_12158_12228 = state_12106__$1;
                                                                          statearr_12158_12228[2] = null;
                                                                          statearr_12158_12228[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                        } else {
                                                                          if (state_val_12107 === 20) {
                                                                            var inst_12003 = state_12106[25];
                                                                            var inst_12013 = cljs.core.first.call(null, inst_12003);
                                                                            var inst_12014 = cljs.core.nth.call(null, inst_12013, 0, null);
                                                                            var inst_12015 = cljs.core.nth.call(null, inst_12013, 1, null);
                                                                            var state_12106__$1 = function() {
                                                                              var statearr_12159 = state_12106;
                                                                              statearr_12159[28] = inst_12014;
                                                                              return statearr_12159;
                                                                            }();
                                                                            if (cljs.core.truth_(inst_12015)) {
                                                                              var statearr_12160_12229 = state_12106__$1;
                                                                              statearr_12160_12229[1] = 22;
                                                                            } else {
                                                                              var statearr_12161_12230 = state_12106__$1;
                                                                              statearr_12161_12230[1] = 23;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                          } else {
                                                                            if (state_val_12107 === 21) {
                                                                              var inst_12024 = state_12106[2];
                                                                              var state_12106__$1 = state_12106;
                                                                              var statearr_12162_12231 = state_12106__$1;
                                                                              statearr_12162_12231[2] = inst_12024;
                                                                              statearr_12162_12231[1] = 18;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                            } else {
                                                                              if (state_val_12107 === 22) {
                                                                                var inst_12014 = state_12106[28];
                                                                                var inst_12017 = cljs.core.async.close_BANG_.call(null, inst_12014);
                                                                                var state_12106__$1 = state_12106;
                                                                                var statearr_12163_12232 = state_12106__$1;
                                                                                statearr_12163_12232[2] = inst_12017;
                                                                                statearr_12163_12232[1] = 24;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                              } else {
                                                                                if (state_val_12107 === 23) {
                                                                                  var state_12106__$1 = state_12106;
                                                                                  var statearr_12164_12233 = state_12106__$1;
                                                                                  statearr_12164_12233[2] = null;
                                                                                  statearr_12164_12233[1] = 24;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                } else {
                                                                                  if (state_val_12107 === 24) {
                                                                                    var inst_12003 = state_12106[25];
                                                                                    var inst_12020 = state_12106[2];
                                                                                    var inst_12021 = cljs.core.next.call(null, inst_12003);
                                                                                    var inst_11983 = inst_12021;
                                                                                    var inst_11984 = null;
                                                                                    var inst_11985 = 0;
                                                                                    var inst_11986 = 0;
                                                                                    var state_12106__$1 = function() {
                                                                                      var statearr_12165 = state_12106;
                                                                                      statearr_12165[29] = inst_12020;
                                                                                      statearr_12165[14] = inst_11983;
                                                                                      statearr_12165[15] = inst_11984;
                                                                                      statearr_12165[16] = inst_11985;
                                                                                      statearr_12165[17] = inst_11986;
                                                                                      return statearr_12165;
                                                                                    }();
                                                                                    var statearr_12166_12234 = state_12106__$1;
                                                                                    statearr_12166_12234[2] = null;
                                                                                    statearr_12166_12234[1] = 8;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                  } else {
                                                                                    if (state_val_12107 === 25) {
                                                                                      var inst_12044 = state_12106[10];
                                                                                      var inst_12045 = state_12106[11];
                                                                                      var inst_12047 = inst_12045 < inst_12044;
                                                                                      var inst_12048 = inst_12047;
                                                                                      var state_12106__$1 = state_12106;
                                                                                      if (cljs.core.truth_(inst_12048)) {
                                                                                        var statearr_12167_12235 = state_12106__$1;
                                                                                        statearr_12167_12235[1] = 27;
                                                                                      } else {
                                                                                        var statearr_12168_12236 = state_12106__$1;
                                                                                        statearr_12168_12236[1] = 28;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                    } else {
                                                                                      if (state_val_12107 === 26) {
                                                                                        var inst_12034 = state_12106[19];
                                                                                        var inst_12092 = state_12106[2];
                                                                                        var inst_12093 = cljs.core.seq.call(null, inst_12034);
                                                                                        var state_12106__$1 = function() {
                                                                                          var statearr_12169 = state_12106;
                                                                                          statearr_12169[30] = inst_12092;
                                                                                          return statearr_12169;
                                                                                        }();
                                                                                        if (inst_12093) {
                                                                                          var statearr_12170_12237 = state_12106__$1;
                                                                                          statearr_12170_12237[1] = 42;
                                                                                        } else {
                                                                                          var statearr_12171_12238 = state_12106__$1;
                                                                                          statearr_12171_12238[1] = 43;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                      } else {
                                                                                        if (state_val_12107 === 27) {
                                                                                          var inst_12045 = state_12106[11];
                                                                                          var inst_12043 = state_12106[13];
                                                                                          var inst_12050 = cljs.core._nth.call(null, inst_12043, inst_12045);
                                                                                          var state_12106__$1 = function() {
                                                                                            var statearr_12172 = state_12106;
                                                                                            statearr_12172[8] = inst_12050;
                                                                                            return statearr_12172;
                                                                                          }();
                                                                                          var statearr_12173_12239 = state_12106__$1;
                                                                                          statearr_12173_12239[2] = null;
                                                                                          statearr_12173_12239[1] = 32;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                        } else {
                                                                                          if (state_val_12107 === 28) {
                                                                                            var inst_12063 = state_12106[9];
                                                                                            var inst_12042 = state_12106[12];
                                                                                            var inst_12063__$1 = cljs.core.seq.call(null, inst_12042);
                                                                                            var state_12106__$1 = function() {
                                                                                              var statearr_12177 = state_12106;
                                                                                              statearr_12177[9] = inst_12063__$1;
                                                                                              return statearr_12177;
                                                                                            }();
                                                                                            if (inst_12063__$1) {
                                                                                              var statearr_12178_12240 = state_12106__$1;
                                                                                              statearr_12178_12240[1] = 33;
                                                                                            } else {
                                                                                              var statearr_12179_12241 = state_12106__$1;
                                                                                              statearr_12179_12241[1] = 34;
                                                                                            }
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                          } else {
                                                                                            if (state_val_12107 === 29) {
                                                                                              var inst_12090 = state_12106[2];
                                                                                              var state_12106__$1 = state_12106;
                                                                                              var statearr_12180_12242 = state_12106__$1;
                                                                                              statearr_12180_12242[2] = inst_12090;
                                                                                              statearr_12180_12242[1] = 26;
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                            } else {
                                                                                              if (state_val_12107 === 30) {
                                                                                                var inst_12044 = state_12106[10];
                                                                                                var inst_12045 = state_12106[11];
                                                                                                var inst_12042 = state_12106[12];
                                                                                                var inst_12043 = state_12106[13];
                                                                                                var inst_12059 = state_12106[2];
                                                                                                var inst_12060 = inst_12045 + 1;
                                                                                                var tmp12174 = inst_12044;
                                                                                                var tmp12175 = inst_12042;
                                                                                                var tmp12176 = inst_12043;
                                                                                                var inst_12042__$1 = tmp12175;
                                                                                                var inst_12043__$1 = tmp12176;
                                                                                                var inst_12044__$1 = tmp12174;
                                                                                                var inst_12045__$1 = inst_12060;
                                                                                                var state_12106__$1 = function() {
                                                                                                  var statearr_12181 = state_12106;
                                                                                                  statearr_12181[10] = inst_12044__$1;
                                                                                                  statearr_12181[11] = inst_12045__$1;
                                                                                                  statearr_12181[12] = inst_12042__$1;
                                                                                                  statearr_12181[13] = inst_12043__$1;
                                                                                                  statearr_12181[31] = inst_12059;
                                                                                                  return statearr_12181;
                                                                                                }();
                                                                                                var statearr_12182_12243 = state_12106__$1;
                                                                                                statearr_12182_12243[2] = null;
                                                                                                statearr_12182_12243[1] = 25;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                              } else {
                                                                                                if (state_val_12107 === 31) {
                                                                                                  var inst_12050 = state_12106[8];
                                                                                                  var inst_12051 = state_12106[2];
                                                                                                  var inst_12052 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                                                                                  var inst_12053 = cljs.core.async.untap_STAR_.call(null, m, inst_12050);
                                                                                                  var state_12106__$1 = function() {
                                                                                                    var statearr_12183 = state_12106;
                                                                                                    statearr_12183[32] = inst_12052;
                                                                                                    statearr_12183[33] = inst_12051;
                                                                                                    return statearr_12183;
                                                                                                  }();
                                                                                                  var statearr_12184_12244 = state_12106__$1;
                                                                                                  statearr_12184_12244[2] = inst_12053;
                                                                                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12106__$1);
                                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                                } else {
                                                                                                  return null;
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__6137__auto__) {
        return function() {
          var state_machine__6138__auto__ = null;
          var state_machine__6138__auto____0 = function() {
            var statearr_12188 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            statearr_12188[0] = state_machine__6138__auto__;
            statearr_12188[1] = 1;
            return statearr_12188;
          };
          var state_machine__6138__auto____1 = function(state_12106) {
            while (true) {
              var ret_value__6139__auto__ = function() {
                try {
                  while (true) {
                    var result__6140__auto__ = switch__6137__auto__.call(null, state_12106);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__6140__auto__;
                    }
                    break;
                  }
                } catch (e12189) {
                  if (e12189 instanceof Object) {
                    var ex__6141__auto__ = e12189;
                    var statearr_12190_12245 = state_12106;
                    statearr_12190_12245[5] = ex__6141__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12106);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e12189;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__12246 = state_12106;
                state_12106 = G__12246;
                continue;
              } else {
                return ret_value__6139__auto__;
              }
              break;
            }
          };
          state_machine__6138__auto__ = function(state_12106) {
            switch(arguments.length) {
              case 0:
                return state_machine__6138__auto____0.call(this);
              case 1:
                return state_machine__6138__auto____1.call(this, state_12106);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
          state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
          return state_machine__6138__auto__;
        }();
      }(switch__6137__auto__);
    }();
    var state__6154__auto__ = function() {
      var statearr_12191 = f__6153__auto__.call(null);
      statearr_12191[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___12192;
      return statearr_12191;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
  });
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj12248 = {};
  return obj12248;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3391__auto__ = m;
    if (and__3391__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4030__auto__ = m == null ? null : m;
    return function() {
      var or__3403__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3391__auto__ = m;
    if (and__3391__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4030__auto__ = m == null ? null : m;
    return function() {
      var or__3403__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3391__auto__ = m;
    if (and__3391__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4030__auto__ = m == null ? null : m;
    return function() {
      var or__3403__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3391__auto__ = m;
    if (and__3391__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4030__auto__ = m == null ? null : m;
    return function() {
      var or__3403__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3391__auto__ = m;
    if (and__3391__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4030__auto__ = m == null ? null : m;
    return function() {
      var or__3403__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", 1120344424), null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", 1017440337));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", 1017440337), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", 1120344424), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1123523302), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), chs), new cljs.core.Keyword(null, "reads", "reads", 1122290959), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", 1120344424)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t12358 !== "undefined") {
    } else {
      cljs.core.async.t12358 = function(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, meta12359) {
        this.pick = pick;
        this.out = out;
        this.attrs = attrs;
        this.cs = cs;
        this.calc_state = calc_state;
        this.solo_modes = solo_modes;
        this.mix = mix;
        this.changed = changed;
        this.change = change;
        this.solo_mode = solo_mode;
        this.meta12359 = meta12359;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t12358.cljs$lang$type = true;
      cljs.core.async.t12358.cljs$lang$ctorStr = "cljs.core.async/t12358";
      cljs.core.async.t12358.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
          return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t12358");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12358.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t12358.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12358.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12358.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12358.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12358.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", -1162732933, null), new cljs.core.Symbol(null, "mode", "mode", -1637174436, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12358.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t12358.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12358.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_12360) {
          var self__ = this;
          var _12360__$1 = this;
          return self__.meta12359;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12358.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_12360, meta12359__$1) {
          var self__ = this;
          var _12360__$1 = this;
          return new cljs.core.async.t12358(self__.pick, self__.out, self__.attrs, self__.cs, self__.calc_state, self__.solo_modes, self__.mix, self__.changed, self__.change, self__.solo_mode, meta12359__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t12358 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t12358(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta12359) {
          return new cljs.core.async.t12358(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta12359);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t12358(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, null);
  }();
  var c__6152__auto___12467 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__6153__auto__ = function() {
      var switch__6137__auto__ = function(state_12425) {
        var state_val_12426 = state_12425[1];
        if (state_val_12426 === 1) {
          var inst_12364 = state_12425[7];
          var inst_12364__$1 = calc_state.call(null);
          var inst_12365 = cljs.core.seq_QMARK_.call(null, inst_12364__$1);
          var state_12425__$1 = function() {
            var statearr_12427 = state_12425;
            statearr_12427[7] = inst_12364__$1;
            return statearr_12427;
          }();
          if (inst_12365) {
            var statearr_12428_12468 = state_12425__$1;
            statearr_12428_12468[1] = 2;
          } else {
            var statearr_12429_12469 = state_12425__$1;
            statearr_12429_12469[1] = 3;
          }
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_12426 === 2) {
            var inst_12364 = state_12425[7];
            var inst_12367 = cljs.core.apply.call(null, cljs.core.hash_map, inst_12364);
            var state_12425__$1 = state_12425;
            var statearr_12430_12470 = state_12425__$1;
            statearr_12430_12470[2] = inst_12367;
            statearr_12430_12470[1] = 4;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_12426 === 3) {
              var inst_12364 = state_12425[7];
              var state_12425__$1 = state_12425;
              var statearr_12431_12471 = state_12425__$1;
              statearr_12431_12471[2] = inst_12364;
              statearr_12431_12471[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_12426 === 4) {
                var inst_12364 = state_12425[7];
                var inst_12370 = state_12425[2];
                var inst_12371 = cljs.core.get.call(null, inst_12370, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                var inst_12372 = cljs.core.get.call(null, inst_12370, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                var inst_12373 = cljs.core.get.call(null, inst_12370, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                var inst_12374 = inst_12364;
                var state_12425__$1 = function() {
                  var statearr_12432 = state_12425;
                  statearr_12432[8] = inst_12374;
                  statearr_12432[9] = inst_12372;
                  statearr_12432[10] = inst_12373;
                  statearr_12432[11] = inst_12371;
                  return statearr_12432;
                }();
                var statearr_12433_12472 = state_12425__$1;
                statearr_12433_12472[2] = null;
                statearr_12433_12472[1] = 5;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_12426 === 5) {
                  var inst_12374 = state_12425[8];
                  var inst_12377 = cljs.core.seq_QMARK_.call(null, inst_12374);
                  var state_12425__$1 = state_12425;
                  if (inst_12377) {
                    var statearr_12434_12473 = state_12425__$1;
                    statearr_12434_12473[1] = 7;
                  } else {
                    var statearr_12435_12474 = state_12425__$1;
                    statearr_12435_12474[1] = 8;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_12426 === 6) {
                    var inst_12423 = state_12425[2];
                    var state_12425__$1 = state_12425;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12425__$1, inst_12423);
                  } else {
                    if (state_val_12426 === 7) {
                      var inst_12374 = state_12425[8];
                      var inst_12379 = cljs.core.apply.call(null, cljs.core.hash_map, inst_12374);
                      var state_12425__$1 = state_12425;
                      var statearr_12436_12475 = state_12425__$1;
                      statearr_12436_12475[2] = inst_12379;
                      statearr_12436_12475[1] = 9;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_12426 === 8) {
                        var inst_12374 = state_12425[8];
                        var state_12425__$1 = state_12425;
                        var statearr_12437_12476 = state_12425__$1;
                        statearr_12437_12476[2] = inst_12374;
                        statearr_12437_12476[1] = 9;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_12426 === 9) {
                          var inst_12382 = state_12425[12];
                          var inst_12382__$1 = state_12425[2];
                          var inst_12383 = cljs.core.get.call(null, inst_12382__$1, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                          var inst_12384 = cljs.core.get.call(null, inst_12382__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                          var inst_12385 = cljs.core.get.call(null, inst_12382__$1, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                          var state_12425__$1 = function() {
                            var statearr_12438 = state_12425;
                            statearr_12438[13] = inst_12385;
                            statearr_12438[14] = inst_12384;
                            statearr_12438[12] = inst_12382__$1;
                            return statearr_12438;
                          }();
                          return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_12425__$1, 10, inst_12383);
                        } else {
                          if (state_val_12426 === 10) {
                            var inst_12390 = state_12425[15];
                            var inst_12389 = state_12425[16];
                            var inst_12388 = state_12425[2];
                            var inst_12389__$1 = cljs.core.nth.call(null, inst_12388, 0, null);
                            var inst_12390__$1 = cljs.core.nth.call(null, inst_12388, 1, null);
                            var inst_12391 = inst_12389__$1 == null;
                            var inst_12392 = cljs.core._EQ_.call(null, inst_12390__$1, change);
                            var inst_12393 = inst_12391 || inst_12392;
                            var state_12425__$1 = function() {
                              var statearr_12439 = state_12425;
                              statearr_12439[15] = inst_12390__$1;
                              statearr_12439[16] = inst_12389__$1;
                              return statearr_12439;
                            }();
                            if (cljs.core.truth_(inst_12393)) {
                              var statearr_12440_12477 = state_12425__$1;
                              statearr_12440_12477[1] = 11;
                            } else {
                              var statearr_12441_12478 = state_12425__$1;
                              statearr_12441_12478[1] = 12;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_12426 === 11) {
                              var inst_12389 = state_12425[16];
                              var inst_12395 = inst_12389 == null;
                              var state_12425__$1 = state_12425;
                              if (cljs.core.truth_(inst_12395)) {
                                var statearr_12442_12479 = state_12425__$1;
                                statearr_12442_12479[1] = 14;
                              } else {
                                var statearr_12443_12480 = state_12425__$1;
                                statearr_12443_12480[1] = 15;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_12426 === 12) {
                                var inst_12385 = state_12425[13];
                                var inst_12390 = state_12425[15];
                                var inst_12404 = state_12425[17];
                                var inst_12404__$1 = inst_12385.call(null, inst_12390);
                                var state_12425__$1 = function() {
                                  var statearr_12444 = state_12425;
                                  statearr_12444[17] = inst_12404__$1;
                                  return statearr_12444;
                                }();
                                if (cljs.core.truth_(inst_12404__$1)) {
                                  var statearr_12445_12481 = state_12425__$1;
                                  statearr_12445_12481[1] = 17;
                                } else {
                                  var statearr_12446_12482 = state_12425__$1;
                                  statearr_12446_12482[1] = 18;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_12426 === 13) {
                                  var inst_12421 = state_12425[2];
                                  var state_12425__$1 = state_12425;
                                  var statearr_12447_12483 = state_12425__$1;
                                  statearr_12447_12483[2] = inst_12421;
                                  statearr_12447_12483[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_12426 === 14) {
                                    var inst_12390 = state_12425[15];
                                    var inst_12397 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_12390);
                                    var state_12425__$1 = state_12425;
                                    var statearr_12448_12484 = state_12425__$1;
                                    statearr_12448_12484[2] = inst_12397;
                                    statearr_12448_12484[1] = 16;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_12426 === 15) {
                                      var state_12425__$1 = state_12425;
                                      var statearr_12449_12485 = state_12425__$1;
                                      statearr_12449_12485[2] = null;
                                      statearr_12449_12485[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_12426 === 16) {
                                        var inst_12400 = state_12425[2];
                                        var inst_12401 = calc_state.call(null);
                                        var inst_12374 = inst_12401;
                                        var state_12425__$1 = function() {
                                          var statearr_12450 = state_12425;
                                          statearr_12450[8] = inst_12374;
                                          statearr_12450[18] = inst_12400;
                                          return statearr_12450;
                                        }();
                                        var statearr_12451_12486 = state_12425__$1;
                                        statearr_12451_12486[2] = null;
                                        statearr_12451_12486[1] = 5;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_12426 === 17) {
                                          var inst_12404 = state_12425[17];
                                          var state_12425__$1 = state_12425;
                                          var statearr_12452_12487 = state_12425__$1;
                                          statearr_12452_12487[2] = inst_12404;
                                          statearr_12452_12487[1] = 19;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_12426 === 18) {
                                            var inst_12385 = state_12425[13];
                                            var inst_12384 = state_12425[14];
                                            var inst_12390 = state_12425[15];
                                            var inst_12407 = cljs.core.empty_QMARK_.call(null, inst_12385);
                                            var inst_12408 = inst_12384.call(null, inst_12390);
                                            var inst_12409 = cljs.core.not.call(null, inst_12408);
                                            var inst_12410 = inst_12407 && inst_12409;
                                            var state_12425__$1 = state_12425;
                                            var statearr_12453_12488 = state_12425__$1;
                                            statearr_12453_12488[2] = inst_12410;
                                            statearr_12453_12488[1] = 19;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_12426 === 19) {
                                              var inst_12412 = state_12425[2];
                                              var state_12425__$1 = state_12425;
                                              if (cljs.core.truth_(inst_12412)) {
                                                var statearr_12454_12489 = state_12425__$1;
                                                statearr_12454_12489[1] = 20;
                                              } else {
                                                var statearr_12455_12490 = state_12425__$1;
                                                statearr_12455_12490[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_12426 === 20) {
                                                var inst_12389 = state_12425[16];
                                                var state_12425__$1 = state_12425;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12425__$1, 23, out, inst_12389);
                                              } else {
                                                if (state_val_12426 === 21) {
                                                  var state_12425__$1 = state_12425;
                                                  var statearr_12456_12491 = state_12425__$1;
                                                  statearr_12456_12491[2] = null;
                                                  statearr_12456_12491[1] = 22;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_12426 === 22) {
                                                    var inst_12382 = state_12425[12];
                                                    var inst_12418 = state_12425[2];
                                                    var inst_12374 = inst_12382;
                                                    var state_12425__$1 = function() {
                                                      var statearr_12457 = state_12425;
                                                      statearr_12457[19] = inst_12418;
                                                      statearr_12457[8] = inst_12374;
                                                      return statearr_12457;
                                                    }();
                                                    var statearr_12458_12492 = state_12425__$1;
                                                    statearr_12458_12492[2] = null;
                                                    statearr_12458_12492[1] = 5;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_12426 === 23) {
                                                      var inst_12415 = state_12425[2];
                                                      var state_12425__$1 = state_12425;
                                                      var statearr_12459_12493 = state_12425__$1;
                                                      statearr_12459_12493[2] = inst_12415;
                                                      statearr_12459_12493[1] = 22;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__6137__auto__) {
        return function() {
          var state_machine__6138__auto__ = null;
          var state_machine__6138__auto____0 = function() {
            var statearr_12463 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            statearr_12463[0] = state_machine__6138__auto__;
            statearr_12463[1] = 1;
            return statearr_12463;
          };
          var state_machine__6138__auto____1 = function(state_12425) {
            while (true) {
              var ret_value__6139__auto__ = function() {
                try {
                  while (true) {
                    var result__6140__auto__ = switch__6137__auto__.call(null, state_12425);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__6140__auto__;
                    }
                    break;
                  }
                } catch (e12464) {
                  if (e12464 instanceof Object) {
                    var ex__6141__auto__ = e12464;
                    var statearr_12465_12494 = state_12425;
                    statearr_12465_12494[5] = ex__6141__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12425);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e12464;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__12495 = state_12425;
                state_12425 = G__12495;
                continue;
              } else {
                return ret_value__6139__auto__;
              }
              break;
            }
          };
          state_machine__6138__auto__ = function(state_12425) {
            switch(arguments.length) {
              case 0:
                return state_machine__6138__auto____0.call(this);
              case 1:
                return state_machine__6138__auto____1.call(this, state_12425);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
          state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
          return state_machine__6138__auto__;
        }();
      }(switch__6137__auto__);
    }();
    var state__6154__auto__ = function() {
      var statearr_12466 = f__6153__auto__.call(null);
      statearr_12466[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___12467;
      return statearr_12466;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
  });
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj12497 = {};
  return obj12497;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3391__auto__ = p;
    if (and__3391__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4030__auto__ = p == null ? null : p;
    return function() {
      var or__3403__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3391__auto__ = p;
    if (and__3391__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4030__auto__ = p == null ? null : p;
    return function() {
      var or__3403__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3391__auto__ = p;
      if (and__3391__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4030__auto__ = p == null ? null : p;
      return function() {
        var or__3403__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3391__auto__ = p;
      if (and__3391__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4030__auto__ = p == null ? null : p;
      return function() {
        var or__3403__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3403__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3403__auto__, mults) {
            return function(p1__12498_SHARP_) {
              if (cljs.core.truth_(p1__12498_SHARP_.call(null, topic))) {
                return p1__12498_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__12498_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3403__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t12623 !== "undefined") {
      } else {
        cljs.core.async.t12623 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta12624) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta12624 = meta12624;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t12623.cljs$lang$type = true;
        cljs.core.async.t12623.cljs$lang$ctorStr = "cljs.core.async/t12623";
        cljs.core.async.t12623.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
            return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t12623");
          };
        }(mults, ensure_mult);
        cljs.core.async.t12623.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t12623.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t12623.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var p__$1 = this;
            var temp__4092__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4092__auto__)) {
              var m = temp__4092__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t12623.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t12623.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t12623.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t12623.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t12623.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_12625) {
            var self__ = this;
            var _12625__$1 = this;
            return self__.meta12624;
          };
        }(mults, ensure_mult);
        cljs.core.async.t12623.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_12625, meta12624__$1) {
            var self__ = this;
            var _12625__$1 = this;
            return new cljs.core.async.t12623(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta12624__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t12623 = function(mults, ensure_mult) {
          return function __GT_t12623(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta12624) {
            return new cljs.core.async.t12623(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta12624);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t12623(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null);
    }();
    var c__6152__auto___12747 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6153__auto__ = function() {
        var switch__6137__auto__ = function(state_12699) {
          var state_val_12700 = state_12699[1];
          if (state_val_12700 === 1) {
            var state_12699__$1 = state_12699;
            var statearr_12701_12748 = state_12699__$1;
            statearr_12701_12748[2] = null;
            statearr_12701_12748[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_12700 === 2) {
              var state_12699__$1 = state_12699;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12699__$1, 4, ch);
            } else {
              if (state_val_12700 === 3) {
                var inst_12697 = state_12699[2];
                var state_12699__$1 = state_12699;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12699__$1, inst_12697);
              } else {
                if (state_val_12700 === 4) {
                  var inst_12628 = state_12699[7];
                  var inst_12628__$1 = state_12699[2];
                  var inst_12629 = inst_12628__$1 == null;
                  var state_12699__$1 = function() {
                    var statearr_12702 = state_12699;
                    statearr_12702[7] = inst_12628__$1;
                    return statearr_12702;
                  }();
                  if (cljs.core.truth_(inst_12629)) {
                    var statearr_12703_12749 = state_12699__$1;
                    statearr_12703_12749[1] = 5;
                  } else {
                    var statearr_12704_12750 = state_12699__$1;
                    statearr_12704_12750[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_12700 === 5) {
                    var inst_12635 = cljs.core.deref.call(null, mults);
                    var inst_12636 = cljs.core.vals.call(null, inst_12635);
                    var inst_12637 = cljs.core.seq.call(null, inst_12636);
                    var inst_12638 = inst_12637;
                    var inst_12639 = null;
                    var inst_12640 = 0;
                    var inst_12641 = 0;
                    var state_12699__$1 = function() {
                      var statearr_12705 = state_12699;
                      statearr_12705[8] = inst_12638;
                      statearr_12705[9] = inst_12639;
                      statearr_12705[10] = inst_12641;
                      statearr_12705[11] = inst_12640;
                      return statearr_12705;
                    }();
                    var statearr_12706_12751 = state_12699__$1;
                    statearr_12706_12751[2] = null;
                    statearr_12706_12751[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_12700 === 6) {
                      var inst_12676 = state_12699[12];
                      var inst_12628 = state_12699[7];
                      var inst_12678 = state_12699[13];
                      var inst_12676__$1 = topic_fn.call(null, inst_12628);
                      var inst_12677 = cljs.core.deref.call(null, mults);
                      var inst_12678__$1 = cljs.core.get.call(null, inst_12677, inst_12676__$1);
                      var state_12699__$1 = function() {
                        var statearr_12707 = state_12699;
                        statearr_12707[12] = inst_12676__$1;
                        statearr_12707[13] = inst_12678__$1;
                        return statearr_12707;
                      }();
                      if (cljs.core.truth_(inst_12678__$1)) {
                        var statearr_12708_12752 = state_12699__$1;
                        statearr_12708_12752[1] = 19;
                      } else {
                        var statearr_12709_12753 = state_12699__$1;
                        statearr_12709_12753[1] = 20;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_12700 === 7) {
                        var inst_12695 = state_12699[2];
                        var state_12699__$1 = state_12699;
                        var statearr_12710_12754 = state_12699__$1;
                        statearr_12710_12754[2] = inst_12695;
                        statearr_12710_12754[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_12700 === 8) {
                          var inst_12641 = state_12699[10];
                          var inst_12640 = state_12699[11];
                          var inst_12643 = inst_12641 < inst_12640;
                          var inst_12644 = inst_12643;
                          var state_12699__$1 = state_12699;
                          if (cljs.core.truth_(inst_12644)) {
                            var statearr_12714_12755 = state_12699__$1;
                            statearr_12714_12755[1] = 10;
                          } else {
                            var statearr_12715_12756 = state_12699__$1;
                            statearr_12715_12756[1] = 11;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_12700 === 9) {
                            var inst_12674 = state_12699[2];
                            var state_12699__$1 = state_12699;
                            var statearr_12716_12757 = state_12699__$1;
                            statearr_12716_12757[2] = inst_12674;
                            statearr_12716_12757[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_12700 === 10) {
                              var inst_12638 = state_12699[8];
                              var inst_12639 = state_12699[9];
                              var inst_12641 = state_12699[10];
                              var inst_12640 = state_12699[11];
                              var inst_12646 = cljs.core._nth.call(null, inst_12639, inst_12641);
                              var inst_12647 = cljs.core.async.muxch_STAR_.call(null, inst_12646);
                              var inst_12648 = cljs.core.async.close_BANG_.call(null, inst_12647);
                              var inst_12649 = inst_12641 + 1;
                              var tmp12711 = inst_12638;
                              var tmp12712 = inst_12639;
                              var tmp12713 = inst_12640;
                              var inst_12638__$1 = tmp12711;
                              var inst_12639__$1 = tmp12712;
                              var inst_12640__$1 = tmp12713;
                              var inst_12641__$1 = inst_12649;
                              var state_12699__$1 = function() {
                                var statearr_12717 = state_12699;
                                statearr_12717[8] = inst_12638__$1;
                                statearr_12717[9] = inst_12639__$1;
                                statearr_12717[14] = inst_12648;
                                statearr_12717[10] = inst_12641__$1;
                                statearr_12717[11] = inst_12640__$1;
                                return statearr_12717;
                              }();
                              var statearr_12718_12758 = state_12699__$1;
                              statearr_12718_12758[2] = null;
                              statearr_12718_12758[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_12700 === 11) {
                                var inst_12638 = state_12699[8];
                                var inst_12652 = state_12699[15];
                                var inst_12652__$1 = cljs.core.seq.call(null, inst_12638);
                                var state_12699__$1 = function() {
                                  var statearr_12719 = state_12699;
                                  statearr_12719[15] = inst_12652__$1;
                                  return statearr_12719;
                                }();
                                if (inst_12652__$1) {
                                  var statearr_12720_12759 = state_12699__$1;
                                  statearr_12720_12759[1] = 13;
                                } else {
                                  var statearr_12721_12760 = state_12699__$1;
                                  statearr_12721_12760[1] = 14;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_12700 === 12) {
                                  var inst_12672 = state_12699[2];
                                  var state_12699__$1 = state_12699;
                                  var statearr_12722_12761 = state_12699__$1;
                                  statearr_12722_12761[2] = inst_12672;
                                  statearr_12722_12761[1] = 9;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_12700 === 13) {
                                    var inst_12652 = state_12699[15];
                                    var inst_12654 = cljs.core.chunked_seq_QMARK_.call(null, inst_12652);
                                    var state_12699__$1 = state_12699;
                                    if (inst_12654) {
                                      var statearr_12723_12762 = state_12699__$1;
                                      statearr_12723_12762[1] = 16;
                                    } else {
                                      var statearr_12724_12763 = state_12699__$1;
                                      statearr_12724_12763[1] = 17;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_12700 === 14) {
                                      var state_12699__$1 = state_12699;
                                      var statearr_12725_12764 = state_12699__$1;
                                      statearr_12725_12764[2] = null;
                                      statearr_12725_12764[1] = 15;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_12700 === 15) {
                                        var inst_12670 = state_12699[2];
                                        var state_12699__$1 = state_12699;
                                        var statearr_12726_12765 = state_12699__$1;
                                        statearr_12726_12765[2] = inst_12670;
                                        statearr_12726_12765[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_12700 === 16) {
                                          var inst_12652 = state_12699[15];
                                          var inst_12656 = cljs.core.chunk_first.call(null, inst_12652);
                                          var inst_12657 = cljs.core.chunk_rest.call(null, inst_12652);
                                          var inst_12658 = cljs.core.count.call(null, inst_12656);
                                          var inst_12638 = inst_12657;
                                          var inst_12639 = inst_12656;
                                          var inst_12640 = inst_12658;
                                          var inst_12641 = 0;
                                          var state_12699__$1 = function() {
                                            var statearr_12727 = state_12699;
                                            statearr_12727[8] = inst_12638;
                                            statearr_12727[9] = inst_12639;
                                            statearr_12727[10] = inst_12641;
                                            statearr_12727[11] = inst_12640;
                                            return statearr_12727;
                                          }();
                                          var statearr_12728_12766 = state_12699__$1;
                                          statearr_12728_12766[2] = null;
                                          statearr_12728_12766[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_12700 === 17) {
                                            var inst_12652 = state_12699[15];
                                            var inst_12661 = cljs.core.first.call(null, inst_12652);
                                            var inst_12662 = cljs.core.async.muxch_STAR_.call(null, inst_12661);
                                            var inst_12663 = cljs.core.async.close_BANG_.call(null, inst_12662);
                                            var inst_12664 = cljs.core.next.call(null, inst_12652);
                                            var inst_12638 = inst_12664;
                                            var inst_12639 = null;
                                            var inst_12640 = 0;
                                            var inst_12641 = 0;
                                            var state_12699__$1 = function() {
                                              var statearr_12729 = state_12699;
                                              statearr_12729[8] = inst_12638;
                                              statearr_12729[9] = inst_12639;
                                              statearr_12729[16] = inst_12663;
                                              statearr_12729[10] = inst_12641;
                                              statearr_12729[11] = inst_12640;
                                              return statearr_12729;
                                            }();
                                            var statearr_12730_12767 = state_12699__$1;
                                            statearr_12730_12767[2] = null;
                                            statearr_12730_12767[1] = 8;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_12700 === 18) {
                                              var inst_12667 = state_12699[2];
                                              var state_12699__$1 = state_12699;
                                              var statearr_12731_12768 = state_12699__$1;
                                              statearr_12731_12768[2] = inst_12667;
                                              statearr_12731_12768[1] = 15;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_12700 === 19) {
                                                var state_12699__$1 = state_12699;
                                                var statearr_12732_12769 = state_12699__$1;
                                                statearr_12732_12769[2] = null;
                                                statearr_12732_12769[1] = 24;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_12700 === 20) {
                                                  var state_12699__$1 = state_12699;
                                                  var statearr_12733_12770 = state_12699__$1;
                                                  statearr_12733_12770[2] = null;
                                                  statearr_12733_12770[1] = 21;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_12700 === 21) {
                                                    var inst_12692 = state_12699[2];
                                                    var state_12699__$1 = function() {
                                                      var statearr_12734 = state_12699;
                                                      statearr_12734[17] = inst_12692;
                                                      return statearr_12734;
                                                    }();
                                                    var statearr_12735_12771 = state_12699__$1;
                                                    statearr_12735_12771[2] = null;
                                                    statearr_12735_12771[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_12700 === 22) {
                                                      var inst_12689 = state_12699[2];
                                                      var state_12699__$1 = state_12699;
                                                      var statearr_12736_12772 = state_12699__$1;
                                                      statearr_12736_12772[2] = inst_12689;
                                                      statearr_12736_12772[1] = 21;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_12700 === 23) {
                                                        var inst_12676 = state_12699[12];
                                                        var inst_12680 = state_12699[2];
                                                        var inst_12681 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_12676);
                                                        var state_12699__$1 = function() {
                                                          var statearr_12737 = state_12699;
                                                          statearr_12737[18] = inst_12680;
                                                          return statearr_12737;
                                                        }();
                                                        var statearr_12738_12773 = state_12699__$1;
                                                        statearr_12738_12773[2] = inst_12681;
                                                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12699__$1);
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_12700 === 24) {
                                                          var inst_12628 = state_12699[7];
                                                          var inst_12678 = state_12699[13];
                                                          var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_12699, 23, Object, null, 22);
                                                          var inst_12685 = cljs.core.async.muxch_STAR_.call(null, inst_12678);
                                                          var state_12699__$1 = state_12699;
                                                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12699__$1, 25, inst_12685, inst_12628);
                                                        } else {
                                                          if (state_val_12700 === 25) {
                                                            var inst_12687 = state_12699[2];
                                                            var state_12699__$1 = state_12699;
                                                            var statearr_12739_12774 = state_12699__$1;
                                                            statearr_12739_12774[2] = inst_12687;
                                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12699__$1);
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                          } else {
                                                            return null;
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6137__auto__) {
          return function() {
            var state_machine__6138__auto__ = null;
            var state_machine__6138__auto____0 = function() {
              var statearr_12743 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_12743[0] = state_machine__6138__auto__;
              statearr_12743[1] = 1;
              return statearr_12743;
            };
            var state_machine__6138__auto____1 = function(state_12699) {
              while (true) {
                var ret_value__6139__auto__ = function() {
                  try {
                    while (true) {
                      var result__6140__auto__ = switch__6137__auto__.call(null, state_12699);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6140__auto__;
                      }
                      break;
                    }
                  } catch (e12744) {
                    if (e12744 instanceof Object) {
                      var ex__6141__auto__ = e12744;
                      var statearr_12745_12775 = state_12699;
                      statearr_12745_12775[5] = ex__6141__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12699);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e12744;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__12776 = state_12699;
                  state_12699 = G__12776;
                  continue;
                } else {
                  return ret_value__6139__auto__;
                }
                break;
              }
            };
            state_machine__6138__auto__ = function(state_12699) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6138__auto____0.call(this);
                case 1:
                  return state_machine__6138__auto____1.call(this, state_12699);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
            return state_machine__6138__auto__;
          }();
        }(switch__6137__auto__);
      }();
      var state__6154__auto__ = function() {
        var statearr_12746 = f__6153__auto__.call(null);
        statearr_12746[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___12747;
        return statearr_12746;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
    });
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__6152__auto___12913 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6153__auto__ = function() {
        var switch__6137__auto__ = function(state_12883) {
          var state_val_12884 = state_12883[1];
          if (state_val_12884 === 1) {
            var state_12883__$1 = state_12883;
            var statearr_12885_12914 = state_12883__$1;
            statearr_12885_12914[2] = null;
            statearr_12885_12914[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_12884 === 2) {
              var inst_12846 = cljs.core.reset_BANG_.call(null, dctr, cnt);
              var inst_12847 = 0;
              var state_12883__$1 = function() {
                var statearr_12886 = state_12883;
                statearr_12886[7] = inst_12847;
                statearr_12886[8] = inst_12846;
                return statearr_12886;
              }();
              var statearr_12887_12915 = state_12883__$1;
              statearr_12887_12915[2] = null;
              statearr_12887_12915[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_12884 === 3) {
                var inst_12881 = state_12883[2];
                var state_12883__$1 = state_12883;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12883__$1, inst_12881);
              } else {
                if (state_val_12884 === 4) {
                  var inst_12847 = state_12883[7];
                  var inst_12849 = inst_12847 < cnt;
                  var state_12883__$1 = state_12883;
                  if (cljs.core.truth_(inst_12849)) {
                    var statearr_12888_12916 = state_12883__$1;
                    statearr_12888_12916[1] = 6;
                  } else {
                    var statearr_12889_12917 = state_12883__$1;
                    statearr_12889_12917[1] = 7;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_12884 === 5) {
                    var inst_12867 = state_12883[2];
                    var state_12883__$1 = function() {
                      var statearr_12890 = state_12883;
                      statearr_12890[9] = inst_12867;
                      return statearr_12890;
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12883__$1, 12, dchan);
                  } else {
                    if (state_val_12884 === 6) {
                      var state_12883__$1 = state_12883;
                      var statearr_12891_12918 = state_12883__$1;
                      statearr_12891_12918[2] = null;
                      statearr_12891_12918[1] = 11;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_12884 === 7) {
                        var state_12883__$1 = state_12883;
                        var statearr_12892_12919 = state_12883__$1;
                        statearr_12892_12919[2] = null;
                        statearr_12892_12919[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_12884 === 8) {
                          var inst_12865 = state_12883[2];
                          var state_12883__$1 = state_12883;
                          var statearr_12893_12920 = state_12883__$1;
                          statearr_12893_12920[2] = inst_12865;
                          statearr_12893_12920[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_12884 === 9) {
                            var inst_12847 = state_12883[7];
                            var inst_12860 = state_12883[2];
                            var inst_12861 = inst_12847 + 1;
                            var inst_12847__$1 = inst_12861;
                            var state_12883__$1 = function() {
                              var statearr_12894 = state_12883;
                              statearr_12894[7] = inst_12847__$1;
                              statearr_12894[10] = inst_12860;
                              return statearr_12894;
                            }();
                            var statearr_12895_12921 = state_12883__$1;
                            statearr_12895_12921[2] = null;
                            statearr_12895_12921[1] = 4;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_12884 === 10) {
                              var inst_12851 = state_12883[2];
                              var inst_12852 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                              var state_12883__$1 = function() {
                                var statearr_12896 = state_12883;
                                statearr_12896[11] = inst_12851;
                                return statearr_12896;
                              }();
                              var statearr_12897_12922 = state_12883__$1;
                              statearr_12897_12922[2] = inst_12852;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12883__$1);
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_12884 === 11) {
                                var inst_12847 = state_12883[7];
                                var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_12883, 10, Object, null, 9);
                                var inst_12856 = chs__$1.call(null, inst_12847);
                                var inst_12857 = done.call(null, inst_12847);
                                var inst_12858 = cljs.core.async.take_BANG_.call(null, inst_12856, inst_12857);
                                var state_12883__$1 = state_12883;
                                var statearr_12898_12923 = state_12883__$1;
                                statearr_12898_12923[2] = inst_12858;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12883__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_12884 === 12) {
                                  var inst_12869 = state_12883[12];
                                  var inst_12869__$1 = state_12883[2];
                                  var inst_12870 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_12869__$1);
                                  var state_12883__$1 = function() {
                                    var statearr_12899 = state_12883;
                                    statearr_12899[12] = inst_12869__$1;
                                    return statearr_12899;
                                  }();
                                  if (cljs.core.truth_(inst_12870)) {
                                    var statearr_12900_12924 = state_12883__$1;
                                    statearr_12900_12924[1] = 13;
                                  } else {
                                    var statearr_12901_12925 = state_12883__$1;
                                    statearr_12901_12925[1] = 14;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_12884 === 13) {
                                    var inst_12872 = cljs.core.async.close_BANG_.call(null, out);
                                    var state_12883__$1 = state_12883;
                                    var statearr_12902_12926 = state_12883__$1;
                                    statearr_12902_12926[2] = inst_12872;
                                    statearr_12902_12926[1] = 15;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_12884 === 14) {
                                      var inst_12869 = state_12883[12];
                                      var inst_12874 = cljs.core.apply.call(null, f, inst_12869);
                                      var state_12883__$1 = state_12883;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12883__$1, 16, out, inst_12874);
                                    } else {
                                      if (state_val_12884 === 15) {
                                        var inst_12879 = state_12883[2];
                                        var state_12883__$1 = state_12883;
                                        var statearr_12903_12927 = state_12883__$1;
                                        statearr_12903_12927[2] = inst_12879;
                                        statearr_12903_12927[1] = 3;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_12884 === 16) {
                                          var inst_12876 = state_12883[2];
                                          var state_12883__$1 = function() {
                                            var statearr_12904 = state_12883;
                                            statearr_12904[13] = inst_12876;
                                            return statearr_12904;
                                          }();
                                          var statearr_12905_12928 = state_12883__$1;
                                          statearr_12905_12928[2] = null;
                                          statearr_12905_12928[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6137__auto__) {
          return function() {
            var state_machine__6138__auto__ = null;
            var state_machine__6138__auto____0 = function() {
              var statearr_12909 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_12909[0] = state_machine__6138__auto__;
              statearr_12909[1] = 1;
              return statearr_12909;
            };
            var state_machine__6138__auto____1 = function(state_12883) {
              while (true) {
                var ret_value__6139__auto__ = function() {
                  try {
                    while (true) {
                      var result__6140__auto__ = switch__6137__auto__.call(null, state_12883);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6140__auto__;
                      }
                      break;
                    }
                  } catch (e12910) {
                    if (e12910 instanceof Object) {
                      var ex__6141__auto__ = e12910;
                      var statearr_12911_12929 = state_12883;
                      statearr_12911_12929[5] = ex__6141__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12883);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e12910;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__12930 = state_12883;
                  state_12883 = G__12930;
                  continue;
                } else {
                  return ret_value__6139__auto__;
                }
                break;
              }
            };
            state_machine__6138__auto__ = function(state_12883) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6138__auto____0.call(this);
                case 1:
                  return state_machine__6138__auto____1.call(this, state_12883);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
            return state_machine__6138__auto__;
          }();
        }(switch__6137__auto__);
      }();
      var state__6154__auto__ = function() {
        var statearr_12912 = f__6153__auto__.call(null);
        statearr_12912[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___12913;
        return statearr_12912;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
    });
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6152__auto___13038 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6153__auto__ = function() {
        var switch__6137__auto__ = function(state_13014) {
          var state_val_13015 = state_13014[1];
          if (state_val_13015 === 1) {
            var inst_12985 = cljs.core.vec.call(null, chs);
            var inst_12986 = inst_12985;
            var state_13014__$1 = function() {
              var statearr_13016 = state_13014;
              statearr_13016[7] = inst_12986;
              return statearr_13016;
            }();
            var statearr_13017_13039 = state_13014__$1;
            statearr_13017_13039[2] = null;
            statearr_13017_13039[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_13015 === 2) {
              var inst_12986 = state_13014[7];
              var inst_12988 = cljs.core.count.call(null, inst_12986);
              var inst_12989 = inst_12988 > 0;
              var state_13014__$1 = state_13014;
              if (cljs.core.truth_(inst_12989)) {
                var statearr_13018_13040 = state_13014__$1;
                statearr_13018_13040[1] = 4;
              } else {
                var statearr_13019_13041 = state_13014__$1;
                statearr_13019_13041[1] = 5;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_13015 === 3) {
                var inst_13012 = state_13014[2];
                var state_13014__$1 = state_13014;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13014__$1, inst_13012);
              } else {
                if (state_val_13015 === 4) {
                  var inst_12986 = state_13014[7];
                  var state_13014__$1 = state_13014;
                  return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_13014__$1, 7, inst_12986);
                } else {
                  if (state_val_13015 === 5) {
                    var inst_13008 = cljs.core.async.close_BANG_.call(null, out);
                    var state_13014__$1 = state_13014;
                    var statearr_13020_13042 = state_13014__$1;
                    statearr_13020_13042[2] = inst_13008;
                    statearr_13020_13042[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_13015 === 6) {
                      var inst_13010 = state_13014[2];
                      var state_13014__$1 = state_13014;
                      var statearr_13021_13043 = state_13014__$1;
                      statearr_13021_13043[2] = inst_13010;
                      statearr_13021_13043[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_13015 === 7) {
                        var inst_12994 = state_13014[8];
                        var inst_12993 = state_13014[9];
                        var inst_12993__$1 = state_13014[2];
                        var inst_12994__$1 = cljs.core.nth.call(null, inst_12993__$1, 0, null);
                        var inst_12995 = cljs.core.nth.call(null, inst_12993__$1, 1, null);
                        var inst_12996 = inst_12994__$1 == null;
                        var state_13014__$1 = function() {
                          var statearr_13022 = state_13014;
                          statearr_13022[10] = inst_12995;
                          statearr_13022[8] = inst_12994__$1;
                          statearr_13022[9] = inst_12993__$1;
                          return statearr_13022;
                        }();
                        if (cljs.core.truth_(inst_12996)) {
                          var statearr_13023_13044 = state_13014__$1;
                          statearr_13023_13044[1] = 8;
                        } else {
                          var statearr_13024_13045 = state_13014__$1;
                          statearr_13024_13045[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_13015 === 8) {
                          var inst_12995 = state_13014[10];
                          var inst_12994 = state_13014[8];
                          var inst_12986 = state_13014[7];
                          var inst_12993 = state_13014[9];
                          var inst_12998 = function() {
                            var c = inst_12995;
                            var v = inst_12994;
                            var vec__12991 = inst_12993;
                            var cs = inst_12986;
                            return function(c, v, vec__12991, cs, inst_12995, inst_12994, inst_12986, inst_12993, state_val_13015) {
                              return function(p1__12931_SHARP_) {
                                return cljs.core.not_EQ_.call(null, c, p1__12931_SHARP_);
                              };
                            }(c, v, vec__12991, cs, inst_12995, inst_12994, inst_12986, inst_12993, state_val_13015);
                          }();
                          var inst_12999 = cljs.core.filterv.call(null, inst_12998, inst_12986);
                          var inst_12986__$1 = inst_12999;
                          var state_13014__$1 = function() {
                            var statearr_13025 = state_13014;
                            statearr_13025[7] = inst_12986__$1;
                            return statearr_13025;
                          }();
                          var statearr_13026_13046 = state_13014__$1;
                          statearr_13026_13046[2] = null;
                          statearr_13026_13046[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_13015 === 9) {
                            var inst_12994 = state_13014[8];
                            var state_13014__$1 = state_13014;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13014__$1, 11, out, inst_12994);
                          } else {
                            if (state_val_13015 === 10) {
                              var inst_13006 = state_13014[2];
                              var state_13014__$1 = state_13014;
                              var statearr_13028_13047 = state_13014__$1;
                              statearr_13028_13047[2] = inst_13006;
                              statearr_13028_13047[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_13015 === 11) {
                                var inst_12986 = state_13014[7];
                                var inst_13003 = state_13014[2];
                                var tmp13027 = inst_12986;
                                var inst_12986__$1 = tmp13027;
                                var state_13014__$1 = function() {
                                  var statearr_13029 = state_13014;
                                  statearr_13029[7] = inst_12986__$1;
                                  statearr_13029[11] = inst_13003;
                                  return statearr_13029;
                                }();
                                var statearr_13030_13048 = state_13014__$1;
                                statearr_13030_13048[2] = null;
                                statearr_13030_13048[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6137__auto__) {
          return function() {
            var state_machine__6138__auto__ = null;
            var state_machine__6138__auto____0 = function() {
              var statearr_13034 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_13034[0] = state_machine__6138__auto__;
              statearr_13034[1] = 1;
              return statearr_13034;
            };
            var state_machine__6138__auto____1 = function(state_13014) {
              while (true) {
                var ret_value__6139__auto__ = function() {
                  try {
                    while (true) {
                      var result__6140__auto__ = switch__6137__auto__.call(null, state_13014);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6140__auto__;
                      }
                      break;
                    }
                  } catch (e13035) {
                    if (e13035 instanceof Object) {
                      var ex__6141__auto__ = e13035;
                      var statearr_13036_13049 = state_13014;
                      statearr_13036_13049[5] = ex__6141__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13014);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e13035;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__13050 = state_13014;
                  state_13014 = G__13050;
                  continue;
                } else {
                  return ret_value__6139__auto__;
                }
                break;
              }
            };
            state_machine__6138__auto__ = function(state_13014) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6138__auto____0.call(this);
                case 1:
                  return state_machine__6138__auto____1.call(this, state_13014);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
            return state_machine__6138__auto__;
          }();
        }(switch__6137__auto__);
      }();
      var state__6154__auto__ = function() {
        var statearr_13037 = f__6153__auto__.call(null);
        statearr_13037[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___13038;
        return statearr_13037;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
    });
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6152__auto___13143 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6153__auto__ = function() {
        var switch__6137__auto__ = function(state_13120) {
          var state_val_13121 = state_13120[1];
          if (state_val_13121 === 1) {
            var inst_13097 = 0;
            var state_13120__$1 = function() {
              var statearr_13122 = state_13120;
              statearr_13122[7] = inst_13097;
              return statearr_13122;
            }();
            var statearr_13123_13144 = state_13120__$1;
            statearr_13123_13144[2] = null;
            statearr_13123_13144[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_13121 === 2) {
              var inst_13097 = state_13120[7];
              var inst_13099 = inst_13097 < n;
              var state_13120__$1 = state_13120;
              if (cljs.core.truth_(inst_13099)) {
                var statearr_13124_13145 = state_13120__$1;
                statearr_13124_13145[1] = 4;
              } else {
                var statearr_13125_13146 = state_13120__$1;
                statearr_13125_13146[1] = 5;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_13121 === 3) {
                var inst_13117 = state_13120[2];
                var inst_13118 = cljs.core.async.close_BANG_.call(null, out);
                var state_13120__$1 = function() {
                  var statearr_13126 = state_13120;
                  statearr_13126[8] = inst_13117;
                  return statearr_13126;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13120__$1, inst_13118);
              } else {
                if (state_val_13121 === 4) {
                  var state_13120__$1 = state_13120;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13120__$1, 7, ch);
                } else {
                  if (state_val_13121 === 5) {
                    var state_13120__$1 = state_13120;
                    var statearr_13127_13147 = state_13120__$1;
                    statearr_13127_13147[2] = null;
                    statearr_13127_13147[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_13121 === 6) {
                      var inst_13115 = state_13120[2];
                      var state_13120__$1 = state_13120;
                      var statearr_13128_13148 = state_13120__$1;
                      statearr_13128_13148[2] = inst_13115;
                      statearr_13128_13148[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_13121 === 7) {
                        var inst_13102 = state_13120[9];
                        var inst_13102__$1 = state_13120[2];
                        var inst_13103 = inst_13102__$1 == null;
                        var inst_13104 = cljs.core.not.call(null, inst_13103);
                        var state_13120__$1 = function() {
                          var statearr_13129 = state_13120;
                          statearr_13129[9] = inst_13102__$1;
                          return statearr_13129;
                        }();
                        if (inst_13104) {
                          var statearr_13130_13149 = state_13120__$1;
                          statearr_13130_13149[1] = 8;
                        } else {
                          var statearr_13131_13150 = state_13120__$1;
                          statearr_13131_13150[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_13121 === 8) {
                          var inst_13102 = state_13120[9];
                          var state_13120__$1 = state_13120;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13120__$1, 11, out, inst_13102);
                        } else {
                          if (state_val_13121 === 9) {
                            var state_13120__$1 = state_13120;
                            var statearr_13132_13151 = state_13120__$1;
                            statearr_13132_13151[2] = null;
                            statearr_13132_13151[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_13121 === 10) {
                              var inst_13112 = state_13120[2];
                              var state_13120__$1 = state_13120;
                              var statearr_13133_13152 = state_13120__$1;
                              statearr_13133_13152[2] = inst_13112;
                              statearr_13133_13152[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_13121 === 11) {
                                var inst_13097 = state_13120[7];
                                var inst_13107 = state_13120[2];
                                var inst_13108 = inst_13097 + 1;
                                var inst_13097__$1 = inst_13108;
                                var state_13120__$1 = function() {
                                  var statearr_13134 = state_13120;
                                  statearr_13134[10] = inst_13107;
                                  statearr_13134[7] = inst_13097__$1;
                                  return statearr_13134;
                                }();
                                var statearr_13135_13153 = state_13120__$1;
                                statearr_13135_13153[2] = null;
                                statearr_13135_13153[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6137__auto__) {
          return function() {
            var state_machine__6138__auto__ = null;
            var state_machine__6138__auto____0 = function() {
              var statearr_13139 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_13139[0] = state_machine__6138__auto__;
              statearr_13139[1] = 1;
              return statearr_13139;
            };
            var state_machine__6138__auto____1 = function(state_13120) {
              while (true) {
                var ret_value__6139__auto__ = function() {
                  try {
                    while (true) {
                      var result__6140__auto__ = switch__6137__auto__.call(null, state_13120);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6140__auto__;
                      }
                      break;
                    }
                  } catch (e13140) {
                    if (e13140 instanceof Object) {
                      var ex__6141__auto__ = e13140;
                      var statearr_13141_13154 = state_13120;
                      statearr_13141_13154[5] = ex__6141__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13120);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e13140;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__13155 = state_13120;
                  state_13120 = G__13155;
                  continue;
                } else {
                  return ret_value__6139__auto__;
                }
                break;
              }
            };
            state_machine__6138__auto__ = function(state_13120) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6138__auto____0.call(this);
                case 1:
                  return state_machine__6138__auto____1.call(this, state_13120);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
            return state_machine__6138__auto__;
          }();
        }(switch__6137__auto__);
      }();
      var state__6154__auto__ = function() {
        var statearr_13142 = f__6153__auto__.call(null);
        statearr_13142[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___13143;
        return statearr_13142;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
    });
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6152__auto___13252 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6153__auto__ = function() {
        var switch__6137__auto__ = function(state_13227) {
          var state_val_13228 = state_13227[1];
          if (state_val_13228 === 1) {
            var inst_13204 = null;
            var state_13227__$1 = function() {
              var statearr_13229 = state_13227;
              statearr_13229[7] = inst_13204;
              return statearr_13229;
            }();
            var statearr_13230_13253 = state_13227__$1;
            statearr_13230_13253[2] = null;
            statearr_13230_13253[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_13228 === 2) {
              var state_13227__$1 = state_13227;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13227__$1, 4, ch);
            } else {
              if (state_val_13228 === 3) {
                var inst_13224 = state_13227[2];
                var inst_13225 = cljs.core.async.close_BANG_.call(null, out);
                var state_13227__$1 = function() {
                  var statearr_13231 = state_13227;
                  statearr_13231[8] = inst_13224;
                  return statearr_13231;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13227__$1, inst_13225);
              } else {
                if (state_val_13228 === 4) {
                  var inst_13207 = state_13227[9];
                  var inst_13207__$1 = state_13227[2];
                  var inst_13208 = inst_13207__$1 == null;
                  var inst_13209 = cljs.core.not.call(null, inst_13208);
                  var state_13227__$1 = function() {
                    var statearr_13232 = state_13227;
                    statearr_13232[9] = inst_13207__$1;
                    return statearr_13232;
                  }();
                  if (inst_13209) {
                    var statearr_13233_13254 = state_13227__$1;
                    statearr_13233_13254[1] = 5;
                  } else {
                    var statearr_13234_13255 = state_13227__$1;
                    statearr_13234_13255[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_13228 === 5) {
                    var inst_13204 = state_13227[7];
                    var inst_13207 = state_13227[9];
                    var inst_13211 = cljs.core._EQ_.call(null, inst_13207, inst_13204);
                    var state_13227__$1 = state_13227;
                    if (inst_13211) {
                      var statearr_13235_13256 = state_13227__$1;
                      statearr_13235_13256[1] = 8;
                    } else {
                      var statearr_13236_13257 = state_13227__$1;
                      statearr_13236_13257[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_13228 === 6) {
                      var state_13227__$1 = state_13227;
                      var statearr_13238_13258 = state_13227__$1;
                      statearr_13238_13258[2] = null;
                      statearr_13238_13258[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_13228 === 7) {
                        var inst_13222 = state_13227[2];
                        var state_13227__$1 = state_13227;
                        var statearr_13239_13259 = state_13227__$1;
                        statearr_13239_13259[2] = inst_13222;
                        statearr_13239_13259[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_13228 === 8) {
                          var inst_13204 = state_13227[7];
                          var tmp13237 = inst_13204;
                          var inst_13204__$1 = tmp13237;
                          var state_13227__$1 = function() {
                            var statearr_13240 = state_13227;
                            statearr_13240[7] = inst_13204__$1;
                            return statearr_13240;
                          }();
                          var statearr_13241_13260 = state_13227__$1;
                          statearr_13241_13260[2] = null;
                          statearr_13241_13260[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_13228 === 9) {
                            var inst_13207 = state_13227[9];
                            var state_13227__$1 = state_13227;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13227__$1, 11, out, inst_13207);
                          } else {
                            if (state_val_13228 === 10) {
                              var inst_13219 = state_13227[2];
                              var state_13227__$1 = state_13227;
                              var statearr_13242_13261 = state_13227__$1;
                              statearr_13242_13261[2] = inst_13219;
                              statearr_13242_13261[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_13228 === 11) {
                                var inst_13207 = state_13227[9];
                                var inst_13216 = state_13227[2];
                                var inst_13204 = inst_13207;
                                var state_13227__$1 = function() {
                                  var statearr_13243 = state_13227;
                                  statearr_13243[7] = inst_13204;
                                  statearr_13243[10] = inst_13216;
                                  return statearr_13243;
                                }();
                                var statearr_13244_13262 = state_13227__$1;
                                statearr_13244_13262[2] = null;
                                statearr_13244_13262[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6137__auto__) {
          return function() {
            var state_machine__6138__auto__ = null;
            var state_machine__6138__auto____0 = function() {
              var statearr_13248 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_13248[0] = state_machine__6138__auto__;
              statearr_13248[1] = 1;
              return statearr_13248;
            };
            var state_machine__6138__auto____1 = function(state_13227) {
              while (true) {
                var ret_value__6139__auto__ = function() {
                  try {
                    while (true) {
                      var result__6140__auto__ = switch__6137__auto__.call(null, state_13227);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6140__auto__;
                      }
                      break;
                    }
                  } catch (e13249) {
                    if (e13249 instanceof Object) {
                      var ex__6141__auto__ = e13249;
                      var statearr_13250_13263 = state_13227;
                      statearr_13250_13263[5] = ex__6141__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13227);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e13249;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__13264 = state_13227;
                  state_13227 = G__13264;
                  continue;
                } else {
                  return ret_value__6139__auto__;
                }
                break;
              }
            };
            state_machine__6138__auto__ = function(state_13227) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6138__auto____0.call(this);
                case 1:
                  return state_machine__6138__auto____1.call(this, state_13227);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
            return state_machine__6138__auto__;
          }();
        }(switch__6137__auto__);
      }();
      var state__6154__auto__ = function() {
        var statearr_13251 = f__6153__auto__.call(null);
        statearr_13251[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___13252;
        return statearr_13251;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
    });
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6152__auto___13399 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6153__auto__ = function() {
        var switch__6137__auto__ = function(state_13369) {
          var state_val_13370 = state_13369[1];
          if (state_val_13370 === 1) {
            var inst_13332 = new Array(n);
            var inst_13333 = inst_13332;
            var inst_13334 = 0;
            var state_13369__$1 = function() {
              var statearr_13371 = state_13369;
              statearr_13371[7] = inst_13334;
              statearr_13371[8] = inst_13333;
              return statearr_13371;
            }();
            var statearr_13372_13400 = state_13369__$1;
            statearr_13372_13400[2] = null;
            statearr_13372_13400[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_13370 === 2) {
              var state_13369__$1 = state_13369;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13369__$1, 4, ch);
            } else {
              if (state_val_13370 === 3) {
                var inst_13367 = state_13369[2];
                var state_13369__$1 = state_13369;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13369__$1, inst_13367);
              } else {
                if (state_val_13370 === 4) {
                  var inst_13337 = state_13369[9];
                  var inst_13337__$1 = state_13369[2];
                  var inst_13338 = inst_13337__$1 == null;
                  var inst_13339 = cljs.core.not.call(null, inst_13338);
                  var state_13369__$1 = function() {
                    var statearr_13373 = state_13369;
                    statearr_13373[9] = inst_13337__$1;
                    return statearr_13373;
                  }();
                  if (inst_13339) {
                    var statearr_13374_13401 = state_13369__$1;
                    statearr_13374_13401[1] = 5;
                  } else {
                    var statearr_13375_13402 = state_13369__$1;
                    statearr_13375_13402[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_13370 === 5) {
                    var inst_13337 = state_13369[9];
                    var inst_13342 = state_13369[10];
                    var inst_13334 = state_13369[7];
                    var inst_13333 = state_13369[8];
                    var inst_13341 = inst_13333[inst_13334] = inst_13337;
                    var inst_13342__$1 = inst_13334 + 1;
                    var inst_13343 = inst_13342__$1 < n;
                    var state_13369__$1 = function() {
                      var statearr_13376 = state_13369;
                      statearr_13376[10] = inst_13342__$1;
                      statearr_13376[11] = inst_13341;
                      return statearr_13376;
                    }();
                    if (cljs.core.truth_(inst_13343)) {
                      var statearr_13377_13403 = state_13369__$1;
                      statearr_13377_13403[1] = 8;
                    } else {
                      var statearr_13378_13404 = state_13369__$1;
                      statearr_13378_13404[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_13370 === 6) {
                      var inst_13334 = state_13369[7];
                      var inst_13355 = inst_13334 > 0;
                      var state_13369__$1 = state_13369;
                      if (cljs.core.truth_(inst_13355)) {
                        var statearr_13380_13405 = state_13369__$1;
                        statearr_13380_13405[1] = 12;
                      } else {
                        var statearr_13381_13406 = state_13369__$1;
                        statearr_13381_13406[1] = 13;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_13370 === 7) {
                        var inst_13365 = state_13369[2];
                        var state_13369__$1 = state_13369;
                        var statearr_13382_13407 = state_13369__$1;
                        statearr_13382_13407[2] = inst_13365;
                        statearr_13382_13407[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_13370 === 8) {
                          var inst_13342 = state_13369[10];
                          var inst_13333 = state_13369[8];
                          var tmp13379 = inst_13333;
                          var inst_13333__$1 = tmp13379;
                          var inst_13334 = inst_13342;
                          var state_13369__$1 = function() {
                            var statearr_13383 = state_13369;
                            statearr_13383[7] = inst_13334;
                            statearr_13383[8] = inst_13333__$1;
                            return statearr_13383;
                          }();
                          var statearr_13384_13408 = state_13369__$1;
                          statearr_13384_13408[2] = null;
                          statearr_13384_13408[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_13370 === 9) {
                            var inst_13333 = state_13369[8];
                            var inst_13347 = cljs.core.vec.call(null, inst_13333);
                            var state_13369__$1 = state_13369;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13369__$1, 11, out, inst_13347);
                          } else {
                            if (state_val_13370 === 10) {
                              var inst_13353 = state_13369[2];
                              var state_13369__$1 = state_13369;
                              var statearr_13385_13409 = state_13369__$1;
                              statearr_13385_13409[2] = inst_13353;
                              statearr_13385_13409[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_13370 === 11) {
                                var inst_13349 = state_13369[2];
                                var inst_13350 = new Array(n);
                                var inst_13333 = inst_13350;
                                var inst_13334 = 0;
                                var state_13369__$1 = function() {
                                  var statearr_13386 = state_13369;
                                  statearr_13386[12] = inst_13349;
                                  statearr_13386[7] = inst_13334;
                                  statearr_13386[8] = inst_13333;
                                  return statearr_13386;
                                }();
                                var statearr_13387_13410 = state_13369__$1;
                                statearr_13387_13410[2] = null;
                                statearr_13387_13410[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_13370 === 12) {
                                  var inst_13333 = state_13369[8];
                                  var inst_13357 = cljs.core.vec.call(null, inst_13333);
                                  var state_13369__$1 = state_13369;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13369__$1, 15, out, inst_13357);
                                } else {
                                  if (state_val_13370 === 13) {
                                    var state_13369__$1 = state_13369;
                                    var statearr_13388_13411 = state_13369__$1;
                                    statearr_13388_13411[2] = null;
                                    statearr_13388_13411[1] = 14;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_13370 === 14) {
                                      var inst_13362 = state_13369[2];
                                      var inst_13363 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_13369__$1 = function() {
                                        var statearr_13389 = state_13369;
                                        statearr_13389[13] = inst_13362;
                                        return statearr_13389;
                                      }();
                                      var statearr_13390_13412 = state_13369__$1;
                                      statearr_13390_13412[2] = inst_13363;
                                      statearr_13390_13412[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_13370 === 15) {
                                        var inst_13359 = state_13369[2];
                                        var state_13369__$1 = state_13369;
                                        var statearr_13391_13413 = state_13369__$1;
                                        statearr_13391_13413[2] = inst_13359;
                                        statearr_13391_13413[1] = 14;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6137__auto__) {
          return function() {
            var state_machine__6138__auto__ = null;
            var state_machine__6138__auto____0 = function() {
              var statearr_13395 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_13395[0] = state_machine__6138__auto__;
              statearr_13395[1] = 1;
              return statearr_13395;
            };
            var state_machine__6138__auto____1 = function(state_13369) {
              while (true) {
                var ret_value__6139__auto__ = function() {
                  try {
                    while (true) {
                      var result__6140__auto__ = switch__6137__auto__.call(null, state_13369);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6140__auto__;
                      }
                      break;
                    }
                  } catch (e13396) {
                    if (e13396 instanceof Object) {
                      var ex__6141__auto__ = e13396;
                      var statearr_13397_13414 = state_13369;
                      statearr_13397_13414[5] = ex__6141__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13369);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e13396;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__13415 = state_13369;
                  state_13369 = G__13415;
                  continue;
                } else {
                  return ret_value__6139__auto__;
                }
                break;
              }
            };
            state_machine__6138__auto__ = function(state_13369) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6138__auto____0.call(this);
                case 1:
                  return state_machine__6138__auto____1.call(this, state_13369);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
            return state_machine__6138__auto__;
          }();
        }(switch__6137__auto__);
      }();
      var state__6154__auto__ = function() {
        var statearr_13398 = f__6153__auto__.call(null);
        statearr_13398[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___13399;
        return statearr_13398;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
    });
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6152__auto___13558 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6153__auto__ = function() {
        var switch__6137__auto__ = function(state_13528) {
          var state_val_13529 = state_13528[1];
          if (state_val_13529 === 1) {
            var inst_13487 = [];
            var inst_13488 = inst_13487;
            var inst_13489 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538);
            var state_13528__$1 = function() {
              var statearr_13530 = state_13528;
              statearr_13530[7] = inst_13489;
              statearr_13530[8] = inst_13488;
              return statearr_13530;
            }();
            var statearr_13531_13559 = state_13528__$1;
            statearr_13531_13559[2] = null;
            statearr_13531_13559[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_13529 === 2) {
              var state_13528__$1 = state_13528;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13528__$1, 4, ch);
            } else {
              if (state_val_13529 === 3) {
                var inst_13526 = state_13528[2];
                var state_13528__$1 = state_13528;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13528__$1, inst_13526);
              } else {
                if (state_val_13529 === 4) {
                  var inst_13492 = state_13528[9];
                  var inst_13492__$1 = state_13528[2];
                  var inst_13493 = inst_13492__$1 == null;
                  var inst_13494 = cljs.core.not.call(null, inst_13493);
                  var state_13528__$1 = function() {
                    var statearr_13532 = state_13528;
                    statearr_13532[9] = inst_13492__$1;
                    return statearr_13532;
                  }();
                  if (inst_13494) {
                    var statearr_13533_13560 = state_13528__$1;
                    statearr_13533_13560[1] = 5;
                  } else {
                    var statearr_13534_13561 = state_13528__$1;
                    statearr_13534_13561[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_13529 === 5) {
                    var inst_13489 = state_13528[7];
                    var inst_13496 = state_13528[10];
                    var inst_13492 = state_13528[9];
                    var inst_13496__$1 = f.call(null, inst_13492);
                    var inst_13497 = cljs.core._EQ_.call(null, inst_13496__$1, inst_13489);
                    var inst_13498 = cljs.core.keyword_identical_QMARK_.call(null, inst_13489, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538));
                    var inst_13499 = inst_13497 || inst_13498;
                    var state_13528__$1 = function() {
                      var statearr_13535 = state_13528;
                      statearr_13535[10] = inst_13496__$1;
                      return statearr_13535;
                    }();
                    if (cljs.core.truth_(inst_13499)) {
                      var statearr_13536_13562 = state_13528__$1;
                      statearr_13536_13562[1] = 8;
                    } else {
                      var statearr_13537_13563 = state_13528__$1;
                      statearr_13537_13563[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_13529 === 6) {
                      var inst_13488 = state_13528[8];
                      var inst_13513 = inst_13488.length;
                      var inst_13514 = inst_13513 > 0;
                      var state_13528__$1 = state_13528;
                      if (cljs.core.truth_(inst_13514)) {
                        var statearr_13539_13564 = state_13528__$1;
                        statearr_13539_13564[1] = 12;
                      } else {
                        var statearr_13540_13565 = state_13528__$1;
                        statearr_13540_13565[1] = 13;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_13529 === 7) {
                        var inst_13524 = state_13528[2];
                        var state_13528__$1 = state_13528;
                        var statearr_13541_13566 = state_13528__$1;
                        statearr_13541_13566[2] = inst_13524;
                        statearr_13541_13566[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_13529 === 8) {
                          var inst_13488 = state_13528[8];
                          var inst_13496 = state_13528[10];
                          var inst_13492 = state_13528[9];
                          var inst_13501 = inst_13488.push(inst_13492);
                          var tmp13538 = inst_13488;
                          var inst_13488__$1 = tmp13538;
                          var inst_13489 = inst_13496;
                          var state_13528__$1 = function() {
                            var statearr_13542 = state_13528;
                            statearr_13542[7] = inst_13489;
                            statearr_13542[8] = inst_13488__$1;
                            statearr_13542[11] = inst_13501;
                            return statearr_13542;
                          }();
                          var statearr_13543_13567 = state_13528__$1;
                          statearr_13543_13567[2] = null;
                          statearr_13543_13567[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_13529 === 9) {
                            var inst_13488 = state_13528[8];
                            var inst_13504 = cljs.core.vec.call(null, inst_13488);
                            var state_13528__$1 = state_13528;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13528__$1, 11, out, inst_13504);
                          } else {
                            if (state_val_13529 === 10) {
                              var inst_13511 = state_13528[2];
                              var state_13528__$1 = state_13528;
                              var statearr_13544_13568 = state_13528__$1;
                              statearr_13544_13568[2] = inst_13511;
                              statearr_13544_13568[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_13529 === 11) {
                                var inst_13496 = state_13528[10];
                                var inst_13492 = state_13528[9];
                                var inst_13506 = state_13528[2];
                                var inst_13507 = [];
                                var inst_13508 = inst_13507.push(inst_13492);
                                var inst_13488 = inst_13507;
                                var inst_13489 = inst_13496;
                                var state_13528__$1 = function() {
                                  var statearr_13545 = state_13528;
                                  statearr_13545[7] = inst_13489;
                                  statearr_13545[8] = inst_13488;
                                  statearr_13545[12] = inst_13506;
                                  statearr_13545[13] = inst_13508;
                                  return statearr_13545;
                                }();
                                var statearr_13546_13569 = state_13528__$1;
                                statearr_13546_13569[2] = null;
                                statearr_13546_13569[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_13529 === 12) {
                                  var inst_13488 = state_13528[8];
                                  var inst_13516 = cljs.core.vec.call(null, inst_13488);
                                  var state_13528__$1 = state_13528;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13528__$1, 15, out, inst_13516);
                                } else {
                                  if (state_val_13529 === 13) {
                                    var state_13528__$1 = state_13528;
                                    var statearr_13547_13570 = state_13528__$1;
                                    statearr_13547_13570[2] = null;
                                    statearr_13547_13570[1] = 14;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_13529 === 14) {
                                      var inst_13521 = state_13528[2];
                                      var inst_13522 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_13528__$1 = function() {
                                        var statearr_13548 = state_13528;
                                        statearr_13548[14] = inst_13521;
                                        return statearr_13548;
                                      }();
                                      var statearr_13549_13571 = state_13528__$1;
                                      statearr_13549_13571[2] = inst_13522;
                                      statearr_13549_13571[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_13529 === 15) {
                                        var inst_13518 = state_13528[2];
                                        var state_13528__$1 = state_13528;
                                        var statearr_13550_13572 = state_13528__$1;
                                        statearr_13550_13572[2] = inst_13518;
                                        statearr_13550_13572[1] = 14;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6137__auto__) {
          return function() {
            var state_machine__6138__auto__ = null;
            var state_machine__6138__auto____0 = function() {
              var statearr_13554 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_13554[0] = state_machine__6138__auto__;
              statearr_13554[1] = 1;
              return statearr_13554;
            };
            var state_machine__6138__auto____1 = function(state_13528) {
              while (true) {
                var ret_value__6139__auto__ = function() {
                  try {
                    while (true) {
                      var result__6140__auto__ = switch__6137__auto__.call(null, state_13528);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6140__auto__;
                      }
                      break;
                    }
                  } catch (e13555) {
                    if (e13555 instanceof Object) {
                      var ex__6141__auto__ = e13555;
                      var statearr_13556_13573 = state_13528;
                      statearr_13556_13573[5] = ex__6141__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13528);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e13555;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__13574 = state_13528;
                  state_13528 = G__13574;
                  continue;
                } else {
                  return ret_value__6139__auto__;
                }
                break;
              }
            };
            state_machine__6138__auto__ = function(state_13528) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6138__auto____0.call(this);
                case 1:
                  return state_machine__6138__auto____1.call(this, state_13528);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
            return state_machine__6138__auto__;
          }();
        }(switch__6137__auto__);
      }();
      var state__6154__auto__ = function() {
        var statearr_13557 = f__6153__auto__.call(null);
        statearr_13557[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___13558;
        return statearr_13557;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
    });
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("floor16.pages.search");
goog.require("cljs.core");
goog.require("floor16.lang");
goog.require("cljs.core.async");
goog.require("floor16.ui.utils");
goog.require("floor16.ui.utils");
goog.require("goog.events");
goog.require("goog.events.EventType");
goog.require("floor16.auth");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("floor16.auth");
goog.require("floor16.lang");
goog.require("om.dom");
goog.require("cljs.core.async");
goog.require("goog.events");
floor16.pages.search.win_mouse_down = function win_mouse_down(e, owner, do_close) {
  if (cljs.core.truth_(do_close)) {
    if (floor16.ui.utils.in_QMARK_.call(null, e, om.core.get_node.call(null, owner))) {
      return null;
    } else {
      return do_close.call(null);
    }
  } else {
    return null;
  }
};
floor16.pages.search.self_closeable = function self_closeable(cursor, owner, p__27559) {
  var map__27580 = p__27559;
  var map__27580__$1 = cljs.core.seq_QMARK_.call(null, map__27580) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27580) : map__27580;
  var opts = map__27580__$1;
  var do_close = cljs.core.get.call(null, map__27580__$1, new cljs.core.Keyword(null, "do-close", "do-close", 4607974824));
  var view = cljs.core.get.call(null, map__27580__$1, new cljs.core.Keyword(null, "view", "view", 1017523735));
  if (typeof floor16.pages.search.t27581 !== "undefined") {
  } else {
    floor16.pages.search.t27581 = function(view, do_close, opts, map__27580, p__27559, owner, cursor, self_closeable, meta27582) {
      this.view = view;
      this.do_close = do_close;
      this.opts = opts;
      this.map__27580 = map__27580;
      this.p__27559 = p__27559;
      this.owner = owner;
      this.cursor = cursor;
      this.self_closeable = self_closeable;
      this.meta27582 = meta27582;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.pages.search.t27581.cljs$lang$type = true;
    floor16.pages.search.t27581.cljs$lang$ctorStr = "floor16.pages.search/t27581";
    floor16.pages.search.t27581.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.pages.search/t27581");
    };
    floor16.pages.search.t27581.prototype.om$core$IRenderState$ = true;
    floor16.pages.search.t27581.prototype.om$core$IRenderState$render_state$arity$2 = function(this$, p__27584) {
      var self__ = this;
      var map__27585 = p__27584;
      var map__27585__$1 = cljs.core.seq_QMARK_.call(null, map__27585) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27585) : map__27585;
      var close_chan = cljs.core.get.call(null, map__27585__$1, new cljs.core.Keyword(null, "close-chan", "close-chan", 3200632185));
      var this$__$1 = this;
      return om.core.build.call(null, self__.view, self__.cursor, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "init-state", "init-state", 4479067398), om.core.get_state.call(null, self__.owner), new cljs.core.Keyword(null, "opts", "opts", 1017322386), cljs.core.assoc.call(null, cljs.core.dissoc.call(null, self__.opts, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "view", "view", 1017523735), new cljs.core.Keyword(null, 
      "do-close", "do-close", 4607974824)], null)), new cljs.core.Keyword(null, "close-chan", "close-chan", 3200632185), close_chan)], null));
    };
    floor16.pages.search.t27581.prototype.om$core$IWillUnmount$ = true;
    floor16.pages.search.t27581.prototype.om$core$IWillUnmount$will_unmount$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      var temp__4092__auto__ = om.core.get_state.call(null, self__.owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("floor16.pages.search", "window-listener", "floor16.pages.search/window-listener", 2977281139)], null));
      if (cljs.core.truth_(temp__4092__auto__)) {
        var mouse_handler = temp__4092__auto__;
        return goog.events.unlisten(window, goog.events.EventType.MOUSEDOWN, mouse_handler);
      } else {
        return null;
      }
    };
    floor16.pages.search.t27581.prototype.om$core$IDidMount$ = true;
    floor16.pages.search.t27581.prototype.om$core$IDidMount$did_mount$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      var mouse_handler = function(p1__27558_SHARP_) {
        return floor16.pages.search.win_mouse_down.call(null, p1__27558_SHARP_, self__.owner, self__.do_close);
      };
      goog.events.listen(window, goog.events.EventType.MOUSEDOWN, mouse_handler);
      return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("floor16.pages.search", "window-listener", "floor16.pages.search/window-listener", 2977281139)], null), mouse_handler);
    };
    floor16.pages.search.t27581.prototype.om$core$IWillMount$ = true;
    floor16.pages.search.t27581.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var close_chan = cljs.core.async.chan.call(null);
      om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "close-chan", "close-chan", 3200632185), close_chan);
      var c__6152__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function() {
        var f__6153__auto__ = function() {
          var switch__6137__auto__ = function(state_27590) {
            var state_val_27591 = state_27590[1];
            if (state_val_27591 === 2) {
              var inst_27587 = state_27590[2];
              var inst_27588 = self__.do_close.call(null);
              var state_27590__$1 = function() {
                var statearr_27592 = state_27590;
                statearr_27592[7] = inst_27587;
                return statearr_27592;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_27590__$1, inst_27588);
            } else {
              if (state_val_27591 === 1) {
                var state_27590__$1 = state_27590;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_27590__$1, 2, close_chan);
              } else {
                return null;
              }
            }
          };
          return function(switch__6137__auto__) {
            return function() {
              var state_machine__6138__auto__ = null;
              var state_machine__6138__auto____0 = function() {
                var statearr_27596 = [null, null, null, null, null, null, null, null];
                statearr_27596[0] = state_machine__6138__auto__;
                statearr_27596[1] = 1;
                return statearr_27596;
              };
              var state_machine__6138__auto____1 = function(state_27590) {
                while (true) {
                  var ret_value__6139__auto__ = function() {
                    try {
                      while (true) {
                        var result__6140__auto__ = switch__6137__auto__.call(null, state_27590);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6140__auto__;
                        }
                        break;
                      }
                    } catch (e27597) {
                      if (e27597 instanceof Object) {
                        var ex__6141__auto__ = e27597;
                        var statearr_27598_27600 = state_27590;
                        statearr_27598_27600[5] = ex__6141__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_27590);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e27597;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__27601 = state_27590;
                    state_27590 = G__27601;
                    continue;
                  } else {
                    return ret_value__6139__auto__;
                  }
                  break;
                }
              };
              state_machine__6138__auto__ = function(state_27590) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6138__auto____0.call(this);
                  case 1:
                    return state_machine__6138__auto____1.call(this, state_27590);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
              state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
              return state_machine__6138__auto__;
            }();
          }(switch__6137__auto__);
        }();
        var state__6154__auto__ = function() {
          var statearr_27599 = f__6153__auto__.call(null);
          statearr_27599[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto__;
          return statearr_27599;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
      });
      return c__6152__auto__;
    };
    floor16.pages.search.t27581.prototype.cljs$core$IMeta$_meta$arity$1 = function(_27583) {
      var self__ = this;
      var _27583__$1 = this;
      return self__.meta27582;
    };
    floor16.pages.search.t27581.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_27583, meta27582__$1) {
      var self__ = this;
      var _27583__$1 = this;
      return new floor16.pages.search.t27581(self__.view, self__.do_close, self__.opts, self__.map__27580, self__.p__27559, self__.owner, self__.cursor, self__.self_closeable, meta27582__$1);
    };
    floor16.pages.search.__GT_t27581 = function __GT_t27581(view__$1, do_close__$1, opts__$1, map__27580__$2, p__27559__$1, owner__$1, cursor__$1, self_closeable__$1, meta27582) {
      return new floor16.pages.search.t27581(view__$1, do_close__$1, opts__$1, map__27580__$2, p__27559__$1, owner__$1, cursor__$1, self_closeable__$1, meta27582);
    };
  }
  return new floor16.pages.search.t27581(view, do_close, opts, map__27580__$1, p__27559, owner, cursor, self_closeable, null);
};
floor16.pages.search.active_QMARK_ = function active_QMARK_(owner) {
  return om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "active", "active", 3885920888));
};
floor16.pages.search.set_active = function set_active(owner, v) {
  return om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "active", "active", 3885920888), v);
};
floor16.pages.search.get_cities = function get_cities() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "href", "href", 1017115293), "", new cljs.core.Keyword(null, "total", "total", 1124454070), 80, new cljs.core.Keyword(null, "offset", "offset", 4289091589), 0, new cljs.core.Keyword(null, "limit", "limit", 1116880685), 25, new cljs.core.Keyword(null, "items", "items", 1114430258), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
  "id", "id", 1013907597), 1, new cljs.core.Keyword(null, "name", "name", 1017277949), "\u041c\u043e\u0441\u043a\u0432\u0430"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", 1013907597), 2, new cljs.core.Keyword(null, "name", "name", 1017277949), "\u0421\u0430\u043c\u0430\u0440\u0430"], null)], null)], null);
};
floor16.pages.search.IResource = function() {
  var obj27603 = {};
  return obj27603;
}();
floor16.pages.search.all = function all(this$, state) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$pages$search$IResource$all$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$pages$search$IResource$all$arity$2(this$, state);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.pages.search.all[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.pages.search.all["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IResource.all", this$);
        }
      }
    }().call(null, this$, state);
  }
};
floor16.pages.search.by_key = function by_key(this$, state, k) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$pages$search$IResource$by_key$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$pages$search$IResource$by_key$arity$3(this$, state, k);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.pages.search.by_key[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.pages.search.by_key["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IResource.by-key", this$);
        }
      }
    }().call(null, this$, state, k);
  }
};
floor16.pages.search.name_by_key = function name_by_key(this$, state, k) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$pages$search$IResource$name_by_key$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$pages$search$IResource$name_by_key$arity$3(this$, state, k);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.pages.search.name_by_key[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.pages.search.name_by_key["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IResource.name-by-key", this$);
        }
      }
    }().call(null, this$, state, k);
  }
};
floor16.pages.search.d_key = function d_key(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$pages$search$IResource$d_key$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$pages$search$IResource$d_key$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.pages.search.d_key[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.pages.search.d_key["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IResource.d-key", this$);
        }
      }
    }().call(null, this$);
  }
};
floor16.pages.search.d_name = function d_name(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$pages$search$IResource$d_name$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$pages$search$IResource$d_name$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.pages.search.d_name[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.pages.search.d_name["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IResource.d-name", this$);
        }
      }
    }().call(null, this$);
  }
};
floor16.pages.search.by_query = function by_query(this$, state, query) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$pages$search$IResource$by_query$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$pages$search$IResource$by_query$arity$3(this$, state, query);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.pages.search.by_query[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.pages.search.by_query["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IResource.by-query", this$);
        }
      }
    }().call(null, this$, state, query);
  }
};
floor16.pages.search.res_city = function() {
  var res_city__delegate = function(abs_path, p__27605) {
    var vec__27610 = p__27605;
    var dk = cljs.core.nth.call(null, vec__27610, 0, null);
    var dn = cljs.core.nth.call(null, vec__27610, 1, null);
    var dk__$1 = function() {
      var or__3403__auto__ = dk;
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return new cljs.core.Keyword(null, "id", "id", 1013907597);
      }
    }();
    var dn__$1 = function() {
      var or__3403__auto__ = dn;
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return new cljs.core.Keyword(null, "name", "name", 1017277949);
      }
    }();
    if (typeof floor16.pages.search.t27611 !== "undefined") {
    } else {
      floor16.pages.search.t27611 = function(dn, dk, vec__27610, p__27605, abs_path, res_city, meta27612) {
        this.dn = dn;
        this.dk = dk;
        this.vec__27610 = vec__27610;
        this.p__27605 = p__27605;
        this.abs_path = abs_path;
        this.res_city = res_city;
        this.meta27612 = meta27612;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      floor16.pages.search.t27611.cljs$lang$type = true;
      floor16.pages.search.t27611.cljs$lang$ctorStr = "floor16.pages.search/t27611";
      floor16.pages.search.t27611.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
        return cljs.core._write.call(null, writer__3971__auto__, "floor16.pages.search/t27611");
      };
      floor16.pages.search.t27611.prototype.floor16$pages$search$IResource$ = true;
      floor16.pages.search.t27611.prototype.floor16$pages$search$IResource$all$arity$2 = function(this$, state) {
        var self__ = this;
        var this$__$1 = this;
        var state__$1 = om.core.cursor_QMARK_.call(null, state) ? om.core._state.call(null, state) : state;
        var data = cljs.core.get_in.call(null, cljs.core.deref.call(null, state__$1), self__.abs_path);
        if (cljs.core.empty_QMARK_.call(null, data)) {
          return cljs.core.get_in.call(null, cljs.core.swap_BANG_.call(null, state__$1, cljs.core.assoc_in, self__.abs_path, (new cljs.core.Keyword(null, "items", "items", 1114430258)).cljs$core$IFn$_invoke$arity$1(floor16.pages.search.get_cities.call(null))), self__.abs_path);
        } else {
          return data;
        }
      };
      floor16.pages.search.t27611.prototype.floor16$pages$search$IResource$by_key$arity$3 = function(this$, state, k) {
        var self__ = this;
        var this$__$1 = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, function(p1__27604_SHARP_) {
          return cljs.core._EQ_.call(null, self__.dk.call(null, p1__27604_SHARP_), k);
        }, floor16.pages.search.all.call(null, this$__$1, state)));
      };
      floor16.pages.search.t27611.prototype.floor16$pages$search$IResource$name_by_key$arity$3 = function(this$, state, k) {
        var self__ = this;
        var this$__$1 = this;
        return self__.dn.call(null, floor16.pages.search.by_key.call(null, this$__$1, state, k));
      };
      floor16.pages.search.t27611.prototype.floor16$pages$search$IResource$d_key$arity$1 = function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return self__.dk;
      };
      floor16.pages.search.t27611.prototype.floor16$pages$search$IResource$d_name$arity$1 = function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return self__.dn;
      };
      floor16.pages.search.t27611.prototype.floor16$pages$search$IResource$by_query$arity$3 = function(this$, state, query) {
        var self__ = this;
        var this$__$1 = this;
        var state__$1 = om.core.cursor_QMARK_.call(null, state) ? om.core._state.call(null, state) : state;
        cljs.core.swap_BANG_.call(null, state__$1, cljs.core.assoc_in, cljs.core.conj.call(null, self__.abs_path, new cljs.core.Keyword(null, "loading", "loading", 1350554798)), true);
        return setTimeout(function() {
          return cljs.core.swap_BANG_.call(null, state__$1, cljs.core.assoc_in, self__.abs_path, floor16.pages.search.get_cities.call(null));
        }, 500);
      };
      floor16.pages.search.t27611.prototype.cljs$core$IMeta$_meta$arity$1 = function(_27613) {
        var self__ = this;
        var _27613__$1 = this;
        return self__.meta27612;
      };
      floor16.pages.search.t27611.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_27613, meta27612__$1) {
        var self__ = this;
        var _27613__$1 = this;
        return new floor16.pages.search.t27611(self__.dn, self__.dk, self__.vec__27610, self__.p__27605, self__.abs_path, self__.res_city, meta27612__$1);
      };
      floor16.pages.search.__GT_t27611 = function __GT_t27611(dn__$2, dk__$2, vec__27610__$1, p__27605__$1, abs_path__$1, res_city__$1, meta27612) {
        return new floor16.pages.search.t27611(dn__$2, dk__$2, vec__27610__$1, p__27605__$1, abs_path__$1, res_city__$1, meta27612);
      };
    }
    return new floor16.pages.search.t27611(dn__$1, dk__$1, vec__27610, p__27605, abs_path, res_city, null);
  };
  var res_city = function(abs_path, var_args) {
    var p__27605 = null;
    if (arguments.length > 1) {
      p__27605 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return res_city__delegate.call(this, abs_path, p__27605);
  };
  res_city.cljs$lang$maxFixedArity = 1;
  res_city.cljs$lang$applyTo = function(arglist__27614) {
    var abs_path = cljs.core.first(arglist__27614);
    var p__27605 = cljs.core.rest(arglist__27614);
    return res_city__delegate(abs_path, p__27605);
  };
  res_city.cljs$core$IFn$_invoke$arity$variadic = res_city__delegate;
  return res_city;
}();
floor16.pages.search.propagade_filter_change = function propagade_filter_change(owner, dk, v) {
  var temp__4092__auto__ = om.core.get_state.call(null, owner, new cljs.core.Keyword("floor16.pages.search", "filter-chan", "floor16.pages.search/filter-chan", 763046333));
  if (cljs.core.truth_(temp__4092__auto__)) {
    var fc = temp__4092__auto__;
    return cljs.core.async.put_BANG_.call(null, fc, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "d-key", "d-key", 1107703016), dk, new cljs.core.Keyword(null, "value", "value", 1125876963), v], null));
  } else {
    return null;
  }
};
floor16.pages.search.add_filter_chan = function() {
  var add_filter_chan__delegate = function(owner, p__27615) {
    var vec__27617 = p__27615;
    var m = cljs.core.nth.call(null, vec__27617, 0, null);
    var m1 = function() {
      var or__3403__auto__ = m;
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return cljs.core.PersistentArrayMap.EMPTY;
      }
    }();
    var temp__4090__auto__ = om.core.get_state.call(null, owner, new cljs.core.Keyword("floor16.pages.search", "filter-chan", "floor16.pages.search/filter-chan", 763046333));
    if (cljs.core.truth_(temp__4090__auto__)) {
      var fc = temp__4090__auto__;
      return cljs.core.assoc_in.call(null, m1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "init-state", "init-state", 4479067398), new cljs.core.Keyword("floor16.pages.search", "filter-chan", "floor16.pages.search/filter-chan", 763046333)], null), fc);
    } else {
      return m;
    }
  };
  var add_filter_chan = function(owner, var_args) {
    var p__27615 = null;
    if (arguments.length > 1) {
      p__27615 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return add_filter_chan__delegate.call(this, owner, p__27615);
  };
  add_filter_chan.cljs$lang$maxFixedArity = 1;
  add_filter_chan.cljs$lang$applyTo = function(arglist__27618) {
    var owner = cljs.core.first(arglist__27618);
    var p__27615 = cljs.core.rest(arglist__27618);
    return add_filter_chan__delegate(owner, p__27615);
  };
  add_filter_chan.cljs$core$IFn$_invoke$arity$variadic = add_filter_chan__delegate;
  return add_filter_chan;
}();
floor16.pages.search.set_filter_chan = function set_filter_chan(owner, fc) {
  return om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword("floor16.pages.search", "filter-chan", "floor16.pages.search/filter-chan", 763046333), fc);
};
floor16.pages.search.gen_dd_menu = function gen_dd_menu(cursor, owner, p__27619) {
  var map__27624 = p__27619;
  var map__27624__$1 = cljs.core.seq_QMARK_.call(null, map__27624) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27624) : map__27624;
  var opts = map__27624__$1;
  var close_chan = cljs.core.get.call(null, map__27624__$1, new cljs.core.Keyword(null, "close-chan", "close-chan", 3200632185));
  var resource = cljs.core.get.call(null, map__27624__$1, new cljs.core.Keyword(null, "resource", "resource", 672839552));
  var data_key = cljs.core.get.call(null, map__27624__$1, new cljs.core.Keyword(null, "data-key", "data-key", 2801799470));
  if (typeof floor16.pages.search.t27625 !== "undefined") {
  } else {
    floor16.pages.search.t27625 = function(data_key, resource, close_chan, opts, map__27624, p__27619, owner, cursor, gen_dd_menu, meta27626) {
      this.data_key = data_key;
      this.resource = resource;
      this.close_chan = close_chan;
      this.opts = opts;
      this.map__27624 = map__27624;
      this.p__27619 = p__27619;
      this.owner = owner;
      this.cursor = cursor;
      this.gen_dd_menu = gen_dd_menu;
      this.meta27626 = meta27626;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.pages.search.t27625.cljs$lang$type = true;
    floor16.pages.search.t27625.cljs$lang$ctorStr = "floor16.pages.search/t27625";
    floor16.pages.search.t27625.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.pages.search/t27625");
    };
    floor16.pages.search.t27625.prototype.om$core$IRender$ = true;
    floor16.pages.search.t27625.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      var items = floor16.pages.search.all.call(null, self__.resource, self__.cursor);
      var dk = floor16.pages.search.d_key.call(null, self__.resource);
      var dn = floor16.pages.search.d_name.call(null, self__.resource);
      return cljs.core.apply.call(null, om.dom.ul, null, cljs.core.map.call(null, function(i) {
        return React.DOM.li({"onClick":function(e) {
          om.core.update_BANG_.call(null, self__.cursor, self__.data_key, dk.call(null, i));
          floor16.pages.search.propagade_filter_change.call(null, self__.owner, self__.data_key, dk.call(null, i));
          return cljs.core.async.put_BANG_.call(null, self__.close_chan, new cljs.core.Keyword(null, "close", "close", 1108660586));
        }}, dn.call(null, i));
      }, items));
    };
    floor16.pages.search.t27625.prototype.cljs$core$IMeta$_meta$arity$1 = function(_27627) {
      var self__ = this;
      var _27627__$1 = this;
      return self__.meta27626;
    };
    floor16.pages.search.t27625.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_27627, meta27626__$1) {
      var self__ = this;
      var _27627__$1 = this;
      return new floor16.pages.search.t27625(self__.data_key, self__.resource, self__.close_chan, self__.opts, self__.map__27624, self__.p__27619, self__.owner, self__.cursor, self__.gen_dd_menu, meta27626__$1);
    };
    floor16.pages.search.__GT_t27625 = function __GT_t27625(data_key__$1, resource__$1, close_chan__$1, opts__$1, map__27624__$2, p__27619__$1, owner__$1, cursor__$1, gen_dd_menu__$1, meta27626) {
      return new floor16.pages.search.t27625(data_key__$1, resource__$1, close_chan__$1, opts__$1, map__27624__$2, p__27619__$1, owner__$1, cursor__$1, gen_dd_menu__$1, meta27626);
    };
  }
  return new floor16.pages.search.t27625(data_key, resource, close_chan, opts, map__27624__$1, p__27619, owner, cursor, gen_dd_menu, null);
};
floor16.pages.search.gen_select = function gen_select(cursor, owner, p__27628) {
  var map__27633 = p__27628;
  var map__27633__$1 = cljs.core.seq_QMARK_.call(null, map__27633) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27633) : map__27633;
  var opts = map__27633__$1;
  var resource = cljs.core.get.call(null, map__27633__$1, new cljs.core.Keyword(null, "resource", "resource", 672839552));
  var selector = cljs.core.get.call(null, map__27633__$1, new cljs.core.Keyword(null, "selector", "selector", 2205476689));
  var placeholder = cljs.core.get.call(null, map__27633__$1, new cljs.core.Keyword(null, "placeholder", "placeholder", 1612151013));
  var data_key = cljs.core.get.call(null, map__27633__$1, new cljs.core.Keyword(null, "data-key", "data-key", 2801799470));
  if (typeof floor16.pages.search.t27634 !== "undefined") {
  } else {
    floor16.pages.search.t27634 = function(opts, map__27633, placeholder, gen_select, p__27628, selector, resource, data_key, owner, cursor, meta27635) {
      this.opts = opts;
      this.map__27633 = map__27633;
      this.placeholder = placeholder;
      this.gen_select = gen_select;
      this.p__27628 = p__27628;
      this.selector = selector;
      this.resource = resource;
      this.data_key = data_key;
      this.owner = owner;
      this.cursor = cursor;
      this.meta27635 = meta27635;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.pages.search.t27634.cljs$lang$type = true;
    floor16.pages.search.t27634.cljs$lang$ctorStr = "floor16.pages.search/t27634";
    floor16.pages.search.t27634.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.pages.search/t27634");
    };
    floor16.pages.search.t27634.prototype.om$core$IRender$ = true;
    floor16.pages.search.t27634.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      var value = self__.data_key.call(null, self__.cursor);
      var display_name = cljs.core.truth_(value) ? floor16.pages.search.name_by_key.call(null, self__.resource, self__.cursor, value) : null;
      var placeholder__$2 = function() {
        var or__3403__auto__ = self__.placeholder;
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return floor16.lang.l.call(null, new cljs.core.Keyword(null, "select-value", "select-value", 1968185554));
        }
      }();
      var selector__$2 = function() {
        var or__3403__auto__ = self__.selector;
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return floor16.pages.search.gen_dd_menu;
        }
      }();
      return React.DOM.span({"onClick":function() {
        return floor16.pages.search.set_active.call(null, self__.owner, true);
      }, "className":"gen-select"}, value == null || cljs.core.seq_QMARK_.call(null, value) && cljs.core.empty_QMARK_.call(null, value) ? React.DOM.span({"className":"placeholder"}, placeholder__$2) : React.DOM.span({"className":"value"}, display_name), React.DOM.span({"className":"btn"}, "..."), cljs.core.truth_(floor16.pages.search.active_QMARK_.call(null, self__.owner)) ? om.core.build.call(null, floor16.pages.search.self_closeable, self__.cursor, floor16.pages.search.add_filter_chan.call(null, 
      self__.owner, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "view", "view", 1017523735), selector__$2, new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), self__.data_key, new cljs.core.Keyword(null, "do-close", "do-close", 4607974824), function() {
        return floor16.pages.search.set_active.call(null, self__.owner, false);
      }, new cljs.core.Keyword(null, "resource", "resource", 672839552), self__.resource], null)], null))) : null);
    };
    floor16.pages.search.t27634.prototype.cljs$core$IMeta$_meta$arity$1 = function(_27636) {
      var self__ = this;
      var _27636__$1 = this;
      return self__.meta27635;
    };
    floor16.pages.search.t27634.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_27636, meta27635__$1) {
      var self__ = this;
      var _27636__$1 = this;
      return new floor16.pages.search.t27634(self__.opts, self__.map__27633, self__.placeholder, self__.gen_select, self__.p__27628, self__.selector, self__.resource, self__.data_key, self__.owner, self__.cursor, meta27635__$1);
    };
    floor16.pages.search.__GT_t27634 = function __GT_t27634(opts__$1, map__27633__$2, placeholder__$1, gen_select__$1, p__27628__$1, selector__$1, resource__$1, data_key__$1, owner__$1, cursor__$1, meta27635) {
      return new floor16.pages.search.t27634(opts__$1, map__27633__$2, placeholder__$1, gen_select__$1, p__27628__$1, selector__$1, resource__$1, data_key__$1, owner__$1, cursor__$1, meta27635);
    };
  }
  return new floor16.pages.search.t27634(opts, map__27633__$1, placeholder, gen_select, p__27628, selector, resource, data_key, owner, cursor, null);
};
floor16.pages.search.simple_filter = function simple_filter(filt, owner) {
  if (typeof floor16.pages.search.t27640 !== "undefined") {
  } else {
    floor16.pages.search.t27640 = function(owner, filt, simple_filter, meta27641) {
      this.owner = owner;
      this.filt = filt;
      this.simple_filter = simple_filter;
      this.meta27641 = meta27641;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.pages.search.t27640.cljs$lang$type = true;
    floor16.pages.search.t27640.cljs$lang$ctorStr = "floor16.pages.search/t27640";
    floor16.pages.search.t27640.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.pages.search/t27640");
    };
    floor16.pages.search.t27640.prototype.om$core$IRender$ = true;
    floor16.pages.search.t27640.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div({"className":"simple-filter"}, om.core.build.call(null, floor16.pages.search.gen_select, self__.filt, floor16.pages.search.add_filter_chan.call(null, self__.owner, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), new cljs.core.Keyword(null, "city-id", "city-id", 1799296047), new cljs.core.Keyword(null, "placeholder", 
      "placeholder", 1612151013), floor16.lang.l.call(null, new cljs.core.Keyword(null, "city", "city", 1016958173)), new cljs.core.Keyword(null, "resource", "resource", 672839552), floor16.pages.search.res_city.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "common", "common", 3954056541), new cljs.core.Keyword(null, "refs", "refs", 1017400754), new cljs.core.Keyword(null, "cities", "cities", 3948719803)], null))], null)], 
      null))));
    };
    floor16.pages.search.t27640.prototype.cljs$core$IMeta$_meta$arity$1 = function(_27642) {
      var self__ = this;
      var _27642__$1 = this;
      return self__.meta27641;
    };
    floor16.pages.search.t27640.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_27642, meta27641__$1) {
      var self__ = this;
      var _27642__$1 = this;
      return new floor16.pages.search.t27640(self__.owner, self__.filt, self__.simple_filter, meta27641__$1);
    };
    floor16.pages.search.__GT_t27640 = function __GT_t27640(owner__$1, filt__$1, simple_filter__$1, meta27641) {
      return new floor16.pages.search.t27640(owner__$1, filt__$1, simple_filter__$1, meta27641);
    };
  }
  return new floor16.pages.search.t27640(owner, filt, simple_filter, null);
};
floor16.pages.search.extended_filter = function extended_filter(data, owner, opts) {
  if (typeof floor16.pages.search.t27646 !== "undefined") {
  } else {
    floor16.pages.search.t27646 = function(opts, owner, data, extended_filter, meta27647) {
      this.opts = opts;
      this.owner = owner;
      this.data = data;
      this.extended_filter = extended_filter;
      this.meta27647 = meta27647;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.pages.search.t27646.cljs$lang$type = true;
    floor16.pages.search.t27646.cljs$lang$ctorStr = "floor16.pages.search/t27646";
    floor16.pages.search.t27646.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.pages.search/t27646");
    };
    floor16.pages.search.t27646.prototype.om$core$IRender$ = true;
    floor16.pages.search.t27646.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div({"className":""}, "extended-filter");
    };
    floor16.pages.search.t27646.prototype.cljs$core$IMeta$_meta$arity$1 = function(_27648) {
      var self__ = this;
      var _27648__$1 = this;
      return self__.meta27647;
    };
    floor16.pages.search.t27646.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_27648, meta27647__$1) {
      var self__ = this;
      var _27648__$1 = this;
      return new floor16.pages.search.t27646(self__.opts, self__.owner, self__.data, self__.extended_filter, meta27647__$1);
    };
    floor16.pages.search.__GT_t27646 = function __GT_t27646(opts__$1, owner__$1, data__$1, extended_filter__$1, meta27647) {
      return new floor16.pages.search.t27646(opts__$1, owner__$1, data__$1, extended_filter__$1, meta27647);
    };
  }
  return new floor16.pages.search.t27646(opts, owner, data, extended_filter, null);
};
floor16.pages.search.gen_sort_select = function gen_sort_select(data, owner, opts) {
  if (typeof floor16.pages.search.t27652 !== "undefined") {
  } else {
    floor16.pages.search.t27652 = function(opts, owner, data, gen_sort_select, meta27653) {
      this.opts = opts;
      this.owner = owner;
      this.data = data;
      this.gen_sort_select = gen_sort_select;
      this.meta27653 = meta27653;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.pages.search.t27652.cljs$lang$type = true;
    floor16.pages.search.t27652.cljs$lang$ctorStr = "floor16.pages.search/t27652";
    floor16.pages.search.t27652.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.pages.search/t27652");
    };
    floor16.pages.search.t27652.prototype.om$core$IRender$ = true;
    floor16.pages.search.t27652.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div({"className":""}, "gen-sort-select");
    };
    floor16.pages.search.t27652.prototype.cljs$core$IMeta$_meta$arity$1 = function(_27654) {
      var self__ = this;
      var _27654__$1 = this;
      return self__.meta27653;
    };
    floor16.pages.search.t27652.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_27654, meta27653__$1) {
      var self__ = this;
      var _27654__$1 = this;
      return new floor16.pages.search.t27652(self__.opts, self__.owner, self__.data, self__.gen_sort_select, meta27653__$1);
    };
    floor16.pages.search.__GT_t27652 = function __GT_t27652(opts__$1, owner__$1, data__$1, gen_sort_select__$1, meta27653) {
      return new floor16.pages.search.t27652(opts__$1, owner__$1, data__$1, gen_sort_select__$1, meta27653);
    };
  }
  return new floor16.pages.search.t27652(opts, owner, data, gen_sort_select, null);
};
floor16.pages.search.gen_view_select = function gen_view_select(data, owner, opts) {
  if (typeof floor16.pages.search.t27658 !== "undefined") {
  } else {
    floor16.pages.search.t27658 = function(opts, owner, data, gen_view_select, meta27659) {
      this.opts = opts;
      this.owner = owner;
      this.data = data;
      this.gen_view_select = gen_view_select;
      this.meta27659 = meta27659;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.pages.search.t27658.cljs$lang$type = true;
    floor16.pages.search.t27658.cljs$lang$ctorStr = "floor16.pages.search/t27658";
    floor16.pages.search.t27658.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.pages.search/t27658");
    };
    floor16.pages.search.t27658.prototype.om$core$IRender$ = true;
    floor16.pages.search.t27658.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div({"className":""}, "gen-view-select");
    };
    floor16.pages.search.t27658.prototype.cljs$core$IMeta$_meta$arity$1 = function(_27660) {
      var self__ = this;
      var _27660__$1 = this;
      return self__.meta27659;
    };
    floor16.pages.search.t27658.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_27660, meta27659__$1) {
      var self__ = this;
      var _27660__$1 = this;
      return new floor16.pages.search.t27658(self__.opts, self__.owner, self__.data, self__.gen_view_select, meta27659__$1);
    };
    floor16.pages.search.__GT_t27658 = function __GT_t27658(opts__$1, owner__$1, data__$1, gen_view_select__$1, meta27659) {
      return new floor16.pages.search.t27658(opts__$1, owner__$1, data__$1, gen_view_select__$1, meta27659);
    };
  }
  return new floor16.pages.search.t27658(opts, owner, data, gen_view_select, null);
};
floor16.pages.search.gen_ad_item_view = function gen_ad_item_view(item, owner, opts) {
  if (typeof floor16.pages.search.t27664 !== "undefined") {
  } else {
    floor16.pages.search.t27664 = function(opts, owner, item, gen_ad_item_view, meta27665) {
      this.opts = opts;
      this.owner = owner;
      this.item = item;
      this.gen_ad_item_view = gen_ad_item_view;
      this.meta27665 = meta27665;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.pages.search.t27664.cljs$lang$type = true;
    floor16.pages.search.t27664.cljs$lang$ctorStr = "floor16.pages.search/t27664";
    floor16.pages.search.t27664.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.pages.search/t27664");
    };
    floor16.pages.search.t27664.prototype.om$core$IRender$ = true;
    floor16.pages.search.t27664.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div({"className":""}, "gen-ad-item-view");
    };
    floor16.pages.search.t27664.prototype.cljs$core$IMeta$_meta$arity$1 = function(_27666) {
      var self__ = this;
      var _27666__$1 = this;
      return self__.meta27665;
    };
    floor16.pages.search.t27664.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_27666, meta27665__$1) {
      var self__ = this;
      var _27666__$1 = this;
      return new floor16.pages.search.t27664(self__.opts, self__.owner, self__.item, self__.gen_ad_item_view, meta27665__$1);
    };
    floor16.pages.search.__GT_t27664 = function __GT_t27664(opts__$1, owner__$1, item__$1, gen_ad_item_view__$1, meta27665) {
      return new floor16.pages.search.t27664(opts__$1, owner__$1, item__$1, gen_ad_item_view__$1, meta27665);
    };
  }
  return new floor16.pages.search.t27664(opts, owner, item, gen_ad_item_view, null);
};
floor16.pages.search.gen_empty_view = function gen_empty_view(p__27667, owner) {
  var map__27672 = p__27667;
  var map__27672__$1 = cljs.core.seq_QMARK_.call(null, map__27672) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27672) : map__27672;
  var empty_text = cljs.core.get.call(null, map__27672__$1, new cljs.core.Keyword(null, "empty-text", "empty-text", 4203552031));
  if (typeof floor16.pages.search.t27673 !== "undefined") {
  } else {
    floor16.pages.search.t27673 = function(empty_text, map__27672, owner, p__27667, gen_empty_view, meta27674) {
      this.empty_text = empty_text;
      this.map__27672 = map__27672;
      this.owner = owner;
      this.p__27667 = p__27667;
      this.gen_empty_view = gen_empty_view;
      this.meta27674 = meta27674;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.pages.search.t27673.cljs$lang$type = true;
    floor16.pages.search.t27673.cljs$lang$ctorStr = "floor16.pages.search/t27673";
    floor16.pages.search.t27673.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.pages.search/t27673");
    };
    floor16.pages.search.t27673.prototype.om$core$IRender$ = true;
    floor16.pages.search.t27673.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div({"className":"empty"}, self__.empty_text);
    };
    floor16.pages.search.t27673.prototype.cljs$core$IMeta$_meta$arity$1 = function(_27675) {
      var self__ = this;
      var _27675__$1 = this;
      return self__.meta27674;
    };
    floor16.pages.search.t27673.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_27675, meta27674__$1) {
      var self__ = this;
      var _27675__$1 = this;
      return new floor16.pages.search.t27673(self__.empty_text, self__.map__27672, self__.owner, self__.p__27667, self__.gen_empty_view, meta27674__$1);
    };
    floor16.pages.search.__GT_t27673 = function __GT_t27673(empty_text__$1, map__27672__$2, owner__$1, p__27667__$1, gen_empty_view__$1, meta27674) {
      return new floor16.pages.search.t27673(empty_text__$1, map__27672__$2, owner__$1, p__27667__$1, gen_empty_view__$1, meta27674);
    };
  }
  return new floor16.pages.search.t27673(empty_text, map__27672__$1, owner, p__27667, gen_empty_view, null);
};
floor16.pages.search.gen_data_header = function gen_data_header(p__27677, owner, p__27678) {
  var map__27684 = p__27677;
  var map__27684__$1 = cljs.core.seq_QMARK_.call(null, map__27684) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27684) : map__27684;
  var cursor = map__27684__$1;
  var filt = cljs.core.get.call(null, map__27684__$1, new cljs.core.Keyword(null, "filter", "filter", 4034379498));
  var data = cljs.core.get.call(null, map__27684__$1, new cljs.core.Keyword(null, "data", "data", 1016980252));
  var map__27685 = p__27678;
  var map__27685__$1 = cljs.core.seq_QMARK_.call(null, map__27685) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27685) : map__27685;
  var header_opts = cljs.core.get.call(null, map__27685__$1, new cljs.core.Keyword(null, "header-opts", "header-opts", 2151738066));
  if (typeof floor16.pages.search.t27686 !== "undefined") {
  } else {
    floor16.pages.search.t27686 = function(data, map__27684, gen_data_header, map__27685, filt, p__27677, header_opts, p__27678, owner, cursor, meta27687) {
      this.data = data;
      this.map__27684 = map__27684;
      this.gen_data_header = gen_data_header;
      this.map__27685 = map__27685;
      this.filt = filt;
      this.p__27677 = p__27677;
      this.header_opts = header_opts;
      this.p__27678 = p__27678;
      this.owner = owner;
      this.cursor = cursor;
      this.meta27687 = meta27687;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.pages.search.t27686.cljs$lang$type = true;
    floor16.pages.search.t27686.cljs$lang$ctorStr = "floor16.pages.search/t27686";
    floor16.pages.search.t27686.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.pages.search/t27686");
    };
    floor16.pages.search.t27686.prototype.om$core$IRender$ = true;
    floor16.pages.search.t27686.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div({"className":"data-header"}, function() {
        var temp__4092__auto__ = (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(self__.data);
        if (cljs.core.truth_(temp__4092__auto__)) {
          var total = temp__4092__auto__;
          return React.DOM.div({"className":"total"}, React.DOM.span({"className":"count-nums"}, total), React.DOM.span({"className":"count-words"}, floor16.lang.l.call(null, new cljs.core.Keyword(null, "ad", "ad", 1013907349), total)));
        } else {
          return null;
        }
      }(), cljs.core.apply.call(null, om.dom.div, {"className":"opts"}, cljs.core.map.call(null, function(p1__27676_SHARP_) {
        return om.core.build.call(null, (new cljs.core.Keyword(null, "view", "view", 1017523735)).cljs$core$IFn$_invoke$arity$1(cljs.core.val.call(null, p1__27676_SHARP_)), self__.filt, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), (new cljs.core.Keyword(null, "opts", "opts", 1017322386)).cljs$core$IFn$_invoke$arity$1(cljs.core.val.call(null, p1__27676_SHARP_))], null));
      }, self__.header_opts)));
    };
    floor16.pages.search.t27686.prototype.cljs$core$IMeta$_meta$arity$1 = function(_27688) {
      var self__ = this;
      var _27688__$1 = this;
      return self__.meta27687;
    };
    floor16.pages.search.t27686.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_27688, meta27687__$1) {
      var self__ = this;
      var _27688__$1 = this;
      return new floor16.pages.search.t27686(self__.data, self__.map__27684, self__.gen_data_header, self__.map__27685, self__.filt, self__.p__27677, self__.header_opts, self__.p__27678, self__.owner, self__.cursor, meta27687__$1);
    };
    floor16.pages.search.__GT_t27686 = function __GT_t27686(data__$1, map__27684__$2, gen_data_header__$1, map__27685__$2, filt__$1, p__27677__$1, header_opts__$1, p__27678__$1, owner__$1, cursor__$1, meta27687) {
      return new floor16.pages.search.t27686(data__$1, map__27684__$2, gen_data_header__$1, map__27685__$2, filt__$1, p__27677__$1, header_opts__$1, p__27678__$1, owner__$1, cursor__$1, meta27687);
    };
  }
  return new floor16.pages.search.t27686(data, map__27684__$1, gen_data_header, map__27685__$1, filt, p__27677, header_opts, p__27678, owner, cursor, null);
};
floor16.pages.search.gen_page_span = function gen_page_span(filt, owner, p__27689) {
  var map__27691 = p__27689;
  var map__27691__$1 = cljs.core.seq_QMARK_.call(null, map__27691) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27691) : map__27691;
  var className = cljs.core.get.call(null, map__27691__$1, new cljs.core.Keyword(null, "className", "className", 1004015509));
  var text = cljs.core.get.call(null, map__27691__$1, new cljs.core.Keyword(null, "text", "text", 1017460895));
  var current_QMARK_ = cljs.core.get.call(null, map__27691__$1, new cljs.core.Keyword(null, "current?", "current?", 1589306712));
  var index = cljs.core.get.call(null, map__27691__$1, new cljs.core.Keyword(null, "index", "index", 1114250308));
  return React.DOM.li({"onClick":function(_) {
    om.core.update_BANG_.call(null, filt, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.Keyword(null, "current-page", "current-page", 2436513237)], null), index);
    return floor16.pages.search.propagade_filter_change.call(null, owner, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.Keyword(null, "current-page", "current-page", 2436513237)], null), index);
  }, "className":[cljs.core.str("pager-item "), cljs.core.str(cljs.core.truth_(current_QMARK_) ? "current " : null), cljs.core.str(cljs.core.truth_(className) ? className : null)].join(""), "key":index}, function() {
    var or__3403__auto__ = text;
    if (cljs.core.truth_(or__3403__auto__)) {
      return or__3403__auto__;
    } else {
      return index + 1;
    }
  }());
};
floor16.pages.search.gen_data_pager = function gen_data_pager(p__27693, owner, opts) {
  var map__27698 = p__27693;
  var map__27698__$1 = cljs.core.seq_QMARK_.call(null, map__27698) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27698) : map__27698;
  var cursor = map__27698__$1;
  var filt = cljs.core.get.call(null, map__27698__$1, new cljs.core.Keyword(null, "filter", "filter", 4034379498));
  var data = cljs.core.get.call(null, map__27698__$1, new cljs.core.Keyword(null, "data", "data", 1016980252));
  if (typeof floor16.pages.search.t27699 !== "undefined") {
  } else {
    floor16.pages.search.t27699 = function(data, filt, cursor, map__27698, opts, owner, p__27693, gen_data_pager, meta27700) {
      this.data = data;
      this.filt = filt;
      this.cursor = cursor;
      this.map__27698 = map__27698;
      this.opts = opts;
      this.owner = owner;
      this.p__27693 = p__27693;
      this.gen_data_pager = gen_data_pager;
      this.meta27700 = meta27700;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.pages.search.t27699.cljs$lang$type = true;
    floor16.pages.search.t27699.cljs$lang$ctorStr = "floor16.pages.search/t27699";
    floor16.pages.search.t27699.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.pages.search/t27699");
    };
    floor16.pages.search.t27699.prototype.om$core$IRender$ = true;
    floor16.pages.search.t27699.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      var max_pages = 9;
      var middle = cljs.core.quot.call(null, max_pages, 2);
      var total = (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(self__.data);
      var offset = (new cljs.core.Keyword(null, "offset", "offset", 4289091589)).cljs$core$IFn$_invoke$arity$1(self__.data);
      var limit = (new cljs.core.Keyword(null, "limit", "limit", 1116880685)).cljs$core$IFn$_invoke$arity$1(self__.data);
      var pg_count = Math.ceil(total / limit);
      var pg_num = cljs.core.quot.call(null, offset, limit);
      var cur_pg = function() {
        var or__3403__auto__ = (new cljs.core.Keyword(null, "current-page", "current-page", 2436513237)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "opts", "opts", 1017322386)).cljs$core$IFn$_invoke$arity$1(self__.filt));
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return pg_num;
        }
      }();
      var can_right = pg_count - 1 - cur_pg;
      var to_show = function() {
        var x__3717__auto__ = max_pages;
        var y__3718__auto__ = pg_count;
        return x__3717__auto__ < y__3718__auto__ ? x__3717__auto__ : y__3718__auto__;
      }();
      var left = cur_pg - function() {
        var x__3717__auto__ = cur_pg;
        var y__3718__auto__ = function() {
          var x__3710__auto__ = middle;
          var y__3711__auto__ = to_show - 1 - can_right;
          return x__3710__auto__ > y__3711__auto__ ? x__3710__auto__ : y__3711__auto__;
        }();
        return x__3717__auto__ < y__3718__auto__ ? x__3717__auto__ : y__3718__auto__;
      }();
      var right = cur_pg + function() {
        var x__3717__auto__ = can_right;
        var y__3718__auto__ = function() {
          var x__3710__auto__ = middle;
          var y__3711__auto__ = to_show - 1 - cur_pg;
          return x__3710__auto__ > y__3711__auto__ ? x__3710__auto__ : y__3711__auto__;
        }();
        return x__3717__auto__ < y__3718__auto__ ? x__3717__auto__ : y__3718__auto__;
      }();
      return cljs.core.apply.call(null, om.dom.ul, {"className":"data-pager"}, cljs.core.concat.call(null, cljs.core._EQ_.call(null, cur_pg, 0) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [om.core.build.call(null, floor16.pages.search.gen_page_span, self__.filt, floor16.pages.search.add_filter_chan.call(null, self__.owner, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 
      3, [new cljs.core.Keyword(null, "index", "index", 1114250308), cur_pg - 1, new cljs.core.Keyword(null, "text", "text", 1017460895), floor16.lang.l.call(null, new cljs.core.Keyword(null, "data-pager-prev", "data-pager-prev", 2462390130)), new cljs.core.Keyword(null, "className", "className", 1004015509), "prev"], null)], null)))], null), cljs.core.map.call(null, function(p1__27692_SHARP_) {
        return om.core.build.call(null, floor16.pages.search.gen_page_span, self__.filt, floor16.pages.search.add_filter_chan.call(null, self__.owner, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "index", "index", 1114250308), p1__27692_SHARP_, new cljs.core.Keyword(null, "current?", "current?", 1589306712), cljs.core._EQ_.call(null, p1__27692_SHARP_, cur_pg)], null)], null)));
      }, cljs.core.range.call(null, left, right + 1)), cljs.core._EQ_.call(null, cur_pg, pg_count - 1) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [om.core.build.call(null, floor16.pages.search.gen_page_span, self__.filt, floor16.pages.search.add_filter_chan.call(null, self__.owner, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 3, 
      [new cljs.core.Keyword(null, "index", "index", 1114250308), cur_pg + 1, new cljs.core.Keyword(null, "text", "text", 1017460895), floor16.lang.l.call(null, new cljs.core.Keyword(null, "data-pager-next", "data-pager-next", 2462318642)), new cljs.core.Keyword(null, "className", "className", 1004015509), "next"], null)], null)))], null)));
    };
    floor16.pages.search.t27699.prototype.cljs$core$IMeta$_meta$arity$1 = function(_27701) {
      var self__ = this;
      var _27701__$1 = this;
      return self__.meta27700;
    };
    floor16.pages.search.t27699.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_27701, meta27700__$1) {
      var self__ = this;
      var _27701__$1 = this;
      return new floor16.pages.search.t27699(self__.data, self__.filt, self__.cursor, self__.map__27698, self__.opts, self__.owner, self__.p__27693, self__.gen_data_pager, meta27700__$1);
    };
    floor16.pages.search.__GT_t27699 = function __GT_t27699(data__$1, filt__$1, cursor__$1, map__27698__$2, opts__$1, owner__$1, p__27693__$1, gen_data_pager__$1, meta27700) {
      return new floor16.pages.search.t27699(data__$1, filt__$1, cursor__$1, map__27698__$2, opts__$1, owner__$1, p__27693__$1, gen_data_pager__$1, meta27700);
    };
  }
  return new floor16.pages.search.t27699(data, filt, cursor, map__27698__$1, opts, owner, p__27693, gen_data_pager, null);
};
floor16.pages.search.gen_load_progress = function gen_load_progress(data, owner, opts) {
  if (typeof floor16.pages.search.t27705 !== "undefined") {
  } else {
    floor16.pages.search.t27705 = function(opts, owner, data, gen_load_progress, meta27706) {
      this.opts = opts;
      this.owner = owner;
      this.data = data;
      this.gen_load_progress = gen_load_progress;
      this.meta27706 = meta27706;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.pages.search.t27705.cljs$lang$type = true;
    floor16.pages.search.t27705.cljs$lang$ctorStr = "floor16.pages.search/t27705";
    floor16.pages.search.t27705.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.pages.search/t27705");
    };
    floor16.pages.search.t27705.prototype.om$core$IRender$ = true;
    floor16.pages.search.t27705.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div({"className":"load-progress"}, "gen-load-progress");
    };
    floor16.pages.search.t27705.prototype.cljs$core$IMeta$_meta$arity$1 = function(_27707) {
      var self__ = this;
      var _27707__$1 = this;
      return self__.meta27706;
    };
    floor16.pages.search.t27705.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_27707, meta27706__$1) {
      var self__ = this;
      var _27707__$1 = this;
      return new floor16.pages.search.t27705(self__.opts, self__.owner, self__.data, self__.gen_load_progress, meta27706__$1);
    };
    floor16.pages.search.__GT_t27705 = function __GT_t27705(opts__$1, owner__$1, data__$1, gen_load_progress__$1, meta27706) {
      return new floor16.pages.search.t27705(opts__$1, owner__$1, data__$1, gen_load_progress__$1, meta27706);
    };
  }
  return new floor16.pages.search.t27705(opts, owner, data, gen_load_progress, null);
};
floor16.pages.search.gen_list_view = function gen_list_view(p__27709, owner, p__27710) {
  var map__27759 = p__27709;
  var map__27759__$1 = cljs.core.seq_QMARK_.call(null, map__27759) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27759) : map__27759;
  var cursor = map__27759__$1;
  var filt = cljs.core.get.call(null, map__27759__$1, new cljs.core.Keyword(null, "filter", "filter", 4034379498));
  var data = cljs.core.get.call(null, map__27759__$1, new cljs.core.Keyword(null, "data", "data", 1016980252));
  var map__27760 = p__27710;
  var map__27760__$1 = cljs.core.seq_QMARK_.call(null, map__27760) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27760) : map__27760;
  var res = cljs.core.get.call(null, map__27760__$1, new cljs.core.Keyword(null, "res", "res", 1014017042));
  var kw_id = cljs.core.get.call(null, map__27760__$1, new cljs.core.Keyword(null, "kw-id", "kw-id", 1116312718));
  var item_view = cljs.core.get.call(null, map__27760__$1, new cljs.core.Keyword(null, "item-view", "item-view", 3121596561));
  var empty_text = cljs.core.get.call(null, map__27760__$1, new cljs.core.Keyword(null, "empty-text", "empty-text", 4203552031));
  var empty_view = cljs.core.get.call(null, map__27760__$1, new cljs.core.Keyword(null, "empty-view", "empty-view", 4203614871));
  var header_opts = cljs.core.get.call(null, map__27760__$1, new cljs.core.Keyword(null, "header-opts", "header-opts", 2151738066));
  var data_header = cljs.core.get.call(null, map__27760__$1, new cljs.core.Keyword(null, "data-header", "data-header", 2224700802));
  var side_filter = cljs.core.get.call(null, map__27760__$1, new cljs.core.Keyword(null, "side-filter", "side-filter", 945679392));
  var top_filter = cljs.core.get.call(null, map__27760__$1, new cljs.core.Keyword(null, "top-filter", "top-filter", 2858888802));
  if (typeof floor16.pages.search.t27761 !== "undefined") {
  } else {
    floor16.pages.search.t27761 = function(p__27709, res, top_filter, empty_view, empty_text, data, side_filter, map__27759, data_header, map__27760, filt, p__27710, header_opts, gen_list_view, owner, cursor, kw_id, item_view, meta27762) {
      this.p__27709 = p__27709;
      this.res = res;
      this.top_filter = top_filter;
      this.empty_view = empty_view;
      this.empty_text = empty_text;
      this.data = data;
      this.side_filter = side_filter;
      this.map__27759 = map__27759;
      this.data_header = data_header;
      this.map__27760 = map__27760;
      this.filt = filt;
      this.p__27710 = p__27710;
      this.header_opts = header_opts;
      this.gen_list_view = gen_list_view;
      this.owner = owner;
      this.cursor = cursor;
      this.kw_id = kw_id;
      this.item_view = item_view;
      this.meta27762 = meta27762;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.pages.search.t27761.cljs$lang$type = true;
    floor16.pages.search.t27761.cljs$lang$ctorStr = "floor16.pages.search/t27761";
    floor16.pages.search.t27761.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.pages.search/t27761");
    };
    floor16.pages.search.t27761.prototype.om$core$IRenderState$ = true;
    floor16.pages.search.t27761.prototype.om$core$IRenderState$render_state$arity$2 = function(this$, state) {
      var self__ = this;
      var this$__$1 = this;
      var kw_id__$2 = function() {
        var or__3403__auto__ = self__.kw_id;
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return new cljs.core.Keyword(null, "id", "id", 1013907597);
        }
      }();
      var items = (new cljs.core.Keyword(null, "items", "items", 1114430258)).cljs$core$IFn$_invoke$arity$1(self__.data);
      var no_items_QMARK_ = cljs.core.empty_QMARK_.call(null, items);
      return React.DOM.div(null, cljs.core.truth_(self__.top_filter) ? om.core.build.call(null, self__.top_filter, self__.filt, floor16.pages.search.add_filter_chan.call(null, self__.owner)) : null, React.DOM.div({"className":"data-container"}, cljs.core.truth_((new cljs.core.Keyword(null, "loading", "loading", 1350554798)).cljs$core$IFn$_invoke$arity$1(self__.data)) ? om.core.build.call(null, floor16.pages.search.gen_load_progress, self__.data) : null, cljs.core.truth_(self__.data_header) ? om.core.build.call(null, 
      self__.data_header, self__.cursor, floor16.pages.search.add_filter_chan.call(null, self__.owner)) : om.core.build.call(null, floor16.pages.search.gen_data_header, self__.cursor, floor16.pages.search.add_filter_chan.call(null, self__.owner, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "header-opts", "header-opts", 2151738066), self__.header_opts], null)], null))), no_items_QMARK_ ? 
      cljs.core.truth_(self__.empty_view) ? om.core.build.call(null, self__.empty_view, om.core.graft.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "empty-text", "empty-text", 4203552031), self__.empty_text], null), self__.cursor)) : om.core.build.call(null, floor16.pages.search.gen_empty_view, om.core.graft.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "empty-text", "empty-text", 4203552031), self__.empty_text], null), self__.cursor)) : 
      cljs.core.apply.call(null, om.dom.ul, null, cljs.core.map.call(null, function(p1__27708_SHARP_) {
        return React.DOM.li({"key":kw_id__$2.call(null, p1__27708_SHARP_)}, om.core.build.call(null, self__.item_view, p1__27708_SHARP_));
      }, items)), no_items_QMARK_ ? null : om.core.build.call(null, floor16.pages.search.gen_data_pager, self__.cursor, floor16.pages.search.add_filter_chan.call(null, self__.owner))), cljs.core.truth_(self__.side_filter) ? om.core.build.call(null, self__.side_filter, self__.filt, floor16.pages.search.add_filter_chan.call(null, self__.owner)) : null);
    };
    floor16.pages.search.t27761.prototype.om$core$IWillMount$ = true;
    floor16.pages.search.t27761.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var filter_chan = cljs.core.async.chan.call(null);
      floor16.pages.search.set_filter_chan.call(null, self__.owner, filter_chan);
      var c__6152__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function() {
        var f__6153__auto__ = function() {
          var switch__6137__auto__ = function(state_27786) {
            var state_val_27787 = state_27786[1];
            if (state_val_27787 === 1) {
              var state_27786__$1 = state_27786;
              var statearr_27788_27807 = state_27786__$1;
              statearr_27788_27807[2] = null;
              statearr_27788_27807[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_27787 === 2) {
                var state_27786__$1 = state_27786;
                if (true) {
                  var statearr_27789_27808 = state_27786__$1;
                  statearr_27789_27808[1] = 4;
                } else {
                  var statearr_27790_27809 = state_27786__$1;
                  statearr_27790_27809[1] = 5;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_27787 === 3) {
                  var inst_27784 = state_27786[2];
                  var state_27786__$1 = state_27786;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_27786__$1, inst_27784);
                } else {
                  if (state_val_27787 === 4) {
                    var state_27786__$1 = state_27786;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_27786__$1, 7, filter_chan);
                  } else {
                    if (state_val_27787 === 5) {
                      var state_27786__$1 = state_27786;
                      var statearr_27791_27810 = state_27786__$1;
                      statearr_27791_27810[2] = null;
                      statearr_27791_27810[1] = 6;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_27787 === 6) {
                        var inst_27782 = state_27786[2];
                        var state_27786__$1 = state_27786;
                        var statearr_27792_27811 = state_27786__$1;
                        statearr_27792_27811[2] = inst_27782;
                        statearr_27792_27811[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_27787 === 7) {
                          var inst_27768 = state_27786[7];
                          var inst_27768__$1 = state_27786[2];
                          var inst_27769 = cljs.core.seq_QMARK_.call(null, inst_27768__$1);
                          var state_27786__$1 = function() {
                            var statearr_27793 = state_27786;
                            statearr_27793[7] = inst_27768__$1;
                            return statearr_27793;
                          }();
                          if (inst_27769) {
                            var statearr_27794_27812 = state_27786__$1;
                            statearr_27794_27812[1] = 8;
                          } else {
                            var statearr_27795_27813 = state_27786__$1;
                            statearr_27795_27813[1] = 9;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_27787 === 8) {
                            var inst_27768 = state_27786[7];
                            var inst_27771 = cljs.core.apply.call(null, cljs.core.hash_map, inst_27768);
                            var state_27786__$1 = state_27786;
                            var statearr_27796_27814 = state_27786__$1;
                            statearr_27796_27814[2] = inst_27771;
                            statearr_27796_27814[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_27787 === 9) {
                              var inst_27768 = state_27786[7];
                              var state_27786__$1 = state_27786;
                              var statearr_27797_27815 = state_27786__$1;
                              statearr_27797_27815[2] = inst_27768;
                              statearr_27797_27815[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_27787 === 10) {
                                var inst_27774 = state_27786[2];
                                var inst_27775 = cljs.core.get.call(null, inst_27774, new cljs.core.Keyword(null, "value", "value", 1125876963));
                                var inst_27776 = cljs.core.get.call(null, inst_27774, new cljs.core.Keyword(null, "d-key", "d-key", 1107703016));
                                var inst_27777 = floor16.pages.search.by_query.call(null, self__.res, self__.cursor, self__.filt);
                                var inst_27778 = cljs.core.println.call(null, inst_27776, inst_27775);
                                var state_27786__$1 = function() {
                                  var statearr_27798 = state_27786;
                                  statearr_27798[8] = inst_27778;
                                  statearr_27798[9] = inst_27777;
                                  return statearr_27798;
                                }();
                                var statearr_27799_27816 = state_27786__$1;
                                statearr_27799_27816[2] = null;
                                statearr_27799_27816[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
          return function(switch__6137__auto__) {
            return function() {
              var state_machine__6138__auto__ = null;
              var state_machine__6138__auto____0 = function() {
                var statearr_27803 = [null, null, null, null, null, null, null, null, null, null];
                statearr_27803[0] = state_machine__6138__auto__;
                statearr_27803[1] = 1;
                return statearr_27803;
              };
              var state_machine__6138__auto____1 = function(state_27786) {
                while (true) {
                  var ret_value__6139__auto__ = function() {
                    try {
                      while (true) {
                        var result__6140__auto__ = switch__6137__auto__.call(null, state_27786);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6140__auto__;
                        }
                        break;
                      }
                    } catch (e27804) {
                      if (e27804 instanceof Object) {
                        var ex__6141__auto__ = e27804;
                        var statearr_27805_27817 = state_27786;
                        statearr_27805_27817[5] = ex__6141__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_27786);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e27804;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__27818 = state_27786;
                    state_27786 = G__27818;
                    continue;
                  } else {
                    return ret_value__6139__auto__;
                  }
                  break;
                }
              };
              state_machine__6138__auto__ = function(state_27786) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6138__auto____0.call(this);
                  case 1:
                    return state_machine__6138__auto____1.call(this, state_27786);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
              state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
              return state_machine__6138__auto__;
            }();
          }(switch__6137__auto__);
        }();
        var state__6154__auto__ = function() {
          var statearr_27806 = f__6153__auto__.call(null);
          statearr_27806[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto__;
          return statearr_27806;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
      });
      return c__6152__auto__;
    };
    floor16.pages.search.t27761.prototype.cljs$core$IMeta$_meta$arity$1 = function(_27763) {
      var self__ = this;
      var _27763__$1 = this;
      return self__.meta27762;
    };
    floor16.pages.search.t27761.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_27763, meta27762__$1) {
      var self__ = this;
      var _27763__$1 = this;
      return new floor16.pages.search.t27761(self__.p__27709, self__.res, self__.top_filter, self__.empty_view, self__.empty_text, self__.data, self__.side_filter, self__.map__27759, self__.data_header, self__.map__27760, self__.filt, self__.p__27710, self__.header_opts, self__.gen_list_view, self__.owner, self__.cursor, self__.kw_id, self__.item_view, meta27762__$1);
    };
    floor16.pages.search.__GT_t27761 = function __GT_t27761(p__27709__$1, res__$1, top_filter__$1, empty_view__$1, empty_text__$1, data__$1, side_filter__$1, map__27759__$2, data_header__$1, map__27760__$2, filt__$1, p__27710__$1, header_opts__$1, gen_list_view__$1, owner__$1, cursor__$1, kw_id__$1, item_view__$1, meta27762) {
      return new floor16.pages.search.t27761(p__27709__$1, res__$1, top_filter__$1, empty_view__$1, empty_text__$1, data__$1, side_filter__$1, map__27759__$2, data_header__$1, map__27760__$2, filt__$1, p__27710__$1, header_opts__$1, gen_list_view__$1, owner__$1, cursor__$1, kw_id__$1, item_view__$1, meta27762);
    };
  }
  return new floor16.pages.search.t27761(p__27709, res, top_filter, empty_view, empty_text, data, side_filter, map__27759__$1, data_header, map__27760__$1, filt, p__27710, header_opts, gen_list_view, owner, cursor, kw_id, item_view, null);
};
floor16.pages.search.page = function page(cursor, owner, p__27819) {
  var map__27824 = p__27819;
  var map__27824__$1 = cljs.core.seq_QMARK_.call(null, map__27824) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27824) : map__27824;
  var opts = map__27824__$1;
  var page_path = cljs.core.get.call(null, map__27824__$1, new cljs.core.Keyword(null, "page-path", "page-path", 1851480085));
  var page_id = cljs.core.get.call(null, map__27824__$1, new cljs.core.Keyword(null, "page-id", "page-id", 4505274507));
  if (typeof floor16.pages.search.t27825 !== "undefined") {
  } else {
    floor16.pages.search.t27825 = function(page_id, page_path, opts, map__27824, p__27819, owner, cursor, page, meta27826) {
      this.page_id = page_id;
      this.page_path = page_path;
      this.opts = opts;
      this.map__27824 = map__27824;
      this.p__27819 = p__27819;
      this.owner = owner;
      this.cursor = cursor;
      this.page = page;
      this.meta27826 = meta27826;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.pages.search.t27825.cljs$lang$type = true;
    floor16.pages.search.t27825.cljs$lang$ctorStr = "floor16.pages.search/t27825";
    floor16.pages.search.t27825.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.pages.search/t27825");
    };
    floor16.pages.search.t27825.prototype.om$core$IRender$ = true;
    floor16.pages.search.t27825.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div({"id":"sec-home"}, React.DOM.div({"className":"design-layer", "id":"spot"}), React.DOM.div({"className":"design-layer", "id":"icons"}), React.DOM.div({"className":"design-layer", "id":"cells"}), React.DOM.div({"className":"container"}, floor16.auth.guest_QMARK_.call(null) ? React.DOM.div({"className":"advert"}, React.DOM.div({"className":"eight columns", "id":"slogan"}, React.DOM.h1(null, React.DOM.img({"alt":"\u041d\u0430\u0439\u0434\u0438 \u0436\u0438\u043b\u044c\u0435 \u0441\u0430\u043c! \u041f\u0440\u044f\u043c\u0430\u044f \u0430\u0440\u0435\u043d\u0434\u0430 \u043e\u0442 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u0438\u043a\u043e\u0432!", 
      "src":"/img/slogan.png"})), React.DOM.p(null, "\u0415\u0436\u0435\u0434\u043d\u0435\u0432\u043d\u044b\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0431\u0430\u0437\u044b \u0436\u0438\u043b\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432", React.DOM.br(null), "SMS \u0438 E-mail \u0440\u0430\u0441\u0441\u044b\u043b\u043a\u0430 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432", React.DOM.br(null), 
      "\u0413\u0438\u0431\u043a\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u0442\u0430\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438")), React.DOM.div({"className":"offset-by-one six columns", "id":"scheme"}, React.DOM.img({"alt":"\u0423\u0434\u043e\u0431\u043d\u044b\u0439 \u043f\u043e\u0438\u0441\u043a. \u0415\u0436\u0435\u0434\u043d\u0435\u0432\u043d\u044b\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f. \u0410\u0432\u0442\u043e\u043f\u043e\u0434\u0431\u043e\u0440 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432. SMS \u0438 E-mail \u0440\u0430\u0441\u0441\u044b\u043b\u043a\u0430. \u041e\u043d\u043b\u0430\u0439\u043d \u043a\u043e\u043d\u0441\u0443\u043b\u044c\u0442\u0430\u0446\u0438\u0438.", 
      "src":"/img/scheme.png"})), React.DOM.div({"className":"clear"})) : null, function() {
        var pg = cljs.core.get_in.call(null, self__.cursor, self__.page_path);
        if (cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "filter", "filter", 4034379498)).cljs$core$IFn$_invoke$arity$1(pg))) {
          return om.core.build.call(null, floor16.pages.search.simple_filter, (new cljs.core.Keyword(null, "filter", "filter", 4034379498)).cljs$core$IFn$_invoke$arity$1(pg));
        } else {
          return om.core.build.call(null, floor16.pages.search.gen_list_view, pg, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "top-filter", "top-filter", 2858888802), floor16.pages.search.simple_filter, new cljs.core.Keyword(null, "side-filter", "side-filter", 945679392), floor16.pages.search.extended_filter, new cljs.core.Keyword(null, "header-opts", "header-opts", 2151738066), 
          new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "sort", "sort", 1017440528), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "view", "view", 1017523735), floor16.pages.search.gen_sort_select], null), new cljs.core.Keyword(null, "views", "views", 1126108640), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "view", "view", 1017523735), floor16.pages.search.gen_view_select], null)], null), new cljs.core.Keyword(null, "empty-text", 
          "empty-text", 4203552031), floor16.lang.l.call(null, new cljs.core.Keyword(null, "empty-search", "empty-search", 3924434330)), new cljs.core.Keyword(null, "item-view", "item-view", 3121596561), floor16.pages.search.gen_ad_item_view, new cljs.core.Keyword(null, "res", "res", 1014017042), floor16.pages.search.res_city.call(null, cljs.core.conj.call(null, self__.page_path, new cljs.core.Keyword(null, "data", "data", 1016980252)))], null)], null));
        }
      }()));
    };
    floor16.pages.search.t27825.prototype.cljs$core$IMeta$_meta$arity$1 = function(_27827) {
      var self__ = this;
      var _27827__$1 = this;
      return self__.meta27826;
    };
    floor16.pages.search.t27825.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_27827, meta27826__$1) {
      var self__ = this;
      var _27827__$1 = this;
      return new floor16.pages.search.t27825(self__.page_id, self__.page_path, self__.opts, self__.map__27824, self__.p__27819, self__.owner, self__.cursor, self__.page, meta27826__$1);
    };
    floor16.pages.search.__GT_t27825 = function __GT_t27825(page_id__$1, page_path__$1, opts__$1, map__27824__$2, p__27819__$1, owner__$1, cursor__$1, page__$1, meta27826) {
      return new floor16.pages.search.t27825(page_id__$1, page_path__$1, opts__$1, map__27824__$2, p__27819__$1, owner__$1, cursor__$1, page__$1, meta27826);
    };
  }
  return new floor16.pages.search.t27825(page_id, page_path, opts, map__27824__$1, p__27819, owner, cursor, page, null);
};
goog.provide("floor16.app");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("floor16.ui.utils");
goog.require("floor16.ui.utils");
goog.require("floor16.navigation");
goog.require("floor16.navigation");
goog.require("goog.events");
goog.require("goog.events.EventType");
goog.require("floor16.pages.search");
goog.require("floor16.auth");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("floor16.auth");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("om.dom");
goog.require("cljs.core.async");
goog.require("goog.events");
cljs.core.enable_console_print_BANG_.call(null);
floor16.app.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "roles", "roles", 1122599471), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "leaser", "leaser", 4202131658), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 1124275658), "\u0410\u0440\u0435\u043d\u0434\u0430\u0442\u043e\u0440"], null), new cljs.core.Keyword(null, "householder", "householder", 2839130174), new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "title", "title", 1124275658), "\u0414\u043e\u043c\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u0435\u0446"], null)], null), new cljs.core.Keyword(null, "pages", "pages", 1120330550), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "search", "search", 4402534682), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "filter", "filter", 4034379498), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "data", "data", 
1016980252), cljs.core.PersistentArrayMap.EMPTY], null)], null)], null));
floor16.app.fake_page = function fake_page(value) {
  return function page(state, owner, opts) {
    if (typeof floor16.app.t26445 !== "undefined") {
    } else {
      floor16.app.t26445 = function(opts, owner, state, page, value, fake_page, meta26446) {
        this.opts = opts;
        this.owner = owner;
        this.state = state;
        this.page = page;
        this.value = value;
        this.fake_page = fake_page;
        this.meta26446 = meta26446;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      floor16.app.t26445.cljs$lang$type = true;
      floor16.app.t26445.cljs$lang$ctorStr = "floor16.app/t26445";
      floor16.app.t26445.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
        return cljs.core._write.call(null, writer__3971__auto__, "floor16.app/t26445");
      };
      floor16.app.t26445.prototype.om$core$IRender$ = true;
      floor16.app.t26445.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
        var self__ = this;
        var this__4922__auto____$1 = this;
        return React.DOM.div({}, self__.value);
      };
      floor16.app.t26445.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26447) {
        var self__ = this;
        var _26447__$1 = this;
        return self__.meta26446;
      };
      floor16.app.t26445.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26447, meta26446__$1) {
        var self__ = this;
        var _26447__$1 = this;
        return new floor16.app.t26445(self__.opts, self__.owner, self__.state, self__.page, self__.value, self__.fake_page, meta26446__$1);
      };
      floor16.app.__GT_t26445 = function __GT_t26445(opts__$1, owner__$1, state__$1, page__$1, value__$1, fake_page__$1, meta26446) {
        return new floor16.app.t26445(opts__$1, owner__$1, state__$1, page__$1, value__$1, fake_page__$1, meta26446);
      };
    }
    return new floor16.app.t26445(opts, owner, state, page, value, fake_page, null);
  };
};
floor16.app.nav_conf = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "app", "app", 1014001043), floor16.app.app_state, new cljs.core.Keyword(null, "pages", "pages", 1120330550), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "search", "search", 4402534682), new cljs.core.Keyword(null, "component", "component", 3908964463), 
floor16.pages.search.page, new cljs.core.Keyword(null, "link-title", "link-title", 769029687), "\u041f\u043e\u0438\u0441\u043a \u043a\u0432\u0430\u0440\u0442\u0438\u0440", new cljs.core.Keyword(null, "uri-aliases", "uri-aliases", 3989618447), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "!/search/:query"], null)], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "object", "object", 
4285503153), new cljs.core.Keyword(null, "component", "component", 3908964463), floor16.app.fake_page.call(null, "\u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043e\u0431\u044a\u0435\u043a\u0442\u0430"), new cljs.core.Keyword(null, "uri", "uri", 1014020318), "!/:city-code/:area-type-code/:area-code/:obj-type-code/:obj-id", new cljs.core.Keyword(null, "link-title", "link-title", 769029687), "\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "to-realtors", "to-realtors", 2092517150), new cljs.core.Keyword(null, "component", "component", 3908964463), floor16.app.fake_page.call(null, "\u0420\u0438\u044d\u043b\u0442\u043e\u0440\u0430\u043c"), new cljs.core.Keyword(null, "link-title", "link-title", 769029687), "\u0420\u0438\u044d\u043b\u0442\u043e\u0440\u0430\u043c"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", 
1013907597), new cljs.core.Keyword(null, "to-hh", "to-hh", 1124386052), new cljs.core.Keyword(null, "component", "component", 3908964463), floor16.app.fake_page.call(null, "\u0414\u043e\u043c\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430\u043c"), new cljs.core.Keyword(null, "link-title", "link-title", 769029687), "\u0414\u043e\u043c\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430\u043c"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", 
"id", 1013907597), new cljs.core.Keyword(null, "profile", "profile", 704478491), new cljs.core.Keyword(null, "component", "component", 3908964463), floor16.app.fake_page.call(null, "\u041f\u0440\u043e\u0444\u0438\u043b\u044c"), new cljs.core.Keyword(null, "link-title", "link-title", 769029687), "\u041f\u0440\u043e\u0444\u0438\u043b\u044c"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "own-objects", "own-objects", 
4006372671), new cljs.core.Keyword(null, "component", "component", 3908964463), floor16.app.fake_page.call(null, "\u041c\u043e\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u044b"), new cljs.core.Keyword(null, "link-title", "link-title", 769029687), "\u041c\u043e\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u044b"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "realtor-objects", "realtor-objects", 1154952626), new cljs.core.Keyword(null, 
"component", "component", 3908964463), floor16.app.fake_page.call(null, "\u041c\u043e\u044f \u0431\u0430\u0437\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432"), new cljs.core.Keyword(null, "link-title", "link-title", 769029687), "\u041c\u043e\u044f \u0431\u0430\u0437\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432"], null)], null), new cljs.core.Keyword(null, "main-page", "main-page", 716578197), new cljs.core.Keyword(null, "search", "search", 4402534682), new cljs.core.Keyword(null, 
"main-menu", "main-menu", 716492901), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "pages", "pages", 1120330550), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "search", "search", 4402534682), new cljs.core.Keyword(null, "to-realtors", "to-realtors", 2092517150), new cljs.core.Keyword(null, "to-hh", "to-hh", 1124386052)], null)], null), new cljs.core.Keyword(null, "user-menu", "user-menu", 1307043219), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "pages", "pages", 1120330550), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "profile", "profile", 704478491), new cljs.core.Keyword(null, "realtor-objects", "realtor-objects", 1154952626), new cljs.core.Keyword(null, "own-objects", "own-objects", 4006372671)], null), new cljs.core.Keyword(null, "draw-icons?", "draw-icons?", 2875165824), true], null), new cljs.core.Keyword(null, "user-menu-top", "user-menu-top", 
637936411), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "pages", "pages", 1120330550), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "profile", "profile", 704478491), new cljs.core.Keyword(null, "own-objects", "own-objects", 4006372671)], null)], null)], null);
floor16.app.try_login = function try_login(cursor, owner) {
  om.core.set_state_BANG_.call(null, owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error", "error", 1110689146)], null), false);
  return floor16.auth.do_login.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "username", "username", 748190792), om.core.get_node.call(null, owner, "username").value, new cljs.core.Keyword(null, "password", "password", 2230889997), om.core.get_node.call(null, owner, "pwd").value], null), function() {
    return om.core.set_state_BANG_.call(null, owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "active", "active", 3885920888)], null), false);
  }, function() {
    return om.core.set_state_BANG_.call(null, owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error", "error", 1110689146)], null), true);
  });
};
floor16.app.login_keydown = function login_keydown(cursor, owner, e, node_ref) {
  if (cljs.core._EQ_.call(null, 13, e.keyCode)) {
    if (cljs.core._EQ_.call(null, node_ref, "username")) {
      return om.core.get_node.call(null, owner, "pwd").focus();
    } else {
      return floor16.app.try_login.call(null, cursor, owner);
    }
  } else {
    return null;
  }
};
floor16.app.logout_item = function logout_item(app, owner) {
  if (typeof floor16.app.t26451 !== "undefined") {
  } else {
    floor16.app.t26451 = function(owner, app, logout_item, meta26452) {
      this.owner = owner;
      this.app = app;
      this.logout_item = logout_item;
      this.meta26452 = meta26452;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.app.t26451.cljs$lang$type = true;
    floor16.app.t26451.cljs$lang$ctorStr = "floor16.app/t26451";
    floor16.app.t26451.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.app/t26451");
    };
    floor16.app.t26451.prototype.om$core$IRender$ = true;
    floor16.app.t26451.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.li({"className":"exit-link", "key":"exit-link"}, React.DOM.span({"onClick":function() {
        return floor16.auth.do_logout.call(null);
      }}, "\u0412\u044b\u0445\u043e\u0434"));
    };
    floor16.app.t26451.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26453) {
      var self__ = this;
      var _26453__$1 = this;
      return self__.meta26452;
    };
    floor16.app.t26451.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26453, meta26452__$1) {
      var self__ = this;
      var _26453__$1 = this;
      return new floor16.app.t26451(self__.owner, self__.app, self__.logout_item, meta26452__$1);
    };
    floor16.app.__GT_t26451 = function __GT_t26451(owner__$1, app__$1, logout_item__$1, meta26452) {
      return new floor16.app.t26451(owner__$1, app__$1, logout_item__$1, meta26452);
    };
  }
  return new floor16.app.t26451(owner, app, logout_item, null);
};
floor16.app.menu = function menu(app, owner, p__26455) {
  var map__26463 = p__26455;
  var map__26463__$1 = cljs.core.seq_QMARK_.call(null, map__26463) ? cljs.core.apply.call(null, cljs.core.hash_map, map__26463) : map__26463;
  var add_items = cljs.core.get.call(null, map__26463__$1, new cljs.core.Keyword(null, "add-items", "add-items", 4211714822));
  var menu_id = cljs.core.get.call(null, map__26463__$1, new cljs.core.Keyword(null, "menu-id", "menu-id", 1964221371));
  if (typeof floor16.app.t26464 !== "undefined") {
  } else {
    floor16.app.t26464 = function(menu_id, add_items, map__26463, p__26455, owner, app, menu, meta26465) {
      this.menu_id = menu_id;
      this.add_items = add_items;
      this.map__26463 = map__26463;
      this.p__26455 = p__26455;
      this.owner = owner;
      this.app = app;
      this.menu = menu;
      this.meta26465 = meta26465;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.app.t26464.cljs$lang$type = true;
    floor16.app.t26464.cljs$lang$ctorStr = "floor16.app/t26464";
    floor16.app.t26464.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.app/t26464");
    };
    floor16.app.t26464.prototype.om$core$IRender$ = true;
    floor16.app.t26464.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      var map__26467 = floor16.navigation.get_menu.call(null, self__.menu_id);
      var map__26467__$1 = cljs.core.seq_QMARK_.call(null, map__26467) ? cljs.core.apply.call(null, cljs.core.hash_map, map__26467) : map__26467;
      var draw_icons_QMARK_ = cljs.core.get.call(null, map__26467__$1, new cljs.core.Keyword(null, "draw-icons?", "draw-icons?", 2875165824));
      var pages = cljs.core.get.call(null, map__26467__$1, new cljs.core.Keyword(null, "pages", "pages", 1120330550));
      return cljs.core.apply.call(null, om.dom.ul, {"className":cljs.core.truth_(draw_icons_QMARK_) ? "with-icon" : null, "id":cljs.core.name.call(null, self__.menu_id)}, cljs.core.concat.call(null, cljs.core.map.call(null, function(p__26468) {
        var map__26469 = p__26468;
        var map__26469__$1 = cljs.core.seq_QMARK_.call(null, map__26469) ? cljs.core.apply.call(null, cljs.core.hash_map, map__26469) : map__26469;
        var link_title = cljs.core.get.call(null, map__26469__$1, new cljs.core.Keyword(null, "link-title", "link-title", 769029687));
        var uri = cljs.core.get.call(null, map__26469__$1, new cljs.core.Keyword(null, "uri", "uri", 1014020318));
        var id = cljs.core.get.call(null, map__26469__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
        return React.DOM.li({"className":floor16.navigation.current_QMARK_.call(null, id) ? "current" : "", "key":id}, React.DOM.a({"className":[cljs.core.str("menu-link "), cljs.core.str(cljs.core.name.call(null, id))].join(""), "title":link_title, "href":uri}, link_title));
      }, pages), cljs.core.map.call(null, function(p1__26454_SHARP_) {
        return om.core.build.call(null, p1__26454_SHARP_, self__.app);
      }, self__.add_items)));
    };
    floor16.app.t26464.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26466) {
      var self__ = this;
      var _26466__$1 = this;
      return self__.meta26465;
    };
    floor16.app.t26464.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26466, meta26465__$1) {
      var self__ = this;
      var _26466__$1 = this;
      return new floor16.app.t26464(self__.menu_id, self__.add_items, self__.map__26463, self__.p__26455, self__.owner, self__.app, self__.menu, meta26465__$1);
    };
    floor16.app.__GT_t26464 = function __GT_t26464(menu_id__$1, add_items__$1, map__26463__$2, p__26455__$1, owner__$1, app__$1, menu__$1, meta26465) {
      return new floor16.app.t26464(menu_id__$1, add_items__$1, map__26463__$2, p__26455__$1, owner__$1, app__$1, menu__$1, meta26465);
    };
  }
  return new floor16.app.t26464(menu_id, add_items, map__26463__$1, p__26455, owner, app, menu, null);
};
floor16.app.user_login = function user_login(app, owner) {
  var set_active_BANG_ = function(value) {
    return om.core.set_state_BANG_.call(null, owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "active", "active", 3885920888)], null), value);
  };
  var set_error_BANG_ = function(set_active_BANG_) {
    return function(value) {
      return om.core.set_state_BANG_.call(null, owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error", "error", 1110689146)], null), value);
    };
  }(set_active_BANG_);
  if (typeof floor16.app.t26477 !== "undefined") {
  } else {
    floor16.app.t26477 = function(set_error_BANG_, set_active_BANG_, owner, app, user_login, meta26478) {
      this.set_error_BANG_ = set_error_BANG_;
      this.set_active_BANG_ = set_active_BANG_;
      this.owner = owner;
      this.app = app;
      this.user_login = user_login;
      this.meta26478 = meta26478;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.app.t26477.cljs$lang$type = true;
    floor16.app.t26477.cljs$lang$ctorStr = "floor16.app/t26477";
    floor16.app.t26477.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.app/t26477");
    };
    floor16.app.t26477.prototype.om$core$IRenderState$ = true;
    floor16.app.t26477.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__26480) {
      var self__ = this;
      var map__26481 = p__26480;
      var map__26481__$1 = cljs.core.seq_QMARK_.call(null, map__26481) ? cljs.core.apply.call(null, cljs.core.hash_map, map__26481) : map__26481;
      var active_QMARK_ = cljs.core.get.call(null, map__26481__$1, new cljs.core.Keyword(null, "active", "active", 3885920888));
      var error_QMARK_ = cljs.core.get.call(null, map__26481__$1, new cljs.core.Keyword(null, "error", "error", 1110689146));
      var ___$1 = this;
      return React.DOM.div({"className":cljs.core.truth_(active_QMARK_) ? "active" : "", "id":"user-login"}, floor16.auth.guest_QMARK_.call(null) ? React.DOM.span({"onClick":function(e) {
        return self__.set_active_BANG_.call(null, cljs.core.not.call(null, active_QMARK_));
      }, "title":"\u0412\u0445\u043e\u0434", "id":"login-link"}, [cljs.core.str("\u0412\u0445\u043e\u0434"), cljs.core.str(cljs.core.truth_(active_QMARK_) ? ":" : null)].join("")) : null, cljs.core.truth_(function() {
        var and__3391__auto__ = floor16.auth.guest_QMARK_.call(null);
        if (and__3391__auto__) {
          return active_QMARK_;
        } else {
          return and__3391__auto__;
        }
      }()) ? React.DOM.div({"className":"five columns login"}, om.dom.input.call(null, {"onKeyDown":function(p1__26470_SHARP_) {
        return floor16.app.login_keydown.call(null, self__.app, self__.owner, p1__26470_SHARP_, "username");
      }, "placeholder":"\u0422\u0435\u043b\u0435\u0444\u043e\u043d...", "type":"text", "ref":"username"}), om.dom.input.call(null, {"onKeyDown":function(p1__26471_SHARP_) {
        return floor16.app.login_keydown.call(null, self__.app, self__.owner, p1__26471_SHARP_, "pwd");
      }, "placeholder":"\u041f\u0430\u0440\u043e\u043b\u044c...", "type":"password", "ref":"pwd"}), React.DOM.span({"onClick":function() {
        return floor16.app.try_login.call(null, self__.app, self__.owner);
      }, "className":"enter-link"}, "\u0412\u043e\u0439\u0442\u0438"), cljs.core.truth_(error_QMARK_) ? React.DOM.span({"className":"error"}, "\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0435 \u0443\u0447\u0435\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435.") : null, cljs.core.truth_(error_QMARK_) ? React.DOM.span({"className":"error link"}, "\u0417\u0430\u0431\u044b\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c?") : null) : null);
    };
    floor16.app.t26477.prototype.om$core$IWillUnmount$ = true;
    floor16.app.t26477.prototype.om$core$IWillUnmount$will_unmount$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      var temp__4090__auto__ = om.core.get_state.call(null, self__.owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "mouse-handler", "mouse-handler", 3567449492)], null));
      if (cljs.core.truth_(temp__4090__auto__)) {
        var mouse_handler = temp__4090__auto__;
        return goog.events.unlisten(document.body, goog.events.EventType.MOUSEDOWN, mouse_handler);
      } else {
        return null;
      }
    };
    floor16.app.t26477.prototype.om$core$IDidUpdate$ = true;
    floor16.app.t26477.prototype.om$core$IDidUpdate$did_update$arity$3 = function(this$, prev_props, prev_state) {
      var self__ = this;
      var this$__$1 = this;
      var temp__4092__auto__ = om.core.get_node.call(null, this$__$1, "username");
      if (cljs.core.truth_(temp__4092__auto__)) {
        var un_input = temp__4092__auto__;
        return un_input.focus();
      } else {
        return null;
      }
    };
    floor16.app.t26477.prototype.om$core$IDidMount$ = true;
    floor16.app.t26477.prototype.om$core$IDidMount$did_mount$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      var mouse_handler = function(e) {
        if (cljs.core.truth_(om.core.get_state.call(null, self__.owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "active", "active", 3885920888)], null)))) {
          if (floor16.ui.utils.in_QMARK_.call(null, e, om.core.get_node.call(null, self__.owner))) {
            return null;
          } else {
            self__.set_active_BANG_.call(null, false);
            return self__.set_error_BANG_.call(null, false);
          }
        } else {
          return null;
        }
      };
      goog.events.listen(document.body, goog.events.EventType.MOUSEDOWN, mouse_handler);
      return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "mouse-handler", "mouse-handler", 3567449492)], null), mouse_handler);
    };
    floor16.app.t26477.prototype.om$core$IInitState$ = true;
    floor16.app.t26477.prototype.om$core$IInitState$init_state$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "active", "active", 3885920888), false, new cljs.core.Keyword(null, "error", "error", 1110689146), false], null);
    };
    floor16.app.t26477.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26479) {
      var self__ = this;
      var _26479__$1 = this;
      return self__.meta26478;
    };
    floor16.app.t26477.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26479, meta26478__$1) {
      var self__ = this;
      var _26479__$1 = this;
      return new floor16.app.t26477(self__.set_error_BANG_, self__.set_active_BANG_, self__.owner, self__.app, self__.user_login, meta26478__$1);
    };
    floor16.app.__GT_t26477 = function __GT_t26477(set_error_BANG___$1, set_active_BANG___$1, owner__$1, app__$1, user_login__$1, meta26478) {
      return new floor16.app.t26477(set_error_BANG___$1, set_active_BANG___$1, owner__$1, app__$1, user_login__$1, meta26478);
    };
  }
  return new floor16.app.t26477(set_error_BANG_, set_active_BANG_, owner, app, user_login, null);
};
floor16.app.user_panel = function user_panel(app, owner) {
  if (typeof floor16.app.t26489 !== "undefined") {
  } else {
    floor16.app.t26489 = function(owner, app, user_panel, meta26490) {
      this.owner = owner;
      this.app = app;
      this.user_panel = user_panel;
      this.meta26490 = meta26490;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.app.t26489.cljs$lang$type = true;
    floor16.app.t26489.cljs$lang$ctorStr = "floor16.app/t26489";
    floor16.app.t26489.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.app/t26489");
    };
    floor16.app.t26489.prototype.om$core$IRenderState$ = true;
    floor16.app.t26489.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__26492) {
      var self__ = this;
      var map__26493 = p__26492;
      var map__26493__$1 = cljs.core.seq_QMARK_.call(null, map__26493) ? cljs.core.apply.call(null, cljs.core.hash_map, map__26493) : map__26493;
      var active_QMARK_ = cljs.core.get.call(null, map__26493__$1, new cljs.core.Keyword(null, "active", "active", 3885920888));
      var ___$1 = this;
      var map__26494 = floor16.auth.get_user.call(null);
      var map__26494__$1 = cljs.core.seq_QMARK_.call(null, map__26494) ? cljs.core.apply.call(null, cljs.core.hash_map, map__26494) : map__26494;
      var roles = cljs.core.get.call(null, map__26494__$1, new cljs.core.Keyword(null, "roles", "roles", 1122599471));
      var lname = cljs.core.get.call(null, map__26494__$1, new cljs.core.Keyword(null, "lname", "lname", 1117018217));
      var fname = cljs.core.get.call(null, map__26494__$1, new cljs.core.Keyword(null, "fname", "fname", 1111477091));
      return React.DOM.nav({"onClick":function() {
        if (cljs.core.not.call(null, active_QMARK_)) {
          return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "active", "active", 3885920888)], null), true);
        } else {
          return null;
        }
      }, "className":cljs.core.truth_(active_QMARK_) ? "five columns active" : "closed", "id":"user-panel"}, cljs.core.truth_(active_QMARK_) ? cljs.core.into_array.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.span({"onClick":function() {
        return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "active", "active", 3885920888)], null), false);
      }, "className":"close"}), React.DOM.img({"src":"/img/user.png", "id":"user-pic"}), React.DOM.div({"id":"user-info"}, React.DOM.span({"id":"user-name"}, [cljs.core.str(fname), cljs.core.str(" "), cljs.core.str(lname)].join("")), React.DOM.span({"id":"user-roles"}, clojure.string.join.call(null, ", ", cljs.core.map.call(null, function(p1__26482_SHARP_) {
        return cljs.core.get_in.call(null, self__.app, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "roles", "roles", 1122599471), p1__26482_SHARP_, new cljs.core.Keyword(null, "title", "title", 1124275658)], null));
      }, roles)))), om.core.build.call(null, floor16.app.menu, self__.app, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "menu-id", "menu-id", 1964221371), new cljs.core.Keyword(null, "user-menu", "user-menu", 1307043219), new cljs.core.Keyword(null, "add-items", "add-items", 4211714822), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [floor16.app.logout_item], 
      null)], null)], null))], null)) : "\u2630");
    };
    floor16.app.t26489.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26491) {
      var self__ = this;
      var _26491__$1 = this;
      return self__.meta26490;
    };
    floor16.app.t26489.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26491, meta26490__$1) {
      var self__ = this;
      var _26491__$1 = this;
      return new floor16.app.t26489(self__.owner, self__.app, self__.user_panel, meta26490__$1);
    };
    floor16.app.__GT_t26489 = function __GT_t26489(owner__$1, app__$1, user_panel__$1, meta26490) {
      return new floor16.app.t26489(owner__$1, app__$1, user_panel__$1, meta26490);
    };
  }
  return new floor16.app.t26489(owner, app, user_panel, null);
};
floor16.app.app_header = function app_header(app, owner) {
  if (typeof floor16.app.t26498 !== "undefined") {
  } else {
    floor16.app.t26498 = function(owner, app, app_header, meta26499) {
      this.owner = owner;
      this.app = app;
      this.app_header = app_header;
      this.meta26499 = meta26499;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.app.t26498.cljs$lang$type = true;
    floor16.app.t26498.cljs$lang$ctorStr = "floor16.app/t26498";
    floor16.app.t26498.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.app/t26498");
    };
    floor16.app.t26498.prototype.om$core$IRender$ = true;
    floor16.app.t26498.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.nav({"className":"container", "id":"menu"}, om.core.build.call(null, floor16.app.menu, self__.app, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "menu-id", "menu-id", 1964221371), new cljs.core.Keyword(null, "main-menu", "main-menu", 716492901)], null)], null)), floor16.auth.guest_QMARK_.call(null) ? om.core.build.call(null, floor16.app.user_login, self__.app) : 
      om.core.build.call(null, floor16.app.menu, self__.app, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "menu-id", "menu-id", 1964221371), new cljs.core.Keyword(null, "user-menu-top", "user-menu-top", 637936411), new cljs.core.Keyword(null, "add-items", "add-items", 4211714822), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [floor16.app.logout_item], 
      null)], null)], null)), React.DOM.a({"title":"\u041f\u0435\u0440\u0435\u0439\u0442\u0438 \u043a \u043d\u0430\u0447\u0430\u043b\u0443 \u0441\u0430\u0439\u0442\u0430", "href":"#", "id":"logo"}, React.DOM.img({"alt":"\u041f\u0440\u043e\u0435\u043a\u0442 \x26quot\u042d\u0422\u0410\u0416 16\x26quot", "src":"/img/logo.png"})), !floor16.auth.guest_QMARK_.call(null) ? om.core.build.call(null, floor16.app.user_panel, self__.app, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
      "init-state", "init-state", 4479067398), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "active", "active", 3885920888), cljs.core.not.call(null, floor16.auth.autologin_QMARK_.call(null))], null)], null)) : null);
    };
    floor16.app.t26498.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26500) {
      var self__ = this;
      var _26500__$1 = this;
      return self__.meta26499;
    };
    floor16.app.t26498.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26500, meta26499__$1) {
      var self__ = this;
      var _26500__$1 = this;
      return new floor16.app.t26498(self__.owner, self__.app, self__.app_header, meta26499__$1);
    };
    floor16.app.__GT_t26498 = function __GT_t26498(owner__$1, app__$1, app_header__$1, meta26499) {
      return new floor16.app.t26498(owner__$1, app__$1, app_header__$1, meta26499);
    };
  }
  return new floor16.app.t26498(owner, app, app_header, null);
};
floor16.app.app_main = function app_main(app, owner) {
  if (typeof floor16.app.t26505 !== "undefined") {
  } else {
    floor16.app.t26505 = function(owner, app, app_main, meta26506) {
      this.owner = owner;
      this.app = app;
      this.app_main = app_main;
      this.meta26506 = meta26506;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.app.t26505.cljs$lang$type = true;
    floor16.app.t26505.cljs$lang$ctorStr = "floor16.app/t26505";
    floor16.app.t26505.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.app/t26505");
    };
    floor16.app.t26505.prototype.om$core$IRender$ = true;
    floor16.app.t26505.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      var map__26508 = floor16.navigation.curr_page.call(null);
      var map__26508__$1 = cljs.core.seq_QMARK_.call(null, map__26508) ? cljs.core.apply.call(null, cljs.core.hash_map, map__26508) : map__26508;
      var component = cljs.core.get.call(null, map__26508__$1, new cljs.core.Keyword(null, "component", "component", 3908964463));
      var id = cljs.core.get.call(null, map__26508__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
      return om.core.build.call(null, component, self__.app, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "page-id", "page-id", 4505274507), id, new cljs.core.Keyword(null, "page-path", "page-path", 1851480085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pages", "pages", 1120330550), id], null)], null)], 
      null));
    };
    floor16.app.t26505.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26507) {
      var self__ = this;
      var _26507__$1 = this;
      return self__.meta26506;
    };
    floor16.app.t26505.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26507, meta26506__$1) {
      var self__ = this;
      var _26507__$1 = this;
      return new floor16.app.t26505(self__.owner, self__.app, self__.app_main, meta26506__$1);
    };
    floor16.app.__GT_t26505 = function __GT_t26505(owner__$1, app__$1, app_main__$1, meta26506) {
      return new floor16.app.t26505(owner__$1, app__$1, app_main__$1, meta26506);
    };
  }
  return new floor16.app.t26505(owner, app, app_main, null);
};
floor16.app.main = function main() {
  om.core.root.call(null, floor16.app.app_header, floor16.app.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), document.getElementById("header")], null));
  return om.core.root.call(null, floor16.app.app_main, floor16.app.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), document.getElementById("content")], null));
};
goog.exportSymbol("floor16.app.main", floor16.app.main);
floor16.app.as = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
floor16.app.get_server_state = function get_server_state() {
  var temp__4092__auto__ = window.serverState;
  if (cljs.core.truth_(temp__4092__auto__)) {
    var data = temp__4092__auto__;
    return cljs.reader.read_string.call(null, data);
  } else {
    return null;
  }
};
floor16.app.test_app = function test_app(app, owner) {
  if (typeof floor16.app.t26512 !== "undefined") {
  } else {
    floor16.app.t26512 = function(owner, app, test_app, meta26513) {
      this.owner = owner;
      this.app = app;
      this.test_app = test_app;
      this.meta26513 = meta26513;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.app.t26512.cljs$lang$type = true;
    floor16.app.t26512.cljs$lang$ctorStr = "floor16.app/t26512";
    floor16.app.t26512.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.app/t26512");
    };
    floor16.app.t26512.prototype.om$core$IRender$ = true;
    floor16.app.t26512.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div(null, React.DOM.span({"onClick":function() {
        return om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "text", "text", 1017460895), "Omg! I Am Clicked!");
      }}, (new cljs.core.Keyword(null, "text", "text", 1017460895)).cljs$core$IFn$_invoke$arity$1(self__.app)), React.DOM.span({"onClick":function() {
        return om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "text", "text", 1017460895), "Omg! I Am Clicked Tooo!");
      }}, "I Am Just Static Text :0)"));
    };
    floor16.app.t26512.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26514) {
      var self__ = this;
      var _26514__$1 = this;
      return self__.meta26513;
    };
    floor16.app.t26512.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26514, meta26513__$1) {
      var self__ = this;
      var _26514__$1 = this;
      return new floor16.app.t26512(self__.owner, self__.app, self__.test_app, meta26513__$1);
    };
    floor16.app.__GT_t26512 = function __GT_t26512(owner__$1, app__$1, test_app__$1, meta26513) {
      return new floor16.app.t26512(owner__$1, app__$1, test_app__$1, meta26513);
    };
  }
  return new floor16.app.t26512(owner, app, test_app, null);
};
floor16.app.main1 = function main1() {
  cljs.core.reset_BANG_.call(null, floor16.app.as, floor16.app.get_server_state.call(null));
  floor16.navigation.nav_sys.call(null, floor16.app.nav_conf);
  floor16.auth.auth_sys.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "app", "app", 1014001043), floor16.app.app_state, new cljs.core.Keyword(null, "api-url", "api-url", 4507306670), "oauth/token"], null));
  cljs.core.println.call(null, om.core.to_cursor.call(null, floor16.app.as));
  return om.core.root.call(null, floor16.app.test_app, floor16.app.as, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), document.getElementById("content")], null));
};
goog.exportSymbol("floor16.app.main1", floor16.app.main1);
floor16.app.render = function render(data) {
  var data__$1 = cljs.reader.read_string.call(null, data);
  return React.renderComponentToString(om.core.build.call(null, floor16.app.test_app, om.core.to_cursor.call(null, data__$1)));
};
goog.exportSymbol("floor16.app.render", floor16.app.render);
goog.provide("floor16.resources");
goog.require("cljs.core");
floor16.resources.IResource = function() {
  var obj9579 = {};
  return obj9579;
}();
floor16.resources.all = function all(this$, state) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$resources$IResource$all$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$resources$IResource$all$arity$2(this$, state);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.resources.all[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.resources.all["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IResource.all", this$);
        }
      }
    }().call(null, this$, state);
  }
};
floor16.resources.by_key = function by_key(this$, state, k) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$resources$IResource$by_key$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$resources$IResource$by_key$arity$3(this$, state, k);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.resources.by_key[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.resources.by_key["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IResource.by-key", this$);
        }
      }
    }().call(null, this$, state, k);
  }
};
floor16.resources.name_by_key = function name_by_key(this$, state, k) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$resources$IResource$name_by_key$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$resources$IResource$name_by_key$arity$3(this$, state, k);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.resources.name_by_key[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.resources.name_by_key["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IResource.name-by-key", this$);
        }
      }
    }().call(null, this$, state, k);
  }
};
floor16.resources.d_key = function d_key(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$resources$IResource$d_key$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$resources$IResource$d_key$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.resources.d_key[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.resources.d_key["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IResource.d-key", this$);
        }
      }
    }().call(null, this$);
  }
};
floor16.resources.d_name = function d_name(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$resources$IResource$d_name$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$resources$IResource$d_name$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.resources.d_name[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.resources.d_name["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IResource.d-name", this$);
        }
      }
    }().call(null, this$);
  }
};
floor16.resources.by_query = function by_query(this$, state, query) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$resources$IResource$by_query$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$resources$IResource$by_query$arity$3(this$, state, query);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.resources.by_query[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.resources.by_query["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IResource.by-query", this$);
        }
      }
    }().call(null, this$, state, query);
  }
};
goog.provide("floor16.appsearch");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("cljs.core.async");
floor16.appsearch.test_app = function test_app(app, owner) {
  if (typeof floor16.appsearch.t27015 !== "undefined") {
  } else {
    floor16.appsearch.t27015 = function(owner, app, test_app, meta27016) {
      this.owner = owner;
      this.app = app;
      this.test_app = test_app;
      this.meta27016 = meta27016;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.appsearch.t27015.cljs$lang$type = true;
    floor16.appsearch.t27015.cljs$lang$ctorStr = "floor16.appsearch/t27015";
    floor16.appsearch.t27015.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.appsearch/t27015");
    };
    floor16.appsearch.t27015.prototype.om$core$IRender$ = true;
    floor16.appsearch.t27015.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div(null, React.DOM.span({"onClick":function() {
        return om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "text", "text", 1017460895), "Omg! I Am Clicked!");
      }}, (new cljs.core.Keyword(null, "text", "text", 1017460895)).cljs$core$IFn$_invoke$arity$1(self__.app)), React.DOM.span({"onClick":function() {
        return om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "text", "text", 1017460895), "Omg! I Am Clicked Tooo!");
      }}, "I Am Just Static Text :0)"), om.dom.input.call(null, {"onChange":function(p1__27011_SHARP_) {
        return om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "text", "text", 1017460895), p1__27011_SHARP_.target.value);
      }, "value":(new cljs.core.Keyword(null, "text", "text", 1017460895)).cljs$core$IFn$_invoke$arity$1(self__.app), "type":"text"}));
    };
    floor16.appsearch.t27015.prototype.cljs$core$IMeta$_meta$arity$1 = function(_27017) {
      var self__ = this;
      var _27017__$1 = this;
      return self__.meta27016;
    };
    floor16.appsearch.t27015.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_27017, meta27016__$1) {
      var self__ = this;
      var _27017__$1 = this;
      return new floor16.appsearch.t27015(self__.owner, self__.app, self__.test_app, meta27016__$1);
    };
    floor16.appsearch.__GT_t27015 = function __GT_t27015(owner__$1, app__$1, test_app__$1, meta27016) {
      return new floor16.appsearch.t27015(owner__$1, app__$1, test_app__$1, meta27016);
    };
  }
  return new floor16.appsearch.t27015(owner, app, test_app, null);
};
floor16.appsearch.as = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
floor16.appsearch.main = function main(edn_data) {
  cljs.core.println.call(null, cljs.reader.read_string.call(null, '{:text "\\"sfsf"}'), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "text", "text", 1017460895), "sdfsd"], null), edn_data);
  var data = cljs.reader.read_string.call(null, edn_data);
  cljs.core.reset_BANG_.call(null, floor16.appsearch.as, data);
  cljs.core.println.call(null, om.core.to_cursor.call(null, floor16.appsearch.as));
  return om.core.root.call(null, floor16.appsearch.test_app, floor16.appsearch.as, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), document.getElementById("app-search")], null));
};
goog.exportSymbol("floor16.appsearch.main", floor16.appsearch.main);
floor16.appsearch.render = function render(edn_data) {
  var data = cljs.reader.read_string.call(null, edn_data);
  return React.renderComponentToString(om.core.build.call(null, floor16.appsearch.test_app, om.core.to_cursor.call(null, data)));
};
goog.exportSymbol("floor16.appsearch.render", floor16.appsearch.render);
goog.provide("goog.style.bidi");
goog.require("goog.dom");
goog.require("goog.style");
goog.require("goog.userAgent");
goog.style.bidi.getScrollLeft = function(element) {
  var isRtl = goog.style.isRightToLeft(element);
  if (isRtl && goog.userAgent.GECKO) {
    return-element.scrollLeft;
  } else {
    if (isRtl && !(goog.userAgent.IE && goog.userAgent.isVersion("8"))) {
      var overflowX = goog.style.getComputedOverflowX(element);
      if (overflowX == "visible") {
        return element.scrollLeft;
      } else {
        return element.scrollWidth - element.clientWidth - element.scrollLeft;
      }
    }
  }
  return element.scrollLeft;
};
goog.style.bidi.getOffsetStart = function(element) {
  var offsetLeftForReal = element.offsetLeft;
  var bestParent = element.offsetParent;
  if (!bestParent && goog.style.getComputedPosition(element) == "fixed") {
    bestParent = goog.dom.getOwnerDocument(element).documentElement;
  }
  if (!bestParent) {
    return offsetLeftForReal;
  }
  if (goog.userAgent.GECKO) {
    var borderWidths = goog.style.getBorderBox(bestParent);
    offsetLeftForReal += borderWidths.left;
  } else {
    if (goog.userAgent.isDocumentMode(8)) {
      var borderWidths = goog.style.getBorderBox(bestParent);
      offsetLeftForReal -= borderWidths.left;
    }
  }
  if (goog.style.isRightToLeft(bestParent)) {
    var elementRightOffset = offsetLeftForReal + element.offsetWidth;
    return bestParent.clientWidth - elementRightOffset;
  }
  return offsetLeftForReal;
};
goog.style.bidi.setScrollOffset = function(element, offsetStart) {
  offsetStart = Math.max(offsetStart, 0);
  if (!goog.style.isRightToLeft(element)) {
    element.scrollLeft = offsetStart;
  } else {
    if (goog.userAgent.GECKO) {
      element.scrollLeft = -offsetStart;
    } else {
      if (!(goog.userAgent.IE && goog.userAgent.isVersion("8"))) {
        element.scrollLeft = element.scrollWidth - offsetStart - element.clientWidth;
      } else {
        element.scrollLeft = offsetStart;
      }
    }
  }
};
goog.style.bidi.setPosition = function(elem, left, top, isRtl) {
  if (!goog.isNull(top)) {
    elem.style.top = top + "px";
  }
  if (isRtl) {
    elem.style.right = left + "px";
    elem.style.left = "";
  } else {
    elem.style.left = left + "px";
    elem.style.right = "";
  }
};
goog.provide("goog.fx.DragEvent");
goog.provide("goog.fx.Dragger");
goog.provide("goog.fx.Dragger.EventType");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.Event");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.style");
goog.require("goog.style.bidi");
goog.require("goog.userAgent");
goog.fx.Dragger = function(target, opt_handle, opt_limits) {
  goog.events.EventTarget.call(this);
  this.target = target;
  this.handle = opt_handle || target;
  this.limits = opt_limits || new goog.math.Rect(NaN, NaN, NaN, NaN);
  this.document_ = goog.dom.getOwnerDocument(target);
  this.eventHandler_ = new goog.events.EventHandler(this);
  goog.events.listen(this.handle, [goog.events.EventType.TOUCHSTART, goog.events.EventType.MOUSEDOWN], this.startDrag, false, this);
};
goog.inherits(goog.fx.Dragger, goog.events.EventTarget);
goog.fx.Dragger.HAS_SET_CAPTURE_ = goog.userAgent.IE || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.3");
goog.fx.Dragger.EventType = {EARLY_CANCEL:"earlycancel", START:"start", BEFOREDRAG:"beforedrag", DRAG:"drag", END:"end"};
goog.fx.Dragger.prototype.target;
goog.fx.Dragger.prototype.handle;
goog.fx.Dragger.prototype.limits;
goog.fx.Dragger.prototype.rightToLeft_;
goog.fx.Dragger.prototype.clientX = 0;
goog.fx.Dragger.prototype.clientY = 0;
goog.fx.Dragger.prototype.screenX = 0;
goog.fx.Dragger.prototype.screenY = 0;
goog.fx.Dragger.prototype.startX = 0;
goog.fx.Dragger.prototype.startY = 0;
goog.fx.Dragger.prototype.deltaX = 0;
goog.fx.Dragger.prototype.deltaY = 0;
goog.fx.Dragger.prototype.pageScroll;
goog.fx.Dragger.prototype.enabled_ = true;
goog.fx.Dragger.prototype.dragging_ = false;
goog.fx.Dragger.prototype.hysteresisDistanceSquared_ = 0;
goog.fx.Dragger.prototype.mouseDownTime_ = 0;
goog.fx.Dragger.prototype.document_;
goog.fx.Dragger.prototype.eventHandler_;
goog.fx.Dragger.prototype.scrollTarget_;
goog.fx.Dragger.prototype.ieDragStartCancellingOn_ = false;
goog.fx.Dragger.prototype.useRightPositioningForRtl_ = false;
goog.fx.Dragger.prototype.enableRightPositioningForRtl = function(useRightPositioningForRtl) {
  this.useRightPositioningForRtl_ = useRightPositioningForRtl;
};
goog.fx.Dragger.prototype.getHandler = function() {
  return this.eventHandler_;
};
goog.fx.Dragger.prototype.setLimits = function(limits) {
  this.limits = limits || new goog.math.Rect(NaN, NaN, NaN, NaN);
};
goog.fx.Dragger.prototype.setHysteresis = function(distance) {
  this.hysteresisDistanceSquared_ = Math.pow(distance, 2);
};
goog.fx.Dragger.prototype.getHysteresis = function() {
  return Math.sqrt(this.hysteresisDistanceSquared_);
};
goog.fx.Dragger.prototype.setScrollTarget = function(scrollTarget) {
  this.scrollTarget_ = scrollTarget;
};
goog.fx.Dragger.prototype.setCancelIeDragStart = function(cancelIeDragStart) {
  this.ieDragStartCancellingOn_ = cancelIeDragStart;
};
goog.fx.Dragger.prototype.getEnabled = function() {
  return this.enabled_;
};
goog.fx.Dragger.prototype.setEnabled = function(enabled) {
  this.enabled_ = enabled;
};
goog.fx.Dragger.prototype.disposeInternal = function() {
  goog.fx.Dragger.superClass_.disposeInternal.call(this);
  goog.events.unlisten(this.handle, [goog.events.EventType.TOUCHSTART, goog.events.EventType.MOUSEDOWN], this.startDrag, false, this);
  this.cleanUpAfterDragging_();
  this.target = null;
  this.handle = null;
  this.eventHandler_ = null;
};
goog.fx.Dragger.prototype.isRightToLeft_ = function() {
  if (!goog.isDef(this.rightToLeft_)) {
    this.rightToLeft_ = goog.style.isRightToLeft(this.target);
  }
  return this.rightToLeft_;
};
goog.fx.Dragger.prototype.startDrag = function(e) {
  var isMouseDown = e.type == goog.events.EventType.MOUSEDOWN;
  if (this.enabled_ && (!this.dragging_ && (!isMouseDown || e.isMouseActionButton()))) {
    this.maybeReinitTouchEvent_(e);
    if (this.hysteresisDistanceSquared_ == 0) {
      if (this.fireDragStart_(e)) {
        this.dragging_ = true;
        e.preventDefault();
      } else {
        return;
      }
    } else {
      e.preventDefault();
    }
    this.setupDragHandlers();
    this.clientX = this.startX = e.clientX;
    this.clientY = this.startY = e.clientY;
    this.screenX = e.screenX;
    this.screenY = e.screenY;
    this.deltaX = this.useRightPositioningForRtl_ ? goog.style.bidi.getOffsetStart(this.target) : this.target.offsetLeft;
    this.deltaY = this.target.offsetTop;
    this.pageScroll = goog.dom.getDomHelper(this.document_).getDocumentScroll();
    this.mouseDownTime_ = goog.now();
  } else {
    this.dispatchEvent(goog.fx.Dragger.EventType.EARLY_CANCEL);
  }
};
goog.fx.Dragger.prototype.setupDragHandlers = function() {
  var doc = this.document_;
  var docEl = doc.documentElement;
  var useCapture = !goog.fx.Dragger.HAS_SET_CAPTURE_;
  this.eventHandler_.listen(doc, [goog.events.EventType.TOUCHMOVE, goog.events.EventType.MOUSEMOVE], this.handleMove_, useCapture);
  this.eventHandler_.listen(doc, [goog.events.EventType.TOUCHEND, goog.events.EventType.MOUSEUP], this.endDrag, useCapture);
  if (goog.fx.Dragger.HAS_SET_CAPTURE_) {
    docEl.setCapture(false);
    this.eventHandler_.listen(docEl, goog.events.EventType.LOSECAPTURE, this.endDrag);
  } else {
    this.eventHandler_.listen(goog.dom.getWindow(doc), goog.events.EventType.BLUR, this.endDrag);
  }
  if (goog.userAgent.IE && this.ieDragStartCancellingOn_) {
    this.eventHandler_.listen(doc, goog.events.EventType.DRAGSTART, goog.events.Event.preventDefault);
  }
  if (this.scrollTarget_) {
    this.eventHandler_.listen(this.scrollTarget_, goog.events.EventType.SCROLL, this.onScroll_, useCapture);
  }
};
goog.fx.Dragger.prototype.fireDragStart_ = function(e) {
  return this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.START, this, e.clientX, e.clientY, e));
};
goog.fx.Dragger.prototype.cleanUpAfterDragging_ = function() {
  this.eventHandler_.removeAll();
  if (goog.fx.Dragger.HAS_SET_CAPTURE_) {
    this.document_.releaseCapture();
  }
};
goog.fx.Dragger.prototype.endDrag = function(e, opt_dragCanceled) {
  this.cleanUpAfterDragging_();
  if (this.dragging_) {
    this.maybeReinitTouchEvent_(e);
    this.dragging_ = false;
    var x = this.limitX(this.deltaX);
    var y = this.limitY(this.deltaY);
    var dragCanceled = opt_dragCanceled || e.type == goog.events.EventType.TOUCHCANCEL;
    this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.END, this, e.clientX, e.clientY, e, x, y, dragCanceled));
  } else {
    this.dispatchEvent(goog.fx.Dragger.EventType.EARLY_CANCEL);
  }
  if (e.type == goog.events.EventType.TOUCHEND || e.type == goog.events.EventType.TOUCHCANCEL) {
    e.preventDefault();
  }
};
goog.fx.Dragger.prototype.endDragCancel = function(e) {
  this.endDrag(e, true);
};
goog.fx.Dragger.prototype.maybeReinitTouchEvent_ = function(e) {
  var type = e.type;
  if (type == goog.events.EventType.TOUCHSTART || type == goog.events.EventType.TOUCHMOVE) {
    e.init(e.getBrowserEvent().targetTouches[0], e.currentTarget);
  } else {
    if (type == goog.events.EventType.TOUCHEND || type == goog.events.EventType.TOUCHCANCEL) {
      e.init(e.getBrowserEvent().changedTouches[0], e.currentTarget);
    }
  }
};
goog.fx.Dragger.prototype.handleMove_ = function(e) {
  if (this.enabled_) {
    this.maybeReinitTouchEvent_(e);
    var sign = this.useRightPositioningForRtl_ && this.isRightToLeft_() ? -1 : 1;
    var dx = sign * (e.clientX - this.clientX);
    var dy = e.clientY - this.clientY;
    this.clientX = e.clientX;
    this.clientY = e.clientY;
    this.screenX = e.screenX;
    this.screenY = e.screenY;
    if (!this.dragging_) {
      var diffX = this.startX - this.clientX;
      var diffY = this.startY - this.clientY;
      var distance = diffX * diffX + diffY * diffY;
      if (distance > this.hysteresisDistanceSquared_) {
        if (this.fireDragStart_(e)) {
          this.dragging_ = true;
        } else {
          if (!this.isDisposed()) {
            this.endDrag(e);
          }
          return;
        }
      }
    }
    var pos = this.calculatePosition_(dx, dy);
    var x = pos.x;
    var y = pos.y;
    if (this.dragging_) {
      var rv = this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.BEFOREDRAG, this, e.clientX, e.clientY, e, x, y));
      if (rv) {
        this.doDrag(e, x, y, false);
        e.preventDefault();
      }
    }
  }
};
goog.fx.Dragger.prototype.calculatePosition_ = function(dx, dy) {
  var pageScroll = goog.dom.getDomHelper(this.document_).getDocumentScroll();
  dx += pageScroll.x - this.pageScroll.x;
  dy += pageScroll.y - this.pageScroll.y;
  this.pageScroll = pageScroll;
  this.deltaX += dx;
  this.deltaY += dy;
  var x = this.limitX(this.deltaX);
  var y = this.limitY(this.deltaY);
  return new goog.math.Coordinate(x, y);
};
goog.fx.Dragger.prototype.onScroll_ = function(e) {
  var pos = this.calculatePosition_(0, 0);
  e.clientX = this.clientX;
  e.clientY = this.clientY;
  this.doDrag(e, pos.x, pos.y, true);
};
goog.fx.Dragger.prototype.doDrag = function(e, x, y, dragFromScroll) {
  this.defaultAction(x, y);
  this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.DRAG, this, e.clientX, e.clientY, e, x, y));
};
goog.fx.Dragger.prototype.limitX = function(x) {
  var rect = this.limits;
  var left = !isNaN(rect.left) ? rect.left : null;
  var width = !isNaN(rect.width) ? rect.width : 0;
  var maxX = left != null ? left + width : Infinity;
  var minX = left != null ? left : -Infinity;
  return Math.min(maxX, Math.max(minX, x));
};
goog.fx.Dragger.prototype.limitY = function(y) {
  var rect = this.limits;
  var top = !isNaN(rect.top) ? rect.top : null;
  var height = !isNaN(rect.height) ? rect.height : 0;
  var maxY = top != null ? top + height : Infinity;
  var minY = top != null ? top : -Infinity;
  return Math.min(maxY, Math.max(minY, y));
};
goog.fx.Dragger.prototype.defaultAction = function(x, y) {
  if (this.useRightPositioningForRtl_ && this.isRightToLeft_()) {
    this.target.style.right = x + "px";
  } else {
    this.target.style.left = x + "px";
  }
  this.target.style.top = y + "px";
};
goog.fx.Dragger.prototype.isDragging = function() {
  return this.dragging_;
};
goog.fx.DragEvent = function(type, dragobj, clientX, clientY, browserEvent, opt_actX, opt_actY, opt_dragCanceled) {
  goog.events.Event.call(this, type);
  this.clientX = clientX;
  this.clientY = clientY;
  this.browserEvent = browserEvent;
  this.left = goog.isDef(opt_actX) ? opt_actX : dragobj.deltaX;
  this.top = goog.isDef(opt_actY) ? opt_actY : dragobj.deltaY;
  this.dragger = dragobj;
  this.dragCanceled = !!opt_dragCanceled;
};
goog.inherits(goog.fx.DragEvent, goog.events.Event);
goog.provide("floor16.ui.range_edit");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("goog.math.Rect");
goog.require("goog.events");
goog.require("goog.events.EventType");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("om.dom");
goog.require("cljs.core.async");
goog.require("goog.events");
goog.require("goog.fx.Dragger");
floor16.ui.range_edit.ExtendedDragger = function ExtendedDragger(el, limit) {
  return goog.base(this, el, null, limit);
};
goog.inherits(floor16.ui.range_edit.ExtendedDragger, goog.fx.Dragger);
floor16.ui.range_edit.ExtendedDragger.prototype.defaultAction = function(x, y) {
  return null;
};
floor16.ui.range_edit.val_to_pos = function val_to_pos(value, min_btm, max_top) {
  return 100 * value / (max_top - min_btm);
};
floor16.ui.range_edit.step_round = function step_round(v, step) {
  return Math.floor.call(null, v / step) * step;
};
floor16.ui.range_edit.pos_to_val = function pos_to_val(pos, min_btm, max_top, step, width) {
  return floor16.ui.range_edit.step_round.call(null, (max_top - min_btm) * pos / width, step);
};
floor16.ui.range_edit.slider_handle = function slider_handle(range_value, owner, p__9580) {
  var map__9585 = p__9580;
  var map__9585__$1 = cljs.core.seq_QMARK_.call(null, map__9585) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9585) : map__9585;
  var opts = map__9585__$1;
  var comm = cljs.core.get.call(null, map__9585__$1, new cljs.core.Keyword(null, "comm", "comm", 1016963710));
  var step = cljs.core.get.call(null, map__9585__$1, new cljs.core.Keyword(null, "step", "step", 1017444926));
  var max_top = cljs.core.get.call(null, map__9585__$1, new cljs.core.Keyword(null, "max-top", "max-top", 1856863454));
  var min_bottom = cljs.core.get.call(null, map__9585__$1, new cljs.core.Keyword(null, "min-bottom", "min-bottom", 2894918008));
  var bound = cljs.core.get.call(null, map__9585__$1, new cljs.core.Keyword(null, "bound", "bound", 1107832048));
  if (typeof floor16.ui.range_edit.t9586 !== "undefined") {
  } else {
    floor16.ui.range_edit.t9586 = function(step, opts, bound, slider_handle, range_value, comm, owner, p__9580, max_top, map__9585, min_bottom, meta9587) {
      this.step = step;
      this.opts = opts;
      this.bound = bound;
      this.slider_handle = slider_handle;
      this.range_value = range_value;
      this.comm = comm;
      this.owner = owner;
      this.p__9580 = p__9580;
      this.max_top = max_top;
      this.map__9585 = map__9585;
      this.min_bottom = min_bottom;
      this.meta9587 = meta9587;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.range_edit.t9586.cljs$lang$type = true;
    floor16.ui.range_edit.t9586.cljs$lang$ctorStr = "floor16.ui.range-edit/t9586";
    floor16.ui.range_edit.t9586.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.ui.range-edit/t9586");
    };
    floor16.ui.range_edit.t9586.prototype.om$core$IRender$ = true;
    floor16.ui.range_edit.t9586.prototype.om$core$IRender$render$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return React.DOM.a({"style":{"left":[cljs.core.str(floor16.ui.range_edit.val_to_pos.call(null, self__.bound.call(null, self__.range_value), self__.min_bottom, self__.max_top)), cljs.core.str("%")].join("")}, "className":"slider-handle"});
    };
    floor16.ui.range_edit.t9586.prototype.om$core$IWillUnmount$ = true;
    floor16.ui.range_edit.t9586.prototype.om$core$IWillUnmount$will_unmount$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return console.log(this$__$1, self__.owner);
    };
    floor16.ui.range_edit.t9586.prototype.om$core$IDidMount$ = true;
    floor16.ui.range_edit.t9586.prototype.om$core$IDidMount$did_mount$arity$2 = function(this$, node) {
      var self__ = this;
      var this$__$1 = this;
      var parentWidth = node.parentNode.offsetWidth;
      var dragger = new floor16.ui.range_edit.ExtendedDragger(node, null, new goog.math.Rect(0, node.offsetTop, parentWidth, 0));
      return goog.events.listen(dragger, goog.events.EventType.DRAG, function(e) {
        return cljs.core.async.put_BANG_.call(null, self__.comm, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bound", "bound", 1107832048), self__.bound, new cljs.core.Keyword(null, "value", "value", 1125876963), floor16.ui.range_edit.pos_to_val.call(null, e.left, self__.min_bottom, self__.max_top, self__.step, parentWidth)], null));
      });
    };
    floor16.ui.range_edit.t9586.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9588) {
      var self__ = this;
      var _9588__$1 = this;
      return self__.meta9587;
    };
    floor16.ui.range_edit.t9586.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9588, meta9587__$1) {
      var self__ = this;
      var _9588__$1 = this;
      return new floor16.ui.range_edit.t9586(self__.step, self__.opts, self__.bound, self__.slider_handle, self__.range_value, self__.comm, self__.owner, self__.p__9580, self__.max_top, self__.map__9585, self__.min_bottom, meta9587__$1);
    };
    floor16.ui.range_edit.__GT_t9586 = function __GT_t9586(step__$1, opts__$1, bound__$1, slider_handle__$1, range_value__$1, comm__$1, owner__$1, p__9580__$1, max_top__$1, map__9585__$2, min_bottom__$1, meta9587) {
      return new floor16.ui.range_edit.t9586(step__$1, opts__$1, bound__$1, slider_handle__$1, range_value__$1, comm__$1, owner__$1, p__9580__$1, max_top__$1, map__9585__$2, min_bottom__$1, meta9587);
    };
  }
  return new floor16.ui.range_edit.t9586(step, opts, bound, slider_handle, range_value, comm, owner, p__9580, max_top, map__9585__$1, min_bottom, null);
};
floor16.ui.range_edit.slider_range = function slider_range(range_value, owner, p__9589) {
  var map__9594 = p__9589;
  var map__9594__$1 = cljs.core.seq_QMARK_.call(null, map__9594) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9594) : map__9594;
  var max_top = cljs.core.get.call(null, map__9594__$1, new cljs.core.Keyword(null, "max-top", "max-top", 1856863454));
  var min_bottom = cljs.core.get.call(null, map__9594__$1, new cljs.core.Keyword(null, "min-bottom", "min-bottom", 2894918008));
  if (typeof floor16.ui.range_edit.t9595 !== "undefined") {
  } else {
    floor16.ui.range_edit.t9595 = function(min_bottom, max_top, map__9594, p__9589, owner, range_value, slider_range, meta9596) {
      this.min_bottom = min_bottom;
      this.max_top = max_top;
      this.map__9594 = map__9594;
      this.p__9589 = p__9589;
      this.owner = owner;
      this.range_value = range_value;
      this.slider_range = slider_range;
      this.meta9596 = meta9596;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.range_edit.t9595.cljs$lang$type = true;
    floor16.ui.range_edit.t9595.cljs$lang$ctorStr = "floor16.ui.range-edit/t9595";
    floor16.ui.range_edit.t9595.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.ui.range-edit/t9595");
    };
    floor16.ui.range_edit.t9595.prototype.om$core$IRender$ = true;
    floor16.ui.range_edit.t9595.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div({"style":{"width":[cljs.core.str(floor16.ui.range_edit.val_to_pos.call(null, (new cljs.core.Keyword(null, "top", "top", 1014019271)).cljs$core$IFn$_invoke$arity$1(self__.range_value) - (new cljs.core.Keyword(null, "bottom", "bottom", 3925642653)).cljs$core$IFn$_invoke$arity$1(self__.range_value), self__.min_bottom, self__.max_top)), cljs.core.str("%")].join(""), "left":[cljs.core.str(floor16.ui.range_edit.val_to_pos.call(null, (new cljs.core.Keyword(null, "bottom", "bottom", 
      3925642653)).cljs$core$IFn$_invoke$arity$1(self__.range_value), self__.min_bottom, self__.max_top)), cljs.core.str("%")].join("")}, "className":"slider-range"});
    };
    floor16.ui.range_edit.t9595.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9597) {
      var self__ = this;
      var _9597__$1 = this;
      return self__.meta9596;
    };
    floor16.ui.range_edit.t9595.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9597, meta9596__$1) {
      var self__ = this;
      var _9597__$1 = this;
      return new floor16.ui.range_edit.t9595(self__.min_bottom, self__.max_top, self__.map__9594, self__.p__9589, self__.owner, self__.range_value, self__.slider_range, meta9596__$1);
    };
    floor16.ui.range_edit.__GT_t9595 = function __GT_t9595(min_bottom__$1, max_top__$1, map__9594__$2, p__9589__$1, owner__$1, range_value__$1, slider_range__$1, meta9596) {
      return new floor16.ui.range_edit.t9595(min_bottom__$1, max_top__$1, map__9594__$2, p__9589__$1, owner__$1, range_value__$1, slider_range__$1, meta9596);
    };
  }
  return new floor16.ui.range_edit.t9595(min_bottom, max_top, map__9594__$1, p__9589, owner, range_value, slider_range, null);
};
floor16.ui.range_edit.parse_int = function parse_int(v) {
  if (cljs.core.empty_QMARK_.call(null, v)) {
    return 0;
  } else {
    return parseInt(v);
  }
};
floor16.ui.range_edit.range_textbox = function range_textbox(range_value, owner, p__9598) {
  var map__9603 = p__9598;
  var map__9603__$1 = cljs.core.seq_QMARK_.call(null, map__9603) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9603) : map__9603;
  var comm = cljs.core.get.call(null, map__9603__$1, new cljs.core.Keyword(null, "comm", "comm", 1016963710));
  var bound = cljs.core.get.call(null, map__9603__$1, new cljs.core.Keyword(null, "bound", "bound", 1107832048));
  if (typeof floor16.ui.range_edit.t9604 !== "undefined") {
  } else {
    floor16.ui.range_edit.t9604 = function(bound, comm, map__9603, p__9598, owner, range_value, range_textbox, meta9605) {
      this.bound = bound;
      this.comm = comm;
      this.map__9603 = map__9603;
      this.p__9598 = p__9598;
      this.owner = owner;
      this.range_value = range_value;
      this.range_textbox = range_textbox;
      this.meta9605 = meta9605;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.range_edit.t9604.cljs$lang$type = true;
    floor16.ui.range_edit.t9604.cljs$lang$ctorStr = "floor16.ui.range-edit/t9604";
    floor16.ui.range_edit.t9604.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.ui.range-edit/t9604");
    };
    floor16.ui.range_edit.t9604.prototype.om$core$IRender$ = true;
    floor16.ui.range_edit.t9604.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return om.dom.input.call(null, {"onChange":function(e) {
        return cljs.core.async.put_BANG_.call(null, self__.comm, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bound", "bound", 1107832048), self__.bound, new cljs.core.Keyword(null, "value", "value", 1125876963), floor16.ui.range_edit.parse_int.call(null, e.target.value)], null));
      }, "value":self__.bound.call(null, self__.range_value), "className":cljs.core.name.call(null, self__.bound), "type":"text"});
    };
    floor16.ui.range_edit.t9604.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9606) {
      var self__ = this;
      var _9606__$1 = this;
      return self__.meta9605;
    };
    floor16.ui.range_edit.t9604.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9606, meta9605__$1) {
      var self__ = this;
      var _9606__$1 = this;
      return new floor16.ui.range_edit.t9604(self__.bound, self__.comm, self__.map__9603, self__.p__9598, self__.owner, self__.range_value, self__.range_textbox, meta9605__$1);
    };
    floor16.ui.range_edit.__GT_t9604 = function __GT_t9604(bound__$1, comm__$1, map__9603__$2, p__9598__$1, owner__$1, range_value__$1, range_textbox__$1, meta9605) {
      return new floor16.ui.range_edit.t9604(bound__$1, comm__$1, map__9603__$2, p__9598__$1, owner__$1, range_value__$1, range_textbox__$1, meta9605);
    };
  }
  return new floor16.ui.range_edit.t9604(bound, comm, map__9603__$1, p__9598, owner, range_value, range_textbox, null);
};
floor16.ui.range_edit.actualize = function actualize(cursor) {
  var state = cursor.state;
  var path = cursor.path;
  if (cljs.core.empty_QMARK_.call(null, path)) {
    return cljs.core.deref.call(null, state);
  } else {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path);
  }
};
floor16.ui.range_edit.range_editor = function range_editor(range_value, owner, p__9607) {
  var map__9642 = p__9607;
  var map__9642__$1 = cljs.core.seq_QMARK_.call(null, map__9642) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9642) : map__9642;
  var opts = map__9642__$1;
  var max_top = cljs.core.get.call(null, map__9642__$1, new cljs.core.Keyword(null, "max-top", "max-top", 1856863454));
  var min_bottom = cljs.core.get.call(null, map__9642__$1, new cljs.core.Keyword(null, "min-bottom", "min-bottom", 2894918008));
  var config = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bottom", "bottom", 3925642653), function(v) {
    var x__3717__auto__ = function() {
      var x__3710__auto__ = min_bottom;
      var y__3711__auto__ = v;
      return x__3710__auto__ > y__3711__auto__ ? x__3710__auto__ : y__3711__auto__;
    }();
    var y__3718__auto__ = (new cljs.core.Keyword(null, "top", "top", 1014019271)).cljs$core$IFn$_invoke$arity$1(floor16.ui.range_edit.actualize.call(null, range_value));
    return x__3717__auto__ < y__3718__auto__ ? x__3717__auto__ : y__3718__auto__;
  }, new cljs.core.Keyword(null, "top", "top", 1014019271), function(v) {
    var x__3710__auto__ = function() {
      var x__3717__auto__ = max_top;
      var y__3718__auto__ = v;
      return x__3717__auto__ < y__3718__auto__ ? x__3717__auto__ : y__3718__auto__;
    }();
    var y__3711__auto__ = (new cljs.core.Keyword(null, "bottom", "bottom", 3925642653)).cljs$core$IFn$_invoke$arity$1(floor16.ui.range_edit.actualize.call(null, range_value));
    return x__3710__auto__ > y__3711__auto__ ? x__3710__auto__ : y__3711__auto__;
  }], null);
  var handle_change = function(config) {
    return function(p__9643) {
      var map__9644 = p__9643;
      var map__9644__$1 = cljs.core.seq_QMARK_.call(null, map__9644) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9644) : map__9644;
      var e = map__9644__$1;
      var value = cljs.core.get.call(null, map__9644__$1, new cljs.core.Keyword(null, "value", "value", 1125876963));
      var bound = cljs.core.get.call(null, map__9644__$1, new cljs.core.Keyword(null, "bound", "bound", 1107832048));
      var v = cljs.core.not.call(null, isNaN(value)) ? value : bound.call(null, floor16.ui.range_edit.actualize.call(null, range_value));
      return om.core.transact_BANG_.call(null, range_value, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [bound], null), function(v, map__9644, map__9644__$1, e, value, bound, config) {
        return function(_) {
          return bound.call(null, config).call(null, v);
        };
      }(v, map__9644, map__9644__$1, e, value, bound, config));
    };
  }(config);
  if (typeof floor16.ui.range_edit.t9645 !== "undefined") {
  } else {
    floor16.ui.range_edit.t9645 = function(opts, handle_change, range_editor, map__9642, config, range_value, p__9607, owner, max_top, min_bottom, meta9646) {
      this.opts = opts;
      this.handle_change = handle_change;
      this.range_editor = range_editor;
      this.map__9642 = map__9642;
      this.config = config;
      this.range_value = range_value;
      this.p__9607 = p__9607;
      this.owner = owner;
      this.max_top = max_top;
      this.min_bottom = min_bottom;
      this.meta9646 = meta9646;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.range_edit.t9645.cljs$lang$type = true;
    floor16.ui.range_edit.t9645.cljs$lang$ctorStr = "floor16.ui.range-edit/t9645";
    floor16.ui.range_edit.t9645.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.ui.range-edit/t9645");
    };
    floor16.ui.range_edit.t9645.prototype.om$core$IRender$ = true;
    floor16.ui.range_edit.t9645.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var new_opts = cljs.core.assoc.call(null, self__.opts, new cljs.core.Keyword(null, "comm", "comm", 1016963710), om.core.get_state.call(null, self__.owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comm", "comm", 1016963710)], null)));
      var top_opts = cljs.core.assoc.call(null, new_opts, new cljs.core.Keyword(null, "bound", "bound", 1107832048), new cljs.core.Keyword(null, "top", "top", 1014019271));
      var bottom_opts = cljs.core.assoc.call(null, new_opts, new cljs.core.Keyword(null, "bound", "bound", 1107832048), new cljs.core.Keyword(null, "bottom", "bottom", 3925642653));
      return React.DOM.div(null, React.DOM.div({"className":"range-edit-wrapper"}, om.core.build.call(null, floor16.ui.range_edit.range_textbox, self__.range_value, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), bottom_opts], null)), React.DOM.div({"className":"slider"}, om.core.build.call(null, floor16.ui.range_edit.slider_range, self__.range_value, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), 
      self__.opts], null)), om.core.build.call(null, floor16.ui.range_edit.slider_handle, self__.range_value, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), bottom_opts], null)), om.core.build.call(null, floor16.ui.range_edit.slider_handle, self__.range_value, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), top_opts], null))), om.core.build.call(null, floor16.ui.range_edit.range_textbox, self__.range_value, 
      new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), top_opts], null))));
    };
    floor16.ui.range_edit.t9645.prototype.om$core$IInitState$ = true;
    floor16.ui.range_edit.t9645.prototype.om$core$IInitState$init_state$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      var comm = cljs.core.async.chan.call(null);
      var c__6152__auto___9676 = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function() {
        var f__6153__auto__ = function() {
          var switch__6137__auto__ = function(state_9660) {
            var state_val_9661 = state_9660[1];
            if (state_val_9661 === 7) {
              var inst_9651 = state_9660[2];
              var inst_9652 = self__.handle_change.call(null, inst_9651);
              var state_9660__$1 = function() {
                var statearr_9662 = state_9660;
                statearr_9662[7] = inst_9652;
                return statearr_9662;
              }();
              var statearr_9663_9677 = state_9660__$1;
              statearr_9663_9677[2] = null;
              statearr_9663_9677[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_9661 === 6) {
                var inst_9656 = state_9660[2];
                var state_9660__$1 = state_9660;
                var statearr_9664_9678 = state_9660__$1;
                statearr_9664_9678[2] = inst_9656;
                statearr_9664_9678[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_9661 === 5) {
                  var state_9660__$1 = state_9660;
                  var statearr_9665_9679 = state_9660__$1;
                  statearr_9665_9679[2] = null;
                  statearr_9665_9679[1] = 6;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_9661 === 4) {
                    var state_9660__$1 = state_9660;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9660__$1, 7, comm);
                  } else {
                    if (state_val_9661 === 3) {
                      var inst_9658 = state_9660[2];
                      var state_9660__$1 = state_9660;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_9660__$1, inst_9658);
                    } else {
                      if (state_val_9661 === 2) {
                        var state_9660__$1 = state_9660;
                        if (true) {
                          var statearr_9666_9680 = state_9660__$1;
                          statearr_9666_9680[1] = 4;
                        } else {
                          var statearr_9667_9681 = state_9660__$1;
                          statearr_9667_9681[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_9661 === 1) {
                          var state_9660__$1 = state_9660;
                          var statearr_9668_9682 = state_9660__$1;
                          statearr_9668_9682[2] = null;
                          statearr_9668_9682[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
          return function(switch__6137__auto__) {
            return function() {
              var state_machine__6138__auto__ = null;
              var state_machine__6138__auto____0 = function() {
                var statearr_9672 = [null, null, null, null, null, null, null, null];
                statearr_9672[0] = state_machine__6138__auto__;
                statearr_9672[1] = 1;
                return statearr_9672;
              };
              var state_machine__6138__auto____1 = function(state_9660) {
                while (true) {
                  var ret_value__6139__auto__ = function() {
                    try {
                      while (true) {
                        var result__6140__auto__ = switch__6137__auto__.call(null, state_9660);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6140__auto__;
                        }
                        break;
                      }
                    } catch (e9673) {
                      if (e9673 instanceof Object) {
                        var ex__6141__auto__ = e9673;
                        var statearr_9674_9683 = state_9660;
                        statearr_9674_9683[5] = ex__6141__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_9660);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e9673;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__9684 = state_9660;
                    state_9660 = G__9684;
                    continue;
                  } else {
                    return ret_value__6139__auto__;
                  }
                  break;
                }
              };
              state_machine__6138__auto__ = function(state_9660) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6138__auto____0.call(this);
                  case 1:
                    return state_machine__6138__auto____1.call(this, state_9660);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
              state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
              return state_machine__6138__auto__;
            }();
          }(switch__6137__auto__);
        }();
        var state__6154__auto__ = function() {
          var statearr_9675 = f__6153__auto__.call(null);
          statearr_9675[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___9676;
          return statearr_9675;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
      });
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), comm], null);
    };
    floor16.ui.range_edit.t9645.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9647) {
      var self__ = this;
      var _9647__$1 = this;
      return self__.meta9646;
    };
    floor16.ui.range_edit.t9645.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9647, meta9646__$1) {
      var self__ = this;
      var _9647__$1 = this;
      return new floor16.ui.range_edit.t9645(self__.opts, self__.handle_change, self__.range_editor, self__.map__9642, self__.config, self__.range_value, self__.p__9607, self__.owner, self__.max_top, self__.min_bottom, meta9646__$1);
    };
    floor16.ui.range_edit.__GT_t9645 = function __GT_t9645(opts__$1, handle_change__$1, range_editor__$1, map__9642__$2, config__$1, range_value__$1, p__9607__$1, owner__$1, max_top__$1, min_bottom__$1, meta9646) {
      return new floor16.ui.range_edit.t9645(opts__$1, handle_change__$1, range_editor__$1, map__9642__$2, config__$1, range_value__$1, p__9607__$1, owner__$1, max_top__$1, min_bottom__$1, meta9646);
    };
  }
  return new floor16.ui.range_edit.t9645(opts, handle_change, range_editor, map__9642__$1, config, range_value, p__9607, owner, max_top, min_bottom, null);
};
