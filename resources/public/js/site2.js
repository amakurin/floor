var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.TRUSTED_SITE = true;
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name);
  };
  goog.implicitNamespaces_ = {};
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
if (!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && (typeof value.splice != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")))) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call"))) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isDef = function(val) {
  return val !== undefined;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for (var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value);
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.subs = function(str, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement);
  }
  return str;
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && (ch >= " " && ch <= "~") || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;");
  } else {
    if (!goog.string.allRe_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;");
    }
    return str;
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1;
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && (index < s.length && stringLength > 0)) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || (goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]));
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    this.stack = (new Error).stack || "";
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return(value);
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if (arr.reduce) {
    if (opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val);
    } else {
      return arr.reduce(f, val);
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if (arr.reduceRight) {
    if (opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val);
    } else {
      return arr.reduceRight(f, val);
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || (!goog.isArrayLike(arr2) || arr1.length != arr2.length)) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn);
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2156";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  3960797560), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__14427__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__14427 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__14427__delegate.call(this, args);
    };
    G__14427.cljs$lang$maxFixedArity = 0;
    G__14427.cljs$lang$applyTo = function(arglist__14428) {
      var args = cljs.core.seq(arglist__14428);
      return G__14427__delegate(args);
    };
    G__14427.cljs$core$IFn$_invoke$arity$variadic = G__14427__delegate;
    return G__14427;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false;
      } else {
        return null;
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3391__auto__ = ty;
    if (cljs.core.truth_(and__3391__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3391__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4090__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4090__auto__)) {
    var s = temp__4090__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4251__auto___14429 = len;
  var i_14430 = 0;
  while (true) {
    if (i_14430 < n__4251__auto___14429) {
      new_arr[i_14430] = arr[i_14430];
      var G__14431 = i_14430 + 1;
      i_14430 = G__14431;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__14432__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__14432 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14432__delegate.call(this, array, i, idxs);
    };
    G__14432.cljs$lang$maxFixedArity = 2;
    G__14432.cljs$lang$applyTo = function(arglist__14433) {
      var array = cljs.core.first(arglist__14433);
      arglist__14433 = cljs.core.next(arglist__14433);
      var i = cljs.core.first(arglist__14433);
      var idxs = cljs.core.rest(arglist__14433);
      return G__14432__delegate(array, i, idxs);
    };
    G__14432.cljs$core$IFn$_invoke$arity$variadic = G__14432__delegate;
    return G__14432;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__14434__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__14434 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__14434__delegate.call(this, array, idx, idx2, idxv);
    };
    G__14434.cljs$lang$maxFixedArity = 3;
    G__14434.cljs$lang$applyTo = function(arglist__14435) {
      var array = cljs.core.first(arglist__14435);
      arglist__14435 = cljs.core.next(arglist__14435);
      var idx = cljs.core.first(arglist__14435);
      arglist__14435 = cljs.core.next(arglist__14435);
      var idx2 = cljs.core.first(arglist__14435);
      var idxv = cljs.core.rest(arglist__14435);
      return G__14434__delegate(array, idx, idx2, idxv);
    };
    G__14434.cljs$core$IFn$_invoke$arity$variadic = G__14434__delegate;
    return G__14434;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj14437 = {};
  return obj14437;
}();
cljs.core.IFn = function() {
  var obj14439 = {};
  return obj14439;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = cljs.core._invoke[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._invoke["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj14441 = {};
  return obj14441;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3391__auto__ = value;
    if (and__3391__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4030__auto__ = value == null ? null : value;
    return function() {
      var or__3403__auto__ = cljs.core._clone[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._clone["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj14443 = {};
  return obj14443;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._count[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._count["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj14445 = {};
  return obj14445;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._empty[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._empty["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj14447 = {};
  return obj14447;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._conj[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._conj["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj14449 = {};
  return obj14449;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3391__auto__ = coll;
      if (and__3391__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4030__auto__ = coll == null ? null : coll;
      return function() {
        var or__3403__auto__ = cljs.core._nth[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._nth["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3391__auto__ = coll;
      if (and__3391__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4030__auto__ = coll == null ? null : coll;
      return function() {
        var or__3403__auto__ = cljs.core._nth[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._nth["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj14451 = {};
  return obj14451;
}();
cljs.core.ISeq = function() {
  var obj14453 = {};
  return obj14453;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._first[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._first["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._rest[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._rest["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj14455 = {};
  return obj14455;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._next[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._next["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj14457 = {};
  return obj14457;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3391__auto__ = o;
      if (and__3391__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4030__auto__ = o == null ? null : o;
      return function() {
        var or__3403__auto__ = cljs.core._lookup[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._lookup["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3391__auto__ = o;
      if (and__3391__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4030__auto__ = o == null ? null : o;
      return function() {
        var or__3403__auto__ = cljs.core._lookup[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._lookup["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj14459 = {};
  return obj14459;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._assoc[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._assoc["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj14461 = {};
  return obj14461;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._dissoc[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._dissoc["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj14463 = {};
  return obj14463;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._key[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._key["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._val[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._val["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj14465 = {};
  return obj14465;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._disjoin[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._disjoin["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj14467 = {};
  return obj14467;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._peek[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._peek["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._pop[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._pop["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj14469 = {};
  return obj14469;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._assoc_n[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj14471 = {};
  return obj14471;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3391__auto__ = o;
    if (and__3391__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4030__auto__ = o == null ? null : o;
    return function() {
      var or__3403__auto__ = cljs.core._deref[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._deref["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj14473 = {};
  return obj14473;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3391__auto__ = o;
    if (and__3391__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4030__auto__ = o == null ? null : o;
    return function() {
      var or__3403__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj14475 = {};
  return obj14475;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3391__auto__ = o;
    if (and__3391__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4030__auto__ = o == null ? null : o;
    return function() {
      var or__3403__auto__ = cljs.core._meta[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._meta["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj14477 = {};
  return obj14477;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3391__auto__ = o;
    if (and__3391__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4030__auto__ = o == null ? null : o;
    return function() {
      var or__3403__auto__ = cljs.core._with_meta[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._with_meta["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj14479 = {};
  return obj14479;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3391__auto__ = coll;
      if (and__3391__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4030__auto__ = coll == null ? null : coll;
      return function() {
        var or__3403__auto__ = cljs.core._reduce[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._reduce["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3391__auto__ = coll;
      if (and__3391__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4030__auto__ = coll == null ? null : coll;
      return function() {
        var or__3403__auto__ = cljs.core._reduce[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core._reduce["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj14481 = {};
  return obj14481;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj14483 = {};
  return obj14483;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3391__auto__ = o;
    if (and__3391__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4030__auto__ = o == null ? null : o;
    return function() {
      var or__3403__auto__ = cljs.core._equiv[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._equiv["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj14485 = {};
  return obj14485;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3391__auto__ = o;
    if (and__3391__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4030__auto__ = o == null ? null : o;
    return function() {
      var or__3403__auto__ = cljs.core._hash[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._hash["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj14487 = {};
  return obj14487;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3391__auto__ = o;
    if (and__3391__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4030__auto__ = o == null ? null : o;
    return function() {
      var or__3403__auto__ = cljs.core._seq[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._seq["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj14489 = {};
  return obj14489;
}();
cljs.core.IList = function() {
  var obj14491 = {};
  return obj14491;
}();
cljs.core.IRecord = function() {
  var obj14493 = {};
  return obj14493;
}();
cljs.core.IReversible = function() {
  var obj14495 = {};
  return obj14495;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._rseq[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._rseq["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj14497 = {};
  return obj14497;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._entry_key[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._entry_key["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._comparator[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._comparator["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj14499 = {};
  return obj14499;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3391__auto__ = writer;
    if (and__3391__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4030__auto__ = writer == null ? null : writer;
    return function() {
      var or__3403__auto__ = cljs.core._write[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._write["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3391__auto__ = writer;
    if (and__3391__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4030__auto__ = writer == null ? null : writer;
    return function() {
      var or__3403__auto__ = cljs.core._flush[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._flush["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj14501 = {};
  return obj14501;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3391__auto__ = o;
    if (and__3391__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4030__auto__ = o == null ? null : o;
    return function() {
      var or__3403__auto__ = cljs.core._pr_writer[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj14503 = {};
  return obj14503;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3391__auto__ = d;
    if (and__3391__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4030__auto__ = d == null ? null : d;
    return function() {
      var or__3403__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj14505 = {};
  return obj14505;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = cljs.core._notify_watches[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = cljs.core._add_watch[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._add_watch["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = cljs.core._remove_watch[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj14507 = {};
  return obj14507;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._as_transient[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._as_transient["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj14509 = {};
  return obj14509;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3391__auto__ = tcoll;
    if (and__3391__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4030__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3403__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3391__auto__ = tcoll;
    if (and__3391__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4030__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3403__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj14511 = {};
  return obj14511;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3391__auto__ = tcoll;
    if (and__3391__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4030__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3403__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj14513 = {};
  return obj14513;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3391__auto__ = tcoll;
    if (and__3391__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4030__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3403__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj14515 = {};
  return obj14515;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3391__auto__ = tcoll;
    if (and__3391__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4030__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3403__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3391__auto__ = tcoll;
    if (and__3391__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4030__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3403__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj14517 = {};
  return obj14517;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3391__auto__ = tcoll;
    if (and__3391__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4030__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3403__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj14519 = {};
  return obj14519;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3391__auto__ = x;
    if (and__3391__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4030__auto__ = x == null ? null : x;
    return function() {
      var or__3403__auto__ = cljs.core._compare[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._compare["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj14521 = {};
  return obj14521;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._drop_first[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._drop_first["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj14523 = {};
  return obj14523;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._chunked_first[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj14525 = {};
  return obj14525;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3391__auto__ = coll;
    if (and__3391__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4030__auto__ = coll == null ? null : coll;
    return function() {
      var or__3403__auto__ = cljs.core._chunked_next[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj14527 = {};
  return obj14527;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3391__auto__ = x;
    if (and__3391__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4030__auto__ = x == null ? null : x;
    return function() {
      var or__3403__auto__ = cljs.core._name[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._name["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3391__auto__ = x;
    if (and__3391__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4030__auto__ = x == null ? null : x;
    return function() {
      var or__3403__auto__ = cljs.core._namespace[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._namespace["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("");
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3391__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3391__auto__) {
        return b.ns;
      } else {
        return and__3391__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return cljs.core.compare.call(null, a.name, b.name);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3814__auto__ = self__._hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__14529 = null;
  var G__14529__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__14529__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__14529 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14529__2.call(this, self__, coll);
      case 3:
        return G__14529__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14529;
}();
cljs.core.Symbol.prototype.apply = function(self__, args14528) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args14528)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__14531 = value;
  if (G__14531) {
    var bit__4053__auto__ = G__14531.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4053__auto__ || G__14531.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__14531.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__14531);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__14531);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__14533 = coll;
      if (G__14533) {
        var bit__4046__auto__ = G__14533.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4046__auto__ || G__14533.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__14535 = coll;
      if (G__14535) {
        var bit__4046__auto__ = G__14535.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4046__auto__ || G__14535.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__14537 = coll;
      if (G__14537) {
        var bit__4046__auto__ = G__14537.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4046__auto__ || G__14537.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__14539 = coll;
      if (G__14539) {
        var bit__4046__auto__ = G__14539.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4046__auto__ || G__14539.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__14540__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__14541 = y;
            var G__14542 = cljs.core.first.call(null, more);
            var G__14543 = cljs.core.next.call(null, more);
            x = G__14541;
            y = G__14542;
            more = G__14543;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__14540 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14540__delegate.call(this, x, y, more);
    };
    G__14540.cljs$lang$maxFixedArity = 2;
    G__14540.cljs$lang$applyTo = function(arglist__14544) {
      var x = cljs.core.first(arglist__14544);
      arglist__14544 = cljs.core.next(arglist__14544);
      var y = cljs.core.first(arglist__14544);
      var more = cljs.core.rest(arglist__14544);
      return G__14540__delegate(x, y, more);
    };
    G__14540.cljs$core$IFn$_invoke$arity$variadic = G__14540__delegate;
    return G__14540;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__14545 = nval;
            var G__14546 = n + 1;
            val = G__14545;
            n = G__14546;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__14547 = nval;
          var G__14548 = n + 1;
          val__$1 = G__14547;
          n = G__14548;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__14549 = nval;
          var G__14550 = n + 1;
          val__$1 = G__14549;
          n = G__14550;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__14551 = nval;
            var G__14552 = n + 1;
            val = G__14551;
            n = G__14552;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__14553 = nval;
          var G__14554 = n + 1;
          val__$1 = G__14553;
          n = G__14554;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__14555 = nval;
          var G__14556 = n + 1;
          val__$1 = G__14555;
          n = G__14556;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__14558 = x;
  if (G__14558) {
    var bit__4053__auto__ = G__14558.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4053__auto__ || G__14558.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__14558.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__14558);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__14558);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__14560 = x;
  if (G__14560) {
    var bit__4053__auto__ = G__14560.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4053__auto__ || G__14560.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__14560.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__14560);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__14560);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__14561 = sn;
      s = G__14561;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__14562__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__14563 = conj.call(null, coll, x);
          var G__14564 = cljs.core.first.call(null, xs);
          var G__14565 = cljs.core.next.call(null, xs);
          coll = G__14563;
          x = G__14564;
          xs = G__14565;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__14562 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14562__delegate.call(this, coll, x, xs);
    };
    G__14562.cljs$lang$maxFixedArity = 2;
    G__14562.cljs$lang$applyTo = function(arglist__14566) {
      var coll = cljs.core.first(arglist__14566);
      arglist__14566 = cljs.core.next(arglist__14566);
      var x = cljs.core.first(arglist__14566);
      var xs = cljs.core.rest(arglist__14566);
      return G__14562__delegate(coll, x, xs);
    };
    G__14562.cljs$core$IFn$_invoke$arity$variadic = G__14562__delegate;
    return G__14562;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__14567 = cljs.core.next.call(null, s);
      var G__14568 = acc + 1;
      s = G__14567;
      acc = G__14568;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__14570 = coll;
      if (G__14570) {
        var bit__4046__auto__ = G__14570.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4046__auto__ || G__14570.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count.call(null, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__14571 = cljs.core.next.call(null, coll);
              var G__14572 = n - 1;
              coll = G__14571;
              n = G__14572;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__14573 = cljs.core.next.call(null, coll);
              var G__14574 = n - 1;
              var G__14575 = not_found;
              coll = G__14573;
              n = G__14574;
              not_found = G__14575;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (coll == null) {
      return null;
    } else {
      if (function() {
        var G__14580 = coll;
        if (G__14580) {
          var bit__4046__auto__ = G__14580.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4046__auto__ || G__14580.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._nth.call(null, coll, n);
      } else {
        if (coll instanceof Array) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if (function() {
                  var G__14581 = coll;
                  if (G__14581) {
                    var bit__4053__auto__ = G__14581.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4053__auto__ || G__14581.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__14581.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__14581);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__14581);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(coll == null)) {
      if (function() {
        var G__14582 = coll;
        if (G__14582) {
          var bit__4046__auto__ = G__14582.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4046__auto__ || G__14582.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._nth.call(null, coll, n, not_found);
      } else {
        if (coll instanceof Array) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if (function() {
                  var G__14583 = coll;
                  if (G__14583) {
                    var bit__4053__auto__ = G__14583.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4053__auto__ || G__14583.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__14583.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__14583);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__14583);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__14586 = o;
        if (G__14586) {
          var bit__4046__auto__ = G__14586.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4046__auto__ || G__14586.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__14587 = o;
        if (G__14587) {
          var bit__4046__auto__ = G__14587.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4046__auto__ || G__14587.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays.call(null, [k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__14588__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__14589 = ret;
          var G__14590 = cljs.core.first.call(null, kvs);
          var G__14591 = cljs.core.second.call(null, kvs);
          var G__14592 = cljs.core.nnext.call(null, kvs);
          coll = G__14589;
          k = G__14590;
          v = G__14591;
          kvs = G__14592;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__14588 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__14588__delegate.call(this, coll, k, v, kvs);
    };
    G__14588.cljs$lang$maxFixedArity = 3;
    G__14588.cljs$lang$applyTo = function(arglist__14593) {
      var coll = cljs.core.first(arglist__14593);
      arglist__14593 = cljs.core.next(arglist__14593);
      var k = cljs.core.first(arglist__14593);
      arglist__14593 = cljs.core.next(arglist__14593);
      var v = cljs.core.first(arglist__14593);
      var kvs = cljs.core.rest(arglist__14593);
      return G__14588__delegate(coll, k, v, kvs);
    };
    G__14588.cljs$core$IFn$_invoke$arity$variadic = G__14588__delegate;
    return G__14588;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__14594__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__14595 = ret;
            var G__14596 = cljs.core.first.call(null, ks);
            var G__14597 = cljs.core.next.call(null, ks);
            coll = G__14595;
            k = G__14596;
            ks = G__14597;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__14594 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14594__delegate.call(this, coll, k, ks);
    };
    G__14594.cljs$lang$maxFixedArity = 2;
    G__14594.cljs$lang$applyTo = function(arglist__14598) {
      var coll = cljs.core.first(arglist__14598);
      arglist__14598 = cljs.core.next(arglist__14598);
      var k = cljs.core.first(arglist__14598);
      var ks = cljs.core.rest(arglist__14598);
      return G__14594__delegate(coll, k, ks);
    };
    G__14594.cljs$core$IFn$_invoke$arity$variadic = G__14594__delegate;
    return G__14594;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3403__auto__ = goog.isFunction(f);
  if (or__3403__auto__) {
    return or__3403__auto__;
  } else {
    var G__14602 = f;
    if (G__14602) {
      var bit__4053__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3403__auto____$1 = bit__4053__auto__;
        if (cljs.core.truth_(or__3403__auto____$1)) {
          return or__3403__auto____$1;
        } else {
          return G__14602.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__14602.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__14602);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__14602);
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__14610 = o;
    if (G__14610) {
      var bit__4053__auto__ = G__14610.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4053__auto__ || G__14610.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__14610.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__14610);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__14610);
    }
  }()) {
    return with_meta.call(null, function() {
      if (typeof cljs.core.t14611 !== "undefined") {
      } else {
        cljs.core.t14611 = function(meta, o, with_meta, meta14612) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta14612 = meta14612;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217;
        };
        cljs.core.t14611.cljs$lang$type = true;
        cljs.core.t14611.cljs$lang$ctorStr = "cljs.core/t14611";
        cljs.core.t14611.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
          return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/t14611");
        };
        cljs.core.t14611.prototype.call = function() {
          var G__14615__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__14615 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
            }
            return G__14615__delegate.call(this, self__, args);
          };
          G__14615.cljs$lang$maxFixedArity = 1;
          G__14615.cljs$lang$applyTo = function(arglist__14616) {
            var self__ = cljs.core.first(arglist__14616);
            var args = cljs.core.rest(arglist__14616);
            return G__14615__delegate(self__, args);
          };
          G__14615.cljs$core$IFn$_invoke$arity$variadic = G__14615__delegate;
          return G__14615;
        }();
        cljs.core.t14611.prototype.apply = function(self__, args14614) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args14614)));
        };
        cljs.core.t14611.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
          var G__14617__delegate = function(args) {
            var _ = this;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__14617 = function(var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__14617__delegate.call(this, args);
          };
          G__14617.cljs$lang$maxFixedArity = 0;
          G__14617.cljs$lang$applyTo = function(arglist__14618) {
            var args = cljs.core.seq(arglist__14618);
            return G__14617__delegate(args);
          };
          G__14617.cljs$core$IFn$_invoke$arity$variadic = G__14617__delegate;
          return G__14617;
        }();
        cljs.core.t14611.prototype.cljs$core$Fn$ = true;
        cljs.core.t14611.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14613) {
          var self__ = this;
          var _14613__$1 = this;
          return self__.meta14612;
        };
        cljs.core.t14611.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14613, meta14612__$1) {
          var self__ = this;
          var _14613__$1 = this;
          return new cljs.core.t14611(self__.meta, self__.o, self__.with_meta, meta14612__$1);
        };
        cljs.core.__GT_t14611 = function __GT_t14611(meta__$1, o__$1, with_meta__$1, meta14612) {
          return new cljs.core.t14611(meta__$1, o__$1, with_meta__$1, meta14612);
        };
      }
      return new cljs.core.t14611(meta, o, with_meta, null);
    }(), meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3391__auto__ = !(o == null);
    if (and__3391__auto__) {
      var G__14622 = o;
      if (G__14622) {
        var bit__4053__auto__ = G__14622.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4053__auto__ || G__14622.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__14622.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__14622);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__14622);
      }
    } else {
      return and__3391__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__14623__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__14624 = ret;
            var G__14625 = cljs.core.first.call(null, ks);
            var G__14626 = cljs.core.next.call(null, ks);
            coll = G__14624;
            k = G__14625;
            ks = G__14626;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__14623 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14623__delegate.call(this, coll, k, ks);
    };
    G__14623.cljs$lang$maxFixedArity = 2;
    G__14623.cljs$lang$applyTo = function(arglist__14627) {
      var coll = cljs.core.first(arglist__14627);
      arglist__14627 = cljs.core.next(arglist__14627);
      var k = cljs.core.first(arglist__14627);
      var ks = cljs.core.rest(arglist__14627);
      return G__14623__delegate(coll, k, ks);
    };
    G__14623.cljs$core$IFn$_invoke$arity$variadic = G__14623__delegate;
    return G__14623;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.string_hash_cache = function() {
  var obj14629 = {};
  return obj14629;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj14633 = {};
      return obj14633;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__14635 = o;
    if (G__14635) {
      var bit__4046__auto__ = G__14635.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4046__auto__ || G__14635.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.check_string_hash_cache.call(null, o);
          } else {
            if (o == null) {
              return 0;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return cljs.core._hash.call(null, o);
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__14637 = x;
    if (G__14637) {
      var bit__4053__auto__ = G__14637.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4053__auto__ || G__14637.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__14637.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__14637);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__14637);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__14639 = x;
    if (G__14639) {
      var bit__4053__auto__ = G__14639.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4053__auto__ || G__14639.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__14639.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__14639);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__14639);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__14641 = x;
  if (G__14641) {
    var bit__4053__auto__ = G__14641.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4053__auto__ || G__14641.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__14641.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__14641);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__14641);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__14643 = x;
  if (G__14643) {
    var bit__4053__auto__ = G__14643.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4053__auto__ || G__14643.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__14643.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__14643);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__14643);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__14645 = x;
  if (G__14645) {
    var bit__4053__auto__ = G__14645.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4053__auto__ || G__14645.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__14645.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__14645);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__14645);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__14647 = x;
  if (G__14647) {
    var bit__4053__auto__ = G__14647.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4053__auto__ || G__14647.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__14647.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__14647);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__14647);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__14649 = x;
    if (G__14649) {
      var bit__4053__auto__ = G__14649.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4053__auto__ || G__14649.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__14649.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__14649);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__14649);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__14651 = x;
  if (G__14651) {
    var bit__4053__auto__ = G__14651.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4053__auto__ || G__14651.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__14651.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__14651);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__14651);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__14653 = x;
  if (G__14653) {
    var bit__4046__auto__ = G__14653.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4046__auto__ || G__14653.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj14657 = {};
    return obj14657;
  };
  var js_obj__1 = function() {
    var G__14658__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__14658 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__14658__delegate.call(this, keyvals);
    };
    G__14658.cljs$lang$maxFixedArity = 0;
    G__14658.cljs$lang$applyTo = function(arglist__14659) {
      var keyvals = cljs.core.seq(arglist__14659);
      return G__14658__delegate(keyvals);
    };
    G__14658.cljs$core$IFn$_invoke$arity$variadic = G__14658__delegate;
    return G__14658;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(val, key, obj__$1) {
    return keys.push(key);
  });
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__14660 = i__$1 + 1;
      var G__14661 = j__$1 + 1;
      var G__14662 = len__$1 - 1;
      i__$1 = G__14660;
      j__$1 = G__14661;
      len__$1 = G__14662;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__14663 = i__$1 - 1;
      var G__14664 = j__$1 - 1;
      var G__14665 = len__$1 - 1;
      i__$1 = G__14663;
      j__$1 = G__14664;
      len__$1 = G__14665;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj14667 = {};
  return obj14667;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__14669 = s;
    if (G__14669) {
      var bit__4053__auto__ = G__14669.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4053__auto__ || G__14669.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__14669.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__14669);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__14669);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__14671 = s;
  if (G__14671) {
    var bit__4053__auto__ = G__14671.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4053__auto__ || G__14671.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__14671.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__14671);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__14671);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3403__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3403__auto__) {
    return or__3403__auto__;
  } else {
    var G__14675 = f;
    if (G__14675) {
      var bit__4053__auto__ = G__14675.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4053__auto__ || G__14675.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__14675.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__14675);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__14675);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && (!isNaN(n) && (!(n === Infinity) && parseFloat(n) === parseInt(n, 10)));
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && (cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__14676__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, x], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__14677 = cljs.core.conj.call(null, s, x__$1);
              var G__14678 = etc;
              s = G__14677;
              xs = G__14678;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__14676 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14676__delegate.call(this, x, y, more);
    };
    G__14676.cljs$lang$maxFixedArity = 2;
    G__14676.cljs$lang$applyTo = function(arglist__14679) {
      var x = cljs.core.first(arglist__14679);
      arglist__14679 = cljs.core.next(arglist__14679);
      var y = cljs.core.first(arglist__14679);
      var more = cljs.core.rest(arglist__14679);
      return G__14676__delegate(x, y, more);
    };
    G__14676.cljs$core$IFn$_invoke$arity$variadic = G__14676__delegate;
    return G__14676;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3403__auto__ = cljs.core.seq.call(null, coll);
    if (or__3403__auto__) {
      return or__3403__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__14681 = x;
            if (G__14681) {
              var bit__4046__auto__ = G__14681.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4046__auto__ || G__14681.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.call(null, xs, ys, xl, 0);
        } else {
          return null;
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__14682 = xs;
        var G__14683 = ys;
        var G__14684 = len;
        var G__14685 = n + 1;
        xs = G__14682;
        ys = G__14683;
        len = G__14684;
        n = G__14685;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__14686 = nval;
          var G__14687 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__14686;
          coll__$1 = G__14687;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__14690 = coll;
      if (G__14690) {
        var bit__4046__auto__ = G__14690.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4046__auto__ || G__14690.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__14691 = coll;
      if (G__14691) {
        var bit__4046__auto__ = G__14691.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4046__auto__ || G__14691.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, val, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__14692__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__14692 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14692__delegate.call(this, x, y, more);
    };
    G__14692.cljs$lang$maxFixedArity = 2;
    G__14692.cljs$lang$applyTo = function(arglist__14693) {
      var x = cljs.core.first(arglist__14693);
      arglist__14693 = cljs.core.next(arglist__14693);
      var y = cljs.core.first(arglist__14693);
      var more = cljs.core.rest(arglist__14693);
      return G__14692__delegate(x, y, more);
    };
    G__14692.cljs$core$IFn$_invoke$arity$variadic = G__14692__delegate;
    return G__14692;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__14694__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__14694 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14694__delegate.call(this, x, y, more);
    };
    G__14694.cljs$lang$maxFixedArity = 2;
    G__14694.cljs$lang$applyTo = function(arglist__14695) {
      var x = cljs.core.first(arglist__14695);
      arglist__14695 = cljs.core.next(arglist__14695);
      var y = cljs.core.first(arglist__14695);
      var more = cljs.core.rest(arglist__14695);
      return G__14694__delegate(x, y, more);
    };
    G__14694.cljs$core$IFn$_invoke$arity$variadic = G__14694__delegate;
    return G__14694;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__14696__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__14696 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14696__delegate.call(this, x, y, more);
    };
    G__14696.cljs$lang$maxFixedArity = 2;
    G__14696.cljs$lang$applyTo = function(arglist__14697) {
      var x = cljs.core.first(arglist__14697);
      arglist__14697 = cljs.core.next(arglist__14697);
      var y = cljs.core.first(arglist__14697);
      var more = cljs.core.rest(arglist__14697);
      return G__14696__delegate(x, y, more);
    };
    G__14696.cljs$core$IFn$_invoke$arity$variadic = G__14696__delegate;
    return G__14696;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__14698__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__14698 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14698__delegate.call(this, x, y, more);
    };
    G__14698.cljs$lang$maxFixedArity = 2;
    G__14698.cljs$lang$applyTo = function(arglist__14699) {
      var x = cljs.core.first(arglist__14699);
      arglist__14699 = cljs.core.next(arglist__14699);
      var y = cljs.core.first(arglist__14699);
      var more = cljs.core.rest(arglist__14699);
      return G__14698__delegate(x, y, more);
    };
    G__14698.cljs$core$IFn$_invoke$arity$variadic = G__14698__delegate;
    return G__14698;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__14700__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__14701 = y;
            var G__14702 = cljs.core.first.call(null, more);
            var G__14703 = cljs.core.next.call(null, more);
            x = G__14701;
            y = G__14702;
            more = G__14703;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__14700 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14700__delegate.call(this, x, y, more);
    };
    G__14700.cljs$lang$maxFixedArity = 2;
    G__14700.cljs$lang$applyTo = function(arglist__14704) {
      var x = cljs.core.first(arglist__14704);
      arglist__14704 = cljs.core.next(arglist__14704);
      var y = cljs.core.first(arglist__14704);
      var more = cljs.core.rest(arglist__14704);
      return G__14700__delegate(x, y, more);
    };
    G__14700.cljs$core$IFn$_invoke$arity$variadic = G__14700__delegate;
    return G__14700;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__14705__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__14706 = y;
            var G__14707 = cljs.core.first.call(null, more);
            var G__14708 = cljs.core.next.call(null, more);
            x = G__14706;
            y = G__14707;
            more = G__14708;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__14705 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14705__delegate.call(this, x, y, more);
    };
    G__14705.cljs$lang$maxFixedArity = 2;
    G__14705.cljs$lang$applyTo = function(arglist__14709) {
      var x = cljs.core.first(arglist__14709);
      arglist__14709 = cljs.core.next(arglist__14709);
      var y = cljs.core.first(arglist__14709);
      var more = cljs.core.rest(arglist__14709);
      return G__14705__delegate(x, y, more);
    };
    G__14705.cljs$core$IFn$_invoke$arity$variadic = G__14705__delegate;
    return G__14705;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__14710__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__14711 = y;
            var G__14712 = cljs.core.first.call(null, more);
            var G__14713 = cljs.core.next.call(null, more);
            x = G__14711;
            y = G__14712;
            more = G__14713;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__14710 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14710__delegate.call(this, x, y, more);
    };
    G__14710.cljs$lang$maxFixedArity = 2;
    G__14710.cljs$lang$applyTo = function(arglist__14714) {
      var x = cljs.core.first(arglist__14714);
      arglist__14714 = cljs.core.next(arglist__14714);
      var y = cljs.core.first(arglist__14714);
      var more = cljs.core.rest(arglist__14714);
      return G__14710__delegate(x, y, more);
    };
    G__14710.cljs$core$IFn$_invoke$arity$variadic = G__14710__delegate;
    return G__14710;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__14715__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__14716 = y;
            var G__14717 = cljs.core.first.call(null, more);
            var G__14718 = cljs.core.next.call(null, more);
            x = G__14716;
            y = G__14717;
            more = G__14718;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__14715 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14715__delegate.call(this, x, y, more);
    };
    G__14715.cljs$lang$maxFixedArity = 2;
    G__14715.cljs$lang$applyTo = function(arglist__14719) {
      var x = cljs.core.first(arglist__14719);
      arglist__14719 = cljs.core.next(arglist__14719);
      var y = cljs.core.first(arglist__14719);
      var more = cljs.core.rest(arglist__14719);
      return G__14715__delegate(x, y, more);
    };
    G__14715.cljs$core$IFn$_invoke$arity$variadic = G__14715__delegate;
    return G__14715;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3710__auto__ = x;
    var y__3711__auto__ = y;
    return x__3710__auto__ > y__3711__auto__ ? x__3710__auto__ : y__3711__auto__;
  };
  var max__3 = function() {
    var G__14720__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3710__auto__ = x;
        var y__3711__auto__ = y;
        return x__3710__auto__ > y__3711__auto__ ? x__3710__auto__ : y__3711__auto__;
      }(), more);
    };
    var G__14720 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14720__delegate.call(this, x, y, more);
    };
    G__14720.cljs$lang$maxFixedArity = 2;
    G__14720.cljs$lang$applyTo = function(arglist__14721) {
      var x = cljs.core.first(arglist__14721);
      arglist__14721 = cljs.core.next(arglist__14721);
      var y = cljs.core.first(arglist__14721);
      var more = cljs.core.rest(arglist__14721);
      return G__14720__delegate(x, y, more);
    };
    G__14720.cljs$core$IFn$_invoke$arity$variadic = G__14720__delegate;
    return G__14720;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3717__auto__ = x;
    var y__3718__auto__ = y;
    return x__3717__auto__ < y__3718__auto__ ? x__3717__auto__ : y__3718__auto__;
  };
  var min__3 = function() {
    var G__14722__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3717__auto__ = x;
        var y__3718__auto__ = y;
        return x__3717__auto__ < y__3718__auto__ ? x__3717__auto__ : y__3718__auto__;
      }(), more);
    };
    var G__14722 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14722__delegate.call(this, x, y, more);
    };
    G__14722.cljs$lang$maxFixedArity = 2;
    G__14722.cljs$lang$applyTo = function(arglist__14723) {
      var x = cljs.core.first(arglist__14723);
      arglist__14723 = cljs.core.next(arglist__14723);
      var y = cljs.core.first(arglist__14723);
      var more = cljs.core.rest(arglist__14723);
      return G__14722__delegate(x, y, more);
    };
    G__14722.cljs$core$IFn$_invoke$arity$variadic = G__14722__delegate;
    return G__14722;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      } else {
        return null;
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__14724__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__14724 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14724__delegate.call(this, x, y, more);
    };
    G__14724.cljs$lang$maxFixedArity = 2;
    G__14724.cljs$lang$applyTo = function(arglist__14725) {
      var x = cljs.core.first(arglist__14725);
      arglist__14725 = cljs.core.next(arglist__14725);
      var y = cljs.core.first(arglist__14725);
      var more = cljs.core.rest(arglist__14725);
      return G__14724__delegate(x, y, more);
    };
    G__14724.cljs$core$IFn$_invoke$arity$variadic = G__14724__delegate;
    return G__14724;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__14726__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__14726 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14726__delegate.call(this, x, y, more);
    };
    G__14726.cljs$lang$maxFixedArity = 2;
    G__14726.cljs$lang$applyTo = function(arglist__14727) {
      var x = cljs.core.first(arglist__14727);
      arglist__14727 = cljs.core.next(arglist__14727);
      var y = cljs.core.first(arglist__14727);
      var more = cljs.core.rest(arglist__14727);
      return G__14726__delegate(x, y, more);
    };
    G__14726.cljs$core$IFn$_invoke$arity$variadic = G__14726__delegate;
    return G__14726;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__14728__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__14728 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14728__delegate.call(this, x, y, more);
    };
    G__14728.cljs$lang$maxFixedArity = 2;
    G__14728.cljs$lang$applyTo = function(arglist__14729) {
      var x = cljs.core.first(arglist__14729);
      arglist__14729 = cljs.core.next(arglist__14729);
      var y = cljs.core.first(arglist__14729);
      var more = cljs.core.rest(arglist__14729);
      return G__14728__delegate(x, y, more);
    };
    G__14728.cljs$core$IFn$_invoke$arity$variadic = G__14728__delegate;
    return G__14728;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__14730__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__14730 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14730__delegate.call(this, x, y, more);
    };
    G__14730.cljs$lang$maxFixedArity = 2;
    G__14730.cljs$lang$applyTo = function(arglist__14731) {
      var x = cljs.core.first(arglist__14731);
      arglist__14731 = cljs.core.next(arglist__14731);
      var y = cljs.core.first(arglist__14731);
      var more = cljs.core.rest(arglist__14731);
      return G__14730__delegate(x, y, more);
    };
    G__14730.cljs$core$IFn$_invoke$arity$variadic = G__14730__delegate;
    return G__14730;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__14732__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__14732 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14732__delegate.call(this, x, y, more);
    };
    G__14732.cljs$lang$maxFixedArity = 2;
    G__14732.cljs$lang$applyTo = function(arglist__14733) {
      var x = cljs.core.first(arglist__14733);
      arglist__14733 = cljs.core.next(arglist__14733);
      var y = cljs.core.first(arglist__14733);
      var more = cljs.core.rest(arglist__14733);
      return G__14732__delegate(x, y, more);
    };
    G__14732.cljs$core$IFn$_invoke$arity$variadic = G__14732__delegate;
    return G__14732;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x;
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract__3 = function() {
    var G__14734__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more);
    };
    var G__14734 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14734__delegate.call(this, x, y, more);
    };
    G__14734.cljs$lang$maxFixedArity = 2;
    G__14734.cljs$lang$applyTo = function(arglist__14735) {
      var x = cljs.core.first(arglist__14735);
      arglist__14735 = cljs.core.next(arglist__14735);
      var y = cljs.core.first(arglist__14735);
      var more = cljs.core.rest(arglist__14735);
      return G__14734__delegate(x, y, more);
    };
    G__14734.cljs$core$IFn$_invoke$arity$variadic = G__14734__delegate;
    return G__14734;
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract;
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x;
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract_int__3 = function() {
    var G__14736__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more);
    };
    var G__14736 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14736__delegate.call(this, x, y, more);
    };
    G__14736.cljs$lang$maxFixedArity = 2;
    G__14736.cljs$lang$applyTo = function(arglist__14737) {
      var x = cljs.core.first(arglist__14737);
      arglist__14737 = cljs.core.next(arglist__14737);
      var y = cljs.core.first(arglist__14737);
      var more = cljs.core.rest(arglist__14737);
      return G__14736__delegate(x, y, more);
    };
    G__14736.cljs$core$IFn$_invoke$arity$variadic = G__14736__delegate;
    return G__14736;
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__14738__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__14739 = y;
            var G__14740 = cljs.core.first.call(null, more);
            var G__14741 = cljs.core.next.call(null, more);
            x = G__14739;
            y = G__14740;
            more = G__14741;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__14738 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14738__delegate.call(this, x, y, more);
    };
    G__14738.cljs$lang$maxFixedArity = 2;
    G__14738.cljs$lang$applyTo = function(arglist__14742) {
      var x = cljs.core.first(arglist__14742);
      arglist__14742 = cljs.core.next(arglist__14742);
      var y = cljs.core.first(arglist__14742);
      var more = cljs.core.rest(arglist__14742);
      return G__14738__delegate(x, y, more);
    };
    G__14738.cljs$core$IFn$_invoke$arity$variadic = G__14738__delegate;
    return G__14738;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__14743 = n__$1 - 1;
      var G__14744 = cljs.core.next.call(null, xs);
      n__$1 = G__14743;
      xs = G__14744;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return x.toString();
    }
  };
  var str__2 = function() {
    var G__14745__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__14746 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__14747 = cljs.core.next.call(null, more);
          sb = G__14746;
          more = G__14747;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__14745 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__14745__delegate.call(this, x, ys);
    };
    G__14745.cljs$lang$maxFixedArity = 1;
    G__14745.cljs$lang$applyTo = function(arglist__14748) {
      var x = cljs.core.first(arglist__14748);
      var ys = cljs.core.rest(arglist__14748);
      return G__14745__delegate(x, ys);
    };
    G__14745.cljs$core$IFn$_invoke$arity$variadic = G__14745__delegate;
    return G__14745;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__14749 = cljs.core.next.call(null, xs);
            var G__14750 = cljs.core.next.call(null, ys);
            xs = G__14749;
            ys = G__14750;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__14751 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__14752 = cljs.core.next.call(null, s);
        res = G__14751;
        s = G__14752;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__14753 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__14754 = cljs.core.next.call(null, s);
      h = G__14753;
      s = G__14754;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__14755 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__14756 = cljs.core.next.call(null, s__$1);
      h = G__14755;
      s__$1 = G__14756;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__14763_14769 = cljs.core.seq.call(null, fn_map);
  var chunk__14764_14770 = null;
  var count__14765_14771 = 0;
  var i__14766_14772 = 0;
  while (true) {
    if (i__14766_14772 < count__14765_14771) {
      var vec__14767_14773 = cljs.core._nth.call(null, chunk__14764_14770, i__14766_14772);
      var key_name_14774 = cljs.core.nth.call(null, vec__14767_14773, 0, null);
      var f_14775 = cljs.core.nth.call(null, vec__14767_14773, 1, null);
      var str_name_14776 = cljs.core.name.call(null, key_name_14774);
      obj[str_name_14776] = f_14775;
      var G__14777 = seq__14763_14769;
      var G__14778 = chunk__14764_14770;
      var G__14779 = count__14765_14771;
      var G__14780 = i__14766_14772 + 1;
      seq__14763_14769 = G__14777;
      chunk__14764_14770 = G__14778;
      count__14765_14771 = G__14779;
      i__14766_14772 = G__14780;
      continue;
    } else {
      var temp__4092__auto___14781 = cljs.core.seq.call(null, seq__14763_14769);
      if (temp__4092__auto___14781) {
        var seq__14763_14782__$1 = temp__4092__auto___14781;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__14763_14782__$1)) {
          var c__4151__auto___14783 = cljs.core.chunk_first.call(null, seq__14763_14782__$1);
          var G__14784 = cljs.core.chunk_rest.call(null, seq__14763_14782__$1);
          var G__14785 = c__4151__auto___14783;
          var G__14786 = cljs.core.count.call(null, c__4151__auto___14783);
          var G__14787 = 0;
          seq__14763_14769 = G__14784;
          chunk__14764_14770 = G__14785;
          count__14765_14771 = G__14786;
          i__14766_14772 = G__14787;
          continue;
        } else {
          var vec__14768_14788 = cljs.core.first.call(null, seq__14763_14782__$1);
          var key_name_14789 = cljs.core.nth.call(null, vec__14768_14788, 0, null);
          var f_14790 = cljs.core.nth.call(null, vec__14768_14788, 1, null);
          var str_name_14791 = cljs.core.name.call(null, key_name_14789);
          obj[str_name_14791] = f_14790;
          var G__14792 = cljs.core.next.call(null, seq__14763_14782__$1);
          var G__14793 = null;
          var G__14794 = 0;
          var G__14795 = 0;
          seq__14763_14769 = G__14792;
          chunk__14764_14770 = G__14793;
          count__14765_14771 = G__14794;
          i__14766_14772 = G__14795;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/List");
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__14797 = coll;
  if (G__14797) {
    var bit__4053__auto__ = G__14797.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4053__auto__ || G__14797.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__14797.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__14797);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__14797);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__14798 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__14798;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__14799 = i - 1;
        var G__14800 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__14799;
        r = G__14800;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__14801) {
    var xs = cljs.core.seq(arglist__14801);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3403__auto__ = coll == null;
    if (or__3403__auto__) {
      return or__3403__auto__;
    } else {
      var G__14805 = coll;
      if (G__14805) {
        var bit__4046__auto__ = G__14805.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4046__auto__ || G__14805.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__14807 = x;
  if (G__14807) {
    var bit__4053__auto__ = G__14807.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4053__auto__ || G__14807.cljs$core$IList$) {
      return true;
    } else {
      if (!G__14807.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__14807);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__14807);
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._hash == null) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name)) + 2654435769;
    return self__._hash;
  } else {
    return self__._hash;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__14809 = null;
  var G__14809__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__14809__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__14809 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14809__2.call(this, self__, coll);
      case 3:
        return G__14809__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14809;
}();
cljs.core.Keyword.prototype.apply = function(self__, args14808) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args14808)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__14811 = x;
    if (G__14811) {
      var bit__4046__auto__ = G__14811.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4046__auto__ || G__14811.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__14812 = ls.sval();
        ls = G__14812;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__14814 = s;
    if (G__14814) {
      var bit__4046__auto__ = G__14814.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4046__auto__ || G__14814.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__14815 = cljs.core.next.call(null, s__$1);
      s__$1 = G__14815;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_14816 = 0;
  var xs_14817 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_14817) {
      ret[i_14816] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_14817));
      var G__14818 = i_14816 + 1;
      var G__14819 = cljs.core.next.call(null, xs_14817);
      i_14816 = G__14818;
      xs_14817 = G__14819;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__14820 = i + 1;
          var G__14821 = cljs.core.next.call(null, s__$1);
          i = G__14820;
          s__$1 = G__14821;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4251__auto___14822 = size;
      var i_14823 = 0;
      while (true) {
        if (i_14823 < n__4251__auto___14822) {
          a[i_14823] = init_val_or_seq;
          var G__14824 = i_14823 + 1;
          i_14823 = G__14824;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__14825 = i + 1;
          var G__14826 = cljs.core.next.call(null, s__$1);
          i = G__14825;
          s__$1 = G__14826;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4251__auto___14827 = size;
      var i_14828 = 0;
      while (true) {
        if (i_14828 < n__4251__auto___14827) {
          a[i_14828] = init_val_or_seq;
          var G__14829 = i_14828 + 1;
          i_14828 = G__14829;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__14830 = i + 1;
          var G__14831 = cljs.core.next.call(null, s__$1);
          i = G__14830;
          s__$1 = G__14831;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4251__auto___14832 = size;
      var i_14833 = 0;
      while (true) {
        if (i_14833 < n__4251__auto___14832) {
          a[i_14833] = init_val_or_seq;
          var G__14834 = i_14833 + 1;
          i_14833 = G__14834;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__14835 = i + 1;
          var G__14836 = cljs.core.next.call(null, s__$1);
          i = G__14835;
          s__$1 = G__14836;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4251__auto___14837 = size;
      var i_14838 = 0;
      while (true) {
        if (i_14838 < n__4251__auto___14837) {
          a[i_14838] = init_val_or_seq;
          var G__14839 = i_14838 + 1;
          i_14838 = G__14839;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__14840 = cljs.core.next.call(null, s__$1);
        var G__14841 = i - 1;
        var G__14842 = sum + 1;
        s__$1 = G__14840;
        i = G__14841;
        sum = G__14842;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__14843__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__14843 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14843__delegate.call(this, x, y, zs);
    };
    G__14843.cljs$lang$maxFixedArity = 2;
    G__14843.cljs$lang$applyTo = function(arglist__14844) {
      var x = cljs.core.first(arglist__14844);
      arglist__14844 = cljs.core.next(arglist__14844);
      var y = cljs.core.first(arglist__14844);
      var zs = cljs.core.rest(arglist__14844);
      return G__14843__delegate(x, y, zs);
    };
    G__14843.cljs$core$IFn$_invoke$arity$variadic = G__14843__delegate;
    return G__14843;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__14845__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__14845 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__14845__delegate.call(this, a, b, c, d, more);
    };
    G__14845.cljs$lang$maxFixedArity = 4;
    G__14845.cljs$lang$applyTo = function(arglist__14846) {
      var a = cljs.core.first(arglist__14846);
      arglist__14846 = cljs.core.next(arglist__14846);
      var b = cljs.core.first(arglist__14846);
      arglist__14846 = cljs.core.next(arglist__14846);
      var c = cljs.core.first(arglist__14846);
      arglist__14846 = cljs.core.next(arglist__14846);
      var d = cljs.core.first(arglist__14846);
      var more = cljs.core.rest(arglist__14846);
      return G__14845__delegate(a, b, c, d, more);
    };
    G__14845.cljs$core$IFn$_invoke$arity$variadic = G__14845__delegate;
    return G__14845;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__14847__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__14848 = ntcoll;
          var G__14849 = cljs.core.first.call(null, vals);
          var G__14850 = cljs.core.next.call(null, vals);
          tcoll = G__14848;
          val = G__14849;
          vals = G__14850;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__14847 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14847__delegate.call(this, tcoll, val, vals);
    };
    G__14847.cljs$lang$maxFixedArity = 2;
    G__14847.cljs$lang$applyTo = function(arglist__14851) {
      var tcoll = cljs.core.first(arglist__14851);
      arglist__14851 = cljs.core.next(arglist__14851);
      var val = cljs.core.first(arglist__14851);
      var vals = cljs.core.rest(arglist__14851);
      return G__14847__delegate(tcoll, val, vals);
    };
    G__14847.cljs$core$IFn$_invoke$arity$variadic = G__14847__delegate;
    return G__14847;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__14852__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__14853 = ntcoll;
          var G__14854 = cljs.core.first.call(null, kvs);
          var G__14855 = cljs.core.second.call(null, kvs);
          var G__14856 = cljs.core.nnext.call(null, kvs);
          tcoll = G__14853;
          key = G__14854;
          val = G__14855;
          kvs = G__14856;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__14852 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__14852__delegate.call(this, tcoll, key, val, kvs);
    };
    G__14852.cljs$lang$maxFixedArity = 3;
    G__14852.cljs$lang$applyTo = function(arglist__14857) {
      var tcoll = cljs.core.first(arglist__14857);
      arglist__14857 = cljs.core.next(arglist__14857);
      var key = cljs.core.first(arglist__14857);
      arglist__14857 = cljs.core.next(arglist__14857);
      var val = cljs.core.first(arglist__14857);
      var kvs = cljs.core.rest(arglist__14857);
      return G__14852__delegate(tcoll, key, val, kvs);
    };
    G__14852.cljs$core$IFn$_invoke$arity$variadic = G__14852__delegate;
    return G__14852;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__14858__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__14859 = ntcoll;
          var G__14860 = cljs.core.first.call(null, ks);
          var G__14861 = cljs.core.next.call(null, ks);
          tcoll = G__14859;
          key = G__14860;
          ks = G__14861;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__14858 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14858__delegate.call(this, tcoll, key, ks);
    };
    G__14858.cljs$lang$maxFixedArity = 2;
    G__14858.cljs$lang$applyTo = function(arglist__14862) {
      var tcoll = cljs.core.first(arglist__14862);
      arglist__14862 = cljs.core.next(arglist__14862);
      var key = cljs.core.first(arglist__14862);
      var ks = cljs.core.rest(arglist__14862);
      return G__14858__delegate(tcoll, key, ks);
    };
    G__14858.cljs$core$IFn$_invoke$arity$variadic = G__14858__delegate;
    return G__14858;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__14863__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__14864 = ntcoll;
          var G__14865 = cljs.core.first.call(null, vals);
          var G__14866 = cljs.core.next.call(null, vals);
          tcoll = G__14864;
          val = G__14865;
          vals = G__14866;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__14863 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14863__delegate.call(this, tcoll, val, vals);
    };
    G__14863.cljs$lang$maxFixedArity = 2;
    G__14863.cljs$lang$applyTo = function(arglist__14867) {
      var tcoll = cljs.core.first(arglist__14867);
      arglist__14867 = cljs.core.next(arglist__14867);
      var val = cljs.core.first(arglist__14867);
      var vals = cljs.core.rest(arglist__14867);
      return G__14863__delegate(tcoll, val, vals);
    };
    G__14863.cljs$core$IFn$_invoke$arity$variadic = G__14863__delegate;
    return G__14863;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a);
      } else {
        return f.call(null, a);
      }
    } else {
      var b = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a, b);
        } else {
          return f.call(null, a, b);
        }
      } else {
        var c = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a, b, c);
          } else {
            return f.call(null, a, b, c);
          }
        } else {
          var d = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a, b, c, d);
            } else {
              return f.call(null, a, b, c, d);
            }
          } else {
            var e = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e);
              } else {
                return f.call(null, a, b, c, d, e);
              }
            } else {
              var f__$1 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f__$1.cljs$core$IFn$_invoke$arity$6) {
                  return f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1);
                } else {
                  return f__$1.call(null, a, b, c, d, e, f__$1);
                }
              } else {
                var g = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f__$1.cljs$core$IFn$_invoke$arity$7) {
                    return f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g);
                  } else {
                    return f__$1.call(null, a, b, c, d, e, f__$1, g);
                  }
                } else {
                  var h = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f__$1.cljs$core$IFn$_invoke$arity$8) {
                      return f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h);
                    } else {
                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h);
                    }
                  } else {
                    var i = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f__$1.cljs$core$IFn$_invoke$arity$9) {
                        return f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i);
                      } else {
                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i);
                      }
                    } else {
                      var j = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f__$1.cljs$core$IFn$_invoke$arity$10) {
                          return f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j);
                        } else {
                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j);
                        }
                      } else {
                        var k = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f__$1.cljs$core$IFn$_invoke$arity$11) {
                            return f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k);
                          } else {
                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k);
                          }
                        } else {
                          var l = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f__$1.cljs$core$IFn$_invoke$arity$12) {
                              return f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l);
                            } else {
                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l);
                            }
                          } else {
                            var m = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f__$1.cljs$core$IFn$_invoke$arity$13) {
                                return f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
                              } else {
                                return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
                              }
                            } else {
                              var n = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f__$1.cljs$core$IFn$_invoke$arity$14) {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
                                } else {
                                  return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
                                }
                              } else {
                                var o = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f__$1.cljs$core$IFn$_invoke$arity$15) {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
                                  } else {
                                    return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
                                  }
                                } else {
                                  var p = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f__$1.cljs$core$IFn$_invoke$arity$16) {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
                                    } else {
                                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
                                    }
                                  } else {
                                    var q = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f__$1.cljs$core$IFn$_invoke$arity$17) {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
                                      } else {
                                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
                                      }
                                    } else {
                                      var r = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f__$1.cljs$core$IFn$_invoke$arity$18) {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
                                        } else {
                                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
                                        }
                                      } else {
                                        var s = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f__$1.cljs$core$IFn$_invoke$arity$19) {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
                                          } else {
                                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
                                          }
                                        } else {
                                          var t = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f__$1.cljs$core$IFn$_invoke$arity$20) {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
                                            } else {
                                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__14868__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__14868 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__14868__delegate.call(this, f, a, b, c, d, args);
    };
    G__14868.cljs$lang$maxFixedArity = 5;
    G__14868.cljs$lang$applyTo = function(arglist__14869) {
      var f = cljs.core.first(arglist__14869);
      arglist__14869 = cljs.core.next(arglist__14869);
      var a = cljs.core.first(arglist__14869);
      arglist__14869 = cljs.core.next(arglist__14869);
      var b = cljs.core.first(arglist__14869);
      arglist__14869 = cljs.core.next(arglist__14869);
      var c = cljs.core.first(arglist__14869);
      arglist__14869 = cljs.core.next(arglist__14869);
      var d = cljs.core.first(arglist__14869);
      var args = cljs.core.rest(arglist__14869);
      return G__14868__delegate(f, a, b, c, d, args);
    };
    G__14868.cljs$core$IFn$_invoke$arity$variadic = G__14868__delegate;
    return G__14868;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__14870__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__14870 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__14870__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__14870.cljs$lang$maxFixedArity = 6;
    G__14870.cljs$lang$applyTo = function(arglist__14871) {
      var obj = cljs.core.first(arglist__14871);
      arglist__14871 = cljs.core.next(arglist__14871);
      var f = cljs.core.first(arglist__14871);
      arglist__14871 = cljs.core.next(arglist__14871);
      var a = cljs.core.first(arglist__14871);
      arglist__14871 = cljs.core.next(arglist__14871);
      var b = cljs.core.first(arglist__14871);
      arglist__14871 = cljs.core.next(arglist__14871);
      var c = cljs.core.first(arglist__14871);
      arglist__14871 = cljs.core.next(arglist__14871);
      var d = cljs.core.first(arglist__14871);
      var args = cljs.core.rest(arglist__14871);
      return G__14870__delegate(obj, f, a, b, c, d, args);
    };
    G__14870.cljs$core$IFn$_invoke$arity$variadic = G__14870__delegate;
    return G__14870;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__14872__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__14872 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14872__delegate.call(this, x, y, more);
    };
    G__14872.cljs$lang$maxFixedArity = 2;
    G__14872.cljs$lang$applyTo = function(arglist__14873) {
      var x = cljs.core.first(arglist__14873);
      arglist__14873 = cljs.core.next(arglist__14873);
      var y = cljs.core.first(arglist__14873);
      var more = cljs.core.rest(arglist__14873);
      return G__14872__delegate(x, y, more);
    };
    G__14872.cljs$core$IFn$_invoke$arity$variadic = G__14872__delegate;
    return G__14872;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__14874 = pred;
        var G__14875 = cljs.core.next.call(null, coll);
        pred = G__14874;
        coll = G__14875;
        continue;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3403__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        var G__14876 = pred;
        var G__14877 = cljs.core.next.call(null, coll);
        pred = G__14876;
        coll = G__14877;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__14878 = null;
    var G__14878__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__14878__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__14878__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__14878__3 = function() {
      var G__14879__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__14879 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__14879__delegate.call(this, x, y, zs);
      };
      G__14879.cljs$lang$maxFixedArity = 2;
      G__14879.cljs$lang$applyTo = function(arglist__14880) {
        var x = cljs.core.first(arglist__14880);
        arglist__14880 = cljs.core.next(arglist__14880);
        var y = cljs.core.first(arglist__14880);
        var zs = cljs.core.rest(arglist__14880);
        return G__14879__delegate(x, y, zs);
      };
      G__14879.cljs$core$IFn$_invoke$arity$variadic = G__14879__delegate;
      return G__14879;
    }();
    G__14878 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__14878__0.call(this);
        case 1:
          return G__14878__1.call(this, x);
        case 2:
          return G__14878__2.call(this, x, y);
        default:
          return G__14878__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14878.cljs$lang$maxFixedArity = 2;
    G__14878.cljs$lang$applyTo = G__14878__3.cljs$lang$applyTo;
    return G__14878;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__14881__delegate = function(args) {
      return x;
    };
    var G__14881 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__14881__delegate.call(this, args);
    };
    G__14881.cljs$lang$maxFixedArity = 0;
    G__14881.cljs$lang$applyTo = function(arglist__14882) {
      var args = cljs.core.seq(arglist__14882);
      return G__14881__delegate(args);
    };
    G__14881.cljs$core$IFn$_invoke$arity$variadic = G__14881__delegate;
    return G__14881;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__14883 = null;
      var G__14883__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__14883__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__14883__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__14883__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__14883__4 = function() {
        var G__14884__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__14884 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__14884__delegate.call(this, x, y, z, args);
        };
        G__14884.cljs$lang$maxFixedArity = 3;
        G__14884.cljs$lang$applyTo = function(arglist__14885) {
          var x = cljs.core.first(arglist__14885);
          arglist__14885 = cljs.core.next(arglist__14885);
          var y = cljs.core.first(arglist__14885);
          arglist__14885 = cljs.core.next(arglist__14885);
          var z = cljs.core.first(arglist__14885);
          var args = cljs.core.rest(arglist__14885);
          return G__14884__delegate(x, y, z, args);
        };
        G__14884.cljs$core$IFn$_invoke$arity$variadic = G__14884__delegate;
        return G__14884;
      }();
      G__14883 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14883__0.call(this);
          case 1:
            return G__14883__1.call(this, x);
          case 2:
            return G__14883__2.call(this, x, y);
          case 3:
            return G__14883__3.call(this, x, y, z);
          default:
            return G__14883__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14883.cljs$lang$maxFixedArity = 3;
      G__14883.cljs$lang$applyTo = G__14883__4.cljs$lang$applyTo;
      return G__14883;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__14886 = null;
      var G__14886__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__14886__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__14886__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__14886__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__14886__4 = function() {
        var G__14887__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__14887 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__14887__delegate.call(this, x, y, z, args);
        };
        G__14887.cljs$lang$maxFixedArity = 3;
        G__14887.cljs$lang$applyTo = function(arglist__14888) {
          var x = cljs.core.first(arglist__14888);
          arglist__14888 = cljs.core.next(arglist__14888);
          var y = cljs.core.first(arglist__14888);
          arglist__14888 = cljs.core.next(arglist__14888);
          var z = cljs.core.first(arglist__14888);
          var args = cljs.core.rest(arglist__14888);
          return G__14887__delegate(x, y, z, args);
        };
        G__14887.cljs$core$IFn$_invoke$arity$variadic = G__14887__delegate;
        return G__14887;
      }();
      G__14886 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14886__0.call(this);
          case 1:
            return G__14886__1.call(this, x);
          case 2:
            return G__14886__2.call(this, x, y);
          case 3:
            return G__14886__3.call(this, x, y, z);
          default:
            return G__14886__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14886.cljs$lang$maxFixedArity = 3;
      G__14886.cljs$lang$applyTo = G__14886__4.cljs$lang$applyTo;
      return G__14886;
    }();
  };
  var comp__4 = function() {
    var G__14889__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__14890__delegate = function(args) {
          var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
          var fs__$2 = cljs.core.next.call(null, fs__$1);
          while (true) {
            if (fs__$2) {
              var G__14891 = cljs.core.first.call(null, fs__$2).call(null, ret);
              var G__14892 = cljs.core.next.call(null, fs__$2);
              ret = G__14891;
              fs__$2 = G__14892;
              continue;
            } else {
              return ret;
            }
            break;
          }
        };
        var G__14890 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__14890__delegate.call(this, args);
        };
        G__14890.cljs$lang$maxFixedArity = 0;
        G__14890.cljs$lang$applyTo = function(arglist__14893) {
          var args = cljs.core.seq(arglist__14893);
          return G__14890__delegate(args);
        };
        G__14890.cljs$core$IFn$_invoke$arity$variadic = G__14890__delegate;
        return G__14890;
      }();
    };
    var G__14889 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__14889__delegate.call(this, f1, f2, f3, fs);
    };
    G__14889.cljs$lang$maxFixedArity = 3;
    G__14889.cljs$lang$applyTo = function(arglist__14894) {
      var f1 = cljs.core.first(arglist__14894);
      arglist__14894 = cljs.core.next(arglist__14894);
      var f2 = cljs.core.first(arglist__14894);
      arglist__14894 = cljs.core.next(arglist__14894);
      var f3 = cljs.core.first(arglist__14894);
      var fs = cljs.core.rest(arglist__14894);
      return G__14889__delegate(f1, f2, f3, fs);
    };
    G__14889.cljs$core$IFn$_invoke$arity$variadic = G__14889__delegate;
    return G__14889;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__14895__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__14895 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__14895__delegate.call(this, args);
      };
      G__14895.cljs$lang$maxFixedArity = 0;
      G__14895.cljs$lang$applyTo = function(arglist__14896) {
        var args = cljs.core.seq(arglist__14896);
        return G__14895__delegate(args);
      };
      G__14895.cljs$core$IFn$_invoke$arity$variadic = G__14895__delegate;
      return G__14895;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__14897__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__14897 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__14897__delegate.call(this, args);
      };
      G__14897.cljs$lang$maxFixedArity = 0;
      G__14897.cljs$lang$applyTo = function(arglist__14898) {
        var args = cljs.core.seq(arglist__14898);
        return G__14897__delegate(args);
      };
      G__14897.cljs$core$IFn$_invoke$arity$variadic = G__14897__delegate;
      return G__14897;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__14899__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__14899 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__14899__delegate.call(this, args);
      };
      G__14899.cljs$lang$maxFixedArity = 0;
      G__14899.cljs$lang$applyTo = function(arglist__14900) {
        var args = cljs.core.seq(arglist__14900);
        return G__14899__delegate(args);
      };
      G__14899.cljs$core$IFn$_invoke$arity$variadic = G__14899__delegate;
      return G__14899;
    }();
  };
  var partial__5 = function() {
    var G__14901__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__14902__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__14902 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__14902__delegate.call(this, args);
        };
        G__14902.cljs$lang$maxFixedArity = 0;
        G__14902.cljs$lang$applyTo = function(arglist__14903) {
          var args = cljs.core.seq(arglist__14903);
          return G__14902__delegate(args);
        };
        G__14902.cljs$core$IFn$_invoke$arity$variadic = G__14902__delegate;
        return G__14902;
      }();
    };
    var G__14901 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__14901__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__14901.cljs$lang$maxFixedArity = 4;
    G__14901.cljs$lang$applyTo = function(arglist__14904) {
      var f = cljs.core.first(arglist__14904);
      arglist__14904 = cljs.core.next(arglist__14904);
      var arg1 = cljs.core.first(arglist__14904);
      arglist__14904 = cljs.core.next(arglist__14904);
      var arg2 = cljs.core.first(arglist__14904);
      arglist__14904 = cljs.core.next(arglist__14904);
      var arg3 = cljs.core.first(arglist__14904);
      var more = cljs.core.rest(arglist__14904);
      return G__14901__delegate(f, arg1, arg2, arg3, more);
    };
    G__14901.cljs$core$IFn$_invoke$arity$variadic = G__14901__delegate;
    return G__14901;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__14905 = null;
      var G__14905__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__14905__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__14905__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__14905__4 = function() {
        var G__14906__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__14906 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__14906__delegate.call(this, a, b, c, ds);
        };
        G__14906.cljs$lang$maxFixedArity = 3;
        G__14906.cljs$lang$applyTo = function(arglist__14907) {
          var a = cljs.core.first(arglist__14907);
          arglist__14907 = cljs.core.next(arglist__14907);
          var b = cljs.core.first(arglist__14907);
          arglist__14907 = cljs.core.next(arglist__14907);
          var c = cljs.core.first(arglist__14907);
          var ds = cljs.core.rest(arglist__14907);
          return G__14906__delegate(a, b, c, ds);
        };
        G__14906.cljs$core$IFn$_invoke$arity$variadic = G__14906__delegate;
        return G__14906;
      }();
      G__14905 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__14905__1.call(this, a);
          case 2:
            return G__14905__2.call(this, a, b);
          case 3:
            return G__14905__3.call(this, a, b, c);
          default:
            return G__14905__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14905.cljs$lang$maxFixedArity = 3;
      G__14905.cljs$lang$applyTo = G__14905__4.cljs$lang$applyTo;
      return G__14905;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__14908 = null;
      var G__14908__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__14908__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__14908__4 = function() {
        var G__14909__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__14909 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__14909__delegate.call(this, a, b, c, ds);
        };
        G__14909.cljs$lang$maxFixedArity = 3;
        G__14909.cljs$lang$applyTo = function(arglist__14910) {
          var a = cljs.core.first(arglist__14910);
          arglist__14910 = cljs.core.next(arglist__14910);
          var b = cljs.core.first(arglist__14910);
          arglist__14910 = cljs.core.next(arglist__14910);
          var c = cljs.core.first(arglist__14910);
          var ds = cljs.core.rest(arglist__14910);
          return G__14909__delegate(a, b, c, ds);
        };
        G__14909.cljs$core$IFn$_invoke$arity$variadic = G__14909__delegate;
        return G__14909;
      }();
      G__14908 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__14908__2.call(this, a, b);
          case 3:
            return G__14908__3.call(this, a, b, c);
          default:
            return G__14908__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14908.cljs$lang$maxFixedArity = 3;
      G__14908.cljs$lang$applyTo = G__14908__4.cljs$lang$applyTo;
      return G__14908;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__14911 = null;
      var G__14911__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__14911__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__14911__4 = function() {
        var G__14912__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__14912 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__14912__delegate.call(this, a, b, c, ds);
        };
        G__14912.cljs$lang$maxFixedArity = 3;
        G__14912.cljs$lang$applyTo = function(arglist__14913) {
          var a = cljs.core.first(arglist__14913);
          arglist__14913 = cljs.core.next(arglist__14913);
          var b = cljs.core.first(arglist__14913);
          arglist__14913 = cljs.core.next(arglist__14913);
          var c = cljs.core.first(arglist__14913);
          var ds = cljs.core.rest(arglist__14913);
          return G__14912__delegate(a, b, c, ds);
        };
        G__14912.cljs$core$IFn$_invoke$arity$variadic = G__14912__delegate;
        return G__14912;
      }();
      G__14911 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__14911__2.call(this, a, b);
          case 3:
            return G__14911__3.call(this, a, b, c);
          default:
            return G__14911__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14911.cljs$lang$maxFixedArity = 3;
      G__14911.cljs$lang$applyTo = G__14911__4.cljs$lang$applyTo;
      return G__14911;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4251__auto___14914 = size;
          var i_14915 = 0;
          while (true) {
            if (i_14915 < n__4251__auto___14914) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_14915, cljs.core._nth.call(null, c, i_14915)));
              var G__14916 = i_14915 + 1;
              i_14915 = G__14916;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4251__auto___14917 = size;
        var i_14918 = 0;
        while (true) {
          if (i_14918 < n__4251__auto___14917) {
            var x_14919 = f.call(null, cljs.core._nth.call(null, c, i_14918));
            if (x_14919 == null) {
            } else {
              cljs.core.chunk_append.call(null, b, x_14919);
            }
            var G__14920 = i_14918 + 1;
            i_14918 = G__14920;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
      } else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if (x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s));
        } else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4251__auto___14921 = size;
          var i_14922 = 0;
          while (true) {
            if (i_14922 < n__4251__auto___14921) {
              var x_14923 = f.call(null, idx + i_14922, cljs.core._nth.call(null, c, i_14922));
              if (x_14923 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_14923);
              }
              var G__14924 = i_14922 + 1;
              i_14922 = G__14924;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if (x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi.call(null, 0, coll);
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3391__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3391__auto__)) {
            return p.call(null, y);
          } else {
            return and__3391__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3391__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3391__auto__)) {
            var and__3391__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3391__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3391__auto____$1;
            }
          } else {
            return and__3391__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__14931__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__14931 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__14931__delegate.call(this, x, y, z, args);
        };
        G__14931.cljs$lang$maxFixedArity = 3;
        G__14931.cljs$lang$applyTo = function(arglist__14932) {
          var x = cljs.core.first(arglist__14932);
          arglist__14932 = cljs.core.next(arglist__14932);
          var y = cljs.core.first(arglist__14932);
          arglist__14932 = cljs.core.next(arglist__14932);
          var z = cljs.core.first(arglist__14932);
          var args = cljs.core.rest(arglist__14932);
          return G__14931__delegate(x, y, z, args);
        };
        G__14931.cljs$core$IFn$_invoke$arity$variadic = G__14931__delegate;
        return G__14931;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3391__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3391__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3391__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3391__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3391__auto__)) {
            var and__3391__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3391__auto____$1)) {
              var and__3391__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3391__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3391__auto____$2;
              }
            } else {
              return and__3391__auto____$1;
            }
          } else {
            return and__3391__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3391__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3391__auto__)) {
            var and__3391__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3391__auto____$1)) {
              var and__3391__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3391__auto____$2)) {
                var and__3391__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3391__auto____$3)) {
                  var and__3391__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3391__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3391__auto____$4;
                  }
                } else {
                  return and__3391__auto____$3;
                }
              } else {
                return and__3391__auto____$2;
              }
            } else {
              return and__3391__auto____$1;
            }
          } else {
            return and__3391__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__14933__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__14925_SHARP_) {
            var and__3391__auto__ = p1.call(null, p1__14925_SHARP_);
            if (cljs.core.truth_(and__3391__auto__)) {
              return p2.call(null, p1__14925_SHARP_);
            } else {
              return and__3391__auto__;
            }
          }, args));
        };
        var G__14933 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__14933__delegate.call(this, x, y, z, args);
        };
        G__14933.cljs$lang$maxFixedArity = 3;
        G__14933.cljs$lang$applyTo = function(arglist__14934) {
          var x = cljs.core.first(arglist__14934);
          arglist__14934 = cljs.core.next(arglist__14934);
          var y = cljs.core.first(arglist__14934);
          arglist__14934 = cljs.core.next(arglist__14934);
          var z = cljs.core.first(arglist__14934);
          var args = cljs.core.rest(arglist__14934);
          return G__14933__delegate(x, y, z, args);
        };
        G__14933.cljs$core$IFn$_invoke$arity$variadic = G__14933__delegate;
        return G__14933;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3391__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3391__auto__)) {
            var and__3391__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3391__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3391__auto____$1;
            }
          } else {
            return and__3391__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3391__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3391__auto__)) {
            var and__3391__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3391__auto____$1)) {
              var and__3391__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3391__auto____$2)) {
                var and__3391__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3391__auto____$3)) {
                  var and__3391__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3391__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3391__auto____$4;
                  }
                } else {
                  return and__3391__auto____$3;
                }
              } else {
                return and__3391__auto____$2;
              }
            } else {
              return and__3391__auto____$1;
            }
          } else {
            return and__3391__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3391__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3391__auto__)) {
            var and__3391__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3391__auto____$1)) {
              var and__3391__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3391__auto____$2)) {
                var and__3391__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3391__auto____$3)) {
                  var and__3391__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3391__auto____$4)) {
                    var and__3391__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3391__auto____$5)) {
                      var and__3391__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3391__auto____$6)) {
                        var and__3391__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3391__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3391__auto____$7;
                        }
                      } else {
                        return and__3391__auto____$6;
                      }
                    } else {
                      return and__3391__auto____$5;
                    }
                  } else {
                    return and__3391__auto____$4;
                  }
                } else {
                  return and__3391__auto____$3;
                }
              } else {
                return and__3391__auto____$2;
              }
            } else {
              return and__3391__auto____$1;
            }
          } else {
            return and__3391__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__14935__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__14926_SHARP_) {
            var and__3391__auto__ = p1.call(null, p1__14926_SHARP_);
            if (cljs.core.truth_(and__3391__auto__)) {
              var and__3391__auto____$1 = p2.call(null, p1__14926_SHARP_);
              if (cljs.core.truth_(and__3391__auto____$1)) {
                return p3.call(null, p1__14926_SHARP_);
              } else {
                return and__3391__auto____$1;
              }
            } else {
              return and__3391__auto__;
            }
          }, args));
        };
        var G__14935 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__14935__delegate.call(this, x, y, z, args);
        };
        G__14935.cljs$lang$maxFixedArity = 3;
        G__14935.cljs$lang$applyTo = function(arglist__14936) {
          var x = cljs.core.first(arglist__14936);
          arglist__14936 = cljs.core.next(arglist__14936);
          var y = cljs.core.first(arglist__14936);
          arglist__14936 = cljs.core.next(arglist__14936);
          var z = cljs.core.first(arglist__14936);
          var args = cljs.core.rest(arglist__14936);
          return G__14935__delegate(x, y, z, args);
        };
        G__14935.cljs$core$IFn$_invoke$arity$variadic = G__14935__delegate;
        return G__14935;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__14937__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true;
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__14927_SHARP_) {
            return p1__14927_SHARP_.call(null, x);
          }, ps__$1);
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__14928_SHARP_) {
            var and__3391__auto__ = p1__14928_SHARP_.call(null, x);
            if (cljs.core.truth_(and__3391__auto__)) {
              return p1__14928_SHARP_.call(null, y);
            } else {
              return and__3391__auto__;
            }
          }, ps__$1);
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__14929_SHARP_) {
            var and__3391__auto__ = p1__14929_SHARP_.call(null, x);
            if (cljs.core.truth_(and__3391__auto__)) {
              var and__3391__auto____$1 = p1__14929_SHARP_.call(null, y);
              if (cljs.core.truth_(and__3391__auto____$1)) {
                return p1__14929_SHARP_.call(null, z);
              } else {
                return and__3391__auto____$1;
              }
            } else {
              return and__3391__auto__;
            }
          }, ps__$1);
        };
        var epn__4 = function() {
          var G__14938__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__14930_SHARP_) {
              return cljs.core.every_QMARK_.call(null, p1__14930_SHARP_, args);
            }, ps__$1));
          };
          var G__14938 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__14938__delegate.call(this, x, y, z, args);
          };
          G__14938.cljs$lang$maxFixedArity = 3;
          G__14938.cljs$lang$applyTo = function(arglist__14939) {
            var x = cljs.core.first(arglist__14939);
            arglist__14939 = cljs.core.next(arglist__14939);
            var y = cljs.core.first(arglist__14939);
            arglist__14939 = cljs.core.next(arglist__14939);
            var z = cljs.core.first(arglist__14939);
            var args = cljs.core.rest(arglist__14939);
            return G__14938__delegate(x, y, z, args);
          };
          G__14938.cljs$core$IFn$_invoke$arity$variadic = G__14938__delegate;
          return G__14938;
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
        epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
        epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
        epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
        epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
        return epn;
      }();
    };
    var G__14937 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__14937__delegate.call(this, p1, p2, p3, ps);
    };
    G__14937.cljs$lang$maxFixedArity = 3;
    G__14937.cljs$lang$applyTo = function(arglist__14940) {
      var p1 = cljs.core.first(arglist__14940);
      arglist__14940 = cljs.core.next(arglist__14940);
      var p2 = cljs.core.first(arglist__14940);
      arglist__14940 = cljs.core.next(arglist__14940);
      var p3 = cljs.core.first(arglist__14940);
      var ps = cljs.core.rest(arglist__14940);
      return G__14937__delegate(p1, p2, p3, ps);
    };
    G__14937.cljs$core$IFn$_invoke$arity$variadic = G__14937__delegate;
    return G__14937;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3403__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3403__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3403__auto____$1)) {
            return or__3403__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__14947__delegate = function(x, y, z, args) {
          var or__3403__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__14947 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__14947__delegate.call(this, x, y, z, args);
        };
        G__14947.cljs$lang$maxFixedArity = 3;
        G__14947.cljs$lang$applyTo = function(arglist__14948) {
          var x = cljs.core.first(arglist__14948);
          arglist__14948 = cljs.core.next(arglist__14948);
          var y = cljs.core.first(arglist__14948);
          arglist__14948 = cljs.core.next(arglist__14948);
          var z = cljs.core.first(arglist__14948);
          var args = cljs.core.rest(arglist__14948);
          return G__14947__delegate(x, y, z, args);
        };
        G__14947.cljs$core$IFn$_invoke$arity$variadic = G__14947__delegate;
        return G__14947;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3403__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3403__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3403__auto____$1)) {
            return or__3403__auto____$1;
          } else {
            var or__3403__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3403__auto____$2)) {
              return or__3403__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3403__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3403__auto____$1)) {
            return or__3403__auto____$1;
          } else {
            var or__3403__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3403__auto____$2)) {
              return or__3403__auto____$2;
            } else {
              var or__3403__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3403__auto____$3)) {
                return or__3403__auto____$3;
              } else {
                var or__3403__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3403__auto____$4)) {
                  return or__3403__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__14949__delegate = function(x, y, z, args) {
          var or__3403__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return cljs.core.some.call(null, function(p1__14941_SHARP_) {
              var or__3403__auto____$1 = p1.call(null, p1__14941_SHARP_);
              if (cljs.core.truth_(or__3403__auto____$1)) {
                return or__3403__auto____$1;
              } else {
                return p2.call(null, p1__14941_SHARP_);
              }
            }, args);
          }
        };
        var G__14949 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__14949__delegate.call(this, x, y, z, args);
        };
        G__14949.cljs$lang$maxFixedArity = 3;
        G__14949.cljs$lang$applyTo = function(arglist__14950) {
          var x = cljs.core.first(arglist__14950);
          arglist__14950 = cljs.core.next(arglist__14950);
          var y = cljs.core.first(arglist__14950);
          arglist__14950 = cljs.core.next(arglist__14950);
          var z = cljs.core.first(arglist__14950);
          var args = cljs.core.rest(arglist__14950);
          return G__14949__delegate(x, y, z, args);
        };
        G__14949.cljs$core$IFn$_invoke$arity$variadic = G__14949__delegate;
        return G__14949;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3403__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3403__auto____$1)) {
            return or__3403__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3403__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3403__auto____$1)) {
            return or__3403__auto____$1;
          } else {
            var or__3403__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3403__auto____$2)) {
              return or__3403__auto____$2;
            } else {
              var or__3403__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3403__auto____$3)) {
                return or__3403__auto____$3;
              } else {
                var or__3403__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3403__auto____$4)) {
                  return or__3403__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3403__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3403__auto____$1)) {
            return or__3403__auto____$1;
          } else {
            var or__3403__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3403__auto____$2)) {
              return or__3403__auto____$2;
            } else {
              var or__3403__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3403__auto____$3)) {
                return or__3403__auto____$3;
              } else {
                var or__3403__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3403__auto____$4)) {
                  return or__3403__auto____$4;
                } else {
                  var or__3403__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3403__auto____$5)) {
                    return or__3403__auto____$5;
                  } else {
                    var or__3403__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3403__auto____$6)) {
                      return or__3403__auto____$6;
                    } else {
                      var or__3403__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3403__auto____$7)) {
                        return or__3403__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__14951__delegate = function(x, y, z, args) {
          var or__3403__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return cljs.core.some.call(null, function(p1__14942_SHARP_) {
              var or__3403__auto____$1 = p1.call(null, p1__14942_SHARP_);
              if (cljs.core.truth_(or__3403__auto____$1)) {
                return or__3403__auto____$1;
              } else {
                var or__3403__auto____$2 = p2.call(null, p1__14942_SHARP_);
                if (cljs.core.truth_(or__3403__auto____$2)) {
                  return or__3403__auto____$2;
                } else {
                  return p3.call(null, p1__14942_SHARP_);
                }
              }
            }, args);
          }
        };
        var G__14951 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__14951__delegate.call(this, x, y, z, args);
        };
        G__14951.cljs$lang$maxFixedArity = 3;
        G__14951.cljs$lang$applyTo = function(arglist__14952) {
          var x = cljs.core.first(arglist__14952);
          arglist__14952 = cljs.core.next(arglist__14952);
          var y = cljs.core.first(arglist__14952);
          arglist__14952 = cljs.core.next(arglist__14952);
          var z = cljs.core.first(arglist__14952);
          var args = cljs.core.rest(arglist__14952);
          return G__14951__delegate(x, y, z, args);
        };
        G__14951.cljs$core$IFn$_invoke$arity$variadic = G__14951__delegate;
        return G__14951;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__14953__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null;
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__14943_SHARP_) {
            return p1__14943_SHARP_.call(null, x);
          }, ps__$1);
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__14944_SHARP_) {
            var or__3403__auto__ = p1__14944_SHARP_.call(null, x);
            if (cljs.core.truth_(or__3403__auto__)) {
              return or__3403__auto__;
            } else {
              return p1__14944_SHARP_.call(null, y);
            }
          }, ps__$1);
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__14945_SHARP_) {
            var or__3403__auto__ = p1__14945_SHARP_.call(null, x);
            if (cljs.core.truth_(or__3403__auto__)) {
              return or__3403__auto__;
            } else {
              var or__3403__auto____$1 = p1__14945_SHARP_.call(null, y);
              if (cljs.core.truth_(or__3403__auto____$1)) {
                return or__3403__auto____$1;
              } else {
                return p1__14945_SHARP_.call(null, z);
              }
            }
          }, ps__$1);
        };
        var spn__4 = function() {
          var G__14954__delegate = function(x, y, z, args) {
            var or__3403__auto__ = spn.call(null, x, y, z);
            if (cljs.core.truth_(or__3403__auto__)) {
              return or__3403__auto__;
            } else {
              return cljs.core.some.call(null, function(p1__14946_SHARP_) {
                return cljs.core.some.call(null, p1__14946_SHARP_, args);
              }, ps__$1);
            }
          };
          var G__14954 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__14954__delegate.call(this, x, y, z, args);
          };
          G__14954.cljs$lang$maxFixedArity = 3;
          G__14954.cljs$lang$applyTo = function(arglist__14955) {
            var x = cljs.core.first(arglist__14955);
            arglist__14955 = cljs.core.next(arglist__14955);
            var y = cljs.core.first(arglist__14955);
            arglist__14955 = cljs.core.next(arglist__14955);
            var z = cljs.core.first(arglist__14955);
            var args = cljs.core.rest(arglist__14955);
            return G__14954__delegate(x, y, z, args);
          };
          G__14954.cljs$core$IFn$_invoke$arity$variadic = G__14954__delegate;
          return G__14954;
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
        spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
        spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
        spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
        spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
        return spn;
      }();
    };
    var G__14953 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__14953__delegate.call(this, p1, p2, p3, ps);
    };
    G__14953.cljs$lang$maxFixedArity = 3;
    G__14953.cljs$lang$applyTo = function(arglist__14956) {
      var p1 = cljs.core.first(arglist__14956);
      arglist__14956 = cljs.core.next(arglist__14956);
      var p2 = cljs.core.first(arglist__14956);
      arglist__14956 = cljs.core.next(arglist__14956);
      var p3 = cljs.core.first(arglist__14956);
      var ps = cljs.core.rest(arglist__14956);
      return G__14953__delegate(p1, p2, p3, ps);
    };
    G__14953.cljs$core$IFn$_invoke$arity$variadic = G__14953__delegate;
    return G__14953;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4251__auto___14958 = size;
          var i_14959 = 0;
          while (true) {
            if (i_14959 < n__4251__auto___14958) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_14959)));
              var G__14960 = i_14959 + 1;
              i_14959 = G__14960;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && (s2 && s3)) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__14961__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(p1__14957_SHARP_) {
        return cljs.core.apply.call(null, f, p1__14957_SHARP_);
      }, step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__14961 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__14961__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__14961.cljs$lang$maxFixedArity = 4;
    G__14961.cljs$lang$applyTo = function(arglist__14962) {
      var f = cljs.core.first(arglist__14962);
      arglist__14962 = cljs.core.next(arglist__14962);
      var c1 = cljs.core.first(arglist__14962);
      arglist__14962 = cljs.core.next(arglist__14962);
      var c2 = cljs.core.first(arglist__14962);
      arglist__14962 = cljs.core.next(arglist__14962);
      var c3 = cljs.core.first(arglist__14962);
      var colls = cljs.core.rest(arglist__14962);
      return G__14961__delegate(f, c1, c2, c3, colls);
    };
    G__14961.cljs$core$IFn$_invoke$arity$variadic = G__14961__delegate;
    return G__14961;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (n__$1 > 0 && s) {
        var G__14963 = n__$1 - 1;
        var G__14964 = cljs.core.rest.call(null, s);
        n__$1 = G__14963;
        coll__$1 = G__14964;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, n, coll);
  }, null, null);
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__14965 = cljs.core.next.call(null, s);
      var G__14966 = cljs.core.next.call(null, lead);
      s = G__14965;
      lead = G__14966;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (cljs.core.truth_(function() {
        var and__3391__auto__ = s;
        if (and__3391__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s));
        } else {
          return and__3391__auto__;
        }
      }())) {
        var G__14967 = pred__$1;
        var G__14968 = cljs.core.rest.call(null, s);
        pred__$1 = G__14967;
        coll__$1 = G__14968;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, pred, coll);
  }, null, null);
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__14969__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__14969 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14969__delegate.call(this, c1, c2, colls);
    };
    G__14969.cljs$lang$maxFixedArity = 2;
    G__14969.cljs$lang$applyTo = function(arglist__14970) {
      var c1 = cljs.core.first(arglist__14970);
      arglist__14970 = cljs.core.next(arglist__14970);
      var c2 = cljs.core.first(arglist__14970);
      var colls = cljs.core.rest(arglist__14970);
      return G__14969__delegate(c1, c2, colls);
    };
    G__14969.cljs$core$IFn$_invoke$arity$variadic = G__14969__delegate;
    return G__14969;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll));
  };
  var mapcat__3 = function() {
    var G__14971__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls));
    };
    var G__14971 = function(f, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14971__delegate.call(this, f, coll, colls);
    };
    G__14971.cljs$lang$maxFixedArity = 2;
    G__14971.cljs$lang$applyTo = function(arglist__14972) {
      var f = cljs.core.first(arglist__14972);
      arglist__14972 = cljs.core.next(arglist__14972);
      var coll = cljs.core.first(arglist__14972);
      var colls = cljs.core.rest(arglist__14972);
      return G__14971__delegate(f, coll, colls);
    };
    G__14971.cljs$core$IFn$_invoke$arity$variadic = G__14971__delegate;
    return G__14971;
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4251__auto___14973 = size;
        var i_14974 = 0;
        while (true) {
          if (i_14974 < n__4251__auto___14973) {
            if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_14974)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_14974));
            } else {
            }
            var G__14975 = i_14974 + 1;
            i_14974 = G__14975;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
      } else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if (cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r));
        } else {
          return filter.call(null, pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__14976_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__14976_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function into(to, from) {
  if (!(to == null)) {
    if (function() {
      var G__14978 = to;
      if (G__14978) {
        var bit__4046__auto__ = G__14978.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4046__auto__ || G__14978.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from));
    } else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__14979__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__14979 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__14979__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__14979.cljs$lang$maxFixedArity = 4;
    G__14979.cljs$lang$applyTo = function(arglist__14980) {
      var f = cljs.core.first(arglist__14980);
      arglist__14980 = cljs.core.next(arglist__14980);
      var c1 = cljs.core.first(arglist__14980);
      arglist__14980 = cljs.core.next(arglist__14980);
      var c2 = cljs.core.first(arglist__14980);
      arglist__14980 = cljs.core.next(arglist__14980);
      var c3 = cljs.core.first(arglist__14980);
      var colls = cljs.core.rest(arglist__14980);
      return G__14979__delegate(f, c1, c2, c3, colls);
    };
    G__14979.cljs$core$IFn$_invoke$arity$variadic = G__14979__delegate;
    return G__14979;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__14982 = m__$1;
          if (G__14982) {
            var bit__4053__auto__ = G__14982.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4053__auto__ || G__14982.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__14982.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__14982);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__14982);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__14983 = sentinel;
            var G__14984 = m__$2;
            var G__14985 = cljs.core.next.call(null, ks__$1);
            sentinel = G__14983;
            m__$1 = G__14984;
            ks__$1 = G__14985;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__14986, v) {
  var vec__14988 = p__14986;
  var k = cljs.core.nth.call(null, vec__14988, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__14988, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__14989, f) {
    var vec__14999 = p__14989;
    var k = cljs.core.nth.call(null, vec__14999, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__14999, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__14990, f, a) {
    var vec__15000 = p__14990;
    var k = cljs.core.nth.call(null, vec__15000, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__15000, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__14991, f, a, b) {
    var vec__15001 = p__14991;
    var k = cljs.core.nth.call(null, vec__15001, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__15001, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__14992, f, a, b, c) {
    var vec__15002 = p__14992;
    var k = cljs.core.nth.call(null, vec__15002, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__15002, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__15004__delegate = function(m, p__14993, f, a, b, c, args) {
      var vec__15003 = p__14993;
      var k = cljs.core.nth.call(null, vec__15003, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__15003, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__15004 = function(m, p__14993, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__15004__delegate.call(this, m, p__14993, f, a, b, c, args);
    };
    G__15004.cljs$lang$maxFixedArity = 6;
    G__15004.cljs$lang$applyTo = function(arglist__15005) {
      var m = cljs.core.first(arglist__15005);
      arglist__15005 = cljs.core.next(arglist__15005);
      var p__14993 = cljs.core.first(arglist__15005);
      arglist__15005 = cljs.core.next(arglist__15005);
      var f = cljs.core.first(arglist__15005);
      arglist__15005 = cljs.core.next(arglist__15005);
      var a = cljs.core.first(arglist__15005);
      arglist__15005 = cljs.core.next(arglist__15005);
      var b = cljs.core.first(arglist__15005);
      arglist__15005 = cljs.core.next(arglist__15005);
      var c = cljs.core.first(arglist__15005);
      var args = cljs.core.rest(arglist__15005);
      return G__15004__delegate(m, p__14993, f, a, b, c, args);
    };
    G__15004.cljs$core$IFn$_invoke$arity$variadic = G__15004__delegate;
    return G__15004;
  }();
  update_in = function(m, p__14993, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__14993, f);
      case 4:
        return update_in__4.call(this, m, p__14993, f, a);
      case 5:
        return update_in__5.call(this, m, p__14993, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__14993, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__14993, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__3973__auto__, writer__3974__auto__, opts__3975__auto__) {
  return cljs.core._write.call(null, writer__3974__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__15006 = ll - 5;
      var G__15007 = r;
      ll = G__15006;
      ret = G__15007;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    if (i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail;
    } else {
      var node = pv.root;
      var level = pv.shift;
      while (true) {
        if (level > 0) {
          var G__15008 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
          var G__15009 = level - 5;
          node = G__15008;
          level = G__15009;
          continue;
        } else {
          return node.arr;
        }
        break;
      }
    }
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found);
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= k && k < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= k) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[k & 31] = v;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, k, v), self__.tail, null);
    }
  } else {
    if (k === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, v);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__15011 = null;
  var G__15011__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__15011__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__15011 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15011__2.call(this, self__, k);
      case 3:
        return G__15011__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__15011;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args15010) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15010)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while (true) {
          if (j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2;
            } else {
              var G__15012 = j + 1;
              var G__15013 = init__$2;
              j = G__15012;
              init__$1 = G__15013;
              continue;
            }
          } else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1);
      } else {
        var G__15014 = i + step_init[0];
        i = G__15014;
        continue;
      }
    } else {
      return step_init[1];
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4251__auto___15015 = len;
    var i_15016 = 0;
    while (true) {
      if (i_15016 < n__4251__auto___15015) {
        new_tail[i_15016] = self__.tail[i_15016];
        var G__15017 = i_15016 + 1;
        i_15016 = G__15017;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start);
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt < 32) {
      return cljs.core.array_seq.call(null, self__.tail);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.call(null, coll__$1, 0, 0);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.array_for.call(null, coll__$1, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
          } else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._assoc.call(null, coll__$1, n, val);
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__15018 = i + 1;
        var G__15019 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__15018;
        out = G__15019;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray.call(null, args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__15020) {
    var args = cljs.core.seq(arglist__15020);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if (s == null) {
    return null;
  } else {
    return s;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if (s == null) {
    return cljs.core.List.EMPTY;
  } else {
    return s;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32400159;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + key;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3710__auto__ = self__.end;
    var y__3711__auto__ = v_pos + 1;
    return x__3710__auto__ > y__3711__auto__ ? x__3710__auto__ : y__3711__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__15022 = null;
  var G__15022__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__15022__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__15022 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15022__2.call(this, self__, k);
      case 3:
        return G__15022__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__15022;
}();
cljs.core.Subvec.prototype.apply = function(self__, args15021) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15021)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function subvec_seq(i) {
    if (i === self__.end) {
      return null;
    } else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function() {
        return subvec_seq.call(null, i + 1);
      }, null, null));
    }
  };
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._assoc.call(null, coll__$1, n, val);
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__15023 = meta;
      var G__15024 = v.v;
      var G__15025 = v.start + start;
      var G__15026 = v.start + end;
      var G__15027 = __hash;
      meta = G__15023;
      v = G__15024;
      start = G__15025;
      end = G__15026;
      __hash = G__15027;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || (end < 0 || (start > c || end > c))) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj15031 = {};
    return obj15031;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if (0 <= i && i < tv.cnt) {
    if (i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail;
    } else {
      var root = tv.root;
      var node = root;
      var level = tv.shift;
      while (true) {
        if (level > 0) {
          var G__15032 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
          var G__15033 = level - 5;
          node = G__15032;
          level = G__15033;
          continue;
        } else {
          return node.arr;
        }
        break;
      }
    }
  } else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__15035 = null;
  var G__15035__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15035__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15035 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15035__2.call(this, self__, k);
      case 3:
        return G__15035__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__15035;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args15034) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15034)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function go(level, node) {
          var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
          if (level === 0) {
            cljs.core.pv_aset.call(null, node__$1, n & 31, val);
            return node__$1;
          } else {
            var subidx = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
            return node__$1;
          }
        }.call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        } else {
          return null;
        }
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
              if (!(nr == null)) {
                return nr;
              } else {
                return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
              }
            }();
            if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            } else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            }
          } else {
            return null;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3403__auto__ = self__.rear;
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3403__auto__ = self__.front;
    if (cljs.core.truth_(or__3403__auto__)) {
      return or__3403__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__15036 = i + incr;
        i = G__15036;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__15037 = i + 1;
      var G__15038 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__15037;
      out = G__15038;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj15042 = {};
    return obj15042;
  }();
  var l = ks.length;
  var i_15043 = 0;
  while (true) {
    if (i_15043 < l) {
      var k_15044 = ks[i_15043];
      new_obj[k_15044] = obj[k_15044];
      var G__15045 = i_15043 + 1;
      i_15043 = G__15045;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__15048 = null;
  var G__15048__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15048__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15048 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15048__2.call(this, self__, k);
      case 3:
        return G__15048__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__15048;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args15047) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15047)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__15049 = cljs.core.rest.call(null, keys__$1);
        var G__15050 = init__$2;
        keys__$1 = G__15049;
        init__$1 = G__15050;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__15046_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__15046_SHARP_, self__.strobj[p1__15046_SHARP_]], null);
    }, self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj15052 = {};
  return obj15052;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__15053 = i + 2;
          i = G__15053;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__15054 = i + 2;
          i = G__15054;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__15055 = i + 2;
          i = G__15055;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__15056 = i + 2;
          i = G__15056;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__15057 = i + 2;
          i = G__15057;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_15058 = 0;
  while (true) {
    if (i_15058 < l) {
      narr[i_15058] = arr[i_15058];
      var G__15059 = i_15058 + 1;
      i_15058 = G__15059;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj15062 = {};
    return obj15062;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__15063 = cljs.core.aclone.call(null, self__.arr);
          G__15063[idx + 1] = v;
          return G__15063;
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__15064 = null;
  var G__15064__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15064__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15064 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15064__2.call(this, self__, k);
      case 3:
        return G__15064__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__15064;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args15060) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15060)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__15065 = i + 2;
        var G__15066 = init__$2;
        i = G__15065;
        init__$1 = G__15066;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__15067 = s + 2;
            var G__15068 = d;
            s = G__15067;
            d = G__15068;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__15069 = s + 2;
              var G__15070 = d + 2;
              s = G__15069;
              d = G__15070;
              continue;
            } else {
              return null;
            }
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__15071 = i + 2;
        var G__15072 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__15071;
        ret = G__15072;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__15073_15075 = self__.arr;
      G__15073_15075.pop();
      G__15073_15075.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__15074 = o;
      if (G__15074) {
        var bit__4053__auto__ = G__15074.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4053__auto__ || G__15074.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__15074.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__15074);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__15074);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__15076 = cljs.core.next.call(null, es);
          var G__15077 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__15076;
          tcoll__$2 = G__15077;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__15078 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__15079 = i + 2;
      out = G__15078;
      i = G__15079;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__3973__auto__, writer__3974__auto__, opts__3975__auto__) {
  return cljs.core._write.call(null, writer__3974__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.call(null, key, other);
      } else {
        return null;
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__15082 = cljs.core.aclone.call(null, arr);
    G__15082[i] = a;
    return G__15082;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__15083 = cljs.core.aclone.call(null, arr);
    G__15083[i] = a;
    G__15083[j] = b;
    return G__15083;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__15084 = i + 2;
        var G__15085 = init__$2;
        i = G__15084;
        init__$1 = G__15085;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_15086 = 0;
        var j_15087 = 0;
        while (true) {
          if (i_15086 < 32) {
            if ((self__.bitmap >>> i_15086 & 1) === 0) {
              var G__15088 = i_15086 + 1;
              var G__15089 = j_15087;
              i_15086 = G__15088;
              j_15087 = G__15089;
              continue;
            } else {
              nodes[i_15086] = !(self__.arr[j_15087] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_15087]), self__.arr[j_15087], self__.arr[j_15087 + 1], added_leaf_QMARK_) : self__.arr[j_15087 + 1];
              var G__15090 = i_15086 + 1;
              var G__15091 = j_15087 + 2;
              i_15086 = G__15090;
              j_15087 = G__15091;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable;
        } else {
          return null;
        }
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx);
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_15092 = 0;
      var j_15093 = 0;
      while (true) {
        if (i_15092 < 32) {
          if ((self__.bitmap >>> i_15092 & 1) === 0) {
            var G__15094 = i_15092 + 1;
            var G__15095 = j_15093;
            i_15092 = G__15094;
            j_15093 = G__15095;
            continue;
          } else {
            nodes[i_15092] = !(self__.arr[j_15093] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_15093]), self__.arr[j_15093], self__.arr[j_15093 + 1], added_leaf_QMARK_) : self__.arr[j_15093 + 1];
            var G__15096 = i_15092 + 1;
            var G__15097 = j_15093 + 2;
            i_15092 = G__15096;
            j_15093 = G__15097;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__15098 = i + 1;
        var G__15099 = j + 2;
        var G__15100 = bitmap | 1 << i;
        i = G__15098;
        j = G__15099;
        bitmap = G__15100;
        continue;
      } else {
        var G__15101 = i + 1;
        var G__15102 = j;
        var G__15103 = bitmap;
        i = G__15101;
        j = G__15102;
        bitmap = G__15103;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__15104 = i + 1;
          var G__15105 = init__$2;
          i = G__15104;
          init__$1 = G__15105;
          continue;
        }
      } else {
        var G__15106 = i + 1;
        var G__15107 = init__$1;
        i = G__15106;
        init__$1 = G__15107;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        } else {
          return null;
        }
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__15108 = i + 2;
        i = G__15108;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4090__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__15109 = j + 2;
                j = G__15109;
                continue;
              }
            } else {
              var G__15110 = j + 2;
              j = G__15110;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4090__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__15111 = j + 1;
              j = G__15111;
              continue;
            }
          } else {
            var G__15112 = j + 1;
            j = G__15112;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj15115 = {};
    return obj15115;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__15116 = null;
  var G__15116__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15116__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15116 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15116__2.call(this, self__, k);
      case 3:
        return G__15116__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__15116;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args15113) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15113)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if (new_root === self__.root) {
          return coll__$1;
        } else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__15117 = i + 1;
      var G__15118 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__15117;
      out = G__15118;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__15119 = o;
      if (G__15119) {
        var bit__4053__auto__ = G__15119.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4053__auto__ || G__15119.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__15119.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__15119);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__15119);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__15120 = cljs.core.next.call(null, es);
          var G__15121 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__15120;
          tcoll__$1 = G__15121;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__15122 = ascending_QMARK_ ? t.left : t.right;
      var G__15123 = cljs.core.conj.call(null, stack__$1, t);
      t = G__15122;
      stack__$1 = G__15123;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__15125 = null;
  var G__15125__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15125__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15125 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15125__2.call(this, self__, k);
      case 3:
        return G__15125__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__15125;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args15124) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15124)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.call = function() {
  var G__15127 = null;
  var G__15127__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15127__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15127 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15127__2.call(this, self__, k);
      case 3:
        return G__15127__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__15127;
}();
cljs.core.RedNode.prototype.apply = function(self__, args15126) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15126)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if (!(ins == null)) {
            return tree.add_right(ins);
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append.call(null, left.right, right.left);
            if (app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
            } else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
            }
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if (!(del == null) || !(found[0] == null)) {
            if (tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
            } else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
            }
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__15129 = null;
  var G__15129__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15129__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15129 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15129__2.call(this, self__, k);
      case 3:
        return G__15129__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__15129;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args15128) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15128)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__15130 = t.left;
          t = G__15130;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__15131 = t.right;
            t = G__15131;
            continue;
          } else {
            return null;
          }
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__15132 = cljs.core.conj.call(null, stack, t);
              var G__15133 = t.left;
              stack = G__15132;
              t = G__15133;
              continue;
            } else {
              var G__15134 = stack;
              var G__15135 = t.right;
              stack = G__15134;
              t = G__15135;
              continue;
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if (c > 0) {
                var G__15136 = cljs.core.conj.call(null, stack, t);
                var G__15137 = t.right;
                stack = G__15136;
                t = G__15137;
                continue;
              } else {
                var G__15138 = stack;
                var G__15139 = t.left;
                stack = G__15138;
                t = G__15139;
                continue;
              }
            } else {
              return null;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__15140 = cljs.core.nnext.call(null, in$);
        var G__15141 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__15140;
        out = G__15141;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__15142) {
    var keyvals = cljs.core.seq(arglist__15142);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__15143) {
    var keyvals = cljs.core.seq(arglist__15143);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj15147 = {};
      return obj15147;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__15148 = cljs.core.nnext.call(null, kvs);
        kvs = G__15148;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__15149) {
    var keyvals = cljs.core.seq(arglist__15149);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__15150 = cljs.core.nnext.call(null, in$);
        var G__15151 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__15150;
        out = G__15151;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__15152) {
    var keyvals = cljs.core.seq(arglist__15152);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__15153 = cljs.core.nnext.call(null, in$);
        var G__15154 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__15153;
        out = G__15154;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__15155) {
    var comparator = cljs.core.first(arglist__15155);
    var keyvals = cljs.core.rest(arglist__15155);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15156 = self__.mseq;
    if (G__15156) {
      var bit__4053__auto__ = G__15156.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4053__auto__ || G__15156.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15156.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__15156);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__15156);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15157 = self__.mseq;
    if (G__15157) {
      var bit__4053__auto__ = G__15157.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4053__auto__ || G__15157.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15157.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__15157);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__15157);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15158 = self__.mseq;
    if (G__15158) {
      var bit__4053__auto__ = G__15158.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4053__auto__ || G__15158.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15158.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__15158);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__15158);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15159 = self__.mseq;
    if (G__15159) {
      var bit__4053__auto__ = G__15159.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4053__auto__ || G__15159.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15159.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__15159);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__15159);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__15160_SHARP_, p2__15161_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3403__auto__ = p1__15160_SHARP_;
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__15161_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__15162) {
    var maps = cljs.core.seq(arglist__15162);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3403__auto__ = m1;
            if (cljs.core.truth_(or__3403__auto__)) {
              return or__3403__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__15163) {
    var f = cljs.core.first(arglist__15163);
    var maps = cljs.core.rest(arglist__15163);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__15164 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__15165 = cljs.core.next.call(null, keys);
      ret = G__15164;
      keys = G__15165;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__15168 = null;
  var G__15168__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15168__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15168 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15168__2.call(this, self__, k);
      case 3:
        return G__15168__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__15168;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args15167) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15167)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__15166_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__15166_SHARP_);
  }, other));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__15169 = i + 1;
        var G__15170 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__15169;
        out = G__15170;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__15171 = i + 1;
        var G__15172 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__15171;
        out = G__15172;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__15174 = null;
  var G__15174__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__15174__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__15174 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15174__2.call(this, self__, k);
      case 3:
        return G__15174__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__15174;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args15173) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15173)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__15177 = null;
  var G__15177__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15177__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15177 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15177__2.call(this, self__, k);
      case 3:
        return G__15177__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__15177;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args15176) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15176)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__15175_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__15175_SHARP_);
  }, other));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4245__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4245__auto__.length) {
        var G__15178 = i + 1;
        var G__15179 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__15178;
        res = G__15179;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while (true) {
          if (!(in$__$1 == null)) {
            var G__15180 = cljs.core._next.call(null, in$__$1);
            var G__15181 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
            in$__$1 = G__15180;
            out = G__15181;
            continue;
          } else {
            return cljs.core._persistent_BANG_.call(null, out);
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__15182__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__15182 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__15182__delegate.call(this, keys);
    };
    G__15182.cljs$lang$maxFixedArity = 0;
    G__15182.cljs$lang$applyTo = function(arglist__15183) {
      var keys = cljs.core.seq(arglist__15183);
      return G__15182__delegate(keys);
    };
    G__15182.cljs$core$IFn$_invoke$arity$variadic = G__15182__delegate;
    return G__15182;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__15184) {
    var keys = cljs.core.seq(arglist__15184);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__15185) {
    var comparator = cljs.core.first(arglist__15185);
    var keys = cljs.core.rest(arglist__15185);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function replace(smap, coll) {
  if (cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if (cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
      } else {
        return v;
      }
    }, coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
  } else {
    return cljs.core.map.call(null, function(p1__15186_SHARP_) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, p1__15186_SHARP_);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second.call(null, e);
      } else {
        return p1__15186_SHARP_;
      }
    }, coll);
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__15193, seen__$1) {
        while (true) {
          var vec__15194 = p__15193;
          var f = cljs.core.nth.call(null, vec__15194, 0, null);
          var xs__$1 = vec__15194;
          var temp__4092__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4092__auto__) {
            var s = temp__4092__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__15195 = cljs.core.rest.call(null, s);
              var G__15196 = seen__$1;
              p__15193 = G__15195;
              seen__$1 = G__15196;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__15197 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__15198 = cljs.core.next.call(null, s__$1);
      ret = G__15197;
      s__$1 = G__15198;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__15200 = x;
    if (G__15200) {
      var bit__4046__auto__ = G__15200.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4046__auto__ || G__15200.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__15201 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__15202 = cljs.core.next.call(null, ks);
      var G__15203 = cljs.core.next.call(null, vs);
      map = G__15201;
      ks = G__15202;
      vs = G__15203;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__15206__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__15204_SHARP_, p2__15205_SHARP_) {
        return max_key.call(null, k, p1__15204_SHARP_, p2__15205_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__15206 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__15206__delegate.call(this, k, x, y, more);
    };
    G__15206.cljs$lang$maxFixedArity = 3;
    G__15206.cljs$lang$applyTo = function(arglist__15207) {
      var k = cljs.core.first(arglist__15207);
      arglist__15207 = cljs.core.next(arglist__15207);
      var x = cljs.core.first(arglist__15207);
      arglist__15207 = cljs.core.next(arglist__15207);
      var y = cljs.core.first(arglist__15207);
      var more = cljs.core.rest(arglist__15207);
      return G__15206__delegate(k, x, y, more);
    };
    G__15206.cljs$core$IFn$_invoke$arity$variadic = G__15206__delegate;
    return G__15206;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__15210__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__15208_SHARP_, p2__15209_SHARP_) {
        return min_key.call(null, k, p1__15208_SHARP_, p2__15209_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__15210 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__15210__delegate.call(this, k, x, y, more);
    };
    G__15210.cljs$lang$maxFixedArity = 3;
    G__15210.cljs$lang$applyTo = function(arglist__15211) {
      var k = cljs.core.first(arglist__15211);
      arglist__15211 = cljs.core.next(arglist__15211);
      var x = cljs.core.first(arglist__15211);
      arglist__15211 = cljs.core.next(arglist__15211);
      var y = cljs.core.first(arglist__15211);
      var more = cljs.core.rest(arglist__15211);
      return G__15210__delegate(k, x, y, more);
    };
    G__15210.cljs$core$IFn$_invoke$arity$variadic = G__15210__delegate;
    return G__15210;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__15214 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__15214, 0, null);
        var s = vec__15214;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__15215 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__15215, 0, null);
      var s = vec__15215;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__15218 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__15218, 0, null);
        var s = vec__15218;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__15219 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__15219, 0, null);
      var s = vec__15219;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_coll.call(null, rng__$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil((self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv) {
        return function(p1__15220_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__15220_SHARP_));
        };
      }(fst, fv), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__15231 = null;
      var G__15231__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__15231__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__15231__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__15231__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__15231__4 = function() {
        var G__15232__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__15232 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__15232__delegate.call(this, x, y, z, args);
        };
        G__15232.cljs$lang$maxFixedArity = 3;
        G__15232.cljs$lang$applyTo = function(arglist__15233) {
          var x = cljs.core.first(arglist__15233);
          arglist__15233 = cljs.core.next(arglist__15233);
          var y = cljs.core.first(arglist__15233);
          arglist__15233 = cljs.core.next(arglist__15233);
          var z = cljs.core.first(arglist__15233);
          var args = cljs.core.rest(arglist__15233);
          return G__15232__delegate(x, y, z, args);
        };
        G__15232.cljs$core$IFn$_invoke$arity$variadic = G__15232__delegate;
        return G__15232;
      }();
      G__15231 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15231__0.call(this);
          case 1:
            return G__15231__1.call(this, x);
          case 2:
            return G__15231__2.call(this, x, y);
          case 3:
            return G__15231__3.call(this, x, y, z);
          default:
            return G__15231__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15231.cljs$lang$maxFixedArity = 3;
      G__15231.cljs$lang$applyTo = G__15231__4.cljs$lang$applyTo;
      return G__15231;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__15234 = null;
      var G__15234__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__15234__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__15234__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__15234__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__15234__4 = function() {
        var G__15235__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__15235 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__15235__delegate.call(this, x, y, z, args);
        };
        G__15235.cljs$lang$maxFixedArity = 3;
        G__15235.cljs$lang$applyTo = function(arglist__15236) {
          var x = cljs.core.first(arglist__15236);
          arglist__15236 = cljs.core.next(arglist__15236);
          var y = cljs.core.first(arglist__15236);
          arglist__15236 = cljs.core.next(arglist__15236);
          var z = cljs.core.first(arglist__15236);
          var args = cljs.core.rest(arglist__15236);
          return G__15235__delegate(x, y, z, args);
        };
        G__15235.cljs$core$IFn$_invoke$arity$variadic = G__15235__delegate;
        return G__15235;
      }();
      G__15234 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15234__0.call(this);
          case 1:
            return G__15234__1.call(this, x);
          case 2:
            return G__15234__2.call(this, x, y);
          case 3:
            return G__15234__3.call(this, x, y, z);
          default:
            return G__15234__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15234.cljs$lang$maxFixedArity = 3;
      G__15234.cljs$lang$applyTo = G__15234__4.cljs$lang$applyTo;
      return G__15234;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__15237 = null;
      var G__15237__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__15237__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__15237__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__15237__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__15237__4 = function() {
        var G__15238__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__15238 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__15238__delegate.call(this, x, y, z, args);
        };
        G__15238.cljs$lang$maxFixedArity = 3;
        G__15238.cljs$lang$applyTo = function(arglist__15239) {
          var x = cljs.core.first(arglist__15239);
          arglist__15239 = cljs.core.next(arglist__15239);
          var y = cljs.core.first(arglist__15239);
          arglist__15239 = cljs.core.next(arglist__15239);
          var z = cljs.core.first(arglist__15239);
          var args = cljs.core.rest(arglist__15239);
          return G__15238__delegate(x, y, z, args);
        };
        G__15238.cljs$core$IFn$_invoke$arity$variadic = G__15238__delegate;
        return G__15238;
      }();
      G__15237 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15237__0.call(this);
          case 1:
            return G__15237__1.call(this, x);
          case 2:
            return G__15237__2.call(this, x, y);
          case 3:
            return G__15237__3.call(this, x, y, z);
          default:
            return G__15237__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15237.cljs$lang$maxFixedArity = 3;
      G__15237.cljs$lang$applyTo = G__15237__4.cljs$lang$applyTo;
      return G__15237;
    }();
  };
  var juxt__4 = function() {
    var G__15240__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__15241 = null;
        var G__15241__0 = function() {
          return cljs.core.reduce.call(null, function(p1__15221_SHARP_, p2__15222_SHARP_) {
            return cljs.core.conj.call(null, p1__15221_SHARP_, p2__15222_SHARP_.call(null));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__15241__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__15223_SHARP_, p2__15224_SHARP_) {
            return cljs.core.conj.call(null, p1__15223_SHARP_, p2__15224_SHARP_.call(null, x));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__15241__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__15225_SHARP_, p2__15226_SHARP_) {
            return cljs.core.conj.call(null, p1__15225_SHARP_, p2__15226_SHARP_.call(null, x, y));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__15241__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__15227_SHARP_, p2__15228_SHARP_) {
            return cljs.core.conj.call(null, p1__15227_SHARP_, p2__15228_SHARP_.call(null, x, y, z));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__15241__4 = function() {
          var G__15242__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__15229_SHARP_, p2__15230_SHARP_) {
              return cljs.core.conj.call(null, p1__15229_SHARP_, cljs.core.apply.call(null, p2__15230_SHARP_, x, y, z, args));
            }, cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__15242 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__15242__delegate.call(this, x, y, z, args);
          };
          G__15242.cljs$lang$maxFixedArity = 3;
          G__15242.cljs$lang$applyTo = function(arglist__15243) {
            var x = cljs.core.first(arglist__15243);
            arglist__15243 = cljs.core.next(arglist__15243);
            var y = cljs.core.first(arglist__15243);
            arglist__15243 = cljs.core.next(arglist__15243);
            var z = cljs.core.first(arglist__15243);
            var args = cljs.core.rest(arglist__15243);
            return G__15242__delegate(x, y, z, args);
          };
          G__15242.cljs$core$IFn$_invoke$arity$variadic = G__15242__delegate;
          return G__15242;
        }();
        G__15241 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__15241__0.call(this);
            case 1:
              return G__15241__1.call(this, x);
            case 2:
              return G__15241__2.call(this, x, y);
            case 3:
              return G__15241__3.call(this, x, y, z);
            default:
              return G__15241__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15241.cljs$lang$maxFixedArity = 3;
        G__15241.cljs$lang$applyTo = G__15241__4.cljs$lang$applyTo;
        return G__15241;
      }();
    };
    var G__15240 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__15240__delegate.call(this, f, g, h, fs);
    };
    G__15240.cljs$lang$maxFixedArity = 3;
    G__15240.cljs$lang$applyTo = function(arglist__15244) {
      var f = cljs.core.first(arglist__15244);
      arglist__15244 = cljs.core.next(arglist__15244);
      var g = cljs.core.first(arglist__15244);
      arglist__15244 = cljs.core.next(arglist__15244);
      var h = cljs.core.first(arglist__15244);
      var fs = cljs.core.rest(arglist__15244);
      return G__15240__delegate(f, g, h, fs);
    };
    G__15240.cljs$core$IFn$_invoke$arity$variadic = G__15240__delegate;
    return G__15240;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__15245 = cljs.core.next.call(null, coll);
        coll = G__15245;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__15246 = n - 1;
        var G__15247 = cljs.core.next.call(null, coll);
        n = G__15246;
        coll = G__15247;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  } else {
    return null;
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
    }, null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__15249 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__15249, 0, null);
  var flags = cljs.core.nth.call(null, vec__15249, 1, null);
  var pattern = cljs.core.nth.call(null, vec__15249, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_15251 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_15252__$1 = cljs.core.next.call(null, coll);
      var n_15253 = (new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts);
      while (true) {
        if (coll_15252__$1 && (n_15253 == null || !(n_15253 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_15252__$1), writer, opts);
          var G__15254 = cljs.core.next.call(null, coll_15252__$1);
          var G__15255 = n_15253 - 1;
          coll_15252__$1 = G__15254;
          n_15253 = G__15255;
          continue;
        } else {
        }
        break;
      }
      if (cljs.core.truth_((new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts))) {
        cljs.core._write.call(null, writer, sep);
        print_one.call(null, "...", writer, opts);
      } else {
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_15251;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__15260 = cljs.core.seq.call(null, ss);
    var chunk__15261 = null;
    var count__15262 = 0;
    var i__15263 = 0;
    while (true) {
      if (i__15263 < count__15262) {
        var s = cljs.core._nth.call(null, chunk__15261, i__15263);
        cljs.core._write.call(null, writer, s);
        var G__15264 = seq__15260;
        var G__15265 = chunk__15261;
        var G__15266 = count__15262;
        var G__15267 = i__15263 + 1;
        seq__15260 = G__15264;
        chunk__15261 = G__15265;
        count__15262 = G__15266;
        i__15263 = G__15267;
        continue;
      } else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__15260);
        if (temp__4092__auto__) {
          var seq__15260__$1 = temp__4092__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__15260__$1)) {
            var c__4151__auto__ = cljs.core.chunk_first.call(null, seq__15260__$1);
            var G__15268 = cljs.core.chunk_rest.call(null, seq__15260__$1);
            var G__15269 = c__4151__auto__;
            var G__15270 = cljs.core.count.call(null, c__4151__auto__);
            var G__15271 = 0;
            seq__15260 = G__15268;
            chunk__15261 = G__15269;
            count__15262 = G__15270;
            i__15263 = G__15271;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__15260__$1);
            cljs.core._write.call(null, writer, s);
            var G__15272 = cljs.core.next.call(null, seq__15260__$1);
            var G__15273 = null;
            var G__15274 = 0;
            var G__15275 = 0;
            seq__15260 = G__15272;
            chunk__15261 = G__15273;
            count__15262 = G__15274;
            i__15263 = G__15275;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__15276) {
    var writer = cljs.core.first(arglist__15276);
    var ss = cljs.core.rest(arglist__15276);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj15278 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj15278;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if (cljs.core.truth_(function() {
          var and__3391__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if (cljs.core.truth_(and__3391__auto__)) {
            var and__3391__auto____$1 = function() {
              var G__15284 = obj;
              if (G__15284) {
                var bit__4053__auto__ = G__15284.cljs$lang$protocol_mask$partition0$ & 131072;
                if (bit__4053__auto__ || G__15284.cljs$core$IMeta$) {
                  return true;
                } else {
                  if (!G__15284.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__15284);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__15284);
              }
            }();
            if (and__3391__auto____$1) {
              return cljs.core.meta.call(null, obj);
            } else {
              return and__3391__auto____$1;
            }
          } else {
            return and__3391__auto__;
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ");
        } else {
        }
        if (obj == null) {
          return cljs.core._write.call(null, writer, "nil");
        } else {
          if (obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
          } else {
            if (function() {
              var G__15285 = obj;
              if (G__15285) {
                var bit__4046__auto__ = G__15285.cljs$lang$protocol_mask$partition0$ & 2147483648;
                if (bit__4046__auto__ || G__15285.cljs$core$IPrintWithWriter$) {
                  return true;
                } else {
                  return false;
                }
              } else {
                return false;
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts);
            } else {
              if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""));
              } else {
                if (cljs.core.object_QMARK_.call(null, obj)) {
                  cljs.core._write.call(null, writer, "#js ");
                  return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                  }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
                } else {
                  if (obj instanceof Array) {
                    return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                  } else {
                    if (goog.isString(obj)) {
                      if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).cljs$core$IFn$_invoke$arity$1(opts))) {
                        return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                      } else {
                        return cljs.core._write.call(null, writer, obj);
                      }
                    } else {
                      if (cljs.core.fn_QMARK_.call(null, obj)) {
                        return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                      } else {
                        if (obj instanceof Date) {
                          var normalize = function(n, len) {
                            var ns = [cljs.core.str(n)].join("");
                            while (true) {
                              if (cljs.core.count.call(null, ns) < len) {
                                var G__15287 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                                ns = G__15287;
                                continue;
                              } else {
                                return ns;
                              }
                              break;
                            }
                          };
                          return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                        } else {
                          if (cljs.core.regexp_QMARK_.call(null, obj)) {
                            return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                          } else {
                            if (function() {
                              var G__15286 = obj;
                              if (G__15286) {
                                var bit__4053__auto__ = G__15286.cljs$lang$protocol_mask$partition0$ & 2147483648;
                                if (bit__4053__auto__ || G__15286.cljs$core$IPrintWithWriter$) {
                                  return true;
                                } else {
                                  if (!G__15286.cljs$lang$protocol_mask$partition0$) {
                                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__15286);
                                  } else {
                                    return false;
                                  }
                                }
                              } else {
                                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__15286);
                              }
                            }()) {
                              return cljs.core._pr_writer.call(null, obj, writer, opts);
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__15292 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__15293 = null;
  var count__15294 = 0;
  var i__15295 = 0;
  while (true) {
    if (i__15295 < count__15294) {
      var obj = cljs.core._nth.call(null, chunk__15293, i__15295);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__15296 = seq__15292;
      var G__15297 = chunk__15293;
      var G__15298 = count__15294;
      var G__15299 = i__15295 + 1;
      seq__15292 = G__15296;
      chunk__15293 = G__15297;
      count__15294 = G__15298;
      i__15295 = G__15299;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__15292);
      if (temp__4092__auto__) {
        var seq__15292__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__15292__$1)) {
          var c__4151__auto__ = cljs.core.chunk_first.call(null, seq__15292__$1);
          var G__15300 = cljs.core.chunk_rest.call(null, seq__15292__$1);
          var G__15301 = c__4151__auto__;
          var G__15302 = cljs.core.count.call(null, c__4151__auto__);
          var G__15303 = 0;
          seq__15292 = G__15300;
          chunk__15293 = G__15301;
          count__15294 = G__15302;
          i__15295 = G__15303;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__15292__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__15304 = cljs.core.next.call(null, seq__15292__$1);
          var G__15305 = null;
          var G__15306 = 0;
          var G__15307 = 0;
          seq__15292 = G__15304;
          chunk__15293 = G__15305;
          count__15294 = G__15306;
          i__15295 = G__15307;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__15308) {
    var objs = cljs.core.seq(arglist__15308);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__15309) {
    var objs = cljs.core.seq(arglist__15309);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__15310) {
    var objs = cljs.core.seq(arglist__15310);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__15311) {
    var objs = cljs.core.seq(arglist__15311);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__15312) {
    var objs = cljs.core.seq(arglist__15312);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__15313) {
    var objs = cljs.core.seq(arglist__15313);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__15314) {
    var objs = cljs.core.seq(arglist__15314);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__15315) {
    var objs = cljs.core.seq(arglist__15315);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 2;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__15316 = cljs.core.seq.call(null, self__.watches);
  var chunk__15317 = null;
  var count__15318 = 0;
  var i__15319 = 0;
  while (true) {
    if (i__15319 < count__15318) {
      var vec__15320 = cljs.core._nth.call(null, chunk__15317, i__15319);
      var key = cljs.core.nth.call(null, vec__15320, 0, null);
      var f = cljs.core.nth.call(null, vec__15320, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__15322 = seq__15316;
      var G__15323 = chunk__15317;
      var G__15324 = count__15318;
      var G__15325 = i__15319 + 1;
      seq__15316 = G__15322;
      chunk__15317 = G__15323;
      count__15318 = G__15324;
      i__15319 = G__15325;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__15316);
      if (temp__4092__auto__) {
        var seq__15316__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__15316__$1)) {
          var c__4151__auto__ = cljs.core.chunk_first.call(null, seq__15316__$1);
          var G__15326 = cljs.core.chunk_rest.call(null, seq__15316__$1);
          var G__15327 = c__4151__auto__;
          var G__15328 = cljs.core.count.call(null, c__4151__auto__);
          var G__15329 = 0;
          seq__15316 = G__15326;
          chunk__15317 = G__15327;
          count__15318 = G__15328;
          i__15319 = G__15329;
          continue;
        } else {
          var vec__15321 = cljs.core.first.call(null, seq__15316__$1);
          var key = cljs.core.nth.call(null, vec__15321, 0, null);
          var f = cljs.core.nth.call(null, vec__15321, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__15330 = cljs.core.next.call(null, seq__15316__$1);
          var G__15331 = null;
          var G__15332 = 0;
          var G__15333 = 0;
          seq__15316 = G__15330;
          chunk__15317 = G__15331;
          count__15318 = G__15332;
          i__15319 = G__15333;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__15337__delegate = function(x, p__15334) {
      var map__15336 = p__15334;
      var map__15336__$1 = cljs.core.seq_QMARK_.call(null, map__15336) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15336) : map__15336;
      var validator = cljs.core.get.call(null, map__15336__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.call(null, map__15336__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__15337 = function(x, var_args) {
      var p__15334 = null;
      if (arguments.length > 1) {
        p__15334 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__15337__delegate.call(this, x, p__15334);
    };
    G__15337.cljs$lang$maxFixedArity = 1;
    G__15337.cljs$lang$applyTo = function(arglist__15338) {
      var x = cljs.core.first(arglist__15338);
      var p__15334 = cljs.core.rest(arglist__15338);
      return G__15337__delegate(x, p__15334);
    };
    G__15337.cljs$core$IFn$_invoke$arity$variadic = G__15337__delegate;
    return G__15337;
  }();
  atom = function(x, var_args) {
    var p__15334 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var validate_15339 = a.validator;
  if (validate_15339 == null) {
  } else {
    if (cljs.core.truth_(validate_15339.call(null, new_value))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))))].join(""));
    }
  }
  var old_value_15340 = a.state;
  a.state = new_value;
  if (a.watches == null) {
  } else {
    cljs.core._notify_watches.call(null, a, old_value_15340, new_value);
  }
  return new_value;
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z));
  };
  var swap_BANG___6 = function() {
    var G__15341__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more));
    };
    var G__15341 = function(a, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 5) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__15341__delegate.call(this, a, f, x, y, z, more);
    };
    G__15341.cljs$lang$maxFixedArity = 5;
    G__15341.cljs$lang$applyTo = function(arglist__15342) {
      var a = cljs.core.first(arglist__15342);
      arglist__15342 = cljs.core.next(arglist__15342);
      var f = cljs.core.first(arglist__15342);
      arglist__15342 = cljs.core.next(arglist__15342);
      var x = cljs.core.first(arglist__15342);
      arglist__15342 = cljs.core.next(arglist__15342);
      var y = cljs.core.first(arglist__15342);
      arglist__15342 = cljs.core.next(arglist__15342);
      var z = cljs.core.first(arglist__15342);
      var more = cljs.core.rest(arglist__15342);
      return G__15341__delegate(a, f, x, y, z, more);
    };
    G__15341.cljs$core$IFn$_invoke$arity$variadic = G__15341__delegate;
    return G__15341;
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__15343) {
    var iref = cljs.core.first(arglist__15343);
    arglist__15343 = cljs.core.next(arglist__15343);
    var f = cljs.core.first(arglist__15343);
    var args = cljs.core.rest(arglist__15343);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state));
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, self__.state, function(p__15344) {
    var map__15345 = p__15344;
    var map__15345__$1 = cljs.core.seq_QMARK_.call(null, map__15345) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15345) : map__15345;
    var curr_state = map__15345__$1;
    var done = cljs.core.get.call(null, map__15345__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
    if (cljs.core.truth_(done)) {
      return curr_state;
    } else {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.call(null)], null);
    }
  }));
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.IEncodeJS = function() {
  var obj15347 = {};
  return obj15347;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3391__auto__ = x;
    if (and__3391__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4030__auto__ = x == null ? null : x;
    return function() {
      var or__3403__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3391__auto__ = x;
    if (and__3391__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4030__auto__ = x == null ? null : x;
    return function() {
      var or__3403__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__15349 = k;
    if (G__15349) {
      var bit__4053__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3403__auto__ = bit__4053__auto__;
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return G__15349.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__15349.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__15349);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__15349);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || (typeof k === "number" || (k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol))) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__15363 = x;
      if (G__15363) {
        var bit__4053__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3403__auto__ = bit__4053__auto__;
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return G__15363.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__15363.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__15363);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__15363);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj15365 = {};
              return obj15365;
            }();
            var seq__15366_15376 = cljs.core.seq.call(null, x);
            var chunk__15367_15377 = null;
            var count__15368_15378 = 0;
            var i__15369_15379 = 0;
            while (true) {
              if (i__15369_15379 < count__15368_15378) {
                var vec__15370_15380 = cljs.core._nth.call(null, chunk__15367_15377, i__15369_15379);
                var k_15381 = cljs.core.nth.call(null, vec__15370_15380, 0, null);
                var v_15382 = cljs.core.nth.call(null, vec__15370_15380, 1, null);
                m[cljs.core.key__GT_js.call(null, k_15381)] = clj__GT_js.call(null, v_15382);
                var G__15383 = seq__15366_15376;
                var G__15384 = chunk__15367_15377;
                var G__15385 = count__15368_15378;
                var G__15386 = i__15369_15379 + 1;
                seq__15366_15376 = G__15383;
                chunk__15367_15377 = G__15384;
                count__15368_15378 = G__15385;
                i__15369_15379 = G__15386;
                continue;
              } else {
                var temp__4092__auto___15387 = cljs.core.seq.call(null, seq__15366_15376);
                if (temp__4092__auto___15387) {
                  var seq__15366_15388__$1 = temp__4092__auto___15387;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__15366_15388__$1)) {
                    var c__4151__auto___15389 = cljs.core.chunk_first.call(null, seq__15366_15388__$1);
                    var G__15390 = cljs.core.chunk_rest.call(null, seq__15366_15388__$1);
                    var G__15391 = c__4151__auto___15389;
                    var G__15392 = cljs.core.count.call(null, c__4151__auto___15389);
                    var G__15393 = 0;
                    seq__15366_15376 = G__15390;
                    chunk__15367_15377 = G__15391;
                    count__15368_15378 = G__15392;
                    i__15369_15379 = G__15393;
                    continue;
                  } else {
                    var vec__15371_15394 = cljs.core.first.call(null, seq__15366_15388__$1);
                    var k_15395 = cljs.core.nth.call(null, vec__15371_15394, 0, null);
                    var v_15396 = cljs.core.nth.call(null, vec__15371_15394, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_15395)] = clj__GT_js.call(null, v_15396);
                    var G__15397 = cljs.core.next.call(null, seq__15366_15388__$1);
                    var G__15398 = null;
                    var G__15399 = 0;
                    var G__15400 = 0;
                    seq__15366_15376 = G__15397;
                    chunk__15367_15377 = G__15398;
                    count__15368_15378 = G__15399;
                    i__15369_15379 = G__15400;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__15372_15401 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__15373_15402 = null;
              var count__15374_15403 = 0;
              var i__15375_15404 = 0;
              while (true) {
                if (i__15375_15404 < count__15374_15403) {
                  var x_15405__$1 = cljs.core._nth.call(null, chunk__15373_15402, i__15375_15404);
                  arr.push(x_15405__$1);
                  var G__15406 = seq__15372_15401;
                  var G__15407 = chunk__15373_15402;
                  var G__15408 = count__15374_15403;
                  var G__15409 = i__15375_15404 + 1;
                  seq__15372_15401 = G__15406;
                  chunk__15373_15402 = G__15407;
                  count__15374_15403 = G__15408;
                  i__15375_15404 = G__15409;
                  continue;
                } else {
                  var temp__4092__auto___15410 = cljs.core.seq.call(null, seq__15372_15401);
                  if (temp__4092__auto___15410) {
                    var seq__15372_15411__$1 = temp__4092__auto___15410;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__15372_15411__$1)) {
                      var c__4151__auto___15412 = cljs.core.chunk_first.call(null, seq__15372_15411__$1);
                      var G__15413 = cljs.core.chunk_rest.call(null, seq__15372_15411__$1);
                      var G__15414 = c__4151__auto___15412;
                      var G__15415 = cljs.core.count.call(null, c__4151__auto___15412);
                      var G__15416 = 0;
                      seq__15372_15401 = G__15413;
                      chunk__15373_15402 = G__15414;
                      count__15374_15403 = G__15415;
                      i__15375_15404 = G__15416;
                      continue;
                    } else {
                      var x_15417__$1 = cljs.core.first.call(null, seq__15372_15411__$1);
                      arr.push(x_15417__$1);
                      var G__15418 = cljs.core.next.call(null, seq__15372_15411__$1);
                      var G__15419 = null;
                      var G__15420 = 0;
                      var G__15421 = 0;
                      seq__15372_15401 = G__15418;
                      chunk__15373_15402 = G__15419;
                      count__15374_15403 = G__15420;
                      i__15375_15404 = G__15421;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj15423 = {};
  return obj15423;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3391__auto__ = x;
    if (and__3391__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4030__auto__ = x == null ? null : x;
    return function() {
      var or__3403__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__15444__delegate = function(x, opts) {
      if (function() {
        var G__15434 = x;
        if (G__15434) {
          var bit__4053__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3403__auto__ = bit__4053__auto__;
            if (cljs.core.truth_(or__3403__auto__)) {
              return or__3403__auto__;
            } else {
              return G__15434.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__15434.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__15434);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__15434);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__15435 = opts;
          var map__15435__$1 = cljs.core.seq_QMARK_.call(null, map__15435) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15435) : map__15435;
          var keywordize_keys = cljs.core.get.call(null, map__15435__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__15435, map__15435__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4120__auto__ = function(map__15435, map__15435__$1, keywordize_keys, keyfn) {
                          return function iter__15440(s__15441) {
                            return new cljs.core.LazySeq(null, function(map__15435, map__15435__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__15441__$1 = s__15441;
                                while (true) {
                                  var temp__4092__auto__ = cljs.core.seq.call(null, s__15441__$1);
                                  if (temp__4092__auto__) {
                                    var s__15441__$2 = temp__4092__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__15441__$2)) {
                                      var c__4118__auto__ = cljs.core.chunk_first.call(null, s__15441__$2);
                                      var size__4119__auto__ = cljs.core.count.call(null, c__4118__auto__);
                                      var b__15443 = cljs.core.chunk_buffer.call(null, size__4119__auto__);
                                      if (function() {
                                        var i__15442 = 0;
                                        while (true) {
                                          if (i__15442 < size__4119__auto__) {
                                            var k = cljs.core._nth.call(null, c__4118__auto__, i__15442);
                                            cljs.core.chunk_append.call(null, b__15443, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__15445 = i__15442 + 1;
                                            i__15442 = G__15445;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15443), iter__15440.call(null, cljs.core.chunk_rest.call(null, s__15441__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15443), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__15441__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__15440.call(null, cljs.core.rest.call(null, s__15441__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__15435, map__15435__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__15435, map__15435__$1, keywordize_keys, keyfn);
                        return iter__4120__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1;
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            };
          }(map__15435, map__15435__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__15444 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__15444__delegate.call(this, x, opts);
    };
    G__15444.cljs$lang$maxFixedArity = 1;
    G__15444.cljs$lang$applyTo = function(arglist__15446) {
      var x = cljs.core.first(arglist__15446);
      var opts = cljs.core.rest(arglist__15446);
      return G__15444__delegate(x, opts);
    };
    G__15444.cljs$core$IFn$_invoke$arity$variadic = G__15444__delegate;
    return G__15444;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__15447__delegate = function(args) {
      var temp__4090__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var v = temp__4090__auto__;
        return v;
      } else {
        var ret = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
        return ret;
      }
    };
    var G__15447 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__15447__delegate.call(this, args);
    };
    G__15447.cljs$lang$maxFixedArity = 0;
    G__15447.cljs$lang$applyTo = function(arglist__15448) {
      var args = cljs.core.seq(arglist__15448);
      return G__15447__delegate(args);
    };
    G__15447.cljs$core$IFn$_invoke$arity$variadic = G__15447__delegate;
    return G__15447;
  }();
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__15449 = ret;
        f = G__15449;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__15450__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__15450 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__15450__delegate.call(this, f, args);
    };
    G__15450.cljs$lang$maxFixedArity = 1;
    G__15450.cljs$lang$applyTo = function(arglist__15451) {
      var f = cljs.core.first(arglist__15451);
      var args = cljs.core.rest(arglist__15451);
      return G__15450__delegate(f, args);
    };
    G__15450.cljs$core$IFn$_invoke$arity$variadic = G__15450__delegate;
    return G__15450;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, coll);
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__15452) {
    var f = cljs.core.first(arglist__15452);
    var args = cljs.core.rest(arglist__15452);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3403__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3403__auto__) {
      return or__3403__auto__;
    } else {
      var or__3403__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3403__auto____$1) {
        return or__3403__auto____$1;
      } else {
        var and__3391__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3391__auto__) {
          var and__3391__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3391__auto____$1) {
            var and__3391__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3391__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__15453 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__15454 = i + 1;
                  ret = G__15453;
                  i = G__15454;
                  continue;
                }
                break;
              }
            } else {
              return and__3391__auto____$2;
            }
          } else {
            return and__3391__auto____$1;
          }
        } else {
          return and__3391__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3403__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3403__auto__)) {
      return or__3403__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__15455_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__15455_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__15455_SHARP_), cljs.core.second.call(null, p1__15455_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__15456_SHARP_, p2__15457_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__15456_SHARP_, p2__15457_SHARP_);
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3403__auto__ = cljs.core.truth_(function() {
    var and__3391__auto__ = xprefs;
    if (cljs.core.truth_(and__3391__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3391__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3403__auto__)) {
    return or__3403__auto__;
  } else {
    var or__3403__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__15458 = cljs.core.rest.call(null, ps);
          ps = G__15458;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3403__auto____$1)) {
      return or__3403__auto____$1;
    } else {
      var or__3403__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__15459 = cljs.core.rest.call(null, ps);
            ps = G__15459;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3403__auto____$2)) {
        return or__3403__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3403__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3403__auto__)) {
    return or__3403__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__15462) {
    var vec__15463 = p__15462;
    var k = cljs.core.nth.call(null, vec__15463, 0, null);
    var _ = cljs.core.nth.call(null, vec__15463, 1, null);
    var e = vec__15463;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3403__auto__ = be == null;
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj15465 = {};
  return obj15465;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3391__auto__ = mf;
    if (and__3391__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4030__auto__ = mf == null ? null : mf;
    return function() {
      var or__3403__auto__ = cljs.core._reset[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._reset["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3391__auto__ = mf;
    if (and__3391__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4030__auto__ = mf == null ? null : mf;
    return function() {
      var or__3403__auto__ = cljs.core._add_method[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._add_method["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3391__auto__ = mf;
    if (and__3391__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4030__auto__ = mf == null ? null : mf;
    return function() {
      var or__3403__auto__ = cljs.core._remove_method[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._remove_method["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3391__auto__ = mf;
    if (and__3391__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4030__auto__ = mf == null ? null : mf;
    return function() {
      var or__3403__auto__ = cljs.core._prefer_method[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3391__auto__ = mf;
    if (and__3391__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4030__auto__ = mf == null ? null : mf;
    return function() {
      var or__3403__auto__ = cljs.core._get_method[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._get_method["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3391__auto__ = mf;
    if (and__3391__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4030__auto__ = mf == null ? null : mf;
    return function() {
      var or__3403__auto__ = cljs.core._methods[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._methods["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3391__auto__ = mf;
    if (and__3391__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4030__auto__ = mf == null ? null : mf;
    return function() {
      var or__3403__auto__ = cljs.core._prefers[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._prefers["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if (function() {
    var and__3391__auto__ = mf;
    if (and__3391__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args);
  } else {
    var x__4030__auto__ = mf == null ? null : mf;
    return function() {
      var or__3403__auto__ = cljs.core._dispatch[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core._dispatch["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args);
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, name, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args);
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$2) {
    return null;
  });
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4090__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn;
  } else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
  });
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.do_dispatch.call(null, mf__$1, self__.name, self__.dispatch_fn, args);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__15466__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args);
  };
  var G__15466 = function(_, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return G__15466__delegate.call(this, _, args);
  };
  G__15466.cljs$lang$maxFixedArity = 1;
  G__15466.cljs$lang$applyTo = function(arglist__15467) {
    var _ = cljs.core.first(arglist__15467);
    var args = cljs.core.rest(arglist__15467);
    return G__15466__delegate(_, args);
  };
  G__15466.cljs$core$IFn$_invoke$arity$variadic = G__15466__delegate;
  return G__15466;
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__3973__auto__, writer__3974__auto__, opts__3975__auto__) {
  return cljs.core._write.call(null, writer__3974__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0;
        } else {
          return null;
        }
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, new cljs.core.Symbol(null, 
  "recur", "recur", -1532142362, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, "js*", "js*", -1640426054, 
  null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "try", "try", -1640416396, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], null), null), x);
};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.ASSUME_ANY_VERSION = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || (goog.userAgent.ASSUME_GECKO || (goog.userAgent.ASSUME_MOBILE_WEBKIT || (goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA)));
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null;
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"];
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if (!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && (!goog.userAgent.detectedWebkit_ && navigator.product == "Gecko");
  }
};
if (!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_();
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.ASSUME_ANDROID = false;
goog.userAgent.ASSUME_IPHONE = false;
goog.userAgent.ASSUME_IPAD = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || (goog.userAgent.ASSUME_WINDOWS || (goog.userAgent.ASSUME_LINUX || (goog.userAgent.ASSUME_X11 || (goog.userAgent.ASSUME_ANDROID || (goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD)))));
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && ua.indexOf("Android") >= 0;
  goog.userAgent.detectedIPhone_ = !!ua && ua.indexOf("iPhone") >= 0;
  goog.userAgent.detectedIPad_ = !!ua && ua.indexOf("iPad") >= 0;
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion;
  } else {
    if (goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/;
      } else {
        if (goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/;
        }
      }
    }
    if (re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : "";
    }
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || (goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0));
};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", 
POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", 
MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROVER:"MSPointerOver", MSPOINTEROUT:"MSPointerOut", MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend"};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      } else {
        return null;
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll);
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll));
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__18399 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__18399;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__18403 = cljs.core._EQ_;
    var expr__18404 = limit;
    if (cljs.core.truth_(pred__18403.call(null, 1, expr__18404))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__18403.call(null, 2, expr__18404))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4090__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4090__auto__)) {
            var m = temp__4090__auto__;
            var index = s__$1.indexOf(m);
            var G__18406 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__18407 = limit__$1 - 1;
            var G__18408 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__18406;
            limit__$1 = G__18407;
            parts = G__18408;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__18409 = index - 1;
        index = G__18409;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4090__auto___18410 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4090__auto___18410)) {
        var replacement_18411 = temp__4090__auto___18410;
        buffer.append([cljs.core.str(replacement_18411)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__18412 = index + 1;
      index = G__18412;
      continue;
    }
    break;
  }
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj18414 = {};
  return obj18414;
}();
cljs.reader.read_char = function read_char(reader) {
  if (function() {
    var and__3391__auto__ = reader;
    if (and__3391__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__4030__auto__ = reader == null ? null : reader;
    return function() {
      var or__3403__auto__ = cljs.reader.read_char[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.reader.read_char["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if (function() {
    var and__3391__auto__ = reader;
    if (and__3391__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4030__auto__ = reader == null ? null : reader;
    return function() {
      var or__3403__auto__ = cljs.reader.unread[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.reader.unread["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3403__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__3403__auto__)) {
    return or__3403__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if (arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return reader_error__delegate.call(this, rdr, msg);
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__18415) {
    var rdr = cljs.core.first(arglist__18415);
    var msg = cljs.core.rest(arglist__18415);
    return reader_error__delegate(rdr, msg);
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error;
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3391__auto__ = !(ch === "#");
  if (and__3391__auto__) {
    var and__3391__auto____$1 = !(ch === "'");
    if (and__3391__auto____$1) {
      var and__3391__auto____$2 = !(ch === ":");
      if (and__3391__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__3391__auto____$2;
      }
    } else {
      return and__3391__auto____$1;
    }
  } else {
    return and__3391__auto__;
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || (cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch))) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__18416 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__18417 = cljs.reader.read_char.call(null, rdr);
      sb = G__18416;
      ch = G__18417;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || (ch === "\r" || ch == null)) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3 = groups[2];
  if (!(group3 == null || group3.length < 1)) {
    return 0;
  } else {
    var negate = "-" === groups[1] ? -1 : 1;
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[7]) ? [groups[7], parseInt(groups[7])] : new cljs.core.Keyword(null, "default", "default", 2558708147) ? [null, null] : null;
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      return negate * parseInt(n, radix);
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator) / parseInt(denominator);
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s);
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_number = function match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return null;
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__18418 = cljs.reader.read_char.call(null, rdr);
      ch = G__18418;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4090__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var macrofn = temp__4090__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__18419 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__18419;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__18420 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__18420;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4090__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4090__auto__)) {
      var obj = temp__4090__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch);
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__3403__auto__ = ch == null;
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3403__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__18421 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__18422 = cljs.reader.read_char.call(null, reader);
      buffer = G__18421;
      ch = G__18422;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__18423 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__18424 = cljs.reader.read_char.call(null, reader);
        buffer = G__18423;
        ch = G__18424;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
            var G__18425 = function() {
              buffer.append(ch);
              return buffer;
            }();
            var G__18426 = cljs.reader.read_char.call(null, reader);
            buffer = G__18425;
            ch = G__18426;
            continue;
          } else {
            return null;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(goog.string.contains(token, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || (name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1))) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return f;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__18428 = o;
    if (G__18428) {
      var bit__4053__auto__ = G__18428.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4053__auto__ || G__18428.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__18428.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__18428);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__18428);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", -1545057749, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    return null;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return null;
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__18429 = reader;
        var G__18430 = eof_is_error;
        var G__18431 = sentinel;
        var G__18432 = is_recursive;
        reader = G__18429;
        eof_is_error = G__18430;
        sentinel = G__18431;
        is_recursive = G__18432;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__18433 = cljs.reader.read_comment.call(null, reader, ch);
          var G__18434 = eof_is_error;
          var G__18435 = sentinel;
          var G__18436 = is_recursive;
          reader = G__18433;
          eof_is_error = G__18434;
          sentinel = G__18435;
          is_recursive = G__18436;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var f = cljs.reader.macros.call(null, ch);
            var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? cljs.reader.read_symbol.call(null, reader, ch) : null;
            if (res === reader) {
              var G__18437 = reader;
              var G__18438 = eof_is_error;
              var G__18439 = sentinel;
              var G__18440 = is_recursive;
              reader = G__18437;
              eof_is_error = G__18438;
              sentinel = G__18439;
              is_recursive = G__18440;
              continue;
            } else {
              return res;
            }
          } else {
            return null;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, true, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var b = new goog.string.StringBuffer(s);
        while (true) {
          if (b.getLength() < width) {
            var G__18441 = b.append("0");
            b = G__18441;
            continue;
          } else {
            return b.toString();
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div);
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(month, leap_year_QMARK_) {
    return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
  };
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__18443 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__18443, 0, null);
  var years = cljs.core.nth.call(null, vec__18443, 1, null);
  var months = cljs.core.nth.call(null, vec__18443, 2, null);
  var days = cljs.core.nth.call(null, vec__18443, 3, null);
  var hours = cljs.core.nth.call(null, vec__18443, 4, null);
  var minutes = cljs.core.nth.call(null, vec__18443, 5, null);
  var seconds = cljs.core.nth.call(null, vec__18443, 6, null);
  var fraction = cljs.core.nth.call(null, vec__18443, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__18443, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__18443, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__18443, 10, null);
  var v = vec__18443;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3403__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__3403__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__3403__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__3403__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__3403__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__3403__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3403__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3403__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4090__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4090__auto__)) {
    var vec__18445 = temp__4090__auto__;
    var years = cljs.core.nth.call(null, vec__18445, 0, null);
    var months = cljs.core.nth.call(null, vec__18445, 1, null);
    var days = cljs.core.nth.call(null, vec__18445, 2, null);
    var hours = cljs.core.nth.call(null, vec__18445, 3, null);
    var minutes = cljs.core.nth.call(null, vec__18445, 4, null);
    var seconds = cljs.core.nth.call(null, vec__18445, 5, null);
    var ms = cljs.core.nth.call(null, vec__18445, 6, null);
    var offset = cljs.core.nth.call(null, vec__18445, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""));
  }
};
cljs.reader.read_date = function read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__18458_18470 = cljs.core.seq.call(null, form);
    var chunk__18459_18471 = null;
    var count__18460_18472 = 0;
    var i__18461_18473 = 0;
    while (true) {
      if (i__18461_18473 < count__18460_18472) {
        var x_18474 = cljs.core._nth.call(null, chunk__18459_18471, i__18461_18473);
        arr.push(x_18474);
        var G__18475 = seq__18458_18470;
        var G__18476 = chunk__18459_18471;
        var G__18477 = count__18460_18472;
        var G__18478 = i__18461_18473 + 1;
        seq__18458_18470 = G__18475;
        chunk__18459_18471 = G__18476;
        count__18460_18472 = G__18477;
        i__18461_18473 = G__18478;
        continue;
      } else {
        var temp__4092__auto___18479 = cljs.core.seq.call(null, seq__18458_18470);
        if (temp__4092__auto___18479) {
          var seq__18458_18480__$1 = temp__4092__auto___18479;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__18458_18480__$1)) {
            var c__4151__auto___18481 = cljs.core.chunk_first.call(null, seq__18458_18480__$1);
            var G__18482 = cljs.core.chunk_rest.call(null, seq__18458_18480__$1);
            var G__18483 = c__4151__auto___18481;
            var G__18484 = cljs.core.count.call(null, c__4151__auto___18481);
            var G__18485 = 0;
            seq__18458_18470 = G__18482;
            chunk__18459_18471 = G__18483;
            count__18460_18472 = G__18484;
            i__18461_18473 = G__18485;
            continue;
          } else {
            var x_18486 = cljs.core.first.call(null, seq__18458_18480__$1);
            arr.push(x_18486);
            var G__18487 = cljs.core.next.call(null, seq__18458_18480__$1);
            var G__18488 = null;
            var G__18489 = 0;
            var G__18490 = 0;
            seq__18458_18470 = G__18487;
            chunk__18459_18471 = G__18488;
            count__18460_18472 = G__18489;
            i__18461_18473 = G__18490;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj18463 = {};
        return obj18463;
      }();
      var seq__18464_18491 = cljs.core.seq.call(null, form);
      var chunk__18465_18492 = null;
      var count__18466_18493 = 0;
      var i__18467_18494 = 0;
      while (true) {
        if (i__18467_18494 < count__18466_18493) {
          var vec__18468_18495 = cljs.core._nth.call(null, chunk__18465_18492, i__18467_18494);
          var k_18496 = cljs.core.nth.call(null, vec__18468_18495, 0, null);
          var v_18497 = cljs.core.nth.call(null, vec__18468_18495, 1, null);
          obj[cljs.core.name.call(null, k_18496)] = v_18497;
          var G__18498 = seq__18464_18491;
          var G__18499 = chunk__18465_18492;
          var G__18500 = count__18466_18493;
          var G__18501 = i__18467_18494 + 1;
          seq__18464_18491 = G__18498;
          chunk__18465_18492 = G__18499;
          count__18466_18493 = G__18500;
          i__18467_18494 = G__18501;
          continue;
        } else {
          var temp__4092__auto___18502 = cljs.core.seq.call(null, seq__18464_18491);
          if (temp__4092__auto___18502) {
            var seq__18464_18503__$1 = temp__4092__auto___18502;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__18464_18503__$1)) {
              var c__4151__auto___18504 = cljs.core.chunk_first.call(null, seq__18464_18503__$1);
              var G__18505 = cljs.core.chunk_rest.call(null, seq__18464_18503__$1);
              var G__18506 = c__4151__auto___18504;
              var G__18507 = cljs.core.count.call(null, c__4151__auto___18504);
              var G__18508 = 0;
              seq__18464_18491 = G__18505;
              chunk__18465_18492 = G__18506;
              count__18466_18493 = G__18507;
              i__18467_18494 = G__18508;
              continue;
            } else {
              var vec__18469_18509 = cljs.core.first.call(null, seq__18464_18503__$1);
              var k_18510 = cljs.core.nth.call(null, vec__18469_18509, 0, null);
              var v_18511 = cljs.core.nth.call(null, vec__18469_18509, 1, null);
              obj[cljs.core.name.call(null, k_18510)] = v_18511;
              var G__18512 = cljs.core.next.call(null, seq__18464_18503__$1);
              var G__18513 = null;
              var G__18514 = 0;
              var G__18515 = 0;
              seq__18464_18491 = G__18512;
              chunk__18465_18492 = G__18513;
              count__18466_18493 = G__18514;
              i__18467_18494 = G__18515;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, null, [cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join(""));
      } else {
        return null;
      }
    }
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
      } else {
        return null;
      }
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return f;
  });
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return null;
  });
  return old_parser;
};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    this.creationStack = (new Error).stack;
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.Disposable.MONITORING_MODE = 0;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.bind(callback, opt_scope));
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn;
}};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersion("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersion("1.9b") || (goog.userAgent.IE && goog.userAgent.isVersion("8") || (goog.userAgent.OPERA && 
goog.userAgent.isVersion("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersion("528"))), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersion("8") || goog.userAgent.IE && !goog.userAgent.isVersion("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || (!!(goog.global["document"] && (document.documentElement && "ontouchstart" in document.documentElement)) || !!(goog.global["navigator"] && goog.global["navigator"]["msMaxTouchPoints"]))};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target;
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.defaultPrevented = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
  delete this.propagationStopped_;
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && (goog.userAgent.MAC && this.ctrlKey));
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventLike");
goog.events.Listenable = function() {
};
goog.events.Listenable.USE_LISTENABLE_INTERFACE = false;
goog.events.Listenable.IMPLEMENTED_BY_PROP_ = "__closure_listenable";
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP_] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return!!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP_]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function() {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
};
goog.events.Listener.ENABLE_MONITORING = false;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.isFunction(listener)) {
    this.isFunctionListener_ = true;
  } else {
    if (listener && (listener.handleEvent && goog.isFunction(listener.handleEvent))) {
      this.isFunctionListener_ = false;
    } else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = goog.events.ListenableKey.reserveKey();
  this.removed = false;
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if (this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject);
  }
  return this.listener.handleEvent.call(this.listener, eventObject);
};
goog.provide("goog.events");
goog.provide("goog.events.Key");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listenable");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.Key;
goog.events.ListenableType;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  var listenableKey;
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    listenableKey = src.listen((type), goog.events.wrapListener_(listener), opt_capt, opt_handler);
  } else {
    listenableKey = goog.events.listen_((src), type, listener, false, opt_capt, opt_handler);
  }
  var key = listenableKey.key;
  goog.events.listeners_[key] = listenableKey;
  return key;
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  var map = goog.events.listenerTree_;
  if (!(type in map)) {
    map[type] = {count_:0, remaining_:0};
  }
  map = map[type];
  if (!(capture in map)) {
    map[capture] = {count_:0, remaining_:0};
    map.count_++;
  }
  map = map[capture];
  var srcUid = goog.getUid(src);
  var listenerArray, listenerObj;
  map.remaining_++;
  if (!map[srcUid]) {
    listenerArray = map[srcUid] = [];
    map.count_++;
  } else {
    listenerArray = map[srcUid];
    for (var i = 0;i < listenerArray.length;i++) {
      listenerObj = listenerArray[i];
      if (listenerObj.listener == listener && listenerObj.handler == opt_handler) {
        if (listenerObj.removed) {
          break;
        }
        if (!callOnce) {
          listenerArray[i].callOnce = false;
        }
        return listenerArray[i];
      }
    }
  }
  var proxy = goog.events.getProxy();
  listenerObj = new goog.events.Listener;
  listenerObj.init(listener, proxy, src, type, capture, opt_handler);
  listenerObj.callOnce = callOnce;
  proxy.src = src;
  proxy.listener = listenerObj;
  listenerArray.push(listenerObj);
  if (!goog.events.sources_[srcUid]) {
    goog.events.sources_[srcUid] = [];
  }
  goog.events.sources_[srcUid].push(listenerObj);
  if (src.addEventListener) {
    if (src == goog.global || !src.customEvent_) {
      src.addEventListener(type, proxy, capture);
    }
  } else {
    src.attachEvent(goog.events.getOnString_(type), proxy);
  }
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  var listenableKey;
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    listenableKey = src.listenOnce((type), goog.events.wrapListener_(listener), opt_capt, opt_handler);
  } else {
    listenableKey = goog.events.listen_((src), type, listener, true, opt_capt, opt_handler);
  }
  var key = listenableKey.key;
  goog.events.listeners_[key] = listenableKey;
  return key;
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), goog.events.wrapListener_(listener), opt_capt, opt_handler);
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if (!listenerArray) {
    return false;
  }
  for (var i = 0;i < listenerArray.length;i++) {
    if (listenerArray[i].listener == listener && (listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler)) {
      return goog.events.unlistenByKey(listenerArray[i].key);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  var listener = goog.events.listeners_[key];
  if (!listener) {
    return false;
  }
  if (listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if (src.removeEventListener) {
    if (src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture);
    }
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  var srcUid = goog.getUid(src);
  if (goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if (sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid];
    }
  }
  listener.removed = true;
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if (listenerArray) {
    listenerArray.needsCleanup_ = true;
    goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  }
  delete goog.events.listeners_[key];
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.cleanUp = function(listenableKey) {
  delete goog.events.listeners_[listenableKey.key];
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if (!listenerArray.locked_) {
    if (listenerArray.needsCleanup_) {
      for (var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if (listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue;
        }
        if (oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex];
        }
        newIndex++;
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if (newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if (goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--;
        }
        if (goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type];
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  if (!noObj) {
    if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && (opt_obj && goog.events.Listenable.isImplementedBy(opt_obj))) {
      return opt_obj.removeAllListeners(opt_type);
    }
    var srcUid = goog.getUid((opt_obj));
    if (goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for (var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if (noType || opt_type == listener.type) {
          goog.events.unlistenByKey(listener.key);
          count++;
        }
      }
    }
  } else {
    goog.object.forEach(goog.events.listeners_, function(listener, key) {
      goog.events.unlistenByKey(key);
      count++;
    });
  }
  return count;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    return goog.events.getListeners_(obj, type, capture) || [];
  }
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if (type in map) {
    map = map[type];
    if (capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if (map[objUid]) {
        return map[objUid];
      }
    }
  }
  return null;
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener((type), goog.events.wrapListener_(listener), capture, opt_handler);
  }
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;i++) {
      if (!listenerArray[i].removed && (listenerArray[i].listener == listener && (listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler))) {
        return listenerArray[i];
      }
    }
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if (listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if (hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && (!!map[opt_capture] && objUid in map[opt_capture]);
    } else {
      if (!(hasType || hasCapture)) {
        return true;
      } else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture;
        });
      }
    }
  }
  return false;
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  var map = goog.events.listenerTree_;
  if (type in map) {
    map = map[type];
    if (capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject);
    }
  }
  return true;
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if (map[objUid]) {
    var remaining = --map.remaining_;
    var listenerArray = map[objUid];
    if (!listenerArray.locked_) {
      listenerArray.locked_ = 1;
    } else {
      listenerArray.locked_++;
    }
    try {
      var length = listenerArray.length;
      for (var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if (listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false;
        }
      }
    } finally {
      map.remaining_ = Math.max(remaining, map.remaining_);
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray);
    }
  }
  return Boolean(retval);
};
goog.events.fireListener = function(listener, eventObject) {
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener.key);
  }
  return listener.handleEvent(eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_);
};
goog.events.dispatchEvent = function(src, e) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    return src.dispatchEvent(e);
  }
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if (!(type in map)) {
    return true;
  }
  if (goog.isString(e)) {
    e = new goog.events.Event(e, src);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event((type), src);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || src;
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if (hasCapture) {
    ancestors = [];
    for (var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent);
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for (var i = ancestors.length - 1;!e.propagationStopped_ && (i >= 0 && targetsMap.remaining_);i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false;
    }
  }
  var hasBubble = false in map;
  if (hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if (hasCapture) {
      for (var i = 0;!e.propagationStopped_ && (i < ancestors.length && targetsMap.remaining_);i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false;
      }
    } else {
      for (var current = src;!e.propagationStopped_ && (current && targetsMap.remaining_);current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false;
      }
    }
  }
  return Boolean(rv);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if (!(type in map)) {
    return true;
  }
  map = map[type];
  var retval, targetsMap;
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var hasCapture = true in map;
    var hasBubble = false in map;
    if (hasCapture) {
      if (goog.events.isMarkedIeEvent_(ieEvent)) {
        return true;
      }
      goog.events.markIeEvent_(ieEvent);
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, (this));
    retval = true;
    try {
      if (hasCapture) {
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && (i >= 0 && targetsMap.remaining_);i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt);
        }
        if (hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for (var i = 0;!evt.propagationStopped_ && (i < ancestors.length && targetsMap.remaining_);i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt);
          }
        }
      } else {
        retval = goog.events.fireListener(listener, evt);
      }
    } finally {
      if (ancestors) {
        ancestors.length = 0;
      }
    }
    return retval;
  }
  var be = new goog.events.BrowserEvent(opt_evt, (this));
  retval = goog.events.fireListener(listener, be);
  return retval;
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener_ = function(listener) {
  if (goog.isFunction(listener)) {
    return listener;
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_] || (listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
    return listener.handleEvent(e);
  });
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    this.eventTargetListeners_ = {};
    this.reallyDisposed_ = false;
    this.actualEventTarget_ = this;
  }
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
  goog.events.Listenable.addImplementation(goog.events.EventTarget);
}
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    if (this.reallyDisposed_) {
      return true;
    }
    var ancestorsTree, ancestor = this.getParentEventTarget();
    if (ancestor) {
      ancestorsTree = [];
      var ancestorCount = 1;
      for (;ancestor;ancestor = ancestor.getParentEventTarget()) {
        ancestorsTree.push(ancestor);
        goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
      }
    }
    return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
  } else {
    return goog.events.dispatchEvent(this, e);
  }
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    this.removeAllListeners();
    this.reallyDisposed_ = true;
  } else {
    goog.events.removeAll(this);
  }
  this.parentEventTarget_ = null;
};
if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
  goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
    return this.listenInternal_(type, listener, false, opt_useCapture, opt_listenerScope);
  };
  goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
    return this.listenInternal_(type, listener, true, opt_useCapture, opt_listenerScope);
  };
  goog.events.EventTarget.prototype.listenInternal_ = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
    goog.asserts.assert(!this.reallyDisposed_, "Can not listen on disposed object.");
    var listenerArray = this.eventTargetListeners_[type] || (this.eventTargetListeners_[type] = []);
    var listenerObj;
    var index = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
    if (index > -1) {
      listenerObj = listenerArray[index];
      if (!callOnce) {
        listenerObj.callOnce = false;
      }
      return listenerObj;
    }
    listenerObj = new goog.events.Listener;
    listenerObj.init(listener, null, this, type, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
    return listenerObj;
  };
  goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
    if (!(type in this.eventTargetListeners_)) {
      return false;
    }
    var listenerArray = this.eventTargetListeners_[type];
    var index = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
    if (index > -1) {
      var listenerObj = listenerArray[index];
      goog.events.cleanUp(listenerObj);
      listenerObj.removed = true;
      return goog.array.removeAt(listenerArray, index);
    }
    return false;
  };
  goog.events.EventTarget.prototype.unlistenByKey = function(key) {
    var type = key.type;
    if (!(type in this.eventTargetListeners_)) {
      return false;
    }
    var removed = goog.array.remove(this.eventTargetListeners_[type], key);
    if (removed) {
      goog.events.cleanUp(key);
      key.removed = true;
    }
    return removed;
  };
  goog.events.EventTarget.prototype.removeAllListeners = function(opt_type, opt_capture) {
    var count = 0;
    for (var type in this.eventTargetListeners_) {
      if (!opt_type || type == opt_type) {
        var listenerArray = this.eventTargetListeners_[type];
        for (var i = 0;i < listenerArray.length;i++) {
          ++count;
          goog.events.cleanUp(listenerArray[i]);
          listenerArray[i].removed = true;
        }
        listenerArray.length = 0;
      }
    }
    return count;
  };
  goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
    goog.asserts.assert(!this.reallyDisposed_, "Can not fire listeners after dispose() completed.");
    if (!(type in this.eventTargetListeners_)) {
      return true;
    }
    var rv = true;
    var listenerArray = goog.array.clone(this.eventTargetListeners_[type]);
    for (var i = 0;i < listenerArray.length;++i) {
      var listener = listenerArray[i];
      if (listener && (!listener.removed && listener.capture == capture)) {
        if (listener.callOnce) {
          this.unlistenByKey(listener);
        }
        rv = listener.handleEvent(eventObject) !== false && rv;
      }
    }
    return rv && eventObject.returnValue_ != false;
  };
  goog.events.EventTarget.prototype.getListeners = function(type, capture) {
    var listenerArray = this.eventTargetListeners_[type];
    var rv = [];
    if (listenerArray) {
      for (var i = 0;i < listenerArray.length;++i) {
        var listenerObj = listenerArray[i];
        if (listenerObj.capture == capture) {
          rv.push(listenerObj);
        }
      }
    }
    return rv;
  };
  goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
    var listenerArray = this.eventTargetListeners_[type];
    var i = -1;
    if (listenerArray) {
      i = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
    }
    return i > -1 ? listenerArray[i] : null;
  };
  goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    return goog.object.some(this.eventTargetListeners_, function(listenersArray, type) {
      for (var i = 0;i < listenersArray.length;++i) {
        if ((!hasType || listenersArray[i].type == opt_type) && (!hasCapture || listenersArray[i].capture == opt_capture)) {
          return true;
        }
      }
      return false;
    });
  };
  goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
    this.actualEventTarget_ = target;
  };
  goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
    var type = e.type || (e);
    if (goog.isString(e)) {
      e = new goog.events.Event(e, target);
    } else {
      if (!(e instanceof goog.events.Event)) {
        var oldEvent = e;
        e = new goog.events.Event(type, target);
        goog.object.extend(e, oldEvent);
      } else {
        e.target = e.target || target;
      }
    }
    var rv = true, currentTarget;
    if (opt_ancestorsTree) {
      for (var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
        currentTarget = e.currentTarget = opt_ancestorsTree[i];
        rv = currentTarget.fireListeners(type, true, e) && rv;
      }
    }
    if (!e.propagationStopped_) {
      currentTarget = e.currentTarget = target;
      rv = currentTarget.fireListeners(type, true, e) && rv;
      if (!e.propagationStopped_) {
        rv = currentTarget.fireListeners(type, false, e) && rv;
      }
    }
    if (opt_ancestorsTree) {
      for (i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
        currentTarget = e.currentTarget = opt_ancestorsTree[i];
        rv = currentTarget.fireListeners(type, false, e) && rv;
      }
    }
    return rv;
  };
  goog.events.EventTarget.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
    for (var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.listener == listener && (listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope)) {
        return i;
      }
    }
    return-1;
  };
}
;goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if (this.timer_ && this.enabled) {
    this.stop();
    this.start();
  } else {
    if (this.timer_) {
      this.stop();
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return;
    }
    this.dispatchTick();
    if (this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now();
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if (!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now();
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if (this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null;
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    if (opt_handler) {
      listener = goog.bind(listener, opt_handler);
    }
  } else {
    if (listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  if (opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1;
  } else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      return f.call(opt_obj, val, undefined, iterator);
    }
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if (i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      } else {
        i++;
        return this.next();
      }
    }
  };
  return newIter;
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while (true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if (val1 != val2) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    } else {
      if (b1 && !b2) {
        return false;
      }
      if (!b2) {
        try {
          val2 = iterable2.next();
          return false;
        } catch (ex1) {
          if (ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true;
        }
      }
    }
  }
  return false;
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if (opt_values) {
    this.addAll(opt_values);
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if (type == "object" && val || type == "function") {
    return "o" + goog.getUid((val));
  } else {
    return type.substr(0, 1) + val;
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount();
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element);
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.add(values[i]);
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.remove(values[i]);
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear();
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty();
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this);
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for (var i = 0;i < values.length;i++) {
    var value = values[i];
    if (this.contains(value)) {
      result.add(value);
    }
  }
  return result;
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result;
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues();
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this);
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col);
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if (this.getCount() > colCount) {
    return false;
  }
  if (!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col);
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value);
  });
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false);
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if (goog.userAgent.WEBKIT && !goog.userAgent.isVersion("535.3")) {
    retVal = !retVal;
  }
  target.onerror = function(message, url, line) {
    if (oldErrorHandler) {
      oldErrorHandler(message, url, line);
    }
    logFunc({message:message, fileName:url, line:line});
    return retVal;
  };
};
goog.debug.expose = function(obj, opt_showFn) {
  if (typeof obj == "undefined") {
    return "undefined";
  }
  if (obj == null) {
    return "NULL";
  }
  var str = [];
  for (var x in obj) {
    if (!opt_showFn && goog.isFunction(obj[x])) {
      continue;
    }
    var s = x + " \x3d ";
    try {
      s += obj[x];
    } catch (e) {
      s += "*** " + e + " ***";
    }
    str.push(s);
  }
  return str.join("\n");
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space);
    };
    try {
      if (!goog.isDef(obj)) {
        str.push("undefined");
      } else {
        if (goog.isNull(obj)) {
          str.push("NULL");
        } else {
          if (goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"');
          } else {
            if (goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)));
            } else {
              if (goog.isObject(obj)) {
                if (previous.contains(obj)) {
                  str.push("*** reference loop detected ***");
                } else {
                  previous.add(obj);
                  str.push("{");
                  for (var x in obj) {
                    if (!opt_showFn && goog.isFunction(obj[x])) {
                      continue;
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace);
                  }
                  str.push("\n" + space + "}");
                }
              } else {
                str.push(obj);
              }
            }
          }
        }
      }
    } catch (e) {
      str.push("*** " + e + " ***");
    }
  };
  helper(obj, "");
  return str.join("");
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for (var i = 0;i < arr.length;i++) {
    if (goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]));
    } else {
      str.push(arr[i]);
    }
  }
  return "[ " + str.join(", ") + " ]";
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: \x3ca href\x3d"view-source:' + e.fileName + '" target\x3d"_new"\x3e' + e.fileName + "\x3c/a\x3e\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-\x3e ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-\x3e ");
    return error;
  } catch (e2) {
    return "Exception trying to expose exception! You win, we lose. " + e2;
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if (goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"};
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || (err.line || "Not available");
  } catch (e) {
    lineNumber = "Not available";
    threwError = true;
  }
  try {
    fileName = err.fileName || (err.filename || (err.sourceURL || (goog.global["$googDebugFname"] || href)));
  } catch (e) {
    fileName = "Not available";
    threwError = true;
  }
  if (threwError || (!err.lineNumber || (!err.fileName || !err.stack))) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"};
  }
  return err;
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if (!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller);
  }
  if (opt_message) {
    var x = 0;
    while (error["message" + x]) {
      ++x;
    }
    error["message" + x] = String(opt_message);
  }
  return error;
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while (fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller;
    } catch (e) {
      sb.push("[exception trying to get caller]\n");
      break;
    }
    depth++;
    if (depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break;
    }
  }
  if (opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]");
  } else {
    sb.push("[end]");
  }
  return sb.join("");
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, []);
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if (goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]");
  } else {
    if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for (var i = 0;i < args.length;i++) {
        if (i > 0) {
          sb.push(", ");
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break;
        }
        if (argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "...";
        }
        sb.push(argDesc);
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));
      } catch (e) {
        sb.push("[exception trying to get caller]\n");
      }
    } else {
      if (fn) {
        sb.push("[...long stack...]");
      } else {
        sb.push("[end]");
      }
    }
  }
  return sb.join("");
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver;
};
goog.debug.getFunctionName = function(fn) {
  if (goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn];
  }
  if (goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if (name) {
      goog.debug.fnNameCache_[fn] = name;
      return name;
    }
  }
  var functionSource = String(fn);
  if (!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if (matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method;
    } else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]";
    }
  }
  return goog.debug.fnNameCache_[functionSource];
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]");
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if (goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++;
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_;
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_;
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_;
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception;
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_;
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text;
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName;
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level;
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_;
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg;
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_;
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time;
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_;
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear();
};
goog.debug.LogBuffer.getInstance = function() {
  if (!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer;
  }
  return goog.debug.LogBuffer.instance_;
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if (this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret;
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName);
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0;
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false;
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if (!buffer[0]) {
    return;
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func((buffer[i]));
  } while (i != curIndex);
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name;
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if (!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_;
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value;
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name;
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for (var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  if (value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value];
  }
  for (var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if (level.value <= value) {
      return level;
    }
  }
  return null;
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name);
};
goog.debug.Logger.logToProfilers = function(msg) {
  if (goog.global["console"]) {
    if (goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg);
    } else {
      if (goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg);
      }
    }
  }
  if (goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg);
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_;
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    if (!this.handlers_) {
      this.handlers_ = [];
    }
    this.handlers_.push(handler);
  } else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler);
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler);
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_;
};
goog.debug.Logger.prototype.getChildren = function() {
  if (!this.children_) {
    this.children_ = {};
  }
  return this.children_;
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level;
  } else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level;
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if (!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_;
  }
  if (this.level_) {
    return this.level_;
  }
  if (this.parent_) {
    return this.parent_.getEffectiveLevel();
  }
  goog.asserts.fail("Root logger has no level set.");
  return null;
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value;
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if (this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception));
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if (goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  } else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_);
  }
  if (opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller));
  }
  return logRecord;
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception);
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception);
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception);
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception);
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if (this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord);
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while (target) {
      target.callPublish_(logRecord);
      target = target.getParent();
    }
  } else {
    for (var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if (this.handlers_) {
    for (var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent;
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger;
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if (!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG);
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_;
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return(goog.debug.LogManager.rootLogger_);
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name);
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")");
  };
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger);
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger;
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if (/^\s*$/.test(s)) {
    return false;
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""));
};
goog.json.parse = function(s) {
  var o = String(s);
  if (goog.json.isValid_(o)) {
    try {
      return(eval("(" + o + ")"));
    } catch (ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return(eval("(" + s + ")"));
};
goog.json.Replacer;
goog.json.Reviver;
goog.json.serialize = function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object);
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer;
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("");
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_((object), sb);
      break;
    case "number":
      this.serializeNumber_((object), sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if (object == null) {
        sb.push("null");
        break;
      }
      if (goog.isArray(object)) {
        this.serializeArray((object), sb);
        break;
      }
      this.serializeObject_((object), sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);;
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if (c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c];
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if (cc < 16) {
      rv += "000";
    } else {
      if (cc < 256) {
        rv += "00";
      } else {
        if (cc < 4096) {
          rv += "0";
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16);
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null");
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for (var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serialize_(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ",";
  }
  sb.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if (typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ",";
      }
    }
  }
  sb.push("}");
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return "No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return "Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return "File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return "Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return "Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return "An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return "Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return "Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return "Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return "The resource is not available offline";
    default:
      return "Unrecognized error code";
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false;
  }
};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory;
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_();
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_();
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance();
};
goog.net.XmlHttp.ASSUME_NATIVE_XHR = false;
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions();
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory((factory), (optionsFactory)));
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory;
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this);
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if (progId) {
    return new ActiveXObject(progId);
  } else {
    return new XMLHttpRequest;
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if (progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;
  }
  return options;
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR) {
    return "";
  }
  if (!this.ieProgId_ && (typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined")) {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for (var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate;
      } catch (e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return(this.ieProgId_);
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && (pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "\x26", key, "\x3d", goog.string.urlEncode(value)]);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || (followingChar == goog.uri.utils.CharCode_.EQUAL || (followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH))) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if (opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback);
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if (opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval);
  }
  if (opt_withCredentials) {
    x.setWithCredentials(opt_withCredentials);
  }
  x.send(url, opt_method, opt_content, opt_headers);
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while (instances.length) {
    instances.pop().dispose();
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo);
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_;
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type;
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials;
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_;
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if (this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false;
  } catch (err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return;
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if (opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value);
    });
  }
  var contentIsFormData = goog.global["FormData"] && content instanceof goog.global["FormData"];
  if (method == "POST" && (!headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER) && !contentIsFormData)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value);
  }, this);
  if (this.responseType_) {
    this.xhr_.responseType = this.responseType_;
  }
  if (goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_;
  }
  try {
    if (this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null;
    }
    if (this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_);
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false;
  } catch (err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if (typeof goog == "undefined") {
  } else {
    if (this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT);
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if (this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_();
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if (!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR);
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if (this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_();
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if (this.xhr_) {
    if (this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false;
    }
    this.cleanUpXhr_(true);
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this);
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if (!this.inOpen_ && (!this.inSend_ && !this.inAbort_)) {
    this.onReadyStateChangeEntryPoint_();
  } else {
    this.onReadyStateChangeHelper_();
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_();
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if (!this.active_) {
    return;
  }
  if (typeof goog == "undefined") {
  } else {
    if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && (this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2)) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"));
    } else {
      if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return;
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if (this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if (this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS);
          } else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_();
          }
        } finally {
          this.cleanUpXhr_();
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if (this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if (this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null;
    }
    if (!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY);
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange;
    } catch (e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message);
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_;
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_();
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? (this.xhr_.readyState) : goog.net.XmlHttp.ReadyState.UNINITIALIZED;
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;
  } catch (e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1;
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : "";
  } catch (e) {
    this.logger_.fine("Can not get status: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_);
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : "";
  } catch (e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getResponseBody = function() {
  try {
    if (this.xhr_ && "responseBody" in this.xhr_) {
      return this.xhr_["responseBody"];
    }
  } catch (e) {
    this.logger_.fine("Can not get responseBody: " + e.message);
  }
  return null;
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null;
  } catch (e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if (!this.xhr_) {
    return undefined;
  }
  var responseText = this.xhr_.responseText;
  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length);
  }
  return goog.json.parse(responseText);
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if (!this.xhr_) {
      return null;
    }
    if ("response" in this.xhr_) {
      return this.xhr_.response;
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if ("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer;
        }
      ;
    }
    this.logger_.severe("Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null;
  } catch (e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined;
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_;
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_);
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]";
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
});
goog.provide("floor16.xhr");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.net.XhrIo");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("goog.events");
goog.require("goog.events");
goog.require("cljs.reader");
goog.require("cljs.reader");
floor16.xhr.edn__GT_map = function edn__GT_map(t) {
  if (cljs.core.truth_(function() {
    var and__3391__auto__ = t;
    if (cljs.core.truth_(and__3391__auto__)) {
      return!cljs.core.empty_QMARK_.call(null, t);
    } else {
      return and__3391__auto__;
    }
  }())) {
    return cljs.reader.read_string.call(null, t);
  } else {
    return null;
  }
};
floor16.xhr.map__GT_edn = function map__GT_edn(m) {
  if (cljs.core.truth_(m)) {
    return cljs.core.pr_str.call(null, m);
  } else {
    return null;
  }
};
floor16.xhr.url_encode = function url_encode(string) {
  var G__14403 = string;
  var G__14403__$1 = G__14403 == null ? null : [cljs.core.str(G__14403)].join("");
  var G__14403__$2 = G__14403__$1 == null ? null : encodeURIComponent(G__14403__$1);
  var G__14403__$3 = G__14403__$2 == null ? null : G__14403__$2.replace("+", "%20");
  return G__14403__$3;
};
floor16.xhr.url_decode = function url_decode(string) {
  var G__14405 = string;
  var G__14405__$1 = G__14405 == null ? null : [cljs.core.str(G__14405)].join("");
  var G__14405__$2 = G__14405__$1 == null ? null : decodeURIComponent(G__14405__$1);
  return G__14405__$2;
};
floor16.xhr.map__GT_query = function map__GT_query(m) {
  var G__14409 = cljs.core.seq.call(null, m);
  var G__14409__$1 = G__14409 == null ? null : cljs.core.sort.call(null, G__14409);
  var G__14409__$2 = G__14409__$1 == null ? null : cljs.core.map.call(null, function(G__14409, G__14409__$1) {
    return function(p__14410) {
      var vec__14411 = p__14410;
      var k = cljs.core.nth.call(null, vec__14411, 0, null);
      var v = cljs.core.nth.call(null, vec__14411, 1, null);
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [floor16.xhr.url_encode.call(null, cljs.core.name.call(null, k)), "\x3d", floor16.xhr.url_encode.call(null, [cljs.core.str(v)].join(""))], null);
    };
  }(G__14409, G__14409__$1), G__14409__$1);
  var G__14409__$3 = G__14409__$2 == null ? null : cljs.core.interpose.call(null, "\x26", G__14409__$2);
  var G__14409__$4 = G__14409__$3 == null ? null : cljs.core.flatten.call(null, G__14409__$3);
  var G__14409__$5 = G__14409__$4 == null ? null : cljs.core.apply.call(null, cljs.core.str, G__14409__$4);
  return G__14409__$5;
};
floor16.xhr.split_param = function split_param(param) {
  return cljs.core.take.call(null, 2, cljs.core.concat.call(null, clojure.string.split.call(null, param, /=/), cljs.core.repeat.call(null, "")));
};
floor16.xhr.query__GT_map = function query__GT_map(qstr) {
  if (cljs.core.truth_(qstr)) {
    var G__14413 = clojure.string.split.call(null, qstr, /&/);
    var G__14413__$1 = G__14413 == null ? null : cljs.core.seq.call(null, G__14413);
    var G__14413__$2 = G__14413__$1 == null ? null : cljs.core.mapcat.call(null, floor16.xhr.split_param, G__14413__$1);
    var G__14413__$3 = G__14413__$2 == null ? null : cljs.core.map.call(null, floor16.xhr.url_decode, G__14413__$2);
    var G__14413__$4 = G__14413__$3 == null ? null : cljs.core.apply.call(null, cljs.core.hash_map, G__14413__$3);
    return G__14413__$4;
  } else {
    return null;
  }
};
floor16.xhr.meths = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "get", "get", 1014006472), "GET", new cljs.core.Keyword(null, "put", "put", 1014015617), "PUT", new cljs.core.Keyword(null, "post", "post", 1017351186), "POST", new cljs.core.Keyword(null, "delete", "delete", 3973413149), "DELETE"], null);
floor16.xhr.med_types = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "edn", "edn", 1014004513), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 1125876963), "application/edn", new cljs.core.Keyword(null, "to-map-encoder", "to-map-encoder", 4561511627), floor16.xhr.edn__GT_map, new cljs.core.Keyword(null, "from-map-encoder", "from-map-encoder", 2908479354), floor16.xhr.map__GT_edn], null), new cljs.core.Keyword(null, "url-encode", 
"url-encode", 3129387942), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 1125876963), "application/x-www-form-urlencoded", new cljs.core.Keyword(null, "to-map-encoder", "to-map-encoder", 4561511627), floor16.xhr.query__GT_map, new cljs.core.Keyword(null, "from-map-encoder", "from-map-encoder", 2908479354), floor16.xhr.map__GT_query], null)], null);
floor16.xhr.heads = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "accept", "accept", 3885410426), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 1125876963), "Accept", new cljs.core.Keyword(null, "decoder", "decoder", 2556338102), function(p1__14414_SHARP_) {
  return cljs.core.get_in.call(null, floor16.xhr.med_types, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__14414_SHARP_, new cljs.core.Keyword(null, "value", "value", 1125876963)], null));
}], null), new cljs.core.Keyword(null, "content-type", "content-type", 1799574400), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 1125876963), "Content-Type", new cljs.core.Keyword(null, "decoder", "decoder", 2556338102), function(p1__14415_SHARP_) {
  return cljs.core.get_in.call(null, floor16.xhr.med_types, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__14415_SHARP_, new cljs.core.Keyword(null, "value", "value", 1125876963)], null));
}], null), new cljs.core.Keyword(null, "authorization", "authorization", 3923301355), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 1125876963), "Authorization", new cljs.core.Keyword(null, "decoder", "decoder", 2556338102), cljs.core.identity], null)], null);
floor16.xhr.format_headers = function format_headers(headers) {
  return cljs.core.clj__GT_js.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__14418) {
    var vec__14419 = p__14418;
    var k = cljs.core.nth.call(null, vec__14419, 0, null);
    var v = cljs.core.nth.call(null, vec__14419, 1, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.get_in.call(null, floor16.xhr.heads, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.Keyword(null, "value", "value", 1125876963)], null)), cljs.core.get_in.call(null, floor16.xhr.heads, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.Keyword(null, "decoder", "decoder", 2556338102)], null)).call(null, 
    v)], null);
  }, headers)));
};
floor16.xhr.pre_process = function pre_process(p__14420) {
  var map__14423 = p__14420;
  var map__14423__$1 = cljs.core.seq_QMARK_.call(null, map__14423) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14423) : map__14423;
  var request = map__14423__$1;
  var headers = cljs.core.get.call(null, map__14423__$1, new cljs.core.Keyword(null, "headers", "headers", 1809212152));
  var body = cljs.core.get.call(null, map__14423__$1, new cljs.core.Keyword(null, "body", "body", 1016933652));
  var method = cljs.core.get.call(null, map__14423__$1, new cljs.core.Keyword(null, "method", "method", 4231316563));
  var url = cljs.core.get.call(null, map__14423__$1, new cljs.core.Keyword(null, "url", "url", 1014020321));
  var content_type = cljs.core.get.call(null, headers, new cljs.core.Keyword(null, "content-type", "content-type", 1799574400), new cljs.core.Keyword(null, "edn", "edn", 1014004513));
  var map__14424 = content_type.call(null, floor16.xhr.med_types);
  var map__14424__$1 = cljs.core.seq_QMARK_.call(null, map__14424) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14424) : map__14424;
  var body_encoder = cljs.core.get.call(null, map__14424__$1, new cljs.core.Keyword(null, "from-map-encoder", "from-map-encoder", 2908479354));
  var accept = cljs.core.get.call(null, headers, new cljs.core.Keyword(null, "accept", "accept", 3885410426), new cljs.core.Keyword(null, "edn", "edn", 1014004513));
  var headers__$1 = floor16.xhr.format_headers.call(null, cljs.core.assoc.call(null, cljs.core.assoc.call(null, headers, new cljs.core.Keyword(null, "content-type", "content-type", 1799574400), content_type), new cljs.core.Keyword(null, "accept", "accept", 3885410426), accept));
  return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "method", "method", 4231316563), floor16.xhr.meths.call(null, method), new cljs.core.Keyword(null, "url", "url", 1014020321), url, new cljs.core.Keyword(null, "body", "body", 1016933652), cljs.core.truth_(body) ? body_encoder.call(null, body) : null, new cljs.core.Keyword(null, "headers", "headers", 1809212152), headers__$1], null);
};
floor16.xhr.create_response = function create_response(xhr) {
  var raw_body = xhr.getResponseText();
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", 4416389988), xhr.getStatus(), new cljs.core.Keyword(null, "headers", "headers", 1809212152), xhr.getAllResponseHeaders(), new cljs.core.Keyword(null, "body", "body", 1016933652), cljs.core.truth_(function() {
    var and__3391__auto__ = raw_body;
    if (cljs.core.truth_(and__3391__auto__)) {
      return!cljs.core.empty_QMARK_.call(null, raw_body);
    } else {
      return and__3391__auto__;
    }
  }()) ? cljs.reader.read_string.call(null, raw_body) : null], null);
};
floor16.xhr.do_request = function do_request(request, on_complete) {
  var xhr = new goog.net.XhrIo;
  var map__14426 = floor16.xhr.pre_process.call(null, request);
  var map__14426__$1 = cljs.core.seq_QMARK_.call(null, map__14426) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14426) : map__14426;
  var headers = cljs.core.get.call(null, map__14426__$1, new cljs.core.Keyword(null, "headers", "headers", 1809212152));
  var body = cljs.core.get.call(null, map__14426__$1, new cljs.core.Keyword(null, "body", "body", 1016933652));
  var method = cljs.core.get.call(null, map__14426__$1, new cljs.core.Keyword(null, "method", "method", 4231316563));
  var url = cljs.core.get.call(null, map__14426__$1, new cljs.core.Keyword(null, "url", "url", 1014020321));
  goog.events.listen(xhr, goog.net.EventType.COMPLETE, function(e) {
    return on_complete.call(null, floor16.xhr.create_response.call(null, xhr));
  });
  return xhr.send(url, method, body, headers);
};
floor16.xhr.accept = function accept(request, t) {
  return cljs.core.assoc_in.call(null, request, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", 1809212152), new cljs.core.Keyword(null, "accept", "accept", 3885410426)], null), t);
};
floor16.xhr.content_type = function content_type(request, t) {
  return cljs.core.assoc_in.call(null, request, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", 1809212152), new cljs.core.Keyword(null, "content-type", "content-type", 1799574400)], null), t);
};
floor16.xhr.bearer_authorization = function bearer_authorization(request, token) {
  return cljs.core.assoc_in.call(null, request, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", 1809212152), new cljs.core.Keyword(null, "authorization", "authorization", 3923301355)], null), [cljs.core.str("Bearer "), cljs.core.str(token)].join(""));
};
goog.provide("floor16.global");
goog.require("cljs.core");
floor16.global.server_side_QMARK_ = false;
goog.provide("goog.dom.vendor");
goog.require("goog.userAgent");
goog.dom.vendor.getVendorJsPrefix = function() {
  if (goog.userAgent.WEBKIT) {
    return "Webkit";
  } else {
    if (goog.userAgent.GECKO) {
      return "Moz";
    } else {
      if (goog.userAgent.IE) {
        return "ms";
      } else {
        if (goog.userAgent.OPERA) {
          return "O";
        }
      }
    }
  }
  return null;
};
goog.dom.vendor.getVendorPrefix = function() {
  if (goog.userAgent.WEBKIT) {
    return "-webkit";
  } else {
    if (goog.userAgent.GECKO) {
      return "-moz";
    } else {
      if (goog.userAgent.IE) {
        return "-ms";
      } else {
        if (goog.userAgent.OPERA) {
          return "-o";
        }
      }
    }
  }
  return null;
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj18271 = {};
  return obj18271;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3391__auto__ = port;
    if (and__3391__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4030__auto__ = port == null ? null : port;
    return function() {
      var or__3403__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj18273 = {};
  return obj18273;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if (function() {
    var and__3391__auto__ = port;
    if (and__3391__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler);
  } else {
    var x__4030__auto__ = port == null ? null : port;
    return function() {
      var or__3403__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj18275 = {};
  return obj18275;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3391__auto__ = chan;
    if (and__3391__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4030__auto__ = chan == null ? null : chan;
    return function() {
      var or__3403__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj18277 = {};
  return obj18277;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3391__auto__ = h;
    if (and__3391__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4030__auto__ = h == null ? null : h;
    return function() {
      var or__3403__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3391__auto__ = h;
    if (and__3391__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4030__auto__ = h == null ? null : h;
    return function() {
      var or__3403__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj18279 = {};
  return obj18279;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3391__auto__ = b;
    if (and__3391__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4030__auto__ = b == null ? null : b;
    return function() {
      var or__3403__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3391__auto__ = b;
    if (and__3391__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4030__auto__ = b == null ? null : b;
    return function() {
      var or__3403__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if (function() {
    var and__3391__auto__ = b;
    if (and__3391__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm);
  } else {
    var x__4030__auto__ = b == null ? null : b;
    return function() {
      var or__3403__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj18281 = {};
  return obj18281;
}();
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__18293 = cnt + 1;
      cnt = G__18293;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4251__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4251__auto__) {
      var v_18294 = this$.pop();
      if (keep_QMARK_.call(null, v_18294)) {
        this$.unshift(v_18294);
      } else {
      }
      var G__18295 = x + 1;
      x = G__18295;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", -1640531465, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, this$__$1))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't add to a full buffer"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -1337857039, null), new cljs.core.Symbol(null, "this", "this", -1636972457, null)))))].join(""));
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    return null;
  } else {
    return self__.buf.unshift(itm);
  }
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_18282 = 0;
  while (true) {
    var m_18283 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_18283 == null) {
    } else {
      m_18283.call(null);
      if (count_18282 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__18284 = count_18282 + 1;
        count_18282 = G__18284;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
if (typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null);
  };
} else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3391__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (and__3391__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3391__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if (typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0);
    } else {
      if (typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || (goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1")), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || (goog.userAgent.OPERA || goog.userAgent.WEBKIT), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className;
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || [];
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var expectedCount = classes.length + args.length;
  goog.dom.classes.add_(classes, args);
  goog.dom.classes.set(element, classes.join(" "));
  return classes.length == expectedCount;
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var newClasses = goog.dom.classes.getDifference_(classes, args);
  goog.dom.classes.set(element, newClasses.join(" "));
  return newClasses.length == classes.length - args.length;
};
goog.dom.classes.add_ = function(classes, args) {
  for (var i = 0;i < args.length;i++) {
    if (!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
    }
  }
};
goog.dom.classes.getDifference_ = function(arr1, arr2) {
  return goog.array.filter(arr1, function(item) {
    return!goog.array.contains(arr2, item);
  });
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for (var i = 0;i < classes.length;i++) {
    if (classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true;
    }
  }
  if (removed) {
    classes.push(toClass);
    goog.dom.classes.set(element, classes.join(" "));
  }
  return removed;
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if (goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove);
  } else {
    if (goog.isArray(classesToRemove)) {
      classes = goog.dom.classes.getDifference_(classes, classesToRemove);
    }
  }
  if (goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd);
  } else {
    if (goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd);
    }
  }
  goog.dom.classes.set(element, classes.join(" "));
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className);
};
goog.dom.classes.enable = function(element, className, enabled) {
  if (enabled) {
    goog.dom.classes.add(element, className);
  } else {
    goog.dom.classes.remove(element, className);
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add;
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length1;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.standardDeviation = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return Math.sqrt(variance);
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  } else {
    if (parent.getElementsByClassName) {
      return parent.getElementsByClassName(className);
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || (goog.global || window);
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && (attributes && (attributes.name || attributes.type))) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes));
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat";
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    return element.parentElement;
  }
  var parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentMode(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(element, text) {
  if ("textContent" in element) {
    element.textContent = text;
  } else {
    if (element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while (element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild);
      }
      element.firstChild.data = text;
    } else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(String(text)));
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if (attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && (index >= 0 && index < 32768);
  }
  return false;
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || (goog.global.document || document);
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if (goog.isString(element)) {
    return this.document_.getElementById(element);
  } else {
    return element;
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat";
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left;
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for (var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x);
  }
  return box;
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left);
};
if (goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return "(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)";
  };
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other);
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if (goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left;
  } else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left;
  }
  return this;
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom);
};
goog.math.Box.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.top == b.top && (a.right == b.right && (a.bottom == b.bottom && a.left == b.left));
};
goog.math.Box.contains = function(box, other) {
  if (!box || !other) {
    return false;
  }
  if (other instanceof goog.math.Box) {
    return other.left >= box.left && (other.right <= box.right && (other.top >= box.top && other.bottom <= box.bottom));
  }
  return other.x >= box.left && (other.x <= box.right && (other.y >= box.top && other.y <= box.bottom));
};
goog.math.Box.relativePositionX = function(box, coord) {
  if (coord.x < box.left) {
    return coord.x - box.left;
  } else {
    if (coord.x > box.right) {
      return coord.x - box.right;
    }
  }
  return 0;
};
goog.math.Box.relativePositionY = function(box, coord) {
  if (coord.y < box.top) {
    return coord.y - box.top;
  } else {
    if (coord.y > box.bottom) {
      return coord.y - box.bottom;
    }
  }
  return 0;
};
goog.math.Box.distance = function(box, coord) {
  var x = goog.math.Box.relativePositionX(box, coord);
  var y = goog.math.Box.relativePositionY(box, coord);
  return Math.sqrt(x * x + y * y);
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && (b.left <= a.right && (a.top <= b.bottom && b.top <= a.bottom));
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && (b.left <= a.right + padding && (a.top <= b.bottom + padding && b.top <= a.bottom + padding));
};
goog.math.Box.prototype.ceil = function() {
  this.top = Math.ceil(this.top);
  this.right = Math.ceil(this.right);
  this.bottom = Math.ceil(this.bottom);
  this.left = Math.ceil(this.left);
  return this;
};
goog.math.Box.prototype.floor = function() {
  this.top = Math.floor(this.top);
  this.right = Math.floor(this.right);
  this.bottom = Math.floor(this.bottom);
  this.left = Math.floor(this.left);
  return this;
};
goog.math.Box.prototype.round = function() {
  this.top = Math.round(this.top);
  this.right = Math.round(this.right);
  this.bottom = Math.round(this.bottom);
  this.left = Math.round(this.left);
  return this;
};
goog.math.Box.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.right += tx.x;
    this.top += tx.y;
    this.bottom += tx.y;
  } else {
    this.left += tx;
    this.right += tx;
    if (goog.isNumber(opt_ty)) {
      this.top += opt_ty;
      this.bottom += opt_ty;
    }
  }
  return this;
};
goog.math.Box.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.right *= sx;
  this.top *= sy;
  this.bottom *= sy;
  return this;
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h;
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height);
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left);
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top);
};
if (goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return "(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)";
  };
}
goog.math.Rect.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.left == b.left && (a.width == b.width && (a.top == b.top && a.height == b.height));
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if (x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if (y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true;
    }
  }
  return false;
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if (x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if (y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0);
    }
  }
  return null;
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && (b.left <= a.left + a.width && (a.top <= b.top + b.height && b.top <= a.top + a.height));
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect);
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if (!intersection || (!intersection.height || !intersection.width)) {
    return[a.clone()];
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if (b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top;
  }
  if (bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top;
  }
  if (b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height));
  }
  if (br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height));
  }
  return result;
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect);
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top;
};
goog.math.Rect.boundingRect = function(a, b) {
  if (!a || !b) {
    return null;
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone;
};
goog.math.Rect.prototype.contains = function(another) {
  if (another instanceof goog.math.Rect) {
    return this.left <= another.left && (this.left + this.width >= another.left + another.width && (this.top <= another.top && this.top + this.height >= another.top + another.height));
  } else {
    return another.x >= this.left && (another.x <= this.left + this.width && (another.y >= this.top && another.y <= this.top + this.height));
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height);
};
goog.math.Rect.prototype.ceil = function() {
  this.left = Math.ceil(this.left);
  this.top = Math.ceil(this.top);
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Rect.prototype.floor = function() {
  this.left = Math.floor(this.left);
  this.top = Math.floor(this.top);
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Rect.prototype.round = function() {
  this.left = Math.round(this.left);
  this.top = Math.round(this.top);
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Rect.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.top += tx.y;
  } else {
    this.left += tx;
    if (goog.isNumber(opt_ty)) {
      this.top += opt_ty;
    }
  }
  return this;
};
goog.math.Rect.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.width *= sx;
  this.top *= sy;
  this.height *= sy;
  return this;
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.dom.vendor");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if (goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style);
  } else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element));
  }
};
goog.style.setStyle_ = function(element, value, style) {
  var propertyName = goog.style.getVendorJsStyleName_(element, style);
  if (propertyName) {
    element.style[propertyName] = value;
  }
};
goog.style.getVendorJsStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if (element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(style);
    if (element.style[prefixedStyle] !== undefined) {
      return prefixedStyle;
    }
  }
  return camelStyle;
};
goog.style.getVendorStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if (element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(style);
    if (element.style[prefixedStyle] !== undefined) {
      return goog.dom.vendor.getVendorPrefix() + "-" + style;
    }
  }
  return style;
};
goog.style.getStyle = function(element, property) {
  var styleValue = element.style[goog.string.toCamelCase(property)];
  if (typeof styleValue !== "undefined") {
    return styleValue;
  }
  return element.style[goog.style.getVendorJsStyleName_(element, property)] || "";
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if (doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if (styles) {
      return styles[property] || (styles.getPropertyValue(property) || "");
    }
  }
  return "";
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null;
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || (goog.style.getCascadedStyle(element, style) || element.style && element.style[style]);
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position");
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor");
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX");
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY");
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex");
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign");
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor");
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && ((goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9"));
  if (arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y;
  } else {
    x = arg1;
    y = opt_arg2;
  }
  el.style.left = goog.style.getPixelStyleValue_((x), buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_((y), buggyGeckoSubPixelPos);
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop);
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if (opt_node) {
    doc = goog.dom.getOwnerDocument(opt_node);
  } else {
    doc = goog.dom.getDocument();
  }
  if (goog.userAgent.IE && (!goog.userAgent.isDocumentMode(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode())) {
    return doc.body;
  }
  return doc.documentElement;
};
goog.style.getViewportPageOffset = function(doc) {
  var body = doc.body;
  var documentElement = doc.documentElement;
  var scrollLeft = body.scrollLeft || documentElement.scrollLeft;
  var scrollTop = body.scrollTop || documentElement.scrollTop;
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if (goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop;
  }
  return(rect);
};
goog.style.getOffsetParent = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isDocumentMode(8)) {
    return element.offsetParent;
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for (var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_((parent), "position");
    skipStatic = skipStatic && (positionStyle == "static" && (parent != doc.documentElement && parent != doc.body));
    if (!skipStatic && (parent.scrollWidth > parent.clientWidth || (parent.scrollHeight > parent.clientHeight || (positionStyle == "fixed" || (positionStyle == "absolute" || positionStyle == "relative"))))) {
      return(parent);
    }
  }
  return null;
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for (var el = element;el = goog.style.getOffsetParent(el);) {
    if ((!goog.userAgent.IE || el.clientWidth != 0) && ((!goog.userAgent.WEBKIT || (el.clientHeight != 0 || el != body)) && (el != body && (el != documentElement && goog.style.getStyle_(el, "overflow") != "visible")))) {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && (visibleRect.left >= 0 && (visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left)) ? visibleRect : null;
};
goog.style.getContainerOffsetToScrollInto = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  var scrollLeft = container.scrollLeft;
  var scrollTop = container.scrollTop;
  if (opt_center) {
    scrollLeft += relX - spaceX / 2;
    scrollTop += relY - spaceY / 2;
  } else {
    scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    scrollTop += Math.min(relY, Math.max(relY - spaceY, 0));
  }
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var offset = goog.style.getContainerOffsetToScrollInto(element, container, opt_center);
  container.scrollLeft = offset.x;
  container.scrollTop = offset.y;
};
goog.style.getClientLeftTop = function(el) {
  if (goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if (goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth;
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")));
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop);
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  goog.asserts.assertObject(el, "Parameter is required");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && (doc.getBoxObjectFor && (!el.getBoundingClientRect && (positionStyle == "absolute" && ((box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0)))));
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if (el == viewportElement) {
    return pos;
  }
  if (el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y;
  } else {
    if (doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY;
    } else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if (parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0;
        }
        if (goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break;
        }
        parent = parent.offsetParent;
      } while (parent && parent != el);
      if (goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop;
      }
      for (parent = el;(parent = goog.style.getOffsetParent(parent)) && (parent != doc.body && parent != viewportElement);) {
        pos.x -= parent.scrollLeft;
        if (!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop;
        }
      }
    }
  }
  return pos;
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x;
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y;
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y;
  } while (currentWin && (currentWin != relativeWin && ((currentEl = currentWin.frameElement) && (currentWin = currentWin.parent))));
  return position;
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if (origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if (goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll());
    }
    rect.left += pos.x;
    rect.top += pos.y;
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y);
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if (el.nodeType == goog.dom.NodeType.ELEMENT) {
    el = (el);
    if (el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top;
    } else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y;
    }
    if (goog.userAgent.GECKO && !goog.userAgent.isVersion(12)) {
      pos = goog.math.Coordinate.sum(pos, goog.style.getCssTranslation(el));
    }
  } else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if (el.targetTouches) {
      targetEvent = el.targetTouches[0];
    } else {
      if (isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0];
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY;
  }
  return pos;
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if (x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x;
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy);
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if (w instanceof goog.math.Size) {
    h = w.height;
    w = w.width;
  } else {
    if (opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h;
  }
  goog.style.setWidth(element, (w));
  goog.style.setHeight(element, (h));
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if (typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px";
  }
  return value;
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true);
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true);
};
goog.style.getSize = function(element) {
  if (goog.style.getStyle_(element, "display") != "none") {
    return goog.style.getSizeWithDisplay_(element);
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var size = goog.style.getSizeWithDisplay_(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return size;
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && (!offsetWidth && !offsetHeight);
  if ((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);
  }
  return new goog.math.Size(offsetWidth, offsetHeight);
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height);
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector));
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector);
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if ("opacity" in style) {
    result = style.opacity;
  } else {
    if ("MozOpacity" in style) {
      result = style.MozOpacity;
    } else {
      if ("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if (match) {
          result = String(match[1] / 100);
        }
      }
    }
  }
  return result == "" ? result : Number(result);
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if ("opacity" in style) {
    style.opacity = alpha;
  } else {
    if ("MozOpacity" in style) {
      style.MozOpacity = alpha;
    } else {
      if ("filter" in style) {
        if (alpha === "") {
          style.filter = "";
        } else {
          style.filter = "alpha(opacity\x3d" + alpha * 100 + ")";
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src\x3d"' + src + '", sizingMethod\x3d"crop")';
  } else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat";
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if ("filter" in style) {
    style.filter = "";
  } else {
    style.backgroundImage = "none";
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none";
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none";
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if (goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString);
  } else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if (!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body);
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet);
  }
  return styleSheet;
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || (styleSheet.owningElement || (styleSheet));
  goog.dom.removeNode(node);
};
goog.style.setStyles = function(element, stylesString) {
  if (goog.userAgent.IE) {
    element.cssText = stylesString;
  } else {
    element.innerHTML = stylesString;
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word";
  } else {
    if (goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap";
    } else {
      style.whiteSpace = "pre-wrap";
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if (goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline";
  } else {
    if (goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box";
    } else {
      style.display = "inline-block";
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return "rtl" == goog.style.getStyle_(el, "direction");
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if (goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none";
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on";
    }
  }
  return false;
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if (name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if (descendants) {
      for (var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value;
      }
    }
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if (descendants) {
        for (var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value);
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight);
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom;
    } else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "border-box");
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if (ieCurrentStyle && (goog.dom.getDomHelper(doc).isCss1CompatMode() && (ieCurrentStyle.width != "auto" && (ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing)))) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height);
  } else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom);
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    } else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "content-box");
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if (goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing;
  } else {
    if (goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing;
    } else {
      style.boxSizing = boxSizing;
    }
  }
  style.width = Math.max(size.width, 0) + "px";
  style.height = Math.max(size.height, 0) + "px";
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if (/^\d+px?$/.test(value)) {
    return parseInt(value, 10);
  } else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue;
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  var value = goog.style.getCascadedStyle(element, propName);
  return value ? goog.style.getIePixelValue_(element, value, "left", "pixelLeft") : 0;
};
goog.style.getBox_ = function(element, stylePrefix) {
  if (goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = (goog.style.getComputedStyle(element, stylePrefix + "Left"));
    var right = (goog.style.getComputedStyle(element, stylePrefix + "Right"));
    var top = (goog.style.getComputedStyle(element, stylePrefix + "Top"));
    var bottom = (goog.style.getComputedStyle(element, stylePrefix + "Bottom"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding");
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin");
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if (goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0;
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if (width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width];
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft");
};
goog.style.getBorderBox = function(element) {
  if (goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = (goog.style.getComputedStyle(element, "borderLeftWidth"));
    var right = (goog.style.getComputedStyle(element, "borderRightWidth"));
    var top = (goog.style.getComputedStyle(element, "borderTopWidth"));
    var bottom = (goog.style.getComputedStyle(element, "borderBottomWidth"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if (doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName");
    } catch (e) {
      font = "";
    }
  }
  if (!font) {
    font = goog.style.getStyle_(el, "fontFamily");
  }
  var fontsArray = font.split(",");
  if (fontsArray.length > 1) {
    font = fontsArray[0];
  }
  return goog.string.stripQuotes(font, "\"'");
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null;
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if (fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10);
  }
  if (goog.userAgent.IE) {
    if (sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft");
    } else {
      if (el.parentNode && (el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_)) {
        var parentElement = (el.parentNode);
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft");
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize;
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if (keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1];
    }
  });
  return result;
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";");
  });
  return buffer.join("");
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value;
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || "";
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if (opt_className) {
    outerDiv.className = opt_className;
  }
  outerDiv.style.cssText = "overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width;
};
goog.style.MATRIX_TRANSLATION_REGEX_ = new RegExp("matrix\\([0-9\\.\\-]+, [0-9\\.\\-]+, " + "[0-9\\.\\-]+, [0-9\\.\\-]+, " + "([0-9\\.\\-]+)p?x?, ([0-9\\.\\-]+)p?x?\\)");
goog.style.getCssTranslation = function(element) {
  var property;
  if (goog.userAgent.IE) {
    property = "-ms-transform";
  } else {
    if (goog.userAgent.WEBKIT) {
      property = "-webkit-transform";
    } else {
      if (goog.userAgent.OPERA) {
        property = "-o-transform";
      } else {
        if (goog.userAgent.GECKO) {
          property = "-moz-transform";
        }
      }
    }
  }
  var transform;
  if (property) {
    transform = goog.style.getStyle_(element, property);
  }
  if (!transform) {
    transform = goog.style.getStyle_(element, "transform");
  }
  if (!transform) {
    return new goog.math.Coordinate(0, 0);
  }
  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);
  if (!matches) {
    return new goog.math.Coordinate(0, 0);
  }
  return new goog.math.Coordinate(parseFloat(matches[1]), parseFloat(matches[2]));
};
goog.provide("goog.history.EventType");
goog.history.EventType = {NAVIGATE:"navigate"};
goog.provide("goog.history.Event");
goog.require("goog.events.Event");
goog.require("goog.history.EventType");
goog.history.Event = function(token, isNavigation) {
  goog.events.Event.call(this, goog.history.EventType.NAVIGATE);
  this.token = token;
  this.isNavigation = isNavigation;
};
goog.inherits(goog.history.Event, goog.events.Event);
goog.provide("goog.history.Html5History");
goog.provide("goog.history.Html5History.TokenTransformer");
goog.require("goog.asserts");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.history.Event");
goog.require("goog.history.EventType");
goog.history.Html5History = function(opt_win, opt_transformer) {
  goog.events.EventTarget.call(this);
  goog.asserts.assert(goog.history.Html5History.isSupported(opt_win), "HTML5 history is not supported.");
  this.window_ = opt_win || window;
  this.transformer_ = opt_transformer || null;
  goog.events.listen(this.window_, goog.events.EventType.POPSTATE, this.onHistoryEvent_, false, this);
  goog.events.listen(this.window_, goog.events.EventType.HASHCHANGE, this.onHistoryEvent_, false, this);
};
goog.inherits(goog.history.Html5History, goog.events.EventTarget);
goog.history.Html5History.isSupported = function(opt_win) {
  var win = opt_win || window;
  return!!(win.history && win.history.pushState);
};
goog.history.Html5History.prototype.enabled_ = false;
goog.history.Html5History.prototype.useFragment_ = true;
goog.history.Html5History.prototype.pathPrefix_ = "/";
goog.history.Html5History.prototype.setEnabled = function(enable) {
  if (enable == this.enabled_) {
    return;
  }
  this.enabled_ = enable;
  if (enable) {
    this.dispatchEvent(new goog.history.Event(this.getToken(), false));
  }
};
goog.history.Html5History.prototype.getToken = function() {
  if (this.useFragment_) {
    var loc = this.window_.location.href;
    var index = loc.indexOf("#");
    return index < 0 ? "" : loc.substring(index + 1);
  } else {
    return this.transformer_ ? this.transformer_.retrieveToken(this.pathPrefix_, this.window_.location) : this.window_.location.pathname.substr(this.pathPrefix_.length);
  }
};
goog.history.Html5History.prototype.setToken = function(token, opt_title) {
  if (token == this.getToken()) {
    return;
  }
  this.window_.history.pushState(null, opt_title || (this.window_.document.title || ""), this.getUrl_(token));
  this.dispatchEvent(new goog.history.Event(token, false));
};
goog.history.Html5History.prototype.replaceToken = function(token, opt_title) {
  this.window_.history.replaceState(null, opt_title || (this.window_.document.title || ""), this.getUrl_(token));
  this.dispatchEvent(new goog.history.Event(token, false));
};
goog.history.Html5History.prototype.disposeInternal = function() {
  goog.events.unlisten(this.window_, goog.events.EventType.POPSTATE, this.onHistoryEvent_, false, this);
  if (this.useFragment_) {
    goog.events.unlisten(this.window_, goog.events.EventType.HASHCHANGE, this.onHistoryEvent_, false, this);
  }
};
goog.history.Html5History.prototype.setUseFragment = function(useFragment) {
  if (this.useFragment_ != useFragment) {
    if (useFragment) {
      goog.events.listen(this.window_, goog.events.EventType.HASHCHANGE, this.onHistoryEvent_, false, this);
    } else {
      goog.events.unlisten(this.window_, goog.events.EventType.HASHCHANGE, this.onHistoryEvent_, false, this);
    }
    this.useFragment_ = useFragment;
  }
};
goog.history.Html5History.prototype.setPathPrefix = function(pathPrefix) {
  this.pathPrefix_ = pathPrefix;
};
goog.history.Html5History.prototype.getPathPrefix = function() {
  return this.pathPrefix_;
};
goog.history.Html5History.prototype.getUrl_ = function(token) {
  if (this.useFragment_) {
    return "#" + token;
  } else {
    return this.transformer_ ? this.transformer_.createUrl(token, this.pathPrefix_, this.window_.location) : this.pathPrefix_ + token + this.window_.location.search;
  }
};
goog.history.Html5History.prototype.onHistoryEvent_ = function(e) {
  if (this.enabled_) {
    this.dispatchEvent(new goog.history.Event(this.getToken(), true));
  }
};
goog.history.Html5History.TokenTransformer = function() {
};
goog.history.Html5History.TokenTransformer.prototype.retrieveToken = function(pathPrefix, location) {
};
goog.history.Html5History.TokenTransformer.prototype.createUrl = function(token, pathPrefix, location) {
};
goog.provide("om.dom");
goog.require("cljs.core");
om.dom.a = function() {
  var a__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var a = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return a__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  a.cljs$lang$maxFixedArity = 1;
  a.cljs$lang$applyTo = function(arglist__15578) {
    var opts__4904__auto__ = cljs.core.first(arglist__15578);
    var children__4905__auto__ = cljs.core.rest(arglist__15578);
    return a__delegate(opts__4904__auto__, children__4905__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
om.dom.abbr = function() {
  var abbr__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var abbr = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return abbr__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 1;
  abbr.cljs$lang$applyTo = function(arglist__15579) {
    var opts__4904__auto__ = cljs.core.first(arglist__15579);
    var children__4905__auto__ = cljs.core.rest(arglist__15579);
    return abbr__delegate(opts__4904__auto__, children__4905__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
om.dom.address = function() {
  var address__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var address = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return address__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  address.cljs$lang$maxFixedArity = 1;
  address.cljs$lang$applyTo = function(arglist__15580) {
    var opts__4904__auto__ = cljs.core.first(arglist__15580);
    var children__4905__auto__ = cljs.core.rest(arglist__15580);
    return address__delegate(opts__4904__auto__, children__4905__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
om.dom.area = function() {
  var area__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var area = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return area__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  area.cljs$lang$maxFixedArity = 1;
  area.cljs$lang$applyTo = function(arglist__15581) {
    var opts__4904__auto__ = cljs.core.first(arglist__15581);
    var children__4905__auto__ = cljs.core.rest(arglist__15581);
    return area__delegate(opts__4904__auto__, children__4905__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
om.dom.article = function() {
  var article__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var article = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return article__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  article.cljs$lang$maxFixedArity = 1;
  article.cljs$lang$applyTo = function(arglist__15582) {
    var opts__4904__auto__ = cljs.core.first(arglist__15582);
    var children__4905__auto__ = cljs.core.rest(arglist__15582);
    return article__delegate(opts__4904__auto__, children__4905__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
om.dom.aside = function() {
  var aside__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var aside = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return aside__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  aside.cljs$lang$maxFixedArity = 1;
  aside.cljs$lang$applyTo = function(arglist__15583) {
    var opts__4904__auto__ = cljs.core.first(arglist__15583);
    var children__4905__auto__ = cljs.core.rest(arglist__15583);
    return aside__delegate(opts__4904__auto__, children__4905__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
om.dom.audio = function() {
  var audio__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var audio = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return audio__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  audio.cljs$lang$maxFixedArity = 1;
  audio.cljs$lang$applyTo = function(arglist__15584) {
    var opts__4904__auto__ = cljs.core.first(arglist__15584);
    var children__4905__auto__ = cljs.core.rest(arglist__15584);
    return audio__delegate(opts__4904__auto__, children__4905__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
om.dom.b = function() {
  var b__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var b = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return b__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(arglist__15585) {
    var opts__4904__auto__ = cljs.core.first(arglist__15585);
    var children__4905__auto__ = cljs.core.rest(arglist__15585);
    return b__delegate(opts__4904__auto__, children__4905__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
om.dom.base = function() {
  var base__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var base = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return base__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  base.cljs$lang$maxFixedArity = 1;
  base.cljs$lang$applyTo = function(arglist__15586) {
    var opts__4904__auto__ = cljs.core.first(arglist__15586);
    var children__4905__auto__ = cljs.core.rest(arglist__15586);
    return base__delegate(opts__4904__auto__, children__4905__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
om.dom.bdi = function() {
  var bdi__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var bdi = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdi__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 1;
  bdi.cljs$lang$applyTo = function(arglist__15587) {
    var opts__4904__auto__ = cljs.core.first(arglist__15587);
    var children__4905__auto__ = cljs.core.rest(arglist__15587);
    return bdi__delegate(opts__4904__auto__, children__4905__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
om.dom.bdo = function() {
  var bdo__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var bdo = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdo__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 1;
  bdo.cljs$lang$applyTo = function(arglist__15588) {
    var opts__4904__auto__ = cljs.core.first(arglist__15588);
    var children__4905__auto__ = cljs.core.rest(arglist__15588);
    return bdo__delegate(opts__4904__auto__, children__4905__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
om.dom.big = function() {
  var big__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var big = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return big__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  big.cljs$lang$maxFixedArity = 1;
  big.cljs$lang$applyTo = function(arglist__15589) {
    var opts__4904__auto__ = cljs.core.first(arglist__15589);
    var children__4905__auto__ = cljs.core.rest(arglist__15589);
    return big__delegate(opts__4904__auto__, children__4905__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
om.dom.blockquote = function() {
  var blockquote__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var blockquote = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return blockquote__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 1;
  blockquote.cljs$lang$applyTo = function(arglist__15590) {
    var opts__4904__auto__ = cljs.core.first(arglist__15590);
    var children__4905__auto__ = cljs.core.rest(arglist__15590);
    return blockquote__delegate(opts__4904__auto__, children__4905__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
om.dom.body = function() {
  var body__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var body = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return body__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  body.cljs$lang$maxFixedArity = 1;
  body.cljs$lang$applyTo = function(arglist__15591) {
    var opts__4904__auto__ = cljs.core.first(arglist__15591);
    var children__4905__auto__ = cljs.core.rest(arglist__15591);
    return body__delegate(opts__4904__auto__, children__4905__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
om.dom.br = function() {
  var br__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var br = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return br__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  br.cljs$lang$maxFixedArity = 1;
  br.cljs$lang$applyTo = function(arglist__15592) {
    var opts__4904__auto__ = cljs.core.first(arglist__15592);
    var children__4905__auto__ = cljs.core.rest(arglist__15592);
    return br__delegate(opts__4904__auto__, children__4905__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
om.dom.button = function() {
  var button__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var button = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return button__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  button.cljs$lang$maxFixedArity = 1;
  button.cljs$lang$applyTo = function(arglist__15593) {
    var opts__4904__auto__ = cljs.core.first(arglist__15593);
    var children__4905__auto__ = cljs.core.rest(arglist__15593);
    return button__delegate(opts__4904__auto__, children__4905__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
om.dom.canvas = function() {
  var canvas__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var canvas = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return canvas__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 1;
  canvas.cljs$lang$applyTo = function(arglist__15594) {
    var opts__4904__auto__ = cljs.core.first(arglist__15594);
    var children__4905__auto__ = cljs.core.rest(arglist__15594);
    return canvas__delegate(opts__4904__auto__, children__4905__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
om.dom.caption = function() {
  var caption__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var caption = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return caption__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  caption.cljs$lang$maxFixedArity = 1;
  caption.cljs$lang$applyTo = function(arglist__15595) {
    var opts__4904__auto__ = cljs.core.first(arglist__15595);
    var children__4905__auto__ = cljs.core.rest(arglist__15595);
    return caption__delegate(opts__4904__auto__, children__4905__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
om.dom.cite = function() {
  var cite__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var cite = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return cite__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  cite.cljs$lang$maxFixedArity = 1;
  cite.cljs$lang$applyTo = function(arglist__15596) {
    var opts__4904__auto__ = cljs.core.first(arglist__15596);
    var children__4905__auto__ = cljs.core.rest(arglist__15596);
    return cite__delegate(opts__4904__auto__, children__4905__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
om.dom.code = function() {
  var code__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var code = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return code__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  code.cljs$lang$maxFixedArity = 1;
  code.cljs$lang$applyTo = function(arglist__15597) {
    var opts__4904__auto__ = cljs.core.first(arglist__15597);
    var children__4905__auto__ = cljs.core.rest(arglist__15597);
    return code__delegate(opts__4904__auto__, children__4905__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
om.dom.col = function() {
  var col__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var col = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return col__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  col.cljs$lang$maxFixedArity = 1;
  col.cljs$lang$applyTo = function(arglist__15598) {
    var opts__4904__auto__ = cljs.core.first(arglist__15598);
    var children__4905__auto__ = cljs.core.rest(arglist__15598);
    return col__delegate(opts__4904__auto__, children__4905__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
om.dom.colgroup = function() {
  var colgroup__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var colgroup = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return colgroup__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 1;
  colgroup.cljs$lang$applyTo = function(arglist__15599) {
    var opts__4904__auto__ = cljs.core.first(arglist__15599);
    var children__4905__auto__ = cljs.core.rest(arglist__15599);
    return colgroup__delegate(opts__4904__auto__, children__4905__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
om.dom.data = function() {
  var data__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var data = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return data__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  data.cljs$lang$maxFixedArity = 1;
  data.cljs$lang$applyTo = function(arglist__15600) {
    var opts__4904__auto__ = cljs.core.first(arglist__15600);
    var children__4905__auto__ = cljs.core.rest(arglist__15600);
    return data__delegate(opts__4904__auto__, children__4905__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
om.dom.datalist = function() {
  var datalist__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var datalist = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return datalist__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 1;
  datalist.cljs$lang$applyTo = function(arglist__15601) {
    var opts__4904__auto__ = cljs.core.first(arglist__15601);
    var children__4905__auto__ = cljs.core.rest(arglist__15601);
    return datalist__delegate(opts__4904__auto__, children__4905__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
om.dom.dd = function() {
  var dd__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var dd = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dd__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  dd.cljs$lang$maxFixedArity = 1;
  dd.cljs$lang$applyTo = function(arglist__15602) {
    var opts__4904__auto__ = cljs.core.first(arglist__15602);
    var children__4905__auto__ = cljs.core.rest(arglist__15602);
    return dd__delegate(opts__4904__auto__, children__4905__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
om.dom.del = function() {
  var del__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var del = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return del__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  del.cljs$lang$maxFixedArity = 1;
  del.cljs$lang$applyTo = function(arglist__15603) {
    var opts__4904__auto__ = cljs.core.first(arglist__15603);
    var children__4905__auto__ = cljs.core.rest(arglist__15603);
    return del__delegate(opts__4904__auto__, children__4905__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
om.dom.dfn = function() {
  var dfn__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var dfn = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dfn__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 1;
  dfn.cljs$lang$applyTo = function(arglist__15604) {
    var opts__4904__auto__ = cljs.core.first(arglist__15604);
    var children__4905__auto__ = cljs.core.rest(arglist__15604);
    return dfn__delegate(opts__4904__auto__, children__4905__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
om.dom.div = function() {
  var div__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var div = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return div__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  div.cljs$lang$maxFixedArity = 1;
  div.cljs$lang$applyTo = function(arglist__15605) {
    var opts__4904__auto__ = cljs.core.first(arglist__15605);
    var children__4905__auto__ = cljs.core.rest(arglist__15605);
    return div__delegate(opts__4904__auto__, children__4905__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
om.dom.dl = function() {
  var dl__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var dl = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dl__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  dl.cljs$lang$maxFixedArity = 1;
  dl.cljs$lang$applyTo = function(arglist__15606) {
    var opts__4904__auto__ = cljs.core.first(arglist__15606);
    var children__4905__auto__ = cljs.core.rest(arglist__15606);
    return dl__delegate(opts__4904__auto__, children__4905__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
om.dom.dt = function() {
  var dt__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var dt = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dt__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  dt.cljs$lang$maxFixedArity = 1;
  dt.cljs$lang$applyTo = function(arglist__15607) {
    var opts__4904__auto__ = cljs.core.first(arglist__15607);
    var children__4905__auto__ = cljs.core.rest(arglist__15607);
    return dt__delegate(opts__4904__auto__, children__4905__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
om.dom.em = function() {
  var em__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var em = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return em__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  em.cljs$lang$maxFixedArity = 1;
  em.cljs$lang$applyTo = function(arglist__15608) {
    var opts__4904__auto__ = cljs.core.first(arglist__15608);
    var children__4905__auto__ = cljs.core.rest(arglist__15608);
    return em__delegate(opts__4904__auto__, children__4905__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
om.dom.embed = function() {
  var embed__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var embed = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return embed__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  embed.cljs$lang$maxFixedArity = 1;
  embed.cljs$lang$applyTo = function(arglist__15609) {
    var opts__4904__auto__ = cljs.core.first(arglist__15609);
    var children__4905__auto__ = cljs.core.rest(arglist__15609);
    return embed__delegate(opts__4904__auto__, children__4905__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
om.dom.fieldset = function() {
  var fieldset__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var fieldset = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fieldset__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 1;
  fieldset.cljs$lang$applyTo = function(arglist__15610) {
    var opts__4904__auto__ = cljs.core.first(arglist__15610);
    var children__4905__auto__ = cljs.core.rest(arglist__15610);
    return fieldset__delegate(opts__4904__auto__, children__4905__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
om.dom.figcaption = function() {
  var figcaption__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var figcaption = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figcaption__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 1;
  figcaption.cljs$lang$applyTo = function(arglist__15611) {
    var opts__4904__auto__ = cljs.core.first(arglist__15611);
    var children__4905__auto__ = cljs.core.rest(arglist__15611);
    return figcaption__delegate(opts__4904__auto__, children__4905__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
om.dom.figure = function() {
  var figure__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var figure = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figure__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  figure.cljs$lang$maxFixedArity = 1;
  figure.cljs$lang$applyTo = function(arglist__15612) {
    var opts__4904__auto__ = cljs.core.first(arglist__15612);
    var children__4905__auto__ = cljs.core.rest(arglist__15612);
    return figure__delegate(opts__4904__auto__, children__4905__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
om.dom.footer = function() {
  var footer__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var footer = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return footer__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  footer.cljs$lang$maxFixedArity = 1;
  footer.cljs$lang$applyTo = function(arglist__15613) {
    var opts__4904__auto__ = cljs.core.first(arglist__15613);
    var children__4905__auto__ = cljs.core.rest(arglist__15613);
    return footer__delegate(opts__4904__auto__, children__4905__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
om.dom.form = function() {
  var form__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var form = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  form.cljs$lang$maxFixedArity = 1;
  form.cljs$lang$applyTo = function(arglist__15614) {
    var opts__4904__auto__ = cljs.core.first(arglist__15614);
    var children__4905__auto__ = cljs.core.rest(arglist__15614);
    return form__delegate(opts__4904__auto__, children__4905__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
om.dom.h1 = function() {
  var h1__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var h1 = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h1__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  h1.cljs$lang$maxFixedArity = 1;
  h1.cljs$lang$applyTo = function(arglist__15615) {
    var opts__4904__auto__ = cljs.core.first(arglist__15615);
    var children__4905__auto__ = cljs.core.rest(arglist__15615);
    return h1__delegate(opts__4904__auto__, children__4905__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
om.dom.h2 = function() {
  var h2__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var h2 = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h2__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  h2.cljs$lang$maxFixedArity = 1;
  h2.cljs$lang$applyTo = function(arglist__15616) {
    var opts__4904__auto__ = cljs.core.first(arglist__15616);
    var children__4905__auto__ = cljs.core.rest(arglist__15616);
    return h2__delegate(opts__4904__auto__, children__4905__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
om.dom.h3 = function() {
  var h3__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var h3 = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h3__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  h3.cljs$lang$maxFixedArity = 1;
  h3.cljs$lang$applyTo = function(arglist__15617) {
    var opts__4904__auto__ = cljs.core.first(arglist__15617);
    var children__4905__auto__ = cljs.core.rest(arglist__15617);
    return h3__delegate(opts__4904__auto__, children__4905__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
om.dom.h4 = function() {
  var h4__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var h4 = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h4__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  h4.cljs$lang$maxFixedArity = 1;
  h4.cljs$lang$applyTo = function(arglist__15618) {
    var opts__4904__auto__ = cljs.core.first(arglist__15618);
    var children__4905__auto__ = cljs.core.rest(arglist__15618);
    return h4__delegate(opts__4904__auto__, children__4905__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
om.dom.h5 = function() {
  var h5__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var h5 = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h5__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  h5.cljs$lang$maxFixedArity = 1;
  h5.cljs$lang$applyTo = function(arglist__15619) {
    var opts__4904__auto__ = cljs.core.first(arglist__15619);
    var children__4905__auto__ = cljs.core.rest(arglist__15619);
    return h5__delegate(opts__4904__auto__, children__4905__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
om.dom.h6 = function() {
  var h6__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var h6 = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h6__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  h6.cljs$lang$maxFixedArity = 1;
  h6.cljs$lang$applyTo = function(arglist__15620) {
    var opts__4904__auto__ = cljs.core.first(arglist__15620);
    var children__4905__auto__ = cljs.core.rest(arglist__15620);
    return h6__delegate(opts__4904__auto__, children__4905__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
om.dom.head = function() {
  var head__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var head = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return head__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__15621) {
    var opts__4904__auto__ = cljs.core.first(arglist__15621);
    var children__4905__auto__ = cljs.core.rest(arglist__15621);
    return head__delegate(opts__4904__auto__, children__4905__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
om.dom.header = function() {
  var header__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var header = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return header__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  header.cljs$lang$maxFixedArity = 1;
  header.cljs$lang$applyTo = function(arglist__15622) {
    var opts__4904__auto__ = cljs.core.first(arglist__15622);
    var children__4905__auto__ = cljs.core.rest(arglist__15622);
    return header__delegate(opts__4904__auto__, children__4905__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
om.dom.hr = function() {
  var hr__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var hr = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hr__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  hr.cljs$lang$maxFixedArity = 1;
  hr.cljs$lang$applyTo = function(arglist__15623) {
    var opts__4904__auto__ = cljs.core.first(arglist__15623);
    var children__4905__auto__ = cljs.core.rest(arglist__15623);
    return hr__delegate(opts__4904__auto__, children__4905__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
om.dom.html = function() {
  var html__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var html = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return html__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__15624) {
    var opts__4904__auto__ = cljs.core.first(arglist__15624);
    var children__4905__auto__ = cljs.core.rest(arglist__15624);
    return html__delegate(opts__4904__auto__, children__4905__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
om.dom.i = function() {
  var i__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var i = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return i__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  i.cljs$lang$maxFixedArity = 1;
  i.cljs$lang$applyTo = function(arglist__15625) {
    var opts__4904__auto__ = cljs.core.first(arglist__15625);
    var children__4905__auto__ = cljs.core.rest(arglist__15625);
    return i__delegate(opts__4904__auto__, children__4905__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
om.dom.iframe = function() {
  var iframe__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var iframe = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return iframe__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 1;
  iframe.cljs$lang$applyTo = function(arglist__15626) {
    var opts__4904__auto__ = cljs.core.first(arglist__15626);
    var children__4905__auto__ = cljs.core.rest(arglist__15626);
    return iframe__delegate(opts__4904__auto__, children__4905__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
om.dom.img = function() {
  var img__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var img = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return img__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  img.cljs$lang$maxFixedArity = 1;
  img.cljs$lang$applyTo = function(arglist__15627) {
    var opts__4904__auto__ = cljs.core.first(arglist__15627);
    var children__4905__auto__ = cljs.core.rest(arglist__15627);
    return img__delegate(opts__4904__auto__, children__4905__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
om.dom.ins = function() {
  var ins__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var ins = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ins__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  ins.cljs$lang$maxFixedArity = 1;
  ins.cljs$lang$applyTo = function(arglist__15628) {
    var opts__4904__auto__ = cljs.core.first(arglist__15628);
    var children__4905__auto__ = cljs.core.rest(arglist__15628);
    return ins__delegate(opts__4904__auto__, children__4905__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
om.dom.kbd = function() {
  var kbd__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var kbd = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return kbd__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 1;
  kbd.cljs$lang$applyTo = function(arglist__15629) {
    var opts__4904__auto__ = cljs.core.first(arglist__15629);
    var children__4905__auto__ = cljs.core.rest(arglist__15629);
    return kbd__delegate(opts__4904__auto__, children__4905__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
om.dom.keygen = function() {
  var keygen__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var keygen = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return keygen__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 1;
  keygen.cljs$lang$applyTo = function(arglist__15630) {
    var opts__4904__auto__ = cljs.core.first(arglist__15630);
    var children__4905__auto__ = cljs.core.rest(arglist__15630);
    return keygen__delegate(opts__4904__auto__, children__4905__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
om.dom.label = function() {
  var label__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var label = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return label__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  label.cljs$lang$maxFixedArity = 1;
  label.cljs$lang$applyTo = function(arglist__15631) {
    var opts__4904__auto__ = cljs.core.first(arglist__15631);
    var children__4905__auto__ = cljs.core.rest(arglist__15631);
    return label__delegate(opts__4904__auto__, children__4905__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
om.dom.legend = function() {
  var legend__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var legend = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return legend__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  legend.cljs$lang$maxFixedArity = 1;
  legend.cljs$lang$applyTo = function(arglist__15632) {
    var opts__4904__auto__ = cljs.core.first(arglist__15632);
    var children__4905__auto__ = cljs.core.rest(arglist__15632);
    return legend__delegate(opts__4904__auto__, children__4905__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
om.dom.li = function() {
  var li__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var li = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return li__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  li.cljs$lang$maxFixedArity = 1;
  li.cljs$lang$applyTo = function(arglist__15633) {
    var opts__4904__auto__ = cljs.core.first(arglist__15633);
    var children__4905__auto__ = cljs.core.rest(arglist__15633);
    return li__delegate(opts__4904__auto__, children__4905__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
om.dom.link = function() {
  var link__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var link = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  link.cljs$lang$maxFixedArity = 1;
  link.cljs$lang$applyTo = function(arglist__15634) {
    var opts__4904__auto__ = cljs.core.first(arglist__15634);
    var children__4905__auto__ = cljs.core.rest(arglist__15634);
    return link__delegate(opts__4904__auto__, children__4905__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
om.dom.main = function() {
  var main__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var main = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return main__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  main.cljs$lang$maxFixedArity = 1;
  main.cljs$lang$applyTo = function(arglist__15635) {
    var opts__4904__auto__ = cljs.core.first(arglist__15635);
    var children__4905__auto__ = cljs.core.rest(arglist__15635);
    return main__delegate(opts__4904__auto__, children__4905__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
om.dom.map = function() {
  var map__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var map = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  map.cljs$lang$maxFixedArity = 1;
  map.cljs$lang$applyTo = function(arglist__15636) {
    var opts__4904__auto__ = cljs.core.first(arglist__15636);
    var children__4905__auto__ = cljs.core.rest(arglist__15636);
    return map__delegate(opts__4904__auto__, children__4905__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
om.dom.mark = function() {
  var mark__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var mark = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mark__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  mark.cljs$lang$maxFixedArity = 1;
  mark.cljs$lang$applyTo = function(arglist__15637) {
    var opts__4904__auto__ = cljs.core.first(arglist__15637);
    var children__4905__auto__ = cljs.core.rest(arglist__15637);
    return mark__delegate(opts__4904__auto__, children__4905__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
om.dom.menu = function() {
  var menu__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var menu = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menu__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  menu.cljs$lang$maxFixedArity = 1;
  menu.cljs$lang$applyTo = function(arglist__15638) {
    var opts__4904__auto__ = cljs.core.first(arglist__15638);
    var children__4905__auto__ = cljs.core.rest(arglist__15638);
    return menu__delegate(opts__4904__auto__, children__4905__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
om.dom.menuitem = function() {
  var menuitem__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var menuitem = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menuitem__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 1;
  menuitem.cljs$lang$applyTo = function(arglist__15639) {
    var opts__4904__auto__ = cljs.core.first(arglist__15639);
    var children__4905__auto__ = cljs.core.rest(arglist__15639);
    return menuitem__delegate(opts__4904__auto__, children__4905__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
om.dom.meta = function() {
  var meta__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var meta = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meta__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  meta.cljs$lang$maxFixedArity = 1;
  meta.cljs$lang$applyTo = function(arglist__15640) {
    var opts__4904__auto__ = cljs.core.first(arglist__15640);
    var children__4905__auto__ = cljs.core.rest(arglist__15640);
    return meta__delegate(opts__4904__auto__, children__4905__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
om.dom.meter = function() {
  var meter__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var meter = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meter__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  meter.cljs$lang$maxFixedArity = 1;
  meter.cljs$lang$applyTo = function(arglist__15641) {
    var opts__4904__auto__ = cljs.core.first(arglist__15641);
    var children__4905__auto__ = cljs.core.rest(arglist__15641);
    return meter__delegate(opts__4904__auto__, children__4905__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
om.dom.nav = function() {
  var nav__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var nav = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return nav__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  nav.cljs$lang$maxFixedArity = 1;
  nav.cljs$lang$applyTo = function(arglist__15642) {
    var opts__4904__auto__ = cljs.core.first(arglist__15642);
    var children__4905__auto__ = cljs.core.rest(arglist__15642);
    return nav__delegate(opts__4904__auto__, children__4905__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
om.dom.noscript = function() {
  var noscript__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var noscript = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return noscript__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 1;
  noscript.cljs$lang$applyTo = function(arglist__15643) {
    var opts__4904__auto__ = cljs.core.first(arglist__15643);
    var children__4905__auto__ = cljs.core.rest(arglist__15643);
    return noscript__delegate(opts__4904__auto__, children__4905__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
om.dom.object = function() {
  var object__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var object = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return object__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  object.cljs$lang$maxFixedArity = 1;
  object.cljs$lang$applyTo = function(arglist__15644) {
    var opts__4904__auto__ = cljs.core.first(arglist__15644);
    var children__4905__auto__ = cljs.core.rest(arglist__15644);
    return object__delegate(opts__4904__auto__, children__4905__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
om.dom.ol = function() {
  var ol__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var ol = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ol__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  ol.cljs$lang$maxFixedArity = 1;
  ol.cljs$lang$applyTo = function(arglist__15645) {
    var opts__4904__auto__ = cljs.core.first(arglist__15645);
    var children__4905__auto__ = cljs.core.rest(arglist__15645);
    return ol__delegate(opts__4904__auto__, children__4905__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
om.dom.optgroup = function() {
  var optgroup__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var optgroup = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return optgroup__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 1;
  optgroup.cljs$lang$applyTo = function(arglist__15646) {
    var opts__4904__auto__ = cljs.core.first(arglist__15646);
    var children__4905__auto__ = cljs.core.rest(arglist__15646);
    return optgroup__delegate(opts__4904__auto__, children__4905__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
om.dom.output = function() {
  var output__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var output = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return output__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  output.cljs$lang$maxFixedArity = 1;
  output.cljs$lang$applyTo = function(arglist__15647) {
    var opts__4904__auto__ = cljs.core.first(arglist__15647);
    var children__4905__auto__ = cljs.core.rest(arglist__15647);
    return output__delegate(opts__4904__auto__, children__4905__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
om.dom.p = function() {
  var p__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var p = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return p__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  p.cljs$lang$maxFixedArity = 1;
  p.cljs$lang$applyTo = function(arglist__15648) {
    var opts__4904__auto__ = cljs.core.first(arglist__15648);
    var children__4905__auto__ = cljs.core.rest(arglist__15648);
    return p__delegate(opts__4904__auto__, children__4905__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
om.dom.param = function() {
  var param__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var param = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return param__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  param.cljs$lang$maxFixedArity = 1;
  param.cljs$lang$applyTo = function(arglist__15649) {
    var opts__4904__auto__ = cljs.core.first(arglist__15649);
    var children__4905__auto__ = cljs.core.rest(arglist__15649);
    return param__delegate(opts__4904__auto__, children__4905__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
om.dom.pre = function() {
  var pre__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var pre = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pre__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  pre.cljs$lang$maxFixedArity = 1;
  pre.cljs$lang$applyTo = function(arglist__15650) {
    var opts__4904__auto__ = cljs.core.first(arglist__15650);
    var children__4905__auto__ = cljs.core.rest(arglist__15650);
    return pre__delegate(opts__4904__auto__, children__4905__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
om.dom.progress = function() {
  var progress__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var progress = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return progress__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  progress.cljs$lang$maxFixedArity = 1;
  progress.cljs$lang$applyTo = function(arglist__15651) {
    var opts__4904__auto__ = cljs.core.first(arglist__15651);
    var children__4905__auto__ = cljs.core.rest(arglist__15651);
    return progress__delegate(opts__4904__auto__, children__4905__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
om.dom.q = function() {
  var q__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var q = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return q__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__15652) {
    var opts__4904__auto__ = cljs.core.first(arglist__15652);
    var children__4905__auto__ = cljs.core.rest(arglist__15652);
    return q__delegate(opts__4904__auto__, children__4905__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
om.dom.rp = function() {
  var rp__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var rp = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rp__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  rp.cljs$lang$maxFixedArity = 1;
  rp.cljs$lang$applyTo = function(arglist__15653) {
    var opts__4904__auto__ = cljs.core.first(arglist__15653);
    var children__4905__auto__ = cljs.core.rest(arglist__15653);
    return rp__delegate(opts__4904__auto__, children__4905__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
om.dom.rt = function() {
  var rt__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var rt = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rt__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  rt.cljs$lang$maxFixedArity = 1;
  rt.cljs$lang$applyTo = function(arglist__15654) {
    var opts__4904__auto__ = cljs.core.first(arglist__15654);
    var children__4905__auto__ = cljs.core.rest(arglist__15654);
    return rt__delegate(opts__4904__auto__, children__4905__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
om.dom.ruby = function() {
  var ruby__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var ruby = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ruby__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 1;
  ruby.cljs$lang$applyTo = function(arglist__15655) {
    var opts__4904__auto__ = cljs.core.first(arglist__15655);
    var children__4905__auto__ = cljs.core.rest(arglist__15655);
    return ruby__delegate(opts__4904__auto__, children__4905__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
om.dom.s = function() {
  var s__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var s = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return s__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  s.cljs$lang$maxFixedArity = 1;
  s.cljs$lang$applyTo = function(arglist__15656) {
    var opts__4904__auto__ = cljs.core.first(arglist__15656);
    var children__4905__auto__ = cljs.core.rest(arglist__15656);
    return s__delegate(opts__4904__auto__, children__4905__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
om.dom.samp = function() {
  var samp__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var samp = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return samp__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  samp.cljs$lang$maxFixedArity = 1;
  samp.cljs$lang$applyTo = function(arglist__15657) {
    var opts__4904__auto__ = cljs.core.first(arglist__15657);
    var children__4905__auto__ = cljs.core.rest(arglist__15657);
    return samp__delegate(opts__4904__auto__, children__4905__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
om.dom.script = function() {
  var script__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var script = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return script__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  script.cljs$lang$maxFixedArity = 1;
  script.cljs$lang$applyTo = function(arglist__15658) {
    var opts__4904__auto__ = cljs.core.first(arglist__15658);
    var children__4905__auto__ = cljs.core.rest(arglist__15658);
    return script__delegate(opts__4904__auto__, children__4905__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
om.dom.section = function() {
  var section__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var section = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return section__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  section.cljs$lang$maxFixedArity = 1;
  section.cljs$lang$applyTo = function(arglist__15659) {
    var opts__4904__auto__ = cljs.core.first(arglist__15659);
    var children__4905__auto__ = cljs.core.rest(arglist__15659);
    return section__delegate(opts__4904__auto__, children__4905__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
om.dom.select = function() {
  var select__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var select = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return select__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  select.cljs$lang$maxFixedArity = 1;
  select.cljs$lang$applyTo = function(arglist__15660) {
    var opts__4904__auto__ = cljs.core.first(arglist__15660);
    var children__4905__auto__ = cljs.core.rest(arglist__15660);
    return select__delegate(opts__4904__auto__, children__4905__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
om.dom.small = function() {
  var small__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var small = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return small__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  small.cljs$lang$maxFixedArity = 1;
  small.cljs$lang$applyTo = function(arglist__15661) {
    var opts__4904__auto__ = cljs.core.first(arglist__15661);
    var children__4905__auto__ = cljs.core.rest(arglist__15661);
    return small__delegate(opts__4904__auto__, children__4905__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
om.dom.source = function() {
  var source__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var source = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return source__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  source.cljs$lang$maxFixedArity = 1;
  source.cljs$lang$applyTo = function(arglist__15662) {
    var opts__4904__auto__ = cljs.core.first(arglist__15662);
    var children__4905__auto__ = cljs.core.rest(arglist__15662);
    return source__delegate(opts__4904__auto__, children__4905__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
om.dom.span = function() {
  var span__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var span = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return span__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  span.cljs$lang$maxFixedArity = 1;
  span.cljs$lang$applyTo = function(arglist__15663) {
    var opts__4904__auto__ = cljs.core.first(arglist__15663);
    var children__4905__auto__ = cljs.core.rest(arglist__15663);
    return span__delegate(opts__4904__auto__, children__4905__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
om.dom.strong = function() {
  var strong__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var strong = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return strong__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  strong.cljs$lang$maxFixedArity = 1;
  strong.cljs$lang$applyTo = function(arglist__15664) {
    var opts__4904__auto__ = cljs.core.first(arglist__15664);
    var children__4905__auto__ = cljs.core.rest(arglist__15664);
    return strong__delegate(opts__4904__auto__, children__4905__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
om.dom.style = function() {
  var style__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var style = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return style__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  style.cljs$lang$maxFixedArity = 1;
  style.cljs$lang$applyTo = function(arglist__15665) {
    var opts__4904__auto__ = cljs.core.first(arglist__15665);
    var children__4905__auto__ = cljs.core.rest(arglist__15665);
    return style__delegate(opts__4904__auto__, children__4905__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
om.dom.sub = function() {
  var sub__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var sub = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sub__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  sub.cljs$lang$maxFixedArity = 1;
  sub.cljs$lang$applyTo = function(arglist__15666) {
    var opts__4904__auto__ = cljs.core.first(arglist__15666);
    var children__4905__auto__ = cljs.core.rest(arglist__15666);
    return sub__delegate(opts__4904__auto__, children__4905__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
om.dom.summary = function() {
  var summary__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var summary = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return summary__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  summary.cljs$lang$maxFixedArity = 1;
  summary.cljs$lang$applyTo = function(arglist__15667) {
    var opts__4904__auto__ = cljs.core.first(arglist__15667);
    var children__4905__auto__ = cljs.core.rest(arglist__15667);
    return summary__delegate(opts__4904__auto__, children__4905__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
om.dom.sup = function() {
  var sup__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var sup = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sup__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  sup.cljs$lang$maxFixedArity = 1;
  sup.cljs$lang$applyTo = function(arglist__15668) {
    var opts__4904__auto__ = cljs.core.first(arglist__15668);
    var children__4905__auto__ = cljs.core.rest(arglist__15668);
    return sup__delegate(opts__4904__auto__, children__4905__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
om.dom.table = function() {
  var table__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var table = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return table__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  table.cljs$lang$maxFixedArity = 1;
  table.cljs$lang$applyTo = function(arglist__15669) {
    var opts__4904__auto__ = cljs.core.first(arglist__15669);
    var children__4905__auto__ = cljs.core.rest(arglist__15669);
    return table__delegate(opts__4904__auto__, children__4905__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
om.dom.tbody = function() {
  var tbody__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var tbody = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tbody__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 1;
  tbody.cljs$lang$applyTo = function(arglist__15670) {
    var opts__4904__auto__ = cljs.core.first(arglist__15670);
    var children__4905__auto__ = cljs.core.rest(arglist__15670);
    return tbody__delegate(opts__4904__auto__, children__4905__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
om.dom.td = function() {
  var td__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var td = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return td__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  td.cljs$lang$maxFixedArity = 1;
  td.cljs$lang$applyTo = function(arglist__15671) {
    var opts__4904__auto__ = cljs.core.first(arglist__15671);
    var children__4905__auto__ = cljs.core.rest(arglist__15671);
    return td__delegate(opts__4904__auto__, children__4905__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
om.dom.tfoot = function() {
  var tfoot__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var tfoot = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tfoot__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 1;
  tfoot.cljs$lang$applyTo = function(arglist__15672) {
    var opts__4904__auto__ = cljs.core.first(arglist__15672);
    var children__4905__auto__ = cljs.core.rest(arglist__15672);
    return tfoot__delegate(opts__4904__auto__, children__4905__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
om.dom.th = function() {
  var th__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var th = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return th__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  th.cljs$lang$maxFixedArity = 1;
  th.cljs$lang$applyTo = function(arglist__15673) {
    var opts__4904__auto__ = cljs.core.first(arglist__15673);
    var children__4905__auto__ = cljs.core.rest(arglist__15673);
    return th__delegate(opts__4904__auto__, children__4905__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
om.dom.thead = function() {
  var thead__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var thead = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return thead__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  thead.cljs$lang$maxFixedArity = 1;
  thead.cljs$lang$applyTo = function(arglist__15674) {
    var opts__4904__auto__ = cljs.core.first(arglist__15674);
    var children__4905__auto__ = cljs.core.rest(arglist__15674);
    return thead__delegate(opts__4904__auto__, children__4905__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
om.dom.time = function() {
  var time__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var time = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return time__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  time.cljs$lang$maxFixedArity = 1;
  time.cljs$lang$applyTo = function(arglist__15675) {
    var opts__4904__auto__ = cljs.core.first(arglist__15675);
    var children__4905__auto__ = cljs.core.rest(arglist__15675);
    return time__delegate(opts__4904__auto__, children__4905__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
om.dom.title = function() {
  var title__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var title = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return title__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  title.cljs$lang$maxFixedArity = 1;
  title.cljs$lang$applyTo = function(arglist__15676) {
    var opts__4904__auto__ = cljs.core.first(arglist__15676);
    var children__4905__auto__ = cljs.core.rest(arglist__15676);
    return title__delegate(opts__4904__auto__, children__4905__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
om.dom.tr = function() {
  var tr__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var tr = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tr__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  tr.cljs$lang$maxFixedArity = 1;
  tr.cljs$lang$applyTo = function(arglist__15677) {
    var opts__4904__auto__ = cljs.core.first(arglist__15677);
    var children__4905__auto__ = cljs.core.rest(arglist__15677);
    return tr__delegate(opts__4904__auto__, children__4905__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
om.dom.track = function() {
  var track__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var track = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return track__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  track.cljs$lang$maxFixedArity = 1;
  track.cljs$lang$applyTo = function(arglist__15678) {
    var opts__4904__auto__ = cljs.core.first(arglist__15678);
    var children__4905__auto__ = cljs.core.rest(arglist__15678);
    return track__delegate(opts__4904__auto__, children__4905__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
om.dom.u = function() {
  var u__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var u = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return u__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  u.cljs$lang$maxFixedArity = 1;
  u.cljs$lang$applyTo = function(arglist__15679) {
    var opts__4904__auto__ = cljs.core.first(arglist__15679);
    var children__4905__auto__ = cljs.core.rest(arglist__15679);
    return u__delegate(opts__4904__auto__, children__4905__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
om.dom.ul = function() {
  var ul__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var ul = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ul__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  ul.cljs$lang$maxFixedArity = 1;
  ul.cljs$lang$applyTo = function(arglist__15680) {
    var opts__4904__auto__ = cljs.core.first(arglist__15680);
    var children__4905__auto__ = cljs.core.rest(arglist__15680);
    return ul__delegate(opts__4904__auto__, children__4905__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
om.dom.var$ = function() {
  var var$__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var var$ = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return var$__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  var$.cljs$lang$maxFixedArity = 1;
  var$.cljs$lang$applyTo = function(arglist__15681) {
    var opts__4904__auto__ = cljs.core.first(arglist__15681);
    var children__4905__auto__ = cljs.core.rest(arglist__15681);
    return var$__delegate(opts__4904__auto__, children__4905__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
om.dom.video = function() {
  var video__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var video = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return video__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  video.cljs$lang$maxFixedArity = 1;
  video.cljs$lang$applyTo = function(arglist__15682) {
    var opts__4904__auto__ = cljs.core.first(arglist__15682);
    var children__4905__auto__ = cljs.core.rest(arglist__15682);
    return video__delegate(opts__4904__auto__, children__4905__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
om.dom.wbr = function() {
  var wbr__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var wbr = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wbr__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 1;
  wbr.cljs$lang$applyTo = function(arglist__15683) {
    var opts__4904__auto__ = cljs.core.first(arglist__15683);
    var children__4905__auto__ = cljs.core.rest(arglist__15683);
    return wbr__delegate(opts__4904__auto__, children__4905__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
om.dom.circle = function() {
  var circle__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var circle = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return circle__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  circle.cljs$lang$maxFixedArity = 1;
  circle.cljs$lang$applyTo = function(arglist__15684) {
    var opts__4904__auto__ = cljs.core.first(arglist__15684);
    var children__4905__auto__ = cljs.core.rest(arglist__15684);
    return circle__delegate(opts__4904__auto__, children__4905__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
om.dom.g = function() {
  var g__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var g = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return g__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  g.cljs$lang$maxFixedArity = 1;
  g.cljs$lang$applyTo = function(arglist__15685) {
    var opts__4904__auto__ = cljs.core.first(arglist__15685);
    var children__4905__auto__ = cljs.core.rest(arglist__15685);
    return g__delegate(opts__4904__auto__, children__4905__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
om.dom.line = function() {
  var line__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var line = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return line__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  line.cljs$lang$maxFixedArity = 1;
  line.cljs$lang$applyTo = function(arglist__15686) {
    var opts__4904__auto__ = cljs.core.first(arglist__15686);
    var children__4905__auto__ = cljs.core.rest(arglist__15686);
    return line__delegate(opts__4904__auto__, children__4905__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
om.dom.path = function() {
  var path__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var path = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return path__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  path.cljs$lang$maxFixedArity = 1;
  path.cljs$lang$applyTo = function(arglist__15687) {
    var opts__4904__auto__ = cljs.core.first(arglist__15687);
    var children__4905__auto__ = cljs.core.rest(arglist__15687);
    return path__delegate(opts__4904__auto__, children__4905__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
om.dom.polyline = function() {
  var polyline__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var polyline = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polyline__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 1;
  polyline.cljs$lang$applyTo = function(arglist__15688) {
    var opts__4904__auto__ = cljs.core.first(arglist__15688);
    var children__4905__auto__ = cljs.core.rest(arglist__15688);
    return polyline__delegate(opts__4904__auto__, children__4905__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
om.dom.rect = function() {
  var rect__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var rect = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rect__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  rect.cljs$lang$maxFixedArity = 1;
  rect.cljs$lang$applyTo = function(arglist__15689) {
    var opts__4904__auto__ = cljs.core.first(arglist__15689);
    var children__4905__auto__ = cljs.core.rest(arglist__15689);
    return rect__delegate(opts__4904__auto__, children__4905__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
om.dom.svg = function() {
  var svg__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var svg = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return svg__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  svg.cljs$lang$maxFixedArity = 1;
  svg.cljs$lang$applyTo = function(arglist__15690) {
    var opts__4904__auto__ = cljs.core.first(arglist__15690);
    var children__4905__auto__ = cljs.core.rest(arglist__15690);
    return svg__delegate(opts__4904__auto__, children__4905__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
om.dom.text = function() {
  var text__delegate = function(opts__4904__auto__, children__4905__auto__) {
    return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4904__auto__, children__4905__auto__)));
  };
  var text = function(opts__4904__auto__, var_args) {
    var children__4905__auto__ = null;
    if (arguments.length > 1) {
      children__4905__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return text__delegate.call(this, opts__4904__auto__, children__4905__auto__);
  };
  text.cljs$lang$maxFixedArity = 1;
  text.cljs$lang$applyTo = function(arglist__15691) {
    var opts__4904__auto__ = cljs.core.first(arglist__15691);
    var children__4905__auto__ = cljs.core.rest(arglist__15691);
    return text__delegate(opts__4904__auto__, children__4905__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
om.dom.wrap_form_element = function wrap_form_element(ctor) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }});
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input);
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea);
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option);
om.dom.render = function render(component, el) {
  return React.renderComponent(component, el);
};
om.dom.render_to_str = function render_to_str(c) {
  return React.renderComponentToString(c);
};
goog.provide("om.core");
goog.require("cljs.core");
goog.require("om.dom");
goog.require("om.dom");
om.core._STAR_read_enabled_STAR_ = false;
om.core._STAR_parent_STAR_ = null;
om.core.IInitState = function() {
  var obj15469 = {};
  return obj15469;
}();
om.core.init_state = function init_state(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = om.core.init_state[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core.init_state["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj15471 = {};
  return obj15471;
}();
om.core.should_update = function should_update(this$, next_props, next_state) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = om.core.should_update[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core.should_update["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj15473 = {};
  return obj15473;
}();
om.core.will_mount = function will_mount(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = om.core.will_mount[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core.will_mount["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj15475 = {};
  return obj15475;
}();
om.core.did_mount = function did_mount(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = om.core.did_mount[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core.did_mount["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUnmount = function() {
  var obj15477 = {};
  return obj15477;
}();
om.core.will_unmount = function will_unmount(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = om.core.will_unmount[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core.will_unmount["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj15479 = {};
  return obj15479;
}();
om.core.will_update = function will_update(this$, next_props, next_state) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = om.core.will_update[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core.will_update["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj15481 = {};
  return obj15481;
}();
om.core.did_update = function did_update(this$, prev_props, prev_state) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = om.core.did_update[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core.did_update["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state);
  }
};
om.core.IRender = function() {
  var obj15483 = {};
  return obj15483;
}();
om.core.render = function render(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = om.core.render[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core.render["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderState = function() {
  var obj15485 = {};
  return obj15485;
}();
om.core.render_state = function render_state(this$, state) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = om.core.render_state[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core.render_state["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.IValue = function() {
  var obj15487 = {};
  return obj15487;
}();
om.core._value = function _value(x) {
  if (function() {
    var and__3391__auto__ = x;
    if (and__3391__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4030__auto__ = x == null ? null : x;
    return function() {
      var or__3403__auto__ = om.core._value[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core._value["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj15489 = {};
  return obj15489;
}();
om.core._path = function _path(cursor) {
  if (function() {
    var and__3391__auto__ = cursor;
    if (and__3391__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4030__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3403__auto__ = om.core._path[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core._path["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function _state(cursor) {
  if (function() {
    var and__3391__auto__ = cursor;
    if (and__3391__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4030__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3403__auto__ = om.core._state[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core._state["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj15491 = {};
  return obj15491;
}();
om.core._to_cursor = function() {
  var _to_cursor = null;
  var _to_cursor__2 = function(value, state) {
    if (function() {
      var and__3391__auto__ = value;
      if (and__3391__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$2;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
    } else {
      var x__4030__auto__ = value == null ? null : value;
      return function() {
        var or__3403__auto__ = om.core._to_cursor[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = om.core._to_cursor["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state);
    }
  };
  var _to_cursor__3 = function(value, state, path) {
    if (function() {
      var and__3391__auto__ = value;
      if (and__3391__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$3;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
    } else {
      var x__4030__auto__ = value == null ? null : value;
      return function() {
        var or__3403__auto__ = om.core._to_cursor[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = om.core._to_cursor["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path);
    }
  };
  _to_cursor = function(value, state, path) {
    switch(arguments.length) {
      case 2:
        return _to_cursor__2.call(this, value, state);
      case 3:
        return _to_cursor__3.call(this, value, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _to_cursor.cljs$core$IFn$_invoke$arity$2 = _to_cursor__2;
  _to_cursor.cljs$core$IFn$_invoke$arity$3 = _to_cursor__3;
  return _to_cursor;
}();
om.core.transact_STAR_ = function transact_STAR_(state, path, f) {
  var old_state = cljs.core.deref.call(null, state);
  if (cljs.core.empty_QMARK_.call(null, path)) {
    cljs.core.swap_BANG_.call(null, state, f);
  } else {
    cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f);
  }
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", 1017337751), path, new cljs.core.Keyword(null, "old-value", "old-value", 1451216317), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 3626601078), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1449001181), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 3624385942), 
  cljs.core.deref.call(null, state)], null);
};
om.core.ITransact = function() {
  var obj15493 = {};
  return obj15493;
}();
om.core._transact_BANG_ = function _transact_BANG_(cursor, korks, f) {
  if (function() {
    var and__3391__auto__ = cursor;
    if (and__3391__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$3(cursor, korks, f);
  } else {
    var x__4030__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3403__auto__ = om.core._transact_BANG_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core._transact_BANG_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, korks, f);
  }
};
om.core.INotify = function() {
  var obj15495 = {};
  return obj15495;
}();
om.core._notify = function _notify(x, tx_data, root_cursor) {
  if (function() {
    var and__3391__auto__ = x;
    if (and__3391__auto__) {
      return x.om$core$INotify$_notify$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return x.om$core$INotify$_notify$arity$3(x, tx_data, root_cursor);
  } else {
    var x__4030__auto__ = x == null ? null : x;
    return function() {
      var or__3403__auto__ = om.core._notify[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = om.core._notify["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-notify", x);
        }
      }
    }().call(null, x, tx_data, root_cursor);
  }
};
om.core.children = function children(node) {
  var c = node.props.children;
  if (cljs.core.fn_QMARK_.call(null, c)) {
    return node.props.children = function() {
      var _STAR_read_enabled_STAR_15497 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        return c.call(null, node);
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15497;
      }
    }();
  } else {
    return c;
  }
};
om.core.get_props = function get_props(x) {
  return x.props["__om_cursor"];
};
om.core.get_state = function() {
  var get_state = null;
  var get_state__1 = function(owner) {
    var state = owner.state;
    var or__3403__auto__ = state["__om_pending_state"];
    if (cljs.core.truth_(or__3403__auto__)) {
      return or__3403__auto__;
    } else {
      return state["__om_state"];
    }
  };
  var get_state__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_state.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_state.call(null, owner);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get_in.call(null, get_state.call(null, owner), korks);
        } else {
          return null;
        }
      }
    }
  };
  get_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_state__1.call(this, owner);
      case 2:
        return get_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_state.cljs$core$IFn$_invoke$arity$1 = get_state__1;
  get_state.cljs$core$IFn$_invoke$arity$2 = get_state__2;
  return get_state;
}();
om.core.get_shared = function() {
  var get_shared = null;
  var get_shared__1 = function(owner) {
    if (owner == null) {
      return null;
    } else {
      return owner.props["__om_shared"];
    }
  };
  var get_shared__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_shared.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_shared.call(null, owner);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get_in.call(null, get_shared.call(null, owner), korks);
        } else {
          return null;
        }
      }
    }
  };
  get_shared = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_shared__1.call(this, owner);
      case 2:
        return get_shared__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_shared.cljs$core$IFn$_invoke$arity$1 = get_shared__1;
  get_shared.cljs$core$IFn$_invoke$arity$2 = get_shared__2;
  return get_shared;
}();
om.core.merge_pending_state = function merge_pending_state(owner) {
  var state = owner.state;
  var temp__4092__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4092__auto__)) {
    var pending_state = temp__4092__auto__;
    var G__15499 = state;
    G__15499["__om_prev_state"] = state["__om_state"];
    G__15499["__om_state"] = pending_state;
    G__15499["__om_pending_state"] = null;
    return G__15499;
  } else {
    return null;
  }
};
om.core.merge_props_state = function() {
  var merge_props_state = null;
  var merge_props_state__1 = function(owner) {
    return merge_props_state.call(null, owner, null);
  };
  var merge_props_state__2 = function(owner, props) {
    var props__$1 = function() {
      var or__3403__auto__ = props;
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return owner.props;
      }
    }();
    var temp__4092__auto__ = props__$1["__om_state"];
    if (cljs.core.truth_(temp__4092__auto__)) {
      var props_state = temp__4092__auto__;
      var state = owner.state;
      state["__om_pending_state"] = cljs.core.merge.call(null, function() {
        var or__3403__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state["__om_state"];
        }
      }(), props_state);
      return props__$1["__om_state"] = null;
    } else {
      return null;
    }
  };
  merge_props_state = function(owner, props) {
    switch(arguments.length) {
      case 1:
        return merge_props_state__1.call(this, owner);
      case 2:
        return merge_props_state__2.call(this, owner, props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge_props_state.cljs$core$IFn$_invoke$arity$1 = merge_props_state__1;
  merge_props_state.cljs$core$IFn$_invoke$arity$2 = merge_props_state__2;
  return merge_props_state;
}();
om.core.Pure = React.createClass({"render":function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var _STAR_read_enabled_STAR_15514 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    if (function() {
      var G__15515 = c;
      if (G__15515) {
        var bit__4053__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3403__auto__ = bit__4053__auto__;
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return G__15515.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__15515.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__15515);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__15515);
      }
    }()) {
      var _STAR_parent_STAR_15516 = om.core._STAR_parent_STAR_;
      try {
        om.core._STAR_parent_STAR_ = this$;
        return om.core.render.call(null, c);
      } finally {
        om.core._STAR_parent_STAR_ = _STAR_parent_STAR_15516;
      }
    } else {
      if (function() {
        var G__15517 = c;
        if (G__15517) {
          var bit__4053__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3403__auto__ = bit__4053__auto__;
            if (cljs.core.truth_(or__3403__auto__)) {
              return or__3403__auto__;
            } else {
              return G__15517.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__15517.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__15517);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__15517);
        }
      }()) {
        var _STAR_parent_STAR_15518 = om.core._STAR_parent_STAR_;
        try {
          om.core._STAR_parent_STAR_ = this$;
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } finally {
          om.core._STAR_parent_STAR_ = _STAR_parent_STAR_15518;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return c;
        } else {
          return null;
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15514;
  }
}, "componentDidUpdate":function(prev_props, prev_state, root_node) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__15512 = c;
    if (G__15512) {
      var bit__4053__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3403__auto__ = bit__4053__auto__;
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return G__15512.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__15512.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__15512);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__15512);
    }
  }()) {
    var state_15519 = this$.state;
    var _STAR_read_enabled_STAR_15513_15520 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.did_update.call(null, c, om.core.get_props.call(null, {"props":prev_props}), function() {
        var or__3403__auto__ = state_15519["__om_prev_state"];
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state_15519["__om_state"];
        }
      }());
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15513_15520;
    }
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, "componentWillUpdate":function(next_props, next_state) {
  var this$ = this;
  var c_15521 = om.core.children.call(null, this$);
  if (function() {
    var G__15510 = c_15521;
    if (G__15510) {
      var bit__4053__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3403__auto__ = bit__4053__auto__;
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return G__15510.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__15510.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__15510);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__15510);
    }
  }()) {
    var state_15522 = this$.state;
    var _STAR_read_enabled_STAR_15511_15523 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_update.call(null, c_15521, om.core.get_props.call(null, {"props":next_props}), function() {
        var or__3403__auto__ = state_15522["__om_pending_state"];
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state_15522["__om_state"];
        }
      }());
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15511_15523;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, "componentWillUnmount":function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__15508 = c;
    if (G__15508) {
      var bit__4053__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3403__auto__ = bit__4053__auto__;
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return G__15508.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__15508.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__15508);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__15508);
    }
  }()) {
    var _STAR_read_enabled_STAR_15509 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_unmount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15509;
    }
  } else {
    return null;
  }
}, "componentDidMount":function(node) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__15506 = c;
    if (G__15506) {
      var bit__4053__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3403__auto__ = bit__4053__auto__;
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return G__15506.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__15506.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__15506);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__15506);
    }
  }()) {
    var _STAR_read_enabled_STAR_15507 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.did_mount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15507;
    }
  } else {
    return null;
  }
}, "componentWillMount":function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_15524 = om.core.children.call(null, this$);
  if (function() {
    var G__15504 = c_15524;
    if (G__15504) {
      var bit__4053__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3403__auto__ = bit__4053__auto__;
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return G__15504.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__15504.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__15504);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__15504);
    }
  }()) {
    var _STAR_read_enabled_STAR_15505_15525 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_mount.call(null, c_15524);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15505_15525;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, "shouldComponentUpdate":function(next_props, next_state) {
  var this$ = this;
  var _STAR_read_enabled_STAR_15502 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    var props = this$.props;
    var state = this$.state;
    var c = om.core.children.call(null, this$);
    om.core.merge_props_state.call(null, this$, next_props);
    if (function() {
      var G__15503 = c;
      if (G__15503) {
        var bit__4053__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3403__auto__ = bit__4053__auto__;
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return G__15503.om$core$IShouldUpdate$;
          }
        }())) {
          return true;
        } else {
          if (!G__15503.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__15503);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__15503);
      }
    }()) {
      return om.core.should_update.call(null, c, om.core.get_props.call(null, {"props":next_props}), function() {
        var or__3403__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return state["__om_state"];
        }
      }());
    } else {
      if (!(om.core._value.call(null, props["__om_cursor"]) === om.core._value.call(null, next_props["__om_cursor"]))) {
        return true;
      } else {
        if (!(state["__om_pending_state"] == null)) {
          return true;
        } else {
          if (!(props["__om_index"] === next_props["__om_index"])) {
            return true;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15502;
  }
}, "getInitialState":function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3403__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3403__auto__)) {
      return or__3403__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var ret = {"__om_state":cljs.core.merge.call(null, istate, function() {
    var G__15500 = c;
    if (G__15500) {
      var bit__4053__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3403__auto__ = bit__4053__auto__;
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return G__15500.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__15500.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__15500);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__15500);
    }
  }() ? function() {
    var _STAR_read_enabled_STAR_15501 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.init_state.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15501;
    }
  }() : null)};
  props["__om_init_state"] = null;
  return ret;
}});
om.core.pure = function pure(obj) {
  return new om.core.Pure(obj);
};
om.core.path = function path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.cursor_QMARK_ = function cursor_QMARK_(x) {
  var G__15527 = x;
  if (G__15527) {
    var bit__4053__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3403__auto__ = bit__4053__auto__;
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return G__15527.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__15527.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__15527);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__15527);
  }
};
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2158397195;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "om.core/MapCursor");
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(_, k, not_found) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    var v = cljs.core._lookup.call(null, self__.value, k, not_found);
    if (!cljs.core._EQ_.call(null, v, not_found)) {
      return om.core.to_cursor.call(null, v, self__.state, cljs.core.conj.call(null, self__.path, k));
    } else {
      return not_found;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.call = function() {
  var G__15531 = null;
  var G__15531__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15531__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15531 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15531__2.call(this, self__, k);
      case 3:
        return G__15531__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__15531;
}();
om.core.MapCursor.prototype.apply = function(self__, args15528) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15528)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return self__.value;
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(p__15529) {
        var vec__15530 = p__15529;
        var k = cljs.core.nth.call(null, vec__15530, 0, null);
        var v = cljs.core.nth.call(null, vec__15530, 1, null);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core.to_cursor.call(null, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
      }, self__.value);
    } else {
      return null;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$3 = function(_, korks, f) {
  var self__ = this;
  var ___$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, cljs.core.into.call(null, self__.path, korks), f);
};
om.core.__GT_MapCursor = function __GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2175181595;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "om.core/IndexedCursor");
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, null);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, not_found);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, n, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.call = function() {
  var G__15533 = null;
  var G__15533__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15533__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15533 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15533__2.call(this, self__, k);
      case 3:
        return G__15533__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__15533;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args15532) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15532)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return self__.value;
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(v, i) {
        return om.core.to_cursor.call(null, v, self__.state, cljs.core.conj.call(null, self__.path, i));
      }, self__.value, cljs.core.range.call(null));
    } else {
      return null;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(_, n) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(_, n, not_found) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (n < cljs.core._count.call(null, self__.value)) {
      return om.core.to_cursor.call(null, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
    } else {
      return not_found;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$3 = function(_, korks, f) {
  var self__ = this;
  var ___$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, cljs.core.into.call(null, self__.path, korks), f);
};
om.core.__GT_IndexedCursor = function __GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function to_cursor_STAR_(val, state, path) {
  var x15535 = cljs.core.clone.call(null, val);
  x15535.cljs$core$IEquiv$ = true;
  x15535.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
    var ___$1 = this;
    if (om.core._STAR_read_enabled_STAR_) {
      if (om.core.cursor_QMARK_.call(null, other)) {
        return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
      } else {
        return cljs.core._EQ_.call(null, val, other);
      }
    } else {
      throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
    }
  };
  x15535.om$core$ITransact$ = true;
  x15535.om$core$ITransact$_transact_BANG_$arity$3 = function(_, korks, f) {
    var ___$1 = this;
    return om.core.transact_STAR_.call(null, state, cljs.core.into.call(null, path, korks), f);
  };
  x15535.om$core$ICursor$ = true;
  x15535.om$core$ICursor$_path$arity$1 = function(_) {
    var ___$1 = this;
    return path;
  };
  x15535.om$core$ICursor$_state$arity$1 = function(_) {
    var ___$1 = this;
    return state;
  };
  x15535.cljs$core$IDeref$ = true;
  x15535.cljs$core$IDeref$_deref$arity$1 = function(this$) {
    var this$__$1 = this;
    if (!om.core._STAR_read_enabled_STAR_) {
      return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path);
    } else {
      throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
    }
  };
  return x15535;
};
om.core.to_cursor = function() {
  var to_cursor = null;
  var to_cursor__1 = function(val) {
    return to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__2 = function(val, state) {
    return to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__3 = function(val, state, path) {
    if (om.core.cursor_QMARK_.call(null, val)) {
      return val;
    } else {
      if (function() {
        var G__15538 = val;
        if (G__15538) {
          var bit__4053__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3403__auto__ = bit__4053__auto__;
            if (cljs.core.truth_(or__3403__auto__)) {
              return or__3403__auto__;
            } else {
              return G__15538.om$core$IToCursor$;
            }
          }())) {
            return true;
          } else {
            if (!G__15538.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__15538);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__15538);
        }
      }()) {
        return om.core._to_cursor.call(null, val, state, path);
      } else {
        if (cljs.core.indexed_QMARK_.call(null, val)) {
          return new om.core.IndexedCursor(val, state, path);
        } else {
          if (cljs.core.map_QMARK_.call(null, val)) {
            return new om.core.MapCursor(val, state, path);
          } else {
            if (function() {
              var G__15539 = val;
              if (G__15539) {
                var bit__4053__auto__ = G__15539.cljs$lang$protocol_mask$partition1$ & 8192;
                if (bit__4053__auto__ || G__15539.cljs$core$ICloneable$) {
                  return true;
                } else {
                  if (!G__15539.cljs$lang$protocol_mask$partition1$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__15539);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__15539);
              }
            }()) {
              return om.core.to_cursor_STAR_.call(null, val, state, path);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return val;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  to_cursor = function(val, state, path) {
    switch(arguments.length) {
      case 1:
        return to_cursor__1.call(this, val);
      case 2:
        return to_cursor__2.call(this, val, state);
      case 3:
        return to_cursor__3.call(this, val, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  to_cursor.cljs$core$IFn$_invoke$arity$1 = to_cursor__1;
  to_cursor.cljs$core$IFn$_invoke$arity$2 = to_cursor__2;
  to_cursor.cljs$core$IFn$_invoke$arity$3 = to_cursor__3;
  return to_cursor;
}();
om.core.notify_STAR_ = function notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.render_all = function render_all() {
  om.core.refresh_queued = false;
  var seq__15544 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
  var chunk__15545 = null;
  var count__15546 = 0;
  var i__15547 = 0;
  while (true) {
    if (i__15547 < count__15546) {
      var f = cljs.core._nth.call(null, chunk__15545, i__15547);
      f.call(null);
      var G__15548 = seq__15544;
      var G__15549 = chunk__15545;
      var G__15550 = count__15546;
      var G__15551 = i__15547 + 1;
      seq__15544 = G__15548;
      chunk__15545 = G__15549;
      count__15546 = G__15550;
      i__15547 = G__15551;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__15544);
      if (temp__4092__auto__) {
        var seq__15544__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__15544__$1)) {
          var c__4151__auto__ = cljs.core.chunk_first.call(null, seq__15544__$1);
          var G__15552 = cljs.core.chunk_rest.call(null, seq__15544__$1);
          var G__15553 = c__4151__auto__;
          var G__15554 = cljs.core.count.call(null, c__4151__auto__);
          var G__15555 = 0;
          seq__15544 = G__15552;
          chunk__15545 = G__15553;
          count__15546 = G__15554;
          i__15547 = G__15555;
          continue;
        } else {
          var f = cljs.core.first.call(null, seq__15544__$1);
          f.call(null);
          var G__15556 = cljs.core.next.call(null, seq__15544__$1);
          var G__15557 = null;
          var G__15558 = 0;
          var G__15559 = 0;
          seq__15544 = G__15556;
          chunk__15545 = G__15557;
          count__15546 = G__15558;
          i__15547 = G__15559;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_QMARK_ = function valid_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "init-state", "init-state", 4479067398), null, new cljs.core.Keyword(null, "state", "state", 1123661827), null, new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), null, new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514), null, new cljs.core.Keyword(null, "key", "key", 1014010321), null, new cljs.core.Keyword(null, 
  "shared", "shared", 4405305303), null, new cljs.core.Keyword(null, "opts", "opts", 1017322386), null, new cljs.core.Keyword(null, "fn", "fn", 1013907514), null], null), null), cljs.core.keys.call(null, m));
};
om.core.build = function() {
  var build = null;
  var build__2 = function(f, cursor) {
    return build.call(null, f, cursor, null);
  };
  var build__3 = function(f, cursor, m) {
    if (om.core.valid_QMARK_.call(null, m)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid?", "valid?", 1830611324, null), new cljs.core.Symbol(null, "m", "m", -1640531418, null))))].join(""));
    }
    if (m == null) {
      var shared = function() {
        var or__3403__auto__ = (new cljs.core.Keyword(null, "shared", "shared", 4405305303)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var pure__4938__auto__ = om.core.pure.call(null, {"children":function(this$) {
        var _STAR_read_enabled_STAR_15564 = om.core._STAR_read_enabled_STAR_;
        try {
          om.core._STAR_read_enabled_STAR_ = true;
          return f.call(null, cursor, this$);
        } finally {
          om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15564;
        }
      }, "__om_shared":shared, "__om_cursor":cursor});
      pure__4938__auto__.constructor = goog.getUid(f);
      return pure__4938__auto__;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var map__15565 = m;
        var map__15565__$1 = cljs.core.seq_QMARK_.call(null, map__15565) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15565) : map__15565;
        var opts = cljs.core.get.call(null, map__15565__$1, new cljs.core.Keyword(null, "opts", "opts", 1017322386));
        var init_state = cljs.core.get.call(null, map__15565__$1, new cljs.core.Keyword(null, "init-state", "init-state", 4479067398));
        var state = cljs.core.get.call(null, map__15565__$1, new cljs.core.Keyword(null, "state", "state", 1123661827));
        var key = cljs.core.get.call(null, map__15565__$1, new cljs.core.Keyword(null, "key", "key", 1014010321));
        var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", 1013907514));
        var cursor_SINGLEQUOTE_ = !(dataf == null) ? dataf.call(null, cursor) : cursor;
        var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 4184082563));
        var shared = function() {
          var or__3403__auto__ = (new cljs.core.Keyword(null, "shared", "shared", 4405305303)).cljs$core$IFn$_invoke$arity$1(m);
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
          }
        }();
        var pure__4938__auto__ = om.core.pure.call(null, {"children":opts == null ? function(this$) {
          var _STAR_read_enabled_STAR_15566 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            return f.call(null, cursor_SINGLEQUOTE_, this$);
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15566;
          }
        } : function(this$) {
          var _STAR_read_enabled_STAR_15567 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            return f.call(null, cursor_SINGLEQUOTE_, this$, opts);
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15567;
          }
        }, "key":rkey, "__om_shared":shared, "__om_state":state, "__om_init_state":init_state, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514)).cljs$core$IFn$_invoke$arity$1(m), "__om_cursor":cursor_SINGLEQUOTE_});
        pure__4938__auto__.constructor = goog.getUid(f);
        return pure__4938__auto__;
      } else {
        return null;
      }
    }
  };
  build = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build__2.call(this, f, cursor);
      case 3:
        return build__3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build.cljs$core$IFn$_invoke$arity$2 = build__2;
  build.cljs$core$IFn$_invoke$arity$3 = build__3;
  return build;
}();
om.core.build_all = function() {
  var build_all = null;
  var build_all__2 = function(f, xs) {
    return build_all.call(null, f, xs, null);
  };
  var build_all__3 = function(f, xs, m) {
    return cljs.core.map.call(null, function(x, i) {
      return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514), i));
    }, xs, cljs.core.range.call(null));
  };
  build_all = function(f, xs, m) {
    switch(arguments.length) {
      case 2:
        return build_all__2.call(this, f, xs);
      case 3:
        return build_all__3.call(this, f, xs, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_all.cljs$core$IFn$_invoke$arity$2 = build_all__2;
  build_all.cljs$core$IFn$_invoke$arity$3 = build_all__3;
  return build_all;
}();
om.core.root = function root(f, value, p__15568) {
  var map__15571 = p__15568;
  var map__15571__$1 = cljs.core.seq_QMARK_.call(null, map__15571) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15571) : map__15571;
  var options = map__15571__$1;
  var path = cljs.core.get.call(null, map__15571__$1, new cljs.core.Keyword(null, "path", "path", 1017337751));
  var tx_listen = cljs.core.get.call(null, map__15571__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 666878114));
  var shared = cljs.core.get.call(null, map__15571__$1, new cljs.core.Keyword(null, "shared", "shared", 4405305303));
  var target = cljs.core.get.call(null, map__15571__$1, new cljs.core.Keyword(null, "target", "target", 4427965699));
  if (!(target == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("No target specified to om.core/root"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "target", "target", 1773529930, null)))))].join(""));
  }
  var roots_SINGLEQUOTE__15573 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__15573, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__15573, target).call(null);
  } else {
  }
  var state = value instanceof cljs.core.Atom ? value : cljs.core.atom.call(null, value);
  var state__$1 = function() {
    var x15572 = state;
    x15572.om$core$INotify$ = true;
    x15572.om$core$INotify$_notify$arity$3 = function(x15572, state) {
      return function(_, tx_data, root_cursor) {
        var ___$1 = this;
        if (tx_listen == null) {
          return null;
        } else {
          return tx_listen.call(null, tx_data, root_cursor);
        }
      };
    }(x15572, state);
    return x15572;
  }();
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 4427965699), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 666878114), new cljs.core.Keyword(null, "path", "path", 1017337751));
  var rootf = function(state, state__$1, m) {
    return function rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path);
      return om.dom.render.call(null, om.core.build.call(null, f, cursor, m), target);
    };
  }(state, state__$1, m);
  var watch_key = cljs.core.gensym.call(null);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(_, ___$1, ___$2, ___$3) {
    if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
    } else {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
    }
    if (cljs.core.truth_(om.core.refresh_queued)) {
      return null;
    } else {
      om.core.refresh_queued = true;
      if (typeof requestAnimationFrame !== "undefined") {
        return requestAnimationFrame(om.core.render_all);
      } else {
        return setTimeout(om.core.render_all, 16);
      }
    }
  });
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function() {
    cljs.core.remove_watch.call(null, state__$1, watch_key);
    cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
    return React.unmountComponentAtNode(target);
  });
  return rootf.call(null);
};
om.core.transact_BANG_ = function() {
  var transact_BANG_ = null;
  var transact_BANG___2 = function(cursor, f) {
    return transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
  };
  var transact_BANG___3 = function(cursor, korks, f) {
    return transact_BANG_.call(null, cursor, korks, f, null);
  };
  var transact_BANG___4 = function(cursor, korks, f, tag) {
    var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.Keyword(null, "else", "else", 1017020587) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null) : null;
    var tx_data = om.core._transact_BANG_.call(null, cursor, korks__$1, f);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", 1014018828), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  };
  transact_BANG_ = function(cursor, korks, f, tag) {
    switch(arguments.length) {
      case 2:
        return transact_BANG___2.call(this, cursor, korks);
      case 3:
        return transact_BANG___3.call(this, cursor, korks, f);
      case 4:
        return transact_BANG___4.call(this, cursor, korks, f, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transact_BANG_.cljs$core$IFn$_invoke$arity$2 = transact_BANG___2;
  transact_BANG_.cljs$core$IFn$_invoke$arity$3 = transact_BANG___3;
  transact_BANG_.cljs$core$IFn$_invoke$arity$4 = transact_BANG___4;
  return transact_BANG_;
}();
om.core.update_BANG_ = function() {
  var update_BANG_ = null;
  var update_BANG___2 = function(cursor, v) {
    return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
      return v;
    }, null);
  };
  var update_BANG___3 = function(cursor, korks, v) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, null);
  };
  var update_BANG___4 = function(cursor, korks, v, tag) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, tag);
  };
  update_BANG_ = function(cursor, korks, v, tag) {
    switch(arguments.length) {
      case 2:
        return update_BANG___2.call(this, cursor, korks);
      case 3:
        return update_BANG___3.call(this, cursor, korks, v);
      case 4:
        return update_BANG___4.call(this, cursor, korks, v, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_BANG_.cljs$core$IFn$_invoke$arity$2 = update_BANG___2;
  update_BANG_.cljs$core$IFn$_invoke$arity$3 = update_BANG___3;
  update_BANG_.cljs$core$IFn$_invoke$arity$4 = update_BANG___4;
  return update_BANG_;
}();
om.core.get_node = function() {
  var get_node = null;
  var get_node__1 = function(owner) {
    return owner.getDOMNode();
  };
  var get_node__2 = function(owner, name) {
    var temp__4092__auto__ = owner.refs;
    if (cljs.core.truth_(temp__4092__auto__)) {
      var refs = temp__4092__auto__;
      return refs[name].getDOMNode();
    } else {
      return null;
    }
  };
  get_node = function(owner, name) {
    switch(arguments.length) {
      case 1:
        return get_node__1.call(this, owner);
      case 2:
        return get_node__2.call(this, owner, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_node.cljs$core$IFn$_invoke$arity$1 = get_node__1;
  get_node.cljs$core$IFn$_invoke$arity$2 = get_node__2;
  return get_node;
}();
om.core.set_state_BANG_ = function set_state_BANG_(owner, korks, v) {
  var _STAR_read_enabled_STAR_15575 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    var props = owner.props;
    var state = owner.state;
    var cursor = props["__om_cursor"];
    var path = om.core._path.call(null, cursor);
    var pstate = function() {
      var or__3403__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return state["__om_state"];
      }
    }();
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      state["__om_pending_state"] = cljs.core.assoc.call(null, pstate, korks, v);
    } else {
      state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, korks, v);
    }
    if (cljs.core.empty_QMARK_.call(null, path)) {
      return cljs.core.swap_BANG_.call(null, om.core._state.call(null, cursor), cljs.core.clone);
    } else {
      return cljs.core.swap_BANG_.call(null, om.core._state.call(null, cursor), cljs.core.update_in, path, cljs.core.clone);
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15575;
  }
};
om.core.get_render_state = function() {
  var get_render_state = null;
  var get_render_state__1 = function(owner) {
    return owner.state["__om_state"];
  };
  var get_render_state__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_render_state.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_render_state.call(null, owner);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get_in.call(null, get_render_state.call(null, owner), korks);
        } else {
          return null;
        }
      }
    }
  };
  get_render_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_render_state__1.call(this, owner);
      case 2:
        return get_render_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_render_state.cljs$core$IFn$_invoke$arity$1 = get_render_state__1;
  get_render_state.cljs$core$IFn$_invoke$arity$2 = get_render_state__2;
  return get_render_state;
}();
om.core.graft = function graft(value, cursor) {
  var state = om.core._state.call(null, cursor);
  var path = om.core._path.call(null, cursor);
  if (om.core.cursor_QMARK_.call(null, value)) {
    throw new Error([cljs.core.str(value), cljs.core.str(" is already a cursor.")].join(""));
  } else {
    var x15577 = cljs.core.clone.call(null, value);
    x15577.om$core$ICursor$ = true;
    x15577.om$core$ICursor$_state$arity$1 = function(_) {
      var ___$1 = this;
      return state;
    };
    x15577.om$core$ICursor$_path$arity$1 = function(_) {
      var ___$1 = this;
      return path;
    };
    x15577.om$core$ITransact$ = true;
    x15577.om$core$ITransact$_transact_BANG_$arity$3 = function(_, ___$1, ___$2) {
      var ___$3 = this;
      throw new Error("Cannot transact on graft");
    };
    return x15577;
  }
};
goog.provide("floor16.datum");
goog.require("cljs.core");
goog.require("om.core");
goog.require("om.core");
floor16.datum.get_cities = function get_cities() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "href", "href", 1017115293), "", new cljs.core.Keyword(null, "total", "total", 1124454070), 80, new cljs.core.Keyword(null, "offset", "offset", 4289091589), 0, new cljs.core.Keyword(null, "limit", "limit", 1116880685), 25, new cljs.core.Keyword(null, "items", "items", 1114430258), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
  "id", "id", 1013907597), 1, new cljs.core.Keyword(null, "name", "name", 1017277949), "\u043c\u043e\u0441\u043a\u0432\u0430", new cljs.core.Keyword(null, "code", "code", 1016963423), "moscow"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", 1013907597), 2, new cljs.core.Keyword(null, "name", "name", 1017277949), "\u0441\u0430\u043c\u0430\u0440\u0430", new cljs.core.Keyword(null, "code", "code", 1016963423), "samara"], null), new cljs.core.PersistentArrayMap(null, 
  3, [new cljs.core.Keyword(null, "id", "id", 1013907597), 3, new cljs.core.Keyword(null, "name", "name", 1017277949), "\u0443\u0444\u0430", new cljs.core.Keyword(null, "code", "code", 1016963423), "ufa"], null)], null)], null);
};
floor16.datum.system = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "app", "app", 1014001043), null], null));
floor16.datum.init_data = function init_data(p__14333) {
  var map__14335 = p__14333;
  var map__14335__$1 = cljs.core.seq_QMARK_.call(null, map__14335) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14335) : map__14335;
  var conf = map__14335__$1;
  var local_QMARK_ = cljs.core.get.call(null, map__14335__$1, new cljs.core.Keyword(null, "local?", "local?", 4211409318));
  var dict_path = cljs.core.get.call(null, map__14335__$1, new cljs.core.Keyword(null, "dict-path", "dict-path", 4298067790));
  var app_state = cljs.core.get.call(null, map__14335__$1, new cljs.core.Keyword(null, "app-state", "app-state", 1424976215));
  return cljs.core.swap_BANG_.call(null, floor16.datum.system, cljs.core.merge, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "app", "app", 1014001043), app_state, new cljs.core.Keyword(null, "dict-path", "dict-path", 4298067790), function() {
    var or__3403__auto__ = dict_path;
    if (cljs.core.truth_(or__3403__auto__)) {
      return or__3403__auto__;
    } else {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "dicts", "dicts", 1109483247)], null);
    }
  }(), new cljs.core.Keyword(null, "local?", "local?", 4211409318), local_QMARK_], null));
};
floor16.datum.app = function app() {
  return(new cljs.core.Keyword(null, "app", "app", 1014001043)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.datum.system));
};
floor16.datum.dict_path = function dict_path() {
  return(new cljs.core.Keyword(null, "dict-path", "dict-path", 4298067790)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.datum.system));
};
floor16.datum.path_to = function path_to(k) {
  return cljs.core.conj.call(null, floor16.datum.dict_path.call(null), k);
};
floor16.datum.IIdentity = function() {
  var obj14337 = {};
  return obj14337;
}();
floor16.datum.dkey = function dkey(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$datum$IIdentity$dkey$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$datum$IIdentity$dkey$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.datum.dkey[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.datum.dkey["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IIdentity.dkey", this$);
        }
      }
    }().call(null, this$);
  }
};
floor16.datum.get_by_key = function get_by_key(this$, k) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$datum$IIdentity$get_by_key$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$datum$IIdentity$get_by_key$arity$2(this$, k);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.datum.get_by_key[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.datum.get_by_key["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IIdentity.get-by-key", this$);
        }
      }
    }().call(null, this$, k);
  }
};
floor16.datum.IHasName = function() {
  var obj14339 = {};
  return obj14339;
}();
floor16.datum.dname = function dname(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$datum$IHasName$dname$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$datum$IHasName$dname$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.datum.dname[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.datum.dname["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHasName.dname", this$);
        }
      }
    }().call(null, this$);
  }
};
floor16.datum.name_by_key = function name_by_key(this$, k) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$datum$IHasName$name_by_key$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$datum$IHasName$name_by_key$arity$2(this$, k);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.datum.name_by_key[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.datum.name_by_key["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHasName.name-by-key", this$);
        }
      }
    }().call(null, this$, k);
  }
};
floor16.datum.IHasCode = function() {
  var obj14341 = {};
  return obj14341;
}();
floor16.datum.dcode = function dcode(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$datum$IHasCode$dcode$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$datum$IHasCode$dcode$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.datum.dcode[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.datum.dcode["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHasCode.dcode", this$);
        }
      }
    }().call(null, this$);
  }
};
floor16.datum.code_by_key = function code_by_key(this$, k) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$datum$IHasCode$code_by_key$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$datum$IHasCode$code_by_key$arity$2(this$, k);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.datum.code_by_key[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.datum.code_by_key["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHasCode.code-by-key", this$);
        }
      }
    }().call(null, this$, k);
  }
};
floor16.datum.get_by_code = function get_by_code(this$, code) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$datum$IHasCode$get_by_code$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$datum$IHasCode$get_by_code$arity$2(this$, code);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.datum.get_by_code[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.datum.get_by_code["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHasCode.get-by-code", this$);
        }
      }
    }().call(null, this$, code);
  }
};
floor16.datum.key_by_code = function key_by_code(this$, code) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$datum$IHasCode$key_by_code$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$datum$IHasCode$key_by_code$arity$2(this$, code);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.datum.key_by_code[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.datum.key_by_code["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHasCode.key-by-code", this$);
        }
      }
    }().call(null, this$, code);
  }
};
floor16.datum.IDictionary = function() {
  var obj14343 = {};
  return obj14343;
}();
floor16.datum.load_all = function() {
  var load_all = null;
  var load_all__2 = function(this$, cb) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.floor16$datum$IDictionary$load_all$arity$2;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.floor16$datum$IDictionary$load_all$arity$2(this$, cb);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = floor16.datum.load_all[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = floor16.datum.load_all["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IDictionary.load-all", this$);
          }
        }
      }().call(null, this$, cb);
    }
  };
  var load_all__3 = function(this$, owner, k) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.floor16$datum$IDictionary$load_all$arity$3;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.floor16$datum$IDictionary$load_all$arity$3(this$, owner, k);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = floor16.datum.load_all[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = floor16.datum.load_all["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IDictionary.load-all", this$);
          }
        }
      }().call(null, this$, owner, k);
    }
  };
  load_all = function(this$, owner, k) {
    switch(arguments.length) {
      case 2:
        return load_all__2.call(this, this$, owner);
      case 3:
        return load_all__3.call(this, this$, owner, k);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  load_all.cljs$core$IFn$_invoke$arity$2 = load_all__2;
  load_all.cljs$core$IFn$_invoke$arity$3 = load_all__3;
  return load_all;
}();
floor16.datum.get_all = function get_all(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$datum$IDictionary$get_all$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$datum$IDictionary$get_all$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.datum.get_all[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.datum.get_all["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDictionary.get-all", this$);
        }
      }
    }().call(null, this$);
  }
};
floor16.datum.IResource = function() {
  var obj14345 = {};
  return obj14345;
}();
floor16.datum.load_by_query = function() {
  var load_by_query = null;
  var load_by_query__2 = function(this$, context) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.floor16$datum$IResource$load_by_query$arity$2;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.floor16$datum$IResource$load_by_query$arity$2(this$, context);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = floor16.datum.load_by_query[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = floor16.datum.load_by_query["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IResource.load-by-query", this$);
          }
        }
      }().call(null, this$, context);
    }
  };
  var load_by_query__3 = function(this$, q, cursor) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.floor16$datum$IResource$load_by_query$arity$3;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.floor16$datum$IResource$load_by_query$arity$3(this$, q, cursor);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = floor16.datum.load_by_query[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = floor16.datum.load_by_query["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IResource.load-by-query", this$);
          }
        }
      }().call(null, this$, q, cursor);
    }
  };
  var load_by_query__4 = function(this$, q, cursor, korks) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.floor16$datum$IResource$load_by_query$arity$4;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.floor16$datum$IResource$load_by_query$arity$4(this$, q, cursor, korks);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = floor16.datum.load_by_query[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = floor16.datum.load_by_query["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IResource.load-by-query", this$);
          }
        }
      }().call(null, this$, q, cursor, korks);
    }
  };
  load_by_query = function(this$, q, cursor, korks) {
    switch(arguments.length) {
      case 2:
        return load_by_query__2.call(this, this$, q);
      case 3:
        return load_by_query__3.call(this, this$, q, cursor);
      case 4:
        return load_by_query__4.call(this, this$, q, cursor, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  load_by_query.cljs$core$IFn$_invoke$arity$2 = load_by_query__2;
  load_by_query.cljs$core$IFn$_invoke$arity$3 = load_by_query__3;
  load_by_query.cljs$core$IFn$_invoke$arity$4 = load_by_query__4;
  return load_by_query;
}();
floor16.datum.request_data = function() {
  var request_data__delegate = function(res_key, cb, p__14346) {
    var vec__14348 = p__14346;
    var q = cljs.core.nth.call(null, vec__14348, 0, null);
    if (cljs.core.truth_((new cljs.core.Keyword(null, "local?", "local?", 4211409318)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.datum.system)))) {
      return cb.call(null, cljs.core.PersistentArrayMap.EMPTY);
    } else {
      return setTimeout(function() {
        return cb.call(null, floor16.datum.get_cities.call(null));
      }, 500);
    }
  };
  var request_data = function(res_key, cb, var_args) {
    var p__14346 = null;
    if (arguments.length > 2) {
      p__14346 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return request_data__delegate.call(this, res_key, cb, p__14346);
  };
  request_data.cljs$lang$maxFixedArity = 2;
  request_data.cljs$lang$applyTo = function(arglist__14349) {
    var res_key = cljs.core.first(arglist__14349);
    arglist__14349 = cljs.core.next(arglist__14349);
    var cb = cljs.core.first(arglist__14349);
    var p__14346 = cljs.core.rest(arglist__14349);
    return request_data__delegate(res_key, cb, p__14346);
  };
  request_data.cljs$core$IFn$_invoke$arity$variadic = request_data__delegate;
  return request_data;
}();
floor16.datum.request_cache = function request_cache(dict_key, abs_path, cb, no_cache_QMARK_) {
  if (cljs.core.truth_(no_cache_QMARK_)) {
    return floor16.datum.request_data.call(null, dict_key, function(p1__14350_SHARP_) {
      return cb.call(null, (new cljs.core.Keyword(null, "items", "items", 1114430258)).cljs$core$IFn$_invoke$arity$1(p1__14350_SHARP_));
    });
  } else {
    var data = cljs.core.get_in.call(null, cljs.core.deref.call(null, floor16.datum.app.call(null)), abs_path);
    if (cljs.core.empty_QMARK_.call(null, data)) {
      return floor16.datum.request_data.call(null, dict_key, function(p1__14351_SHARP_) {
        return cb.call(null, cljs.core.get_in.call(null, cljs.core.swap_BANG_.call(null, floor16.datum.app.call(null), cljs.core.assoc_in, abs_path, (new cljs.core.Keyword(null, "items", "items", 1114430258)).cljs$core$IFn$_invoke$arity$1(p1__14351_SHARP_)), abs_path));
      });
    } else {
      return cb.call(null, (new cljs.core.Keyword(null, "items", "items", 1114430258)).cljs$core$IFn$_invoke$arity$1(data));
    }
  }
};
floor16.datum.first_for = function first_for(kw, v, items) {
  return cljs.core.first.call(null, cljs.core.filter.call(null, function(p1__14352_SHARP_) {
    return cljs.core._EQ_.call(null, kw.call(null, p1__14352_SHARP_), v);
  }, items));
};
floor16.datum.dict = function() {
  var dict__delegate = function(dict_key, p__14354) {
    var vec__14360 = p__14354;
    var map__14361 = cljs.core.nth.call(null, vec__14360, 0, null);
    var map__14361__$1 = cljs.core.seq_QMARK_.call(null, map__14361) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14361) : map__14361;
    var no_cache_QMARK_ = cljs.core.get.call(null, map__14361__$1, new cljs.core.Keyword(null, "no-cache?", "no-cache?", 4150707707));
    var dc = cljs.core.get.call(null, map__14361__$1, new cljs.core.Keyword(null, "dc", "dc", 1013907441));
    var dn = cljs.core.get.call(null, map__14361__$1, new cljs.core.Keyword(null, "dn", "dn", 1013907452));
    var dk = cljs.core.get.call(null, map__14361__$1, new cljs.core.Keyword(null, "dk", "dk", 1013907449));
    var abs_path = floor16.datum.path_to.call(null, dict_key);
    var dk__$1 = function() {
      var or__3403__auto__ = dk;
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return new cljs.core.Keyword(null, "id", "id", 1013907597);
      }
    }();
    var dn__$1 = function() {
      var or__3403__auto__ = dn;
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return new cljs.core.Keyword(null, "name", "name", 1017277949);
      }
    }();
    var dc__$1 = function() {
      var or__3403__auto__ = dc;
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return new cljs.core.Keyword(null, "code", "code", 1016963423);
      }
    }();
    if (typeof floor16.datum.t14362 !== "undefined") {
    } else {
      floor16.datum.t14362 = function(abs_path, dict_key, dc, dict, vec__14360, dn, no_cache_QMARK_, p__14354, map__14361, dk, meta14363) {
        this.abs_path = abs_path;
        this.dict_key = dict_key;
        this.dc = dc;
        this.dict = dict;
        this.vec__14360 = vec__14360;
        this.dn = dn;
        this.no_cache_QMARK_ = no_cache_QMARK_;
        this.p__14354 = p__14354;
        this.map__14361 = map__14361;
        this.dk = dk;
        this.meta14363 = meta14363;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      floor16.datum.t14362.cljs$lang$type = true;
      floor16.datum.t14362.cljs$lang$ctorStr = "floor16.datum/t14362";
      floor16.datum.t14362.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
        return cljs.core._write.call(null, writer__3971__auto__, "floor16.datum/t14362");
      };
      floor16.datum.t14362.prototype.floor16$datum$IDictionary$ = true;
      floor16.datum.t14362.prototype.floor16$datum$IDictionary$load_all$arity$2 = function(this$, cb) {
        var self__ = this;
        var this$__$1 = this;
        return floor16.datum.request_cache.call(null, self__.dict_key, self__.abs_path, cb, self__.no_cache_QMARK_);
      };
      floor16.datum.t14362.prototype.floor16$datum$IDictionary$load_all$arity$3 = function(this$, owner, k) {
        var self__ = this;
        var this$__$1 = this;
        return floor16.datum.request_cache.call(null, self__.dict_key, self__.abs_path, function(p1__14353_SHARP_) {
          return om.core.set_state_BANG_.call(null, owner, k, p1__14353_SHARP_);
        }, self__.no_cache_QMARK_);
      };
      floor16.datum.t14362.prototype.floor16$datum$IDictionary$get_all$arity$1 = function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, floor16.datum.app.call(null)), self__.abs_path);
      };
      floor16.datum.t14362.prototype.floor16$datum$IHasCode$ = true;
      floor16.datum.t14362.prototype.floor16$datum$IHasCode$dcode$arity$1 = function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return self__.dc;
      };
      floor16.datum.t14362.prototype.floor16$datum$IHasCode$code_by_key$arity$2 = function(this$, k) {
        var self__ = this;
        var this$__$1 = this;
        return self__.dc.call(null, floor16.datum.get_by_key.call(null, this$__$1, k));
      };
      floor16.datum.t14362.prototype.floor16$datum$IHasCode$get_by_code$arity$2 = function(this$, c) {
        var self__ = this;
        var this$__$1 = this;
        return floor16.datum.first_for.call(null, self__.dc, c, floor16.datum.get_all.call(null, this$__$1));
      };
      floor16.datum.t14362.prototype.floor16$datum$IHasCode$key_by_code$arity$2 = function(this$, c) {
        var self__ = this;
        var this$__$1 = this;
        return self__.dk.call(null, floor16.datum.get_by_code.call(null, this$__$1, c));
      };
      floor16.datum.t14362.prototype.floor16$datum$IHasName$ = true;
      floor16.datum.t14362.prototype.floor16$datum$IHasName$dname$arity$1 = function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return self__.dn;
      };
      floor16.datum.t14362.prototype.floor16$datum$IHasName$name_by_key$arity$2 = function(this$, k) {
        var self__ = this;
        var this$__$1 = this;
        return self__.dn.call(null, floor16.datum.get_by_key.call(null, this$__$1, k));
      };
      floor16.datum.t14362.prototype.floor16$datum$IIdentity$ = true;
      floor16.datum.t14362.prototype.floor16$datum$IIdentity$dkey$arity$1 = function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return self__.dk;
      };
      floor16.datum.t14362.prototype.floor16$datum$IIdentity$get_by_key$arity$2 = function(this$, k) {
        var self__ = this;
        var this$__$1 = this;
        return floor16.datum.first_for.call(null, self__.dk, k, floor16.datum.get_all.call(null, this$__$1));
      };
      floor16.datum.t14362.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14364) {
        var self__ = this;
        var _14364__$1 = this;
        return self__.meta14363;
      };
      floor16.datum.t14362.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14364, meta14363__$1) {
        var self__ = this;
        var _14364__$1 = this;
        return new floor16.datum.t14362(self__.abs_path, self__.dict_key, self__.dc, self__.dict, self__.vec__14360, self__.dn, self__.no_cache_QMARK_, self__.p__14354, self__.map__14361, self__.dk, meta14363__$1);
      };
      floor16.datum.__GT_t14362 = function __GT_t14362(abs_path__$1, dict_key__$1, dc__$2, dict__$1, vec__14360__$1, dn__$2, no_cache_QMARK___$1, p__14354__$1, map__14361__$2, dk__$2, meta14363) {
        return new floor16.datum.t14362(abs_path__$1, dict_key__$1, dc__$2, dict__$1, vec__14360__$1, dn__$2, no_cache_QMARK___$1, p__14354__$1, map__14361__$2, dk__$2, meta14363);
      };
    }
    return new floor16.datum.t14362(abs_path, dict_key, dc__$1, dict, vec__14360, dn__$1, no_cache_QMARK_, p__14354, map__14361__$1, dk__$1, null);
  };
  var dict = function(dict_key, var_args) {
    var p__14354 = null;
    if (arguments.length > 1) {
      p__14354 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dict__delegate.call(this, dict_key, p__14354);
  };
  dict.cljs$lang$maxFixedArity = 1;
  dict.cljs$lang$applyTo = function(arglist__14365) {
    var dict_key = cljs.core.first(arglist__14365);
    var p__14354 = cljs.core.rest(arglist__14365);
    return dict__delegate(dict_key, p__14354);
  };
  dict.cljs$core$IFn$_invoke$arity$variadic = dict__delegate;
  return dict;
}();
floor16.datum.kconj = function kconj(korks, k) {
  if (korks == null) {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [k], null);
  } else {
    if (korks instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks, k], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.conj.call(null, korks, k);
      } else {
        return null;
      }
    }
  }
};
floor16.datum.res = function() {
  var res__delegate = function(res_key, p__14368) {
    var vec__14376 = p__14368;
    var map__14377 = cljs.core.nth.call(null, vec__14376, 0, null);
    var map__14377__$1 = cljs.core.seq_QMARK_.call(null, map__14377) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14377) : map__14377;
    var dk = cljs.core.get.call(null, map__14377__$1, new cljs.core.Keyword(null, "dk", "dk", 1013907449));
    var dk__$1 = function() {
      var or__3403__auto__ = dk;
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return new cljs.core.Keyword(null, "id", "id", 1013907597);
      }
    }();
    if (typeof floor16.datum.t14378 !== "undefined") {
    } else {
      floor16.datum.t14378 = function(dk, map__14377, vec__14376, p__14368, res_key, res, meta14379) {
        this.dk = dk;
        this.map__14377 = map__14377;
        this.vec__14376 = vec__14376;
        this.p__14368 = p__14368;
        this.res_key = res_key;
        this.res = res;
        this.meta14379 = meta14379;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      floor16.datum.t14378.cljs$lang$type = true;
      floor16.datum.t14378.cljs$lang$ctorStr = "floor16.datum/t14378";
      floor16.datum.t14378.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
        return cljs.core._write.call(null, writer__3971__auto__, "floor16.datum/t14378");
      };
      floor16.datum.t14378.prototype.floor16$datum$IResource$ = true;
      floor16.datum.t14378.prototype.floor16$datum$IResource$load_by_query$arity$3 = function(this$, q, cursor) {
        var self__ = this;
        var this$__$1 = this;
        return floor16.datum.load_by_query.call(null, this$__$1, q, cursor, null);
      };
      floor16.datum.t14378.prototype.floor16$datum$IResource$load_by_query$arity$4 = function(this$, q, cursor, korks) {
        var self__ = this;
        var this$__$1 = this;
        cljs.core.println.call(null, "(kconj korks :loading): ", floor16.datum.kconj.call(null, korks, new cljs.core.Keyword(null, "loading", "loading", 1350554798)));
        om.core.update_BANG_.call(null, cursor, floor16.datum.kconj.call(null, korks, new cljs.core.Keyword(null, "loading", "loading", 1350554798)), true);
        return floor16.datum.request_data.call(null, self__.res_key, function(p1__14366_SHARP_) {
          if (cljs.core.truth_(korks)) {
            return om.core.update_BANG_.call(null, cursor, korks, p1__14366_SHARP_);
          } else {
            return om.core.update_BANG_.call(null, cursor, p1__14366_SHARP_);
          }
        }, q);
      };
      floor16.datum.t14378.prototype.floor16$datum$IResource$load_by_query$arity$2 = function(this$, p__14381) {
        var self__ = this;
        var map__14382 = p__14381;
        var map__14382__$1 = cljs.core.seq_QMARK_.call(null, map__14382) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14382) : map__14382;
        var cntx = map__14382__$1;
        var data_path = cljs.core.get.call(null, map__14382__$1, new cljs.core.Keyword(null, "data-path", "data-path", 604226522));
        var query_path = cljs.core.get.call(null, map__14382__$1, new cljs.core.Keyword(null, "query-path", "query-path", 799448444));
        var this$__$1 = this;
        cljs.core.swap_BANG_.call(null, floor16.datum.app.call(null), cljs.core.assoc_in, floor16.datum.kconj.call(null, data_path, new cljs.core.Keyword(null, "loading", "loading", 1350554798)), true);
        return floor16.datum.request_data.call(null, self__.res_key, function(p1__14367_SHARP_) {
          return cljs.core.swap_BANG_.call(null, floor16.datum.app.call(null), cljs.core.assoc_in, data_path, p1__14367_SHARP_);
        }, cljs.core.get_in.call(null, cljs.core.deref.call(null, floor16.datum.app.call(null)), query_path));
      };
      floor16.datum.t14378.prototype.floor16$datum$IIdentity$ = true;
      floor16.datum.t14378.prototype.floor16$datum$IIdentity$dkey$arity$1 = function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return self__.dk;
      };
      floor16.datum.t14378.prototype.floor16$datum$IIdentity$get_by_key$arity$2 = function(this$, k) {
        var self__ = this;
        var this$__$1 = this;
        return null;
      };
      floor16.datum.t14378.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14380) {
        var self__ = this;
        var _14380__$1 = this;
        return self__.meta14379;
      };
      floor16.datum.t14378.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14380, meta14379__$1) {
        var self__ = this;
        var _14380__$1 = this;
        return new floor16.datum.t14378(self__.dk, self__.map__14377, self__.vec__14376, self__.p__14368, self__.res_key, self__.res, meta14379__$1);
      };
      floor16.datum.__GT_t14378 = function __GT_t14378(dk__$2, map__14377__$2, vec__14376__$1, p__14368__$1, res_key__$1, res__$1, meta14379) {
        return new floor16.datum.t14378(dk__$2, map__14377__$2, vec__14376__$1, p__14368__$1, res_key__$1, res__$1, meta14379);
      };
    }
    return new floor16.datum.t14378(dk__$1, map__14377__$1, vec__14376, p__14368, res_key, res, null);
  };
  var res = function(res_key, var_args) {
    var p__14368 = null;
    if (arguments.length > 1) {
      p__14368 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return res__delegate.call(this, res_key, p__14368);
  };
  res.cljs$lang$maxFixedArity = 1;
  res.cljs$lang$applyTo = function(arglist__14383) {
    var res_key = cljs.core.first(arglist__14383);
    var p__14368 = cljs.core.rest(arglist__14383);
    return res__delegate(res_key, p__14368);
  };
  res.cljs$core$IFn$_invoke$arity$variadic = res__delegate;
  return res;
}();
floor16.datum.current_for = function current_for(id) {
  var items = cljs.core.get_in.call(null, cljs.core.deref.call(null, floor16.datum.app.call(null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", 1016980252), new cljs.core.Keyword(null, "items", "items", 1114430258)], null));
  var i = floor16.datum.first_for.call(null, new cljs.core.Keyword(null, "id", "id", 1013907597), id, items);
  var surrogate = cljs.core.map_QMARK_.call(null, i) ? (new cljs.core.Keyword(null, "surrogate", "surrogate", 2826021450)).cljs$core$IFn$_invoke$arity$1(i) : null;
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", 1014010321), id, new cljs.core.Keyword(null, "surrogate", "surrogate", 2826021450), surrogate, new cljs.core.Keyword(null, "data", "data", 1016980252), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "loading", "loading", 1350554798), true], null)], null);
};
goog.provide("secretary.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
secretary.core.IRouteMatches = function() {
  var obj18350 = {};
  return obj18350;
}();
secretary.core.route_matches = function route_matches(this$, route) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.secretary$core$IRouteMatches$route_matches$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.secretary$core$IRouteMatches$route_matches$arity$2(this$, route);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = secretary.core.route_matches[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = secretary.core.route_matches["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRouteMatches.route-matches", this$);
        }
      }
    }().call(null, this$, route);
  }
};
secretary.core.IRenderRoute = function() {
  var obj18352 = {};
  return obj18352;
}();
secretary.core.render_route = function() {
  var render_route = null;
  var render_route__1 = function(this$) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.secretary$core$IRenderRoute$render_route$arity$1;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.secretary$core$IRenderRoute$render_route$arity$1(this$);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = secretary.core.render_route[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = secretary.core.render_route["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IRenderRoute.render-route", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var render_route__2 = function(this$, params) {
    if (function() {
      var and__3391__auto__ = this$;
      if (and__3391__auto__) {
        return this$.secretary$core$IRenderRoute$render_route$arity$2;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return this$.secretary$core$IRenderRoute$render_route$arity$2(this$, params);
    } else {
      var x__4030__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3403__auto__ = secretary.core.render_route[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = secretary.core.render_route["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IRenderRoute.render-route", this$);
          }
        }
      }().call(null, this$, params);
    }
  };
  render_route = function(this$, params) {
    switch(arguments.length) {
      case 1:
        return render_route__1.call(this, this$);
      case 2:
        return render_route__2.call(this, this$, params);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  render_route.cljs$core$IFn$_invoke$arity$1 = render_route__1;
  render_route.cljs$core$IFn$_invoke$arity$2 = render_route__2;
  return render_route;
}();
secretary.core._STAR_config_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "prefix", "prefix", 4328760836), ""], null));
secretary.core.get_config = function get_config(path) {
  var path__$1 = cljs.core.sequential_QMARK_.call(null, path) ? path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null);
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, secretary.core._STAR_config_STAR_), path__$1);
};
secretary.core.set_config_BANG_ = function set_config_BANG_(path, val) {
  var path__$1 = cljs.core.sequential_QMARK_.call(null, path) ? path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null);
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_config_STAR_, cljs.core.assoc_in, path__$1, val);
};
secretary.core.encode = encodeURIComponent;
secretary.core.decode = decodeURIComponent;
secretary.core.encode_query_params = function encode_query_params(query_params) {
  return clojure.string.join.call(null, "\x26", cljs.core.map.call(null, function(p__18355) {
    var vec__18356 = p__18355;
    var k = cljs.core.nth.call(null, vec__18356, 0, null);
    var v = cljs.core.nth.call(null, vec__18356, 1, null);
    return[cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str("\x3d"), cljs.core.str(secretary.core.encode.call(null, v instanceof cljs.core.Keyword ? cljs.core.name.call(null, v) : [cljs.core.str(v)].join("")))].join("");
  }, query_params));
};
secretary.core.decode_query_params = function decode_query_params(query_string) {
  return cljs.core.reduce.call(null, function(m, param) {
    var vec__18358 = clojure.string.split.call(null, param, /=/, 2);
    var k = cljs.core.nth.call(null, vec__18358, 0, null);
    var v = cljs.core.nth.call(null, vec__18358, 1, null);
    var v__$1 = secretary.core.decode.call(null, v);
    return cljs.core.assoc.call(null, m, k, v__$1);
  }, cljs.core.PersistentArrayMap.EMPTY, clojure.string.split.call(null, query_string, /&/));
};
secretary.core.encode_uri = function encode_uri(uri) {
  return clojure.string.join.call(null, "/", cljs.core.map.call(null, secretary.core.encode, clojure.string.split.call(null, uri, /\//)));
};
secretary.core.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var ms = cljs.core.re_matches.call(null, re, s);
  if (cljs.core.truth_(ms)) {
    if (cljs.core.sequential_QMARK_.call(null, ms)) {
      return ms;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ms, ms], null);
    }
  } else {
    return null;
  }
};
secretary.core.re_escape_chars = cljs.core.set.call(null, "\\.*+|?()[]{}$^");
secretary.core.re_escape = function re_escape(s) {
  return cljs.core.reduce.call(null, function(s__$1, c) {
    if (cljs.core.truth_(secretary.core.re_escape_chars.call(null, c))) {
      return[cljs.core.str(s__$1), cljs.core.str("\\"), cljs.core.str(c)].join("");
    } else {
      return[cljs.core.str(s__$1), cljs.core.str(c)].join("");
    }
  }, "", s);
};
secretary.core.lex_STAR_ = function lex_STAR_(s, clauses) {
  return cljs.core.some.call(null, function(p__18362) {
    var vec__18363 = p__18362;
    var re = cljs.core.nth.call(null, vec__18363, 0, null);
    var action = cljs.core.nth.call(null, vec__18363, 1, null);
    var temp__4092__auto__ = cljs.core.re_find.call(null, re, s);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__18364 = temp__4092__auto__;
      var m = cljs.core.nth.call(null, vec__18364, 0, null);
      var c = cljs.core.nth.call(null, vec__18364, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, cljs.core.count.call(null, m)), action.call(null, c)], null);
    } else {
      return null;
    }
  }, clauses);
};
secretary.core.lex_route = function lex_route(s, clauses) {
  var s__$1 = s;
  var pattern = "";
  var params = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      var vec__18367 = secretary.core.lex_STAR_.call(null, s__$1, clauses);
      var s__$2 = cljs.core.nth.call(null, vec__18367, 0, null);
      var vec__18368 = cljs.core.nth.call(null, vec__18367, 1, null);
      var r = cljs.core.nth.call(null, vec__18368, 0, null);
      var p = cljs.core.nth.call(null, vec__18368, 1, null);
      var G__18369 = s__$2;
      var G__18370 = [cljs.core.str(pattern), cljs.core.str(r)].join("");
      var G__18371 = cljs.core.conj.call(null, params, p);
      s__$1 = G__18369;
      pattern = G__18370;
      params = G__18371;
      continue;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.re_pattern.call(null, [cljs.core.str("^"), cljs.core.str(pattern), cljs.core.str("$")].join("")), cljs.core.remove.call(null, cljs.core.nil_QMARK_, params)], null);
    }
    break;
  }
};
secretary.core.compile_route = function compile_route(route) {
  var clauses = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^\*([^\s.:*\/]*)/, function(v) {
    var r = "(.*?)";
    var p = cljs.core.seq.call(null, v) ? cljs.core.keyword.call(null, v) : new cljs.core.Keyword(null, "*", "*", 1013904284);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, p], null);
  }], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^\:([^\s.:*\/]+)/, function(v) {
    var r = "([^,;?/]+)";
    var p = cljs.core.keyword.call(null, v);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, p], null);
  }], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^([^:*]+)/, function(v) {
    var r = secretary.core.re_escape.call(null, v);
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [r], null);
  }], null)], null);
  var vec__18377 = secretary.core.lex_route.call(null, route, clauses);
  var re = cljs.core.nth.call(null, vec__18377, 0, null);
  var params = cljs.core.nth.call(null, vec__18377, 1, null);
  if (typeof secretary.core.t18378 !== "undefined") {
  } else {
    secretary.core.t18378 = function(params, re, vec__18377, clauses, route, compile_route, meta18379) {
      this.params = params;
      this.re = re;
      this.vec__18377 = vec__18377;
      this.clauses = clauses;
      this.route = route;
      this.compile_route = compile_route;
      this.meta18379 = meta18379;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    secretary.core.t18378.cljs$lang$type = true;
    secretary.core.t18378.cljs$lang$ctorStr = "secretary.core/t18378";
    secretary.core.t18378.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "secretary.core/t18378");
    };
    secretary.core.t18378.prototype.secretary$core$IRouteMatches$ = true;
    secretary.core.t18378.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(_, route__$2) {
      var self__ = this;
      var ___$1 = this;
      var temp__4092__auto__ = secretary.core.re_matches_STAR_.call(null, self__.re, route__$2);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__18381 = temp__4092__auto__;
        var ___$2 = cljs.core.nth.call(null, vec__18381, 0, null);
        var ms = cljs.core.nthnext.call(null, vec__18381, 1);
        return cljs.core.merge_with.call(null, cljs.core.vector, cljs.core.PersistentArrayMap.EMPTY, cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, self__.params, cljs.core.map.call(null, secretary.core.decode, ms))));
      } else {
        return null;
      }
    };
    secretary.core.t18378.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18380) {
      var self__ = this;
      var _18380__$1 = this;
      return self__.meta18379;
    };
    secretary.core.t18378.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18380, meta18379__$1) {
      var self__ = this;
      var _18380__$1 = this;
      return new secretary.core.t18378(self__.params, self__.re, self__.vec__18377, self__.clauses, self__.route, self__.compile_route, meta18379__$1);
    };
    secretary.core.__GT_t18378 = function __GT_t18378(params__$1, re__$1, vec__18377__$1, clauses__$1, route__$1, compile_route__$1, meta18379) {
      return new secretary.core.t18378(params__$1, re__$1, vec__18377__$1, clauses__$1, route__$1, compile_route__$1, meta18379);
    };
  }
  return new secretary.core.t18378(params, re, vec__18377, clauses, route, compile_route, null);
};
secretary.core.render_route_STAR_ = function() {
  var render_route_STAR___delegate = function(obj, args) {
    if (function() {
      var G__18383 = obj;
      if (G__18383) {
        var bit__4053__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3403__auto__ = bit__4053__auto__;
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return G__18383.secretary$core$IRenderRoute$;
          }
        }())) {
          return true;
        } else {
          if (!G__18383.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, secretary.core.IRenderRoute, G__18383);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, secretary.core.IRenderRoute, G__18383);
      }
    }()) {
      return cljs.core.apply.call(null, secretary.core.render_route, obj, args);
    } else {
      return null;
    }
  };
  var render_route_STAR_ = function(obj, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return render_route_STAR___delegate.call(this, obj, args);
  };
  render_route_STAR_.cljs$lang$maxFixedArity = 1;
  render_route_STAR_.cljs$lang$applyTo = function(arglist__18384) {
    var obj = cljs.core.first(arglist__18384);
    var args = cljs.core.rest(arglist__18384);
    return render_route_STAR___delegate(obj, args);
  };
  render_route_STAR_.cljs$core$IFn$_invoke$arity$variadic = render_route_STAR___delegate;
  return render_route_STAR_;
}();
secretary.core._STAR_routes_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
secretary.core.add_route_BANG_ = function add_route_BANG_(obj, action) {
  var obj__$1 = typeof obj === "string" ? secretary.core.compile_route.call(null, obj) : obj;
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [obj__$1, action], null));
};
secretary.core.remove_route_BANG_ = function remove_route_BANG_(obj) {
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, function(rs) {
    return cljs.core.filterv.call(null, function(p__18387) {
      var vec__18388 = p__18387;
      var x = cljs.core.nth.call(null, vec__18388, 0, null);
      var _ = cljs.core.nth.call(null, vec__18388, 1, null);
      return cljs.core.not_EQ_.call(null, x, obj);
    }, rs);
  });
};
secretary.core.reset_routes_BANG_ = function reset_routes_BANG_() {
  return cljs.core.reset_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.PersistentVector.EMPTY);
};
secretary.core.locate_route = function locate_route(route) {
  return cljs.core.some.call(null, function(p__18391) {
    var vec__18392 = p__18391;
    var compiled_route = cljs.core.nth.call(null, vec__18392, 0, null);
    var action = cljs.core.nth.call(null, vec__18392, 1, null);
    var temp__4092__auto__ = secretary.core.route_matches.call(null, compiled_route, route);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var params = temp__4092__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [action, secretary.core.route_matches.call(null, compiled_route, route)], null);
    } else {
      return null;
    }
  }, cljs.core.deref.call(null, secretary.core._STAR_routes_STAR_));
};
secretary.core.dispatch_BANG_ = function dispatch_BANG_(uri) {
  var vec__18395 = clojure.string.split.call(null, uri, /\?/);
  var uri_path = cljs.core.nth.call(null, vec__18395, 0, null);
  var query_string = cljs.core.nth.call(null, vec__18395, 1, null);
  var query_params = cljs.core.truth_(query_string) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "query-params", "query-params", 1080249757), secretary.core.decode_query_params.call(null, query_string)], null) : null;
  var vec__18396 = secretary.core.locate_route.call(null, uri_path);
  var action = cljs.core.nth.call(null, vec__18396, 0, null);
  var params = cljs.core.nth.call(null, vec__18396, 1, null);
  var action__$1 = function() {
    var or__3403__auto__ = action;
    if (cljs.core.truth_(or__3403__auto__)) {
      return or__3403__auto__;
    } else {
      return cljs.core.identity;
    }
  }();
  var params__$1 = cljs.core.merge.call(null, params, query_params);
  return action__$1.call(null, params__$1);
};
RegExp.prototype.secretary$core$IRouteMatches$ = true;
RegExp.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(this$, route) {
  var this$__$1 = this;
  var temp__4092__auto__ = secretary.core.re_matches_STAR_.call(null, this$__$1, route);
  if (cljs.core.truth_(temp__4092__auto__)) {
    var vec__18397 = temp__4092__auto__;
    var _ = cljs.core.nth.call(null, vec__18397, 0, null);
    var ms = cljs.core.nthnext.call(null, vec__18397, 1);
    return cljs.core.vec.call(null, ms);
  } else {
    return null;
  }
};
secretary.core.IRouteMatches["string"] = true;
secretary.core.route_matches["string"] = function(this$, route) {
  return secretary.core.route_matches.call(null, secretary.core.compile_route.call(null, this$), route);
};
secretary.core.IRenderRoute["string"] = true;
secretary.core.render_route["string"] = function(this$) {
  return secretary.core.render_route.call(null, this$, cljs.core.PersistentArrayMap.EMPTY);
};
secretary.core.render_route["string"] = function(this$, params) {
  var map__18398 = params;
  var map__18398__$1 = cljs.core.seq_QMARK_.call(null, map__18398) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18398) : map__18398;
  var m = map__18398__$1;
  var query_params = cljs.core.get.call(null, map__18398__$1, new cljs.core.Keyword(null, "query-params", "query-params", 1080249757));
  var a = cljs.core.atom.call(null, m);
  var path = this$.replace(new RegExp(":[^\\s.:*/]+|\\*[^\\s.:*/]*", "g"), function(map__18398, map__18398__$1, m, query_params, a) {
    return function($1) {
      var lookup = cljs.core.keyword.call(null, cljs.core._EQ_.call(null, $1, "*") ? $1 : cljs.core.subs.call(null, $1, 1));
      var v = cljs.core.deref.call(null, a).call(null, lookup);
      var replacement = cljs.core.sequential_QMARK_.call(null, v) ? function() {
        cljs.core.swap_BANG_.call(null, a, cljs.core.assoc, lookup, cljs.core.next.call(null, v));
        return secretary.core.encode_uri.call(null, cljs.core.first.call(null, v));
      }() : cljs.core.truth_(v) ? secretary.core.encode_uri.call(null, v) : $1;
      return replacement;
    };
  }(map__18398, map__18398__$1, m, query_params, a));
  var path__$1 = [cljs.core.str(secretary.core.get_config.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", 4328760836)], null))), cljs.core.str(path)].join("");
  var temp__4090__auto__ = function() {
    var and__3391__auto__ = query_params;
    if (cljs.core.truth_(and__3391__auto__)) {
      return secretary.core.encode_query_params.call(null, query_params);
    } else {
      return and__3391__auto__;
    }
  }();
  if (cljs.core.truth_(temp__4090__auto__)) {
    var query_string = temp__4090__auto__;
    return[cljs.core.str(path__$1), cljs.core.str("?"), cljs.core.str(query_string)].join("");
  } else {
    return path__$1;
  }
};
goog.provide("floor16.navigation");
goog.require("cljs.core");
goog.require("goog.history.Html5History.TokenTransformer");
goog.require("goog.events");
goog.require("floor16.datum");
goog.require("floor16.global");
goog.require("goog.events.EventType");
goog.require("floor16.datum");
goog.require("secretary.core");
goog.require("om.core");
goog.require("om.core");
goog.require("goog.history.Html5History");
goog.require("floor16.global");
goog.require("goog.history.EventType");
goog.require("secretary.core");
goog.require("goog.events");
if (cljs.core.truth_(floor16.global.server_side_QMARK_)) {
} else {
  cljs.core.enable_console_print_BANG_.call(null);
}
floor16.navigation.system = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "server-state?", "server-state?", 715053834), true], null));
floor16.navigation.app = function app() {
  return(new cljs.core.Keyword(null, "app", "app", 1014001043)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.navigation.system));
};
floor16.navigation.decode_query = function decode_query(qstr) {
  try {
    return cljs.reader.read_string.call(null, qstr);
  } catch (e18711) {
    if (e18711 instanceof Object) {
      var err = e18711;
      cljs.core.println.call(null, "Error while parsing query string: ", err);
      return cljs.core.PersistentArrayMap.EMPTY;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e18711;
      } else {
        return null;
      }
    }
  }
};
floor16.navigation.encode_query = function encode_query(q) {
  return cljs.core.pr_str.call(null, q);
};
floor16.navigation.compose_data_key = function compose_data_key(r) {
  return function(p__18714) {
    var map__18715 = p__18714;
    var map__18715__$1 = cljs.core.seq_QMARK_.call(null, map__18715) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18715) : map__18715;
    var context = map__18715__$1;
    var result_params = cljs.core.get.call(null, map__18715__$1, new cljs.core.Keyword(null, "result-params", "result-params", 3023414440));
    var url_params = cljs.core.get.call(null, map__18715__$1, new cljs.core.Keyword(null, "url-params", "url-params", 3432736534));
    var mode_conf = cljs.core.get.call(null, map__18715__$1, new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328));
    if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "view-type", "view-type", 3689695444)).cljs$core$IFn$_invoke$arity$1(mode_conf), new cljs.core.Keyword(null, "item-view", "item-view", 3121596561))) {
      var dk = (new cljs.core.Keyword(null, "data-key", "data-key", 2801799470)).cljs$core$IFn$_invoke$arity$1(mode_conf);
      var dv = dk.call(null, url_params);
      if (cljs.core.truth_(dv)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Data-key ("), cljs.core.str(dk), cljs.core.str(") value is missed in url-params: "), cljs.core.str(url_params)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "dv", "dv", -1640528309, null)))].join(""));
      }
      return r.call(null, cljs.core.assoc_in.call(null, context, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "result-params", "result-params", 3023414440), dk], null), dv));
    } else {
      return r.call(null, context);
    }
  };
};
floor16.navigation.compose_raw_query = function compose_raw_query(r) {
  return function(p__18718) {
    var map__18719 = p__18718;
    var map__18719__$1 = cljs.core.seq_QMARK_.call(null, map__18719) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18719) : map__18719;
    var context = map__18719__$1;
    var result_params = cljs.core.get.call(null, map__18719__$1, new cljs.core.Keyword(null, "result-params", "result-params", 3023414440));
    var url_params = cljs.core.get.call(null, map__18719__$1, new cljs.core.Keyword(null, "url-params", "url-params", 3432736534));
    var mode_conf = cljs.core.get.call(null, map__18719__$1, new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328));
    if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "view-type", "view-type", 3689695444)).cljs$core$IFn$_invoke$arity$1(mode_conf), new cljs.core.Keyword(null, "list", "list", 1017226256))) {
      return r.call(null, cljs.core.empty_QMARK_.call(null, url_params) ? context : cljs.core.assoc_in.call(null, context, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "result-params", "result-params", 3023414440), new cljs.core.Keyword(null, "query-params", "query-params", 1080249757), new cljs.core.Keyword(null, "q", "q", 1013904355)], null), floor16.navigation.encode_query.call(null, url_params)));
    } else {
      return r.call(null, context);
    }
  };
};
floor16.navigation.compose_page_number = function compose_page_number(r) {
  return function(p__18723) {
    var map__18724 = p__18723;
    var map__18724__$1 = cljs.core.seq_QMARK_.call(null, map__18724) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18724) : map__18724;
    var context = map__18724__$1;
    var result_params = cljs.core.get.call(null, map__18724__$1, new cljs.core.Keyword(null, "result-params", "result-params", 3023414440));
    var url_params = cljs.core.get.call(null, map__18724__$1, new cljs.core.Keyword(null, "url-params", "url-params", 3432736534));
    var mode_conf = cljs.core.get.call(null, map__18724__$1, new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328));
    var o_page = cljs.core.get.call(null, map__18724__$1, new cljs.core.Keyword(null, "o-page", "o-page", 4236731551));
    var url_update_QMARK_ = cljs.core.get.call(null, map__18724__$1, new cljs.core.Keyword(null, "url-update?", "url-update?", 3542326698));
    if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "view-type", "view-type", 3689695444)).cljs$core$IFn$_invoke$arity$1(mode_conf), new cljs.core.Keyword(null, "list", "list", 1017226256))) {
      var map__18725 = url_params;
      var map__18725__$1 = cljs.core.seq_QMARK_.call(null, map__18725) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18725) : map__18725;
      var op = cljs.core.get.call(null, map__18725__$1, new cljs.core.Keyword(null, "o-page", "o-page", 4236731551));
      var page = cljs.core.truth_(url_update_QMARK_) ? 0 : function() {
        var or__3403__auto__ = o_page;
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return op;
        }
      }();
      return r.call(null, cljs.core.truth_(page) ? cljs.core.assoc_in.call(null, cljs.core.assoc.call(null, context, new cljs.core.Keyword(null, "url-params", "url-params", 3432736534), cljs.core.dissoc.call(null, url_params, new cljs.core.Keyword(null, "o-page", "o-page", 4236731551))), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "result-params", "result-params", 3023414440), new cljs.core.Keyword(null, "query-params", "query-params", 
      1080249757), new cljs.core.Keyword(null, "page", "page", 1017337345)], null), page) : context);
    } else {
      return r.call(null, context);
    }
  };
};
floor16.navigation.render_url = function render_url(p__18726) {
  var map__18728 = p__18726;
  var map__18728__$1 = cljs.core.seq_QMARK_.call(null, map__18728) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18728) : map__18728;
  var context = map__18728__$1;
  var result_params = cljs.core.get.call(null, map__18728__$1, new cljs.core.Keyword(null, "result-params", "result-params", 3023414440));
  var mode_conf = cljs.core.get.call(null, map__18728__$1, new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328));
  return secretary.core.render_route.call(null, (new cljs.core.Keyword(null, "route", "route", 1122608571)).cljs$core$IFn$_invoke$arity$1(mode_conf), result_params);
};
floor16.navigation.url_to = function url_to(p__18729) {
  var map__18731 = p__18729;
  var map__18731__$1 = cljs.core.seq_QMARK_.call(null, map__18731) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18731) : map__18731;
  var context = map__18731__$1;
  var mode = cljs.core.get.call(null, map__18731__$1, new cljs.core.Keyword(null, "mode", "mode", 1017261333));
  var mconf = mode.call(null, (new cljs.core.Keyword(null, "app-modes", "app-modes", 1419288566)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.navigation.system)));
  if (cljs.core.truth_(mconf)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("App-mode conf was not found: "), cljs.core.str(mode)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "mconf", "mconf", -1536808246, null)))].join(""));
  }
  return(new cljs.core.Keyword(null, "url-composer", "url-composer", 4458618672)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.navigation.system)).call(null, cljs.core.merge.call(null, context, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328), mconf, new cljs.core.Keyword(null, "result-params", "result-params", 3023414440), cljs.core.PersistentArrayMap.EMPTY], null)));
};
floor16.navigation.handle_history_event = function handle_history_event(token) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "server-state?", "server-state?", 715053834)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.navigation.system)))) {
    return cljs.core.swap_BANG_.call(null, floor16.navigation.system, cljs.core.dissoc, new cljs.core.Keyword(null, "server-state?", "server-state?", 715053834));
  } else {
    return secretary.core.dispatch_BANG_.call(null, [cljs.core.str("/"), cljs.core.str(token)].join(""));
  }
};
floor16.navigation.retrieve_token = function retrieve_token(pathPrefix, location) {
  return[cljs.core.str(cljs.core.subs.call(null, location.pathname, cljs.core.count.call(null, pathPrefix))), cljs.core.str(location.search)].join("");
};
floor16.navigation.create_url = function create_url(token, pathPrefix, location) {
  return[cljs.core.str(pathPrefix), cljs.core.str(token)].join("");
};
floor16.navigation.hTokenTransformer = function hTokenTransformer() {
  return goog.base(this);
};
goog.inherits(floor16.navigation.hTokenTransformer, goog.history.Html5History.TokenTransformer);
floor16.navigation.hTokenTransformer.prototype.retrieveToken = floor16.navigation.retrieve_token;
floor16.navigation.hTokenTransformer.prototype.createUrl = floor16.navigation.create_url;
floor16.navigation.init_history = function init_history() {
  floor16.navigation.history = new goog.history.Html5History(null, new floor16.navigation.hTokenTransformer);
  floor16.navigation.history.setUseFragment(false);
  floor16.navigation.history.setEnabled(true);
  return goog.events.listen(floor16.navigation.history, goog.history.EventType.NAVIGATE, function(p1__18732_SHARP_) {
    return floor16.navigation.handle_history_event.call(null, p1__18732_SHARP_.token);
  });
};
floor16.navigation.handle_query_params = function handle_query_params(h) {
  return function(p__18736) {
    var map__18737 = p__18736;
    var map__18737__$1 = cljs.core.seq_QMARK_.call(null, map__18737) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18737) : map__18737;
    var context = map__18737__$1;
    var result_state = cljs.core.get.call(null, map__18737__$1, new cljs.core.Keyword(null, "result-state", "result-state", 4407183955));
    var params = cljs.core.get.call(null, map__18737__$1, new cljs.core.Keyword(null, "params", "params", 4313443576));
    var mode_conf = cljs.core.get.call(null, map__18737__$1, new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328));
    var mode = cljs.core.get.call(null, map__18737__$1, new cljs.core.Keyword(null, "mode", "mode", 1017261333));
    var map__18738 = mode_conf;
    var map__18738__$1 = cljs.core.seq_QMARK_.call(null, map__18738) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18738) : map__18738;
    var query_path = cljs.core.get.call(null, map__18738__$1, new cljs.core.Keyword(null, "query-path", "query-path", 799448444));
    var view_type = cljs.core.get.call(null, map__18738__$1, new cljs.core.Keyword(null, "view-type", "view-type", 3689695444));
    var query_params = (new cljs.core.Keyword(null, "query-params", "query-params", 1080249757)).cljs$core$IFn$_invoke$arity$1(params);
    var qstr = cljs.core.get.call(null, query_params, "q");
    var page = cljs.core.get.call(null, query_params, "page");
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "list", "list", 1017226256), view_type)) {
      return h.call(null, cljs.core.update_in.call(null, context, cljs.core.cons.call(null, new cljs.core.Keyword(null, "result-state", "result-state", 4407183955), query_path), cljs.core.merge, cljs.core.truth_(qstr) ? floor16.navigation.decode_query.call(null, qstr) : null, cljs.core.truth_(page) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "o-page", "o-page", 4236731551), cljs.reader.read_string.call(null, page)], null) : null));
    } else {
      return h.call(null, context);
    }
  };
};
floor16.navigation.handle_data_key = function handle_data_key(h) {
  return function(p__18741) {
    var map__18742 = p__18741;
    var map__18742__$1 = cljs.core.seq_QMARK_.call(null, map__18742) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18742) : map__18742;
    var context = map__18742__$1;
    var params = cljs.core.get.call(null, map__18742__$1, new cljs.core.Keyword(null, "params", "params", 4313443576));
    var mode_conf = cljs.core.get.call(null, map__18742__$1, new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328));
    var mode = cljs.core.get.call(null, map__18742__$1, new cljs.core.Keyword(null, "mode", "mode", 1017261333));
    if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "view-type", "view-type", 3689695444)).cljs$core$IFn$_invoke$arity$1(mode_conf), new cljs.core.Keyword(null, "item-view", "item-view", 3121596561))) {
      var dk = (new cljs.core.Keyword(null, "data-key", "data-key", 2801799470)).cljs$core$IFn$_invoke$arity$1(mode_conf);
      var dv = dk.call(null, params);
      if (cljs.core.truth_(dv)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Data-key ("), cljs.core.str(dk), cljs.core.str(") value is missed in params: "), cljs.core.str(params)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "dv", "dv", -1640528309, null)))].join(""));
      }
      return h.call(null, cljs.core.assoc_in.call(null, context, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "result-state", "result-state", 4407183955), new cljs.core.Keyword(null, "current", "current", 2140844267)], null), floor16.datum.current_for.call(null, dv)));
    } else {
      return h.call(null, context);
    }
  };
};
floor16.navigation.handle_route = function handle_route(p__18743) {
  var map__18746 = p__18743;
  var map__18746__$1 = cljs.core.seq_QMARK_.call(null, map__18746) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18746) : map__18746;
  var context = map__18746__$1;
  var result_state = cljs.core.get.call(null, map__18746__$1, new cljs.core.Keyword(null, "result-state", "result-state", 4407183955));
  var mode_conf = cljs.core.get.call(null, map__18746__$1, new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328));
  var mode = cljs.core.get.call(null, map__18746__$1, new cljs.core.Keyword(null, "mode", "mode", 1017261333));
  cljs.core.swap_BANG_.call(null, floor16.navigation.app.call(null), cljs.core.merge, cljs.core.assoc.call(null, result_state, new cljs.core.Keyword(null, "app-mode", "app-mode", 2135359809), mode));
  var map__18747 = mode_conf;
  var map__18747__$1 = cljs.core.seq_QMARK_.call(null, map__18747) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18747) : map__18747;
  var data_updater = cljs.core.get.call(null, map__18747__$1, new cljs.core.Keyword(null, "data-updater", "data-updater", 3159121176));
  var resource_key = cljs.core.get.call(null, map__18747__$1, new cljs.core.Keyword(null, "resource-key", "resource-key", 628364178));
  var query_path = cljs.core.get.call(null, map__18747__$1, new cljs.core.Keyword(null, "query-path", "query-path", 799448444));
  var data_path = cljs.core.get.call(null, map__18747__$1, new cljs.core.Keyword(null, "data-path", "data-path", 604226522));
  if (cljs.core.truth_(data_updater)) {
    return data_updater.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "resource-key", "resource-key", 628364178), resource_key, new cljs.core.Keyword(null, "query-path", "query-path", 799448444), query_path, new cljs.core.Keyword(null, "data-path", "data-path", 604226522), data_path], null));
  } else {
    return null;
  }
};
floor16.navigation.do_route = function do_route(p__18748) {
  var map__18750 = p__18748;
  var map__18750__$1 = cljs.core.seq_QMARK_.call(null, map__18750) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18750) : map__18750;
  var context = map__18750__$1;
  var mode_conf = cljs.core.get.call(null, map__18750__$1, new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328));
  var mode = cljs.core.get.call(null, map__18750__$1, new cljs.core.Keyword(null, "mode", "mode", 1017261333));
  if (cljs.core.truth_(mode_conf)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("App-mode conf was not found: "), cljs.core.str(mode)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "mode-conf", "mode-conf", 586063559, null)))].join(""));
  }
  return(new cljs.core.Keyword(null, "route-handler", "route-handler", 1903920952)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.navigation.system)).call(null, cljs.core.assoc.call(null, context, new cljs.core.Keyword(null, "result-state", "result-state", 4407183955), cljs.core.PersistentArrayMap.EMPTY));
};
floor16.navigation.default_data_load = function default_data_load(p__18751) {
  var map__18753 = p__18751;
  var map__18753__$1 = cljs.core.seq_QMARK_.call(null, map__18753) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18753) : map__18753;
  var data_path = cljs.core.get.call(null, map__18753__$1, new cljs.core.Keyword(null, "data-path", "data-path", 604226522));
  var query_path = cljs.core.get.call(null, map__18753__$1, new cljs.core.Keyword(null, "query-path", "query-path", 799448444));
  var resource_key = cljs.core.get.call(null, map__18753__$1, new cljs.core.Keyword(null, "resource-key", "resource-key", 628364178));
  var res = floor16.datum.res.call(null, resource_key);
  return floor16.datum.load_by_query.call(null, res, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "query-path", "query-path", 799448444), query_path, new cljs.core.Keyword(null, "data-path", "data-path", 604226522), data_path], null));
};
floor16.navigation.init_routes = function init_routes(modes) {
  var seq__18766 = cljs.core.seq.call(null, modes);
  var chunk__18767 = null;
  var count__18768 = 0;
  var i__18769 = 0;
  while (true) {
    if (i__18769 < count__18768) {
      var vec__18770 = cljs.core._nth.call(null, chunk__18767, i__18769);
      var mode = cljs.core.nth.call(null, vec__18770, 0, null);
      var conf = cljs.core.nth.call(null, vec__18770, 1, null);
      var map__18771_18778 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "data-path", "data-path", 604226522), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", 1016980252)], null), new cljs.core.Keyword(null, "query-path", "query-path", 799448444), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "query", 
      "query", 1121848378)], null), new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "data-updater", "data-updater", 3159121176), cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "list", "list", 1017226256), (new cljs.core.Keyword(null, "view-type", "view-type", 3689695444)).cljs$core$IFn$_invoke$arity$1(conf)) ? floor16.navigation.default_data_load : null], null), conf);
      var map__18771_18779__$1 = cljs.core.seq_QMARK_.call(null, map__18771_18778) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18771_18778) : map__18771_18778;
      var mode_conf_18780 = map__18771_18779__$1;
      var view_type_18781 = cljs.core.get.call(null, map__18771_18779__$1, new cljs.core.Keyword(null, "view-type", "view-type", 3689695444));
      var route_18782 = cljs.core.get.call(null, map__18771_18779__$1, new cljs.core.Keyword(null, "route", "route", 1122608571));
      var action__9190__auto___18783 = function(seq__18766, chunk__18767, count__18768, i__18769, map__18771_18778, map__18771_18779__$1, mode_conf_18780, view_type_18781, route_18782, vec__18770, mode, conf) {
        return function(params__9191__auto__) {
          if (cljs.core.map_QMARK_.call(null, params__9191__auto__)) {
            var map__18772 = params__9191__auto__;
            var map__18772__$1 = cljs.core.seq_QMARK_.call(null, map__18772) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18772) : map__18772;
            var params = map__18772__$1;
            return floor16.navigation.do_route.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "mode", "mode", 1017261333), mode, new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328), mode_conf_18780, new cljs.core.Keyword(null, "params", "params", 4313443576), params], null));
          } else {
            if (cljs.core.vector_QMARK_.call(null, params__9191__auto__)) {
              var map__18773 = params__9191__auto__;
              var map__18773__$1 = cljs.core.seq_QMARK_.call(null, map__18773) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18773) : map__18773;
              var params = map__18773__$1;
              return floor16.navigation.do_route.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "mode", "mode", 1017261333), mode, new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328), mode_conf_18780, new cljs.core.Keyword(null, "params", "params", 4313443576), params], null));
            } else {
              return null;
            }
          }
        };
      }(seq__18766, chunk__18767, count__18768, i__18769, map__18771_18778, map__18771_18779__$1, mode_conf_18780, view_type_18781, route_18782, vec__18770, mode, conf);
      secretary.core.add_route_BANG_.call(null, cljs.core.identity.call(null, route_18782), action__9190__auto___18783);
      var G__18784 = seq__18766;
      var G__18785 = chunk__18767;
      var G__18786 = count__18768;
      var G__18787 = i__18769 + 1;
      seq__18766 = G__18784;
      chunk__18767 = G__18785;
      count__18768 = G__18786;
      i__18769 = G__18787;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__18766);
      if (temp__4092__auto__) {
        var seq__18766__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18766__$1)) {
          var c__4151__auto__ = cljs.core.chunk_first.call(null, seq__18766__$1);
          var G__18788 = cljs.core.chunk_rest.call(null, seq__18766__$1);
          var G__18789 = c__4151__auto__;
          var G__18790 = cljs.core.count.call(null, c__4151__auto__);
          var G__18791 = 0;
          seq__18766 = G__18788;
          chunk__18767 = G__18789;
          count__18768 = G__18790;
          i__18769 = G__18791;
          continue;
        } else {
          var vec__18774 = cljs.core.first.call(null, seq__18766__$1);
          var mode = cljs.core.nth.call(null, vec__18774, 0, null);
          var conf = cljs.core.nth.call(null, vec__18774, 1, null);
          var map__18775_18792 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "data-path", "data-path", 604226522), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", 1016980252)], null), new cljs.core.Keyword(null, "query-path", "query-path", 799448444), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "query", 
          "query", 1121848378)], null), new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "data-updater", "data-updater", 3159121176), cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "list", "list", 1017226256), (new cljs.core.Keyword(null, "view-type", "view-type", 3689695444)).cljs$core$IFn$_invoke$arity$1(conf)) ? floor16.navigation.default_data_load : null], null), conf);
          var map__18775_18793__$1 = cljs.core.seq_QMARK_.call(null, map__18775_18792) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18775_18792) : map__18775_18792;
          var mode_conf_18794 = map__18775_18793__$1;
          var view_type_18795 = cljs.core.get.call(null, map__18775_18793__$1, new cljs.core.Keyword(null, "view-type", "view-type", 3689695444));
          var route_18796 = cljs.core.get.call(null, map__18775_18793__$1, new cljs.core.Keyword(null, "route", "route", 1122608571));
          var action__9190__auto___18797 = function(seq__18766, chunk__18767, count__18768, i__18769, map__18775_18792, map__18775_18793__$1, mode_conf_18794, view_type_18795, route_18796, vec__18774, mode, conf, seq__18766__$1, temp__4092__auto__) {
            return function(params__9191__auto__) {
              if (cljs.core.map_QMARK_.call(null, params__9191__auto__)) {
                var map__18776 = params__9191__auto__;
                var map__18776__$1 = cljs.core.seq_QMARK_.call(null, map__18776) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18776) : map__18776;
                var params = map__18776__$1;
                return floor16.navigation.do_route.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "mode", "mode", 1017261333), mode, new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328), mode_conf_18794, new cljs.core.Keyword(null, "params", "params", 4313443576), params], null));
              } else {
                if (cljs.core.vector_QMARK_.call(null, params__9191__auto__)) {
                  var map__18777 = params__9191__auto__;
                  var map__18777__$1 = cljs.core.seq_QMARK_.call(null, map__18777) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18777) : map__18777;
                  var params = map__18777__$1;
                  return floor16.navigation.do_route.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "mode", "mode", 1017261333), mode, new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328), mode_conf_18794, new cljs.core.Keyword(null, "params", "params", 4313443576), params], null));
                } else {
                  return null;
                }
              }
            };
          }(seq__18766, chunk__18767, count__18768, i__18769, map__18775_18792, map__18775_18793__$1, mode_conf_18794, view_type_18795, route_18796, vec__18774, mode, conf, seq__18766__$1, temp__4092__auto__);
          secretary.core.add_route_BANG_.call(null, cljs.core.identity.call(null, route_18796), action__9190__auto___18797);
          var G__18798 = cljs.core.next.call(null, seq__18766__$1);
          var G__18799 = null;
          var G__18800 = 0;
          var G__18801 = 0;
          seq__18766 = G__18798;
          chunk__18767 = G__18799;
          count__18768 = G__18800;
          i__18769 = G__18801;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
floor16.navigation.init_nav = function init_nav(p__18802) {
  var map__18804 = p__18802;
  var map__18804__$1 = cljs.core.seq_QMARK_.call(null, map__18804) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18804) : map__18804;
  var conf = map__18804__$1;
  var server_state_QMARK_ = cljs.core.get.call(null, map__18804__$1, new cljs.core.Keyword(null, "server-state?", "server-state?", 715053834));
  var route_handler = cljs.core.get.call(null, map__18804__$1, new cljs.core.Keyword(null, "route-handler", "route-handler", 1903920952));
  var url_composer = cljs.core.get.call(null, map__18804__$1, new cljs.core.Keyword(null, "url-composer", "url-composer", 4458618672));
  var app_modes = cljs.core.get.call(null, map__18804__$1, new cljs.core.Keyword(null, "app-modes", "app-modes", 1419288566));
  var app_state = cljs.core.get.call(null, map__18804__$1, new cljs.core.Keyword(null, "app-state", "app-state", 1424976215));
  cljs.core.swap_BANG_.call(null, floor16.navigation.system, cljs.core.merge, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "app", "app", 1014001043), app_state, new cljs.core.Keyword(null, "app-modes", "app-modes", 1419288566), app_modes, new cljs.core.Keyword(null, "url-composer", "url-composer", 4458618672), function() {
    var or__3403__auto__ = url_composer;
    if (cljs.core.truth_(or__3403__auto__)) {
      return or__3403__auto__;
    } else {
      return floor16.navigation.compose_data_key.call(null, floor16.navigation.compose_page_number.call(null, floor16.navigation.compose_raw_query.call(null, floor16.navigation.render_url)));
    }
  }(), new cljs.core.Keyword(null, "route-handler", "route-handler", 1903920952), function() {
    var or__3403__auto__ = route_handler;
    if (cljs.core.truth_(or__3403__auto__)) {
      return or__3403__auto__;
    } else {
      return floor16.navigation.handle_query_params.call(null, floor16.navigation.handle_data_key.call(null, floor16.navigation.handle_route));
    }
  }()], null), server_state_QMARK_ == null ? null : new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "server-state?", "server-state?", 715053834), server_state_QMARK_], null));
  if (cljs.core.truth_(floor16.global.server_side_QMARK_)) {
  } else {
    floor16.navigation.init_history.call(null);
  }
  if (cljs.core.truth_(app_modes)) {
    return floor16.navigation.init_routes.call(null, app_modes);
  } else {
    return null;
  }
};
floor16.navigation.goto$ = function goto$(link) {
  return floor16.navigation.history.setToken(cljs.core._EQ_.call(null, "/", cljs.core.first.call(null, link)) ? cljs.core.subs.call(null, link, 1) : link);
};
floor16.navigation.url_update = function url_update(context) {
  return floor16.navigation.goto$.call(null, floor16.navigation.url_to.call(null, cljs.core.assoc.call(null, context, new cljs.core.Keyword(null, "url-update?", "url-update?", 3542326698), true)));
};
goog.provide("floor16.cookies");
goog.require("cljs.core");
floor16.cookies.utc_string_expires = function utc_string_expires(v) {
  if (typeof v === "number") {
    var d = new Date;
    var ed = d.getTime() + v * 1E3;
    d.setTime(ed);
    return d.toUTCString();
  } else {
    return v;
  }
};
floor16.cookies.cset = function() {
  var cset__delegate = function(kw, v, p__14384) {
    var vec__14387 = p__14384;
    var map__14388 = cljs.core.nth.call(null, vec__14387, 0, null);
    var map__14388__$1 = cljs.core.seq_QMARK_.call(null, map__14388) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14388) : map__14388;
    var secure = cljs.core.get.call(null, map__14388__$1, new cljs.core.Keyword(null, "secure", "secure", 4402597609));
    var domain = cljs.core.get.call(null, map__14388__$1, new cljs.core.Keyword(null, "domain", "domain", 3982673974));
    var path = cljs.core.get.call(null, map__14388__$1, new cljs.core.Keyword(null, "path", "path", 1017337751));
    var expires = cljs.core.get.call(null, map__14388__$1, new cljs.core.Keyword(null, "expires", "expires", 3999636134));
    var path__$1 = function() {
      var or__3403__auto__ = path;
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return "/";
      }
    }();
    var expires__$1 = cljs.core.truth_(expires) ? floor16.cookies.utc_string_expires.call(null, expires) : null;
    var v__$1 = window.encodeURIComponent(v);
    var n = cljs.core.name.call(null, kw);
    var ck = [cljs.core.str(n), cljs.core.str("\x3d"), cljs.core.str(v__$1), cljs.core.str(cljs.core.truth_(path__$1) ? [cljs.core.str("; path\x3d"), cljs.core.str(path__$1)].join("") : null), cljs.core.str(cljs.core.truth_(expires__$1) ? [cljs.core.str("; expires\x3d"), cljs.core.str(expires__$1)].join("") : null), cljs.core.str(cljs.core.truth_(domain) ? [cljs.core.str("; domain\x3d"), cljs.core.str(domain)].join("") : null), cljs.core.str(cljs.core.truth_(secure) ? [cljs.core.str("; secure\x3d"), 
    cljs.core.str(secure)].join("") : null)].join("");
    return document.cookie = ck;
  };
  var cset = function(kw, v, var_args) {
    var p__14384 = null;
    if (arguments.length > 2) {
      p__14384 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return cset__delegate.call(this, kw, v, p__14384);
  };
  cset.cljs$lang$maxFixedArity = 2;
  cset.cljs$lang$applyTo = function(arglist__14389) {
    var kw = cljs.core.first(arglist__14389);
    arglist__14389 = cljs.core.next(arglist__14389);
    var v = cljs.core.first(arglist__14389);
    var p__14384 = cljs.core.rest(arglist__14389);
    return cset__delegate(kw, v, p__14384);
  };
  cset.cljs$core$IFn$_invoke$arity$variadic = cset__delegate;
  return cset;
}();
floor16.cookies.cget = function cget(kw) {
  var n = cljs.core.name.call(null, kw);
  var re = new RegExp([cljs.core.str("(?:^|; )"), cljs.core.str(n.replace(/([\.$?*|{}\(\)\[\]\\\\/\+^])/, "\\$1")), cljs.core.str("\x3d([^;]*)")].join(""));
  var m = document.cookie.match(re);
  if (cljs.core.truth_(m)) {
    return m[1];
  } else {
    return null;
  }
};
floor16.cookies.cremove = function cremove(kw) {
  return floor16.cookies.cset.call(null, kw, "", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "expires", "expires", 3999636134), -1], null));
};
goog.provide("floor16.auth");
goog.require("cljs.core");
goog.require("om.core");
goog.require("om.core");
goog.require("floor16.cookies");
goog.require("floor16.cookies");
goog.require("floor16.xhr");
goog.require("floor16.xhr");
floor16.auth.sys_data = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
floor16.auth.app = function app() {
  return(new cljs.core.Keyword(null, "app", "app", 1014001043)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.auth.sys_data));
};
floor16.auth.api_url = function api_url() {
  return(new cljs.core.Keyword(null, "api-url", "api-url", 4507306670)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.auth.sys_data));
};
floor16.auth.get_user_param = function get_user_param(kw) {
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, floor16.auth.app.call(null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "user", "user", 1017503549), kw], null));
};
floor16.auth.token = function token() {
  return floor16.auth.get_user_param.call(null, new cljs.core.Keyword(null, "token", "token", 1124445547));
};
floor16.auth.auth_coockie = function() {
  var auth_coockie__delegate = function(meth, p__14390) {
    var vec__14392 = p__14390;
    var t = cljs.core.nth.call(null, vec__14392, 0, null);
    if (cljs.core.truth_(floor16.auth.token)) {
      return meth.call(null, new cljs.core.Keyword(null, "session-id", "session-id", 2675709732), t);
    } else {
      return meth.call(null, new cljs.core.Keyword(null, "session-id", "session-id", 2675709732));
    }
  };
  var auth_coockie = function(meth, var_args) {
    var p__14390 = null;
    if (arguments.length > 1) {
      p__14390 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return auth_coockie__delegate.call(this, meth, p__14390);
  };
  auth_coockie.cljs$lang$maxFixedArity = 1;
  auth_coockie.cljs$lang$applyTo = function(arglist__14393) {
    var meth = cljs.core.first(arglist__14393);
    var p__14390 = cljs.core.rest(arglist__14393);
    return auth_coockie__delegate(meth, p__14390);
  };
  auth_coockie.cljs$core$IFn$_invoke$arity$variadic = auth_coockie__delegate;
  return auth_coockie;
}();
floor16.auth.handle_autologin_response = function handle_autologin_response() {
  return function(response) {
    cljs.core.println.call(null, "Autologin response:", response);
    if (cljs.core._EQ_.call(null, 200, (new cljs.core.Keyword(null, "status", "status", 4416389988)).cljs$core$IFn$_invoke$arity$1(response))) {
      return cljs.core.swap_BANG_.call(null, floor16.auth.app.call(null), cljs.core.assoc, new cljs.core.Keyword(null, "user", "user", 1017503549), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "body", "body", 1016933652)).cljs$core$IFn$_invoke$arity$1(response), new cljs.core.Keyword(null, "autologin", "autologin", 2687056524), true));
    } else {
      return floor16.auth.auth_coockie.call(null, floor16.cookies.cremove);
    }
  };
};
floor16.auth.auth_sys = function auth_sys(p__14395) {
  var map__14397 = p__14395;
  var map__14397__$1 = cljs.core.seq_QMARK_.call(null, map__14397) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14397) : map__14397;
  var app = cljs.core.get.call(null, map__14397__$1, new cljs.core.Keyword(null, "app", "app", 1014001043));
  var url = cljs.core.get.call(null, map__14397__$1, new cljs.core.Keyword(null, "api-url", "api-url", 4507306670));
  cljs.core.swap_BANG_.call(null, floor16.auth.sys_data, function(p1__14394_SHARP_) {
    return cljs.core.assoc.call(null, cljs.core.assoc.call(null, p1__14394_SHARP_, new cljs.core.Keyword(null, "app", "app", 1014001043), app), new cljs.core.Keyword(null, "api-url", "api-url", 4507306670), url);
  });
  var temp__4092__auto__ = floor16.auth.auth_coockie.call(null, floor16.cookies.cget);
  if (cljs.core.truth_(temp__4092__auto__)) {
    var t = temp__4092__auto__;
    return floor16.xhr.do_request.call(null, floor16.xhr.bearer_authorization.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 4231316563), new cljs.core.Keyword(null, "get", "get", 1014006472), new cljs.core.Keyword(null, "url", "url", 1014020321), floor16.auth.api_url.call(null)], null), t), floor16.auth.handle_autologin_response.call(null));
  } else {
    return null;
  }
};
floor16.auth.handle_login_response = function() {
  var handle_login_response__delegate = function(p__14398) {
    var vec__14400 = p__14398;
    var cb = cljs.core.nth.call(null, vec__14400, 0, null);
    var err_cb = cljs.core.nth.call(null, vec__14400, 1, null);
    return function(response) {
      cljs.core.println.call(null, "Login response:", response);
      if (cljs.core._EQ_.call(null, 200, (new cljs.core.Keyword(null, "status", "status", 4416389988)).cljs$core$IFn$_invoke$arity$1(response))) {
        cljs.core.swap_BANG_.call(null, floor16.auth.app.call(null), cljs.core.assoc, new cljs.core.Keyword(null, "user", "user", 1017503549), (new cljs.core.Keyword(null, "body", "body", 1016933652)).cljs$core$IFn$_invoke$arity$1(response));
        floor16.auth.auth_coockie.call(null, floor16.cookies.cset, floor16.auth.token.call(null));
        if (cljs.core.truth_(cb)) {
          return cb.call(null);
        } else {
          return null;
        }
      } else {
        if (cljs.core.truth_(err_cb)) {
          return err_cb.call(null);
        } else {
          return null;
        }
      }
    };
  };
  var handle_login_response = function(var_args) {
    var p__14398 = null;
    if (arguments.length > 0) {
      p__14398 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return handle_login_response__delegate.call(this, p__14398);
  };
  handle_login_response.cljs$lang$maxFixedArity = 0;
  handle_login_response.cljs$lang$applyTo = function(arglist__14401) {
    var p__14398 = cljs.core.seq(arglist__14401);
    return handle_login_response__delegate(p__14398);
  };
  handle_login_response.cljs$core$IFn$_invoke$arity$variadic = handle_login_response__delegate;
  return handle_login_response;
}();
floor16.auth.handle_logout_response = function handle_logout_response() {
  return function(response) {
    cljs.core.println.call(null, "Logout response:", response);
    floor16.auth.auth_coockie.call(null, floor16.cookies.cremove);
    return cljs.core.swap_BANG_.call(null, floor16.auth.app.call(null), cljs.core.dissoc, new cljs.core.Keyword(null, "user", "user", 1017503549));
  };
};
floor16.auth.get_user = function get_user() {
  return(new cljs.core.Keyword(null, "user", "user", 1017503549)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.auth.app.call(null)));
};
floor16.auth.do_login = function do_login(creds) {
  return do_login.call(null, creds, null, null);
};
floor16.auth.do_login = function do_login(creds, cb) {
  return do_login.call(null, creds, cb, null);
};
floor16.auth.do_login = function do_login(creds, cb, err_cb) {
  return floor16.xhr.do_request.call(null, floor16.xhr.content_type.call(null, floor16.xhr.accept.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "method", "method", 4231316563), new cljs.core.Keyword(null, "post", "post", 1017351186), new cljs.core.Keyword(null, "url", "url", 1014020321), floor16.auth.api_url.call(null), new cljs.core.Keyword(null, "body", "body", 1016933652), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "grant_type", "grant_type", 
  1863830511), "password", new cljs.core.Keyword(null, "username", "username", 748190792), (new cljs.core.Keyword(null, "username", "username", 748190792)).cljs$core$IFn$_invoke$arity$1(creds), new cljs.core.Keyword(null, "password", "password", 2230889997), (new cljs.core.Keyword(null, "password", "password", 2230889997)).cljs$core$IFn$_invoke$arity$1(creds)], null)], null), new cljs.core.Keyword(null, "edn", "edn", 1014004513)), new cljs.core.Keyword(null, "url-encode", "url-encode", 3129387942)), 
  floor16.auth.handle_login_response.call(null, cb, err_cb));
};
floor16.auth.do_logout = function do_logout() {
  var temp__4092__auto__ = floor16.auth.token.call(null);
  if (cljs.core.truth_(temp__4092__auto__)) {
    var t = temp__4092__auto__;
    return floor16.xhr.do_request.call(null, floor16.xhr.bearer_authorization.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 4231316563), new cljs.core.Keyword(null, "delete", "delete", 3973413149), new cljs.core.Keyword(null, "url", "url", 1014020321), floor16.auth.api_url.call(null)], null), t), floor16.auth.handle_logout_response.call(null));
  } else {
    return null;
  }
};
floor16.auth.guest_QMARK_ = function guest_QMARK_() {
  return floor16.auth.token.call(null) == null;
};
floor16.auth.autologin_QMARK_ = function autologin_QMARK_() {
  return floor16.auth.get_user_param.call(null, new cljs.core.Keyword(null, "autologin", "autologin", 2687056524));
};
goog.provide("floor16.lang");
goog.require("cljs.core");
floor16.lang.v = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ru", "ru", 1013907893), new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "ad", "ad", 1013907349), new cljs.core.PersistentArrayMap(null, 3, [1, "\u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0435", 2, "\u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f", 5, "\u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439"], null), new cljs.core.Keyword(null, "data-pager-prev", 
"data-pager-prev", 2462390130), "\u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0430\u044f", new cljs.core.Keyword(null, "data-pager-next", "data-pager-next", 2462318642), "\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f", new cljs.core.Keyword(null, "appartment", "appartment", 4044466290), "\u043a\u0432\u0430\u0440\u0442\u0438\u0440\u0430", new cljs.core.Keyword(null, "studio", "studio", 4416970056), "\u0441\u0442\u0443\u0434\u0438\u044f", new cljs.core.Keyword(null, "room", "room", 1017410637), 
new cljs.core.PersistentArrayMap(null, 3, [1, "\u043a\u043e\u043c\u043d\u0430\u0442\u0430", 2, "\u043a\u043e\u043c\u043d\u0430\u0442\u044b", 5, "\u043a\u043e\u043c\u043d\u0430\u0442"], null), new cljs.core.Keyword(null, "select-value", "select-value", 1968185554), "\u0432\u044b\u0431\u0440\u0430\u0442\u044c", new cljs.core.Keyword(null, "empty-search", "empty-search", 3924434330), "\u041f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e"], 
null)], null);
floor16.lang.vocabulary = function vocabulary() {
  return(new cljs.core.Keyword(null, "ru", "ru", 1013907893)).cljs$core$IFn$_invoke$arity$1(floor16.lang.v);
};
floor16.lang.ru_plural_form = function ru_plural_form(n) {
  var d00 = cljs.core.quot.call(null, cljs.core.rem.call(null, n, 100), 10);
  var d0 = cljs.core.rem.call(null, n, 10);
  if (cljs.core._EQ_.call(null, 1, d00)) {
    return 5;
  } else {
    if (cljs.core._EQ_.call(null, d0, 0) || d0 >= 5) {
      return 5;
    } else {
      if (d0 >= 2) {
        return 2;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 1;
        } else {
          return null;
        }
      }
    }
  }
};
floor16.lang.l = function() {
  var l__delegate = function(kw, p__13963) {
    var vec__13965 = p__13963;
    var n = cljs.core.nth.call(null, vec__13965, 0, null);
    var temp__4090__auto__ = kw.call(null, floor16.lang.vocabulary.call(null));
    if (cljs.core.truth_(temp__4090__auto__)) {
      var word = temp__4090__auto__;
      if (cljs.core.map_QMARK_.call(null, word)) {
        return cljs.core.get.call(null, word, floor16.lang.ru_plural_form.call(null, function() {
          var or__3403__auto__ = n;
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return 1;
          }
        }()));
      } else {
        return word;
      }
    } else {
      return cljs.core.name.call(null, kw);
    }
  };
  var l = function(kw, var_args) {
    var p__13963 = null;
    if (arguments.length > 1) {
      p__13963 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return l__delegate.call(this, kw, p__13963);
  };
  l.cljs$lang$maxFixedArity = 1;
  l.cljs$lang$applyTo = function(arglist__13966) {
    var kw = cljs.core.first(arglist__13966);
    var p__13963 = cljs.core.rest(arglist__13966);
    return l__delegate(kw, p__13963);
  };
  l.cljs$core$IFn$_invoke$arity$variadic = l__delegate;
  return l;
}();
floor16.lang.lstr = function() {
  var lstr__delegate = function(s, p__13967) {
    var vec__13969 = p__13967;
    var n = cljs.core.nth.call(null, vec__13969, 0, null);
    var kw = cljs.core.keyword.call(null, s);
    var temp__4090__auto__ = kw.call(null, floor16.lang.vocabulary.call(null));
    if (cljs.core.truth_(temp__4090__auto__)) {
      var word = temp__4090__auto__;
      if (cljs.core.map_QMARK_.call(null, word)) {
        return cljs.core.get.call(null, word, floor16.lang.ru_plural_form.call(null, function() {
          var or__3403__auto__ = n;
          if (cljs.core.truth_(or__3403__auto__)) {
            return or__3403__auto__;
          } else {
            return 1;
          }
        }()));
      } else {
        return word;
      }
    } else {
      return s;
    }
  };
  var lstr = function(s, var_args) {
    var p__13967 = null;
    if (arguments.length > 1) {
      p__13967 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return lstr__delegate.call(this, s, p__13967);
  };
  lstr.cljs$lang$maxFixedArity = 1;
  lstr.cljs$lang$applyTo = function(arglist__13970) {
    var s = cljs.core.first(arglist__13970);
    var p__13967 = cljs.core.rest(arglist__13970);
    return lstr__delegate(s, p__13967);
  };
  lstr.cljs$core$IFn$_invoke$arity$variadic = lstr__delegate;
  return lstr;
}();
goog.exportSymbol("floor16.lang.lstr", floor16.lang.lstr);
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", 4635210724));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t18299 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t18299 = function(f, fn_handler, meta18300) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta18300 = meta18300;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t18299.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t18299.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t18299";
    cljs.core.async.impl.ioc_helpers.t18299.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.ioc-helpers/t18299");
    };
    cljs.core.async.impl.ioc_helpers.t18299.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t18299.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t18299.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t18299.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18301) {
      var self__ = this;
      var _18301__$1 = this;
      return self__.meta18300;
    };
    cljs.core.async.impl.ioc_helpers.t18299.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18301, meta18300__$1) {
      var self__ = this;
      var _18301__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t18299(self__.f, self__.fn_handler, meta18300__$1);
    };
    cljs.core.async.impl.ioc_helpers.__GT_t18299 = function __GT_t18299(f__$1, fn_handler__$1, meta18300) {
      return new cljs.core.async.impl.ioc_helpers.t18299(f__$1, fn_handler__$1, meta18300);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t18299(f, fn_handler, null);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e18303) {
    if (e18303 instanceof Object) {
      var ex = e18303;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e18303;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_18306_18308 = state;
    statearr_18306_18308[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_18306_18308[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_18307_18309 = state;
    statearr_18307_18309[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_18307_18309[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
    var statearr_18312_18314 = state;
    statearr_18312_18314[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_18312_18314[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_18313_18315 = state;
    statearr_18313_18315[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_18313_18315[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__18316) {
    var map__18321 = p__18316;
    var map__18321__$1 = cljs.core.seq_QMARK_.call(null, map__18321) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18321) : map__18321;
    var opts = map__18321__$1;
    var statearr_18322_18325 = state;
    statearr_18322_18325[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4092__auto__ = cljs.core.async.do_alts.call(null, function(val) {
      var statearr_18323_18326 = state;
      statearr_18323_18326[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
    }, ports, opts);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var cb = temp__4092__auto__;
      var statearr_18324_18327 = state;
      statearr_18324_18327[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__18316 = null;
    if (arguments.length > 3) {
      p__18316 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__18316);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__18328) {
    var state = cljs.core.first(arglist__18328);
    arglist__18328 = cljs.core.next(arglist__18328);
    var cont_block = cljs.core.first(arglist__18328);
    arglist__18328 = cljs.core.next(arglist__18328);
    var ports = cljs.core.first(arglist__18328);
    var p__18316 = cljs.core.rest(arglist__18328);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__18316);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
      return null;
    }));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3984__auto__) {
  var self__ = this;
  var this__3984__auto____$1 = this;
  var h__3814__auto__ = self__.__hash;
  if (!(h__3814__auto__ == null)) {
    return h__3814__auto__;
  } else {
    var h__3814__auto____$1 = cljs.core.hash_imap.call(null, this__3984__auto____$1);
    self__.__hash = h__3814__auto____$1;
    return h__3814__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3989__auto__, k__3990__auto__) {
  var self__ = this;
  var this__3989__auto____$1 = this;
  return cljs.core._lookup.call(null, this__3989__auto____$1, k__3990__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3991__auto__, k18330, else__3992__auto__) {
  var self__ = this;
  var this__3991__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k18330, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893))) {
    return self__.catch_block;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k18330, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687))) {
      return self__.catch_exception;
    } else {
      if (cljs.core.keyword_identical_QMARK_.call(null, k18330, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429))) {
        return self__.finally_block;
      } else {
        if (cljs.core.keyword_identical_QMARK_.call(null, k18330, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097))) {
          return self__.continue_block;
        } else {
          if (cljs.core.keyword_identical_QMARK_.call(null, k18330, new cljs.core.Keyword(null, "prev", "prev", 1017353637))) {
            return self__.prev;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.get.call(null, self__.__extmap, k18330, else__3992__auto__);
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3996__auto__, k__3997__auto__, G__18329) {
  var self__ = this;
  var this__3996__auto____$1 = this;
  var pred__18332 = cljs.core.keyword_identical_QMARK_;
  var expr__18333 = k__3997__auto__;
  if (cljs.core.truth_(pred__18332.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), expr__18333))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__18329, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__18332.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), expr__18333))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__18329, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__18332.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), expr__18333))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__18329, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__18332.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), expr__18333))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__18329, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__18332.call(null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), expr__18333))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__18329, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3997__auto__, G__18329), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4003__auto__, writer__4004__auto__, opts__4005__auto__) {
  var self__ = this;
  var this__4003__auto____$1 = this;
  var pr_pair__4006__auto__ = function(keyval__4007__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4004__auto__, cljs.core.pr_writer, "", " ", "", opts__4005__auto__, keyval__4007__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4004__auto__, pr_pair__4006__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4005__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", 1017353637), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3994__auto__, entry__3995__auto__) {
  var self__ = this;
  var this__3994__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__3995__auto__)) {
    return cljs.core._assoc.call(null, this__3994__auto____$1, cljs.core._nth.call(null, entry__3995__auto__, 0), cljs.core._nth.call(null, entry__3995__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3994__auto____$1, entry__3995__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4001__auto__) {
  var self__ = this;
  var this__4001__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", 1017353637), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3993__auto__) {
  var self__ = this;
  var this__3993__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3985__auto__, other__3986__auto__) {
  var self__ = this;
  var this__3985__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3391__auto__ = other__3986__auto__;
    if (cljs.core.truth_(and__3391__auto__)) {
      return this__3985__auto____$1.constructor === other__3986__auto__.constructor && cljs.core.equiv_map.call(null, this__3985__auto____$1, other__3986__auto__);
    } else {
      return and__3391__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3988__auto__, G__18329) {
  var self__ = this;
  var this__3988__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__18329, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__3983__auto__) {
  var self__ = this;
  var this__3983__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3987__auto__) {
  var self__ = this;
  var this__3987__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3998__auto__, k__3999__auto__) {
  var self__ = this;
  var this__3998__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), 
  null], null), null), k__3999__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3998__auto____$1), self__.__meta), k__3999__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3999__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4023__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4023__auto__, writer__4024__auto__) {
  return cljs.core._write.call(null, writer__4024__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__18331) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).cljs$core$IFn$_invoke$arity$1(G__18331), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).cljs$core$IFn$_invoke$arity$1(G__18331), (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(G__18331), (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).cljs$core$IFn$_invoke$arity$1(G__18331), 
  (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(G__18331), null, cljs.core.dissoc.call(null, G__18331, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), new cljs.core.Keyword(null, "prev", "prev", 1017353637)));
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_18336 = state;
  statearr_18336[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_18336;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3391__auto__ = exception;
      if (cljs.core.truth_(and__3391__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3391__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3391__auto__ = exception;
        if (cljs.core.truth_(and__3391__auto__)) {
          var and__3391__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3391__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3391__auto____$1;
          }
        } else {
          return and__3391__auto__;
        }
      }())) {
        var statearr_18342 = state;
        statearr_18342[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_18342[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_18342[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_18342[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null);
        return statearr_18342;
      } else {
        if (cljs.core.truth_(function() {
          var and__3391__auto__ = exception;
          if (cljs.core.truth_(and__3391__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3391__auto__;
          }
        }())) {
          var statearr_18343_18347 = state;
          statearr_18343_18347[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__18348 = state;
          state = G__18348;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3391__auto__ = exception;
            if (cljs.core.truth_(and__3391__auto__)) {
              var and__3391__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3391__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3391__auto____$1;
              }
            } else {
              return and__3391__auto__;
            }
          }())) {
            var statearr_18344 = state;
            statearr_18344[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_18344[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
            return statearr_18344;
          } else {
            if (cljs.core.truth_(function() {
              var and__3391__auto__ = cljs.core.not.call(null, exception);
              if (and__3391__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3391__auto__;
              }
            }())) {
              var statearr_18345 = state;
              statearr_18345[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_18345[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
              return statearr_18345;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_18346 = state;
                statearr_18346[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_18346[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_18346;
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  if (false) {
                    return null;
                  } else {
                    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("No matching clause"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, false))].join(""));
                  }
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t18288 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t18288 = function(val, box, meta18289) {
      this.val = val;
      this.box = box;
      this.meta18289 = meta18289;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t18288.cljs$lang$type = true;
    cljs.core.async.impl.channels.t18288.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t18288";
    cljs.core.async.impl.channels.t18288.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.channels/t18288");
    };
    cljs.core.async.impl.channels.t18288.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t18288.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18290) {
      var self__ = this;
      var _18290__$1 = this;
      return self__.meta18289;
    };
    cljs.core.async.impl.channels.t18288.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18290, meta18289__$1) {
      var self__ = this;
      var _18290__$1 = this;
      return new cljs.core.async.impl.channels.t18288(self__.val, self__.box, meta18289__$1);
    };
    cljs.core.async.impl.channels.__GT_t18288 = function __GT_t18288(val__$1, box__$1, meta18289) {
      return new cljs.core.async.impl.channels.t18288(val__$1, box__$1, meta18289);
    };
  }
  return new cljs.core.async.impl.channels.t18288(val, box, null);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__3973__auto__, writer__3974__auto__, opts__3975__auto__) {
  return cljs.core._write.call(null, writer__3974__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    while (true) {
      var taker_18291 = self__.takes.pop();
      if (taker_18291 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_18291)) {
          var take_cb_18292 = cljs.core.async.impl.protocols.commit.call(null, taker_18291);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_18292, taker_18291) {
            return function() {
              return take_cb_18292.call(null, null);
            };
          }(take_cb_18292, taker_18291));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      return cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
    } else {
      while (true) {
        var putter = self__.puts.pop();
        if (!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, put_cb);
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            continue;
          }
        } else {
          if (self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null);
          } else {
            if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
            } else {
              self__.dirty_takes = self__.dirty_takes + 1;
            }
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 1395928862, null), new cljs.core.Symbol(null, 
              "takes", "takes", -1530407291, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
            }
            self__.takes.unbounded_unshift(handler);
            return null;
          }
        }
        break;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "val", "val", -1640415014, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, null);
  } else {
    while (true) {
      var taker = self__.takes.pop();
      if (!(taker == null)) {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker) {
            return function() {
              return take_cb.call(null, val);
            };
          }(take_cb, _, taker));
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          continue;
        }
      } else {
        if (!(self__.buf == null || cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
          } else {
            self__.dirty_puts = self__.dirty_puts + 1;
          }
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            1395928862, null), new cljs.core.Symbol(null, "puts", "puts", -1637078787, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null;
        }
      }
      break;
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed);
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, null);
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__18246 = level + 1;
        level = G__18246;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_18247 = 0;
    while (true) {
      if (i_18247 < arr.length) {
        arr[i_18247] = null;
        var G__18248 = i_18247 + 1;
        i_18247 = G__18248;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4090__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4090__auto__)) {
              var x_SINGLEQUOTE_ = temp__4090__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__18249 = x_SINGLEQUOTE_;
                x__$1 = G__18249;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__18250 = x__$1;
        var G__18251 = k;
        var G__18252 = level - 1;
        var G__18253 = update;
        x = G__18250;
        k = G__18251;
        level = G__18252;
        update = G__18253;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function iter(node) {
    return new cljs.core.LazySeq(null, function() {
      if (node == null) {
        return null;
      } else {
        return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
      }
    }, null, null);
  };
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_18254 = self__.level + 1;
      while (true) {
        if (i_18254 <= new_level + 1) {
          update[i_18254] = self__.header;
          var G__18255 = i_18254 + 1;
          i_18254 = G__18255;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_18256 = 0;
    while (true) {
      if (i_18256 <= self__.level) {
        var links_18257 = update[i_18256].forward;
        if (links_18257[i_18256] === x__$1) {
          links_18257[i_18256] = x__$1.forward[i_18256];
          var G__18258 = i_18256 + 1;
          i_18256 = G__18258;
          continue;
        } else {
          var G__18259 = i_18256 + 1;
          i_18256 = G__18259;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__18260 = x_SINGLEQUOTE_;
              x__$1 = G__18260;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__18261 = nx;
        var G__18262 = level__$1 - 1;
        x = G__18261;
        level__$1 = G__18262;
        continue;
      } else {
        var G__18263 = x;
        var G__18264 = level__$1 - 1;
        x = G__18263;
        level__$1 = G__18264;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__18265 = x_SINGLEQUOTE_;
              x__$1 = G__18265;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__18266 = nx;
        var G__18267 = level__$1 - 1;
        x = G__18266;
        level__$1 = G__18267;
        continue;
      } else {
        var G__18268 = x;
        var G__18269 = level__$1 - 1;
        x = G__18268;
        level__$1 = G__18269;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3403__auto__ = cljs.core.truth_(function() {
    var and__3391__auto__ = me;
    if (cljs.core.truth_(and__3391__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3391__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3403__auto__)) {
    return or__3403__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function() {
      cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
      return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
    }, msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.ioc_helpers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t15695 !== "undefined") {
  } else {
    cljs.core.async.t15695 = function(f, fn_handler, meta15696) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta15696 = meta15696;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t15695.cljs$lang$type = true;
    cljs.core.async.t15695.cljs$lang$ctorStr = "cljs.core.async/t15695";
    cljs.core.async.t15695.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t15695");
    };
    cljs.core.async.t15695.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t15695.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t15695.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t15695.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15697) {
      var self__ = this;
      var _15697__$1 = this;
      return self__.meta15696;
    };
    cljs.core.async.t15695.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15697, meta15696__$1) {
      var self__ = this;
      var _15697__$1 = this;
      return new cljs.core.async.t15695(self__.f, self__.fn_handler, meta15696__$1);
    };
    cljs.core.async.__GT_t15695 = function __GT_t15695(f__$1, fn_handler__$1, meta15696) {
      return new cljs.core.async.t15695(f__$1, fn_handler__$1, meta15696);
    };
  }
  return new cljs.core.async.t15695(f, fn_handler, null);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__15699 = buff;
  if (G__15699) {
    var bit__4053__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3403__auto__ = bit__4053__auto__;
      if (cljs.core.truth_(or__3403__auto__)) {
        return or__3403__auto__;
      } else {
        return G__15699.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__15699.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__15699);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__15699);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1);
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  if (null) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3c! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_15700 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_15700);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function() {
          return fn1.call(null, val_15700);
        });
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop() {
  return null;
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  if (null) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3e! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.call(null, port, val, cljs.core.async.nop);
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.call(null, port, val, fn0, true);
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn0));
    if (cljs.core.truth_(function() {
      var and__3391__auto__ = ret;
      if (cljs.core.truth_(and__3391__auto__)) {
        return cljs.core.not_EQ_.call(null, fn0, cljs.core.async.nop);
      } else {
        return and__3391__auto__;
      }
    }())) {
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn0.call(null);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, fn0);
      }
    } else {
    }
    return null;
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4251__auto___15701 = n;
  var x_15702 = 0;
  while (true) {
    if (x_15702 < n__4251__auto___15701) {
      a[x_15702] = 0;
      var G__15703 = x_15702 + 1;
      x_15702 = G__15703;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__15704 = i + 1;
      i = G__15704;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t15708 !== "undefined") {
  } else {
    cljs.core.async.t15708 = function(flag, alt_flag, meta15709) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta15709 = meta15709;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t15708.cljs$lang$type = true;
    cljs.core.async.t15708.cljs$lang$ctorStr = "cljs.core.async/t15708";
    cljs.core.async.t15708.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t15708");
    };
    cljs.core.async.t15708.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t15708.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.deref.call(null, self__.flag);
    };
    cljs.core.async.t15708.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.reset_BANG_.call(null, self__.flag, null);
      return true;
    };
    cljs.core.async.t15708.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15710) {
      var self__ = this;
      var _15710__$1 = this;
      return self__.meta15709;
    };
    cljs.core.async.t15708.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15710, meta15709__$1) {
      var self__ = this;
      var _15710__$1 = this;
      return new cljs.core.async.t15708(self__.flag, self__.alt_flag, meta15709__$1);
    };
    cljs.core.async.__GT_t15708 = function __GT_t15708(flag__$1, alt_flag__$1, meta15709) {
      return new cljs.core.async.t15708(flag__$1, alt_flag__$1, meta15709);
    };
  }
  return new cljs.core.async.t15708(flag, alt_flag, null);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t15714 !== "undefined") {
  } else {
    cljs.core.async.t15714 = function(cb, flag, alt_handler, meta15715) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta15715 = meta15715;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t15714.cljs$lang$type = true;
    cljs.core.async.t15714.cljs$lang$ctorStr = "cljs.core.async/t15714";
    cljs.core.async.t15714.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t15714");
    };
    cljs.core.async.t15714.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t15714.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t15714.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t15714.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15716) {
      var self__ = this;
      var _15716__$1 = this;
      return self__.meta15715;
    };
    cljs.core.async.t15714.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15716, meta15715__$1) {
      var self__ = this;
      var _15716__$1 = this;
      return new cljs.core.async.t15714(self__.cb, self__.flag, self__.alt_handler, meta15715__$1);
    };
    cljs.core.async.__GT_t15714 = function __GT_t15714(cb__$1, flag__$1, alt_handler__$1, meta15715) {
      return new cljs.core.async.t15714(cb__$1, flag__$1, alt_handler__$1, meta15715);
    };
  }
  return new cljs.core.async.t15714(cb, flag, alt_handler, null);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 4143410454)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__15717_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__15717_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3403__auto__ = wport;
            if (cljs.core.truth_(or__3403__auto__)) {
              return or__3403__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__15718 = i + 1;
          i = G__15718;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3403__auto__ = ret;
  if (cljs.core.truth_(or__3403__auto__)) {
    return or__3403__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
      var temp__4092__auto__ = function() {
        var and__3391__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3391__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3391__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4092__auto__)) {
        var got = temp__4092__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", 2558708147)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", 2558708147)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__15719) {
    var map__15721 = p__15719;
    var map__15721__$1 = cljs.core.seq_QMARK_.call(null, map__15721) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15721) : map__15721;
    var opts = map__15721__$1;
    if (null) {
      return null;
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("alts! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
    }
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__15719 = null;
    if (arguments.length > 1) {
      p__15719 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__15719);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__15722) {
    var ports = cljs.core.first(arglist__15722);
    var p__15719 = cljs.core.rest(arglist__15722);
    return alts_BANG___delegate(ports, p__15719);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t15730 !== "undefined") {
  } else {
    cljs.core.async.t15730 = function(ch, f, map_LT_, meta15731) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta15731 = meta15731;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t15730.cljs$lang$type = true;
    cljs.core.async.t15730.cljs$lang$ctorStr = "cljs.core.async/t15730";
    cljs.core.async.t15730.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t15730");
    };
    cljs.core.async.t15730.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t15730.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
    };
    cljs.core.async.t15730.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t15730.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t15733 !== "undefined") {
        } else {
          cljs.core.async.t15733 = function(fn1, _, meta15731, ch, f, map_LT_, meta15734) {
            this.fn1 = fn1;
            this._ = _;
            this.meta15731 = meta15731;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta15734 = meta15734;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t15733.cljs$lang$type = true;
          cljs.core.async.t15733.cljs$lang$ctorStr = "cljs.core.async/t15733";
          cljs.core.async.t15733.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
            return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t15733");
          };
          cljs.core.async.t15733.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t15733.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
          };
          cljs.core.async.t15733.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1);
          };
          cljs.core.async.t15733.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
            return function(f1, ___$4) {
              return function(p1__15723_SHARP_) {
                return f1.call(null, p1__15723_SHARP_ == null ? null : self__.f.call(null, p1__15723_SHARP_));
              };
            }(f1, ___$4);
          };
          cljs.core.async.t15733.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15735) {
            var self__ = this;
            var _15735__$1 = this;
            return self__.meta15734;
          };
          cljs.core.async.t15733.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15735, meta15734__$1) {
            var self__ = this;
            var _15735__$1 = this;
            return new cljs.core.async.t15733(self__.fn1, self__._, self__.meta15731, self__.ch, self__.f, self__.map_LT_, meta15734__$1);
          };
          cljs.core.async.__GT_t15733 = function __GT_t15733(fn1__$1, ___$2, meta15731__$1, ch__$2, f__$2, map_LT___$2, meta15734) {
            return new cljs.core.async.t15733(fn1__$1, ___$2, meta15731__$1, ch__$2, f__$2, map_LT___$2, meta15734);
          };
        }
        return new cljs.core.async.t15733(fn1, ___$1, self__.meta15731, self__.ch, self__.f, self__.map_LT_, null);
      }());
      if (cljs.core.truth_(function() {
        var and__3391__auto__ = ret;
        if (cljs.core.truth_(and__3391__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3391__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t15730.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t15730.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t15730.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15732) {
      var self__ = this;
      var _15732__$1 = this;
      return self__.meta15731;
    };
    cljs.core.async.t15730.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15732, meta15731__$1) {
      var self__ = this;
      var _15732__$1 = this;
      return new cljs.core.async.t15730(self__.ch, self__.f, self__.map_LT_, meta15731__$1);
    };
    cljs.core.async.__GT_t15730 = function __GT_t15730(ch__$1, f__$1, map_LT___$1, meta15731) {
      return new cljs.core.async.t15730(ch__$1, f__$1, map_LT___$1, meta15731);
    };
  }
  return new cljs.core.async.t15730(ch, f, map_LT_, null);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t15739 !== "undefined") {
  } else {
    cljs.core.async.t15739 = function(ch, f, map_GT_, meta15740) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta15740 = meta15740;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t15739.cljs$lang$type = true;
    cljs.core.async.t15739.cljs$lang$ctorStr = "cljs.core.async/t15739";
    cljs.core.async.t15739.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t15739");
    };
    cljs.core.async.t15739.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t15739.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn0);
    };
    cljs.core.async.t15739.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t15739.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t15739.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t15739.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t15739.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15741) {
      var self__ = this;
      var _15741__$1 = this;
      return self__.meta15740;
    };
    cljs.core.async.t15739.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15741, meta15740__$1) {
      var self__ = this;
      var _15741__$1 = this;
      return new cljs.core.async.t15739(self__.ch, self__.f, self__.map_GT_, meta15740__$1);
    };
    cljs.core.async.__GT_t15739 = function __GT_t15739(ch__$1, f__$1, map_GT___$1, meta15740) {
      return new cljs.core.async.t15739(ch__$1, f__$1, map_GT___$1, meta15740);
    };
  }
  return new cljs.core.async.t15739(ch, f, map_GT_, null);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t15745 !== "undefined") {
  } else {
    cljs.core.async.t15745 = function(ch, p, filter_GT_, meta15746) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta15746 = meta15746;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t15745.cljs$lang$type = true;
    cljs.core.async.t15745.cljs$lang$ctorStr = "cljs.core.async/t15745";
    cljs.core.async.t15745.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t15745");
    };
    cljs.core.async.t15745.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t15745.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
      } else {
        return cljs.core.async.impl.channels.box.call(null, null);
      }
    };
    cljs.core.async.t15745.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t15745.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t15745.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t15745.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t15745.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15747) {
      var self__ = this;
      var _15747__$1 = this;
      return self__.meta15746;
    };
    cljs.core.async.t15745.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15747, meta15746__$1) {
      var self__ = this;
      var _15747__$1 = this;
      return new cljs.core.async.t15745(self__.ch, self__.p, self__.filter_GT_, meta15746__$1);
    };
    cljs.core.async.__GT_t15745 = function __GT_t15745(ch__$1, p__$1, filter_GT___$1, meta15746) {
      return new cljs.core.async.t15745(ch__$1, p__$1, filter_GT___$1, meta15746);
    };
  }
  return new cljs.core.async.t15745(ch, p, filter_GT_, null);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6152__auto___15830 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6153__auto__ = function() {
        var switch__6137__auto__ = function(state_15809) {
          var state_val_15810 = state_15809[1];
          if (state_val_15810 === 1) {
            var state_15809__$1 = state_15809;
            var statearr_15811_15831 = state_15809__$1;
            statearr_15811_15831[2] = null;
            statearr_15811_15831[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_15810 === 2) {
              var state_15809__$1 = state_15809;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15809__$1, 4, ch);
            } else {
              if (state_val_15810 === 3) {
                var inst_15807 = state_15809[2];
                var state_15809__$1 = state_15809;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15809__$1, inst_15807);
              } else {
                if (state_val_15810 === 4) {
                  var inst_15791 = state_15809[7];
                  var inst_15791__$1 = state_15809[2];
                  var inst_15792 = inst_15791__$1 == null;
                  var state_15809__$1 = function() {
                    var statearr_15812 = state_15809;
                    statearr_15812[7] = inst_15791__$1;
                    return statearr_15812;
                  }();
                  if (cljs.core.truth_(inst_15792)) {
                    var statearr_15813_15832 = state_15809__$1;
                    statearr_15813_15832[1] = 5;
                  } else {
                    var statearr_15814_15833 = state_15809__$1;
                    statearr_15814_15833[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_15810 === 5) {
                    var inst_15794 = cljs.core.async.close_BANG_.call(null, out);
                    var state_15809__$1 = state_15809;
                    var statearr_15815_15834 = state_15809__$1;
                    statearr_15815_15834[2] = inst_15794;
                    statearr_15815_15834[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_15810 === 6) {
                      var inst_15791 = state_15809[7];
                      var inst_15796 = p.call(null, inst_15791);
                      var state_15809__$1 = state_15809;
                      if (cljs.core.truth_(inst_15796)) {
                        var statearr_15816_15835 = state_15809__$1;
                        statearr_15816_15835[1] = 8;
                      } else {
                        var statearr_15817_15836 = state_15809__$1;
                        statearr_15817_15836[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_15810 === 7) {
                        var inst_15805 = state_15809[2];
                        var state_15809__$1 = state_15809;
                        var statearr_15818_15837 = state_15809__$1;
                        statearr_15818_15837[2] = inst_15805;
                        statearr_15818_15837[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_15810 === 8) {
                          var inst_15791 = state_15809[7];
                          var state_15809__$1 = state_15809;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15809__$1, 11, out, inst_15791);
                        } else {
                          if (state_val_15810 === 9) {
                            var state_15809__$1 = state_15809;
                            var statearr_15819_15838 = state_15809__$1;
                            statearr_15819_15838[2] = null;
                            statearr_15819_15838[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_15810 === 10) {
                              var inst_15802 = state_15809[2];
                              var state_15809__$1 = function() {
                                var statearr_15820 = state_15809;
                                statearr_15820[8] = inst_15802;
                                return statearr_15820;
                              }();
                              var statearr_15821_15839 = state_15809__$1;
                              statearr_15821_15839[2] = null;
                              statearr_15821_15839[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_15810 === 11) {
                                var inst_15799 = state_15809[2];
                                var state_15809__$1 = state_15809;
                                var statearr_15822_15840 = state_15809__$1;
                                statearr_15822_15840[2] = inst_15799;
                                statearr_15822_15840[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6137__auto__) {
          return function() {
            var state_machine__6138__auto__ = null;
            var state_machine__6138__auto____0 = function() {
              var statearr_15826 = [null, null, null, null, null, null, null, null, null];
              statearr_15826[0] = state_machine__6138__auto__;
              statearr_15826[1] = 1;
              return statearr_15826;
            };
            var state_machine__6138__auto____1 = function(state_15809) {
              while (true) {
                var ret_value__6139__auto__ = function() {
                  try {
                    while (true) {
                      var result__6140__auto__ = switch__6137__auto__.call(null, state_15809);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6140__auto__;
                      }
                      break;
                    }
                  } catch (e15827) {
                    if (e15827 instanceof Object) {
                      var ex__6141__auto__ = e15827;
                      var statearr_15828_15841 = state_15809;
                      statearr_15828_15841[5] = ex__6141__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15809);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e15827;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__15842 = state_15809;
                  state_15809 = G__15842;
                  continue;
                } else {
                  return ret_value__6139__auto__;
                }
                break;
              }
            };
            state_machine__6138__auto__ = function(state_15809) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6138__auto____0.call(this);
                case 1:
                  return state_machine__6138__auto____1.call(this, state_15809);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
            return state_machine__6138__auto__;
          }();
        }(switch__6137__auto__);
      }();
      var state__6154__auto__ = function() {
        var statearr_15829 = f__6153__auto__.call(null);
        statearr_15829[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___15830;
        return statearr_15829;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
    });
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__6152__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__6153__auto__ = function() {
      var switch__6137__auto__ = function(state_15994) {
        var state_val_15995 = state_15994[1];
        if (state_val_15995 === 1) {
          var state_15994__$1 = state_15994;
          var statearr_15996_16033 = state_15994__$1;
          statearr_15996_16033[2] = null;
          statearr_15996_16033[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_15995 === 2) {
            var state_15994__$1 = state_15994;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15994__$1, 4, in$);
          } else {
            if (state_val_15995 === 3) {
              var inst_15992 = state_15994[2];
              var state_15994__$1 = state_15994;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15994__$1, inst_15992);
            } else {
              if (state_val_15995 === 4) {
                var inst_15940 = state_15994[7];
                var inst_15940__$1 = state_15994[2];
                var inst_15941 = inst_15940__$1 == null;
                var state_15994__$1 = function() {
                  var statearr_15997 = state_15994;
                  statearr_15997[7] = inst_15940__$1;
                  return statearr_15997;
                }();
                if (cljs.core.truth_(inst_15941)) {
                  var statearr_15998_16034 = state_15994__$1;
                  statearr_15998_16034[1] = 5;
                } else {
                  var statearr_15999_16035 = state_15994__$1;
                  statearr_15999_16035[1] = 6;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_15995 === 5) {
                  var inst_15943 = cljs.core.async.close_BANG_.call(null, out);
                  var state_15994__$1 = state_15994;
                  var statearr_16000_16036 = state_15994__$1;
                  statearr_16000_16036[2] = inst_15943;
                  statearr_16000_16036[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_15995 === 6) {
                    var inst_15940 = state_15994[7];
                    var inst_15945 = f.call(null, inst_15940);
                    var inst_15950 = cljs.core.seq.call(null, inst_15945);
                    var inst_15951 = inst_15950;
                    var inst_15952 = null;
                    var inst_15953 = 0;
                    var inst_15954 = 0;
                    var state_15994__$1 = function() {
                      var statearr_16001 = state_15994;
                      statearr_16001[8] = inst_15954;
                      statearr_16001[9] = inst_15953;
                      statearr_16001[10] = inst_15952;
                      statearr_16001[11] = inst_15951;
                      return statearr_16001;
                    }();
                    var statearr_16002_16037 = state_15994__$1;
                    statearr_16002_16037[2] = null;
                    statearr_16002_16037[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_15995 === 7) {
                      var inst_15990 = state_15994[2];
                      var state_15994__$1 = state_15994;
                      var statearr_16003_16038 = state_15994__$1;
                      statearr_16003_16038[2] = inst_15990;
                      statearr_16003_16038[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_15995 === 8) {
                        var inst_15954 = state_15994[8];
                        var inst_15953 = state_15994[9];
                        var inst_15956 = inst_15954 < inst_15953;
                        var inst_15957 = inst_15956;
                        var state_15994__$1 = state_15994;
                        if (cljs.core.truth_(inst_15957)) {
                          var statearr_16004_16039 = state_15994__$1;
                          statearr_16004_16039[1] = 10;
                        } else {
                          var statearr_16005_16040 = state_15994__$1;
                          statearr_16005_16040[1] = 11;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_15995 === 9) {
                          var inst_15987 = state_15994[2];
                          var state_15994__$1 = function() {
                            var statearr_16006 = state_15994;
                            statearr_16006[12] = inst_15987;
                            return statearr_16006;
                          }();
                          var statearr_16007_16041 = state_15994__$1;
                          statearr_16007_16041[2] = null;
                          statearr_16007_16041[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_15995 === 10) {
                            var inst_15954 = state_15994[8];
                            var inst_15952 = state_15994[10];
                            var inst_15959 = cljs.core._nth.call(null, inst_15952, inst_15954);
                            var state_15994__$1 = state_15994;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15994__$1, 13, out, inst_15959);
                          } else {
                            if (state_val_15995 === 11) {
                              var inst_15965 = state_15994[13];
                              var inst_15951 = state_15994[11];
                              var inst_15965__$1 = cljs.core.seq.call(null, inst_15951);
                              var state_15994__$1 = function() {
                                var statearr_16011 = state_15994;
                                statearr_16011[13] = inst_15965__$1;
                                return statearr_16011;
                              }();
                              if (inst_15965__$1) {
                                var statearr_16012_16042 = state_15994__$1;
                                statearr_16012_16042[1] = 14;
                              } else {
                                var statearr_16013_16043 = state_15994__$1;
                                statearr_16013_16043[1] = 15;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_15995 === 12) {
                                var inst_15985 = state_15994[2];
                                var state_15994__$1 = state_15994;
                                var statearr_16014_16044 = state_15994__$1;
                                statearr_16014_16044[2] = inst_15985;
                                statearr_16014_16044[1] = 9;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_15995 === 13) {
                                  var inst_15954 = state_15994[8];
                                  var inst_15953 = state_15994[9];
                                  var inst_15952 = state_15994[10];
                                  var inst_15951 = state_15994[11];
                                  var inst_15961 = state_15994[2];
                                  var inst_15962 = inst_15954 + 1;
                                  var tmp16008 = inst_15953;
                                  var tmp16009 = inst_15952;
                                  var tmp16010 = inst_15951;
                                  var inst_15951__$1 = tmp16010;
                                  var inst_15952__$1 = tmp16009;
                                  var inst_15953__$1 = tmp16008;
                                  var inst_15954__$1 = inst_15962;
                                  var state_15994__$1 = function() {
                                    var statearr_16015 = state_15994;
                                    statearr_16015[14] = inst_15961;
                                    statearr_16015[8] = inst_15954__$1;
                                    statearr_16015[9] = inst_15953__$1;
                                    statearr_16015[10] = inst_15952__$1;
                                    statearr_16015[11] = inst_15951__$1;
                                    return statearr_16015;
                                  }();
                                  var statearr_16016_16045 = state_15994__$1;
                                  statearr_16016_16045[2] = null;
                                  statearr_16016_16045[1] = 8;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_15995 === 14) {
                                    var inst_15965 = state_15994[13];
                                    var inst_15967 = cljs.core.chunked_seq_QMARK_.call(null, inst_15965);
                                    var state_15994__$1 = state_15994;
                                    if (inst_15967) {
                                      var statearr_16017_16046 = state_15994__$1;
                                      statearr_16017_16046[1] = 17;
                                    } else {
                                      var statearr_16018_16047 = state_15994__$1;
                                      statearr_16018_16047[1] = 18;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_15995 === 15) {
                                      var state_15994__$1 = state_15994;
                                      var statearr_16019_16048 = state_15994__$1;
                                      statearr_16019_16048[2] = null;
                                      statearr_16019_16048[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_15995 === 16) {
                                        var inst_15983 = state_15994[2];
                                        var state_15994__$1 = state_15994;
                                        var statearr_16020_16049 = state_15994__$1;
                                        statearr_16020_16049[2] = inst_15983;
                                        statearr_16020_16049[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_15995 === 17) {
                                          var inst_15965 = state_15994[13];
                                          var inst_15969 = cljs.core.chunk_first.call(null, inst_15965);
                                          var inst_15970 = cljs.core.chunk_rest.call(null, inst_15965);
                                          var inst_15971 = cljs.core.count.call(null, inst_15969);
                                          var inst_15951 = inst_15970;
                                          var inst_15952 = inst_15969;
                                          var inst_15953 = inst_15971;
                                          var inst_15954 = 0;
                                          var state_15994__$1 = function() {
                                            var statearr_16021 = state_15994;
                                            statearr_16021[8] = inst_15954;
                                            statearr_16021[9] = inst_15953;
                                            statearr_16021[10] = inst_15952;
                                            statearr_16021[11] = inst_15951;
                                            return statearr_16021;
                                          }();
                                          var statearr_16022_16050 = state_15994__$1;
                                          statearr_16022_16050[2] = null;
                                          statearr_16022_16050[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_15995 === 18) {
                                            var inst_15965 = state_15994[13];
                                            var inst_15974 = cljs.core.first.call(null, inst_15965);
                                            var state_15994__$1 = state_15994;
                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15994__$1, 20, out, inst_15974);
                                          } else {
                                            if (state_val_15995 === 19) {
                                              var inst_15980 = state_15994[2];
                                              var state_15994__$1 = state_15994;
                                              var statearr_16023_16051 = state_15994__$1;
                                              statearr_16023_16051[2] = inst_15980;
                                              statearr_16023_16051[1] = 16;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_15995 === 20) {
                                                var inst_15965 = state_15994[13];
                                                var inst_15976 = state_15994[2];
                                                var inst_15977 = cljs.core.next.call(null, inst_15965);
                                                var inst_15951 = inst_15977;
                                                var inst_15952 = null;
                                                var inst_15953 = 0;
                                                var inst_15954 = 0;
                                                var state_15994__$1 = function() {
                                                  var statearr_16024 = state_15994;
                                                  statearr_16024[15] = inst_15976;
                                                  statearr_16024[8] = inst_15954;
                                                  statearr_16024[9] = inst_15953;
                                                  statearr_16024[10] = inst_15952;
                                                  statearr_16024[11] = inst_15951;
                                                  return statearr_16024;
                                                }();
                                                var statearr_16025_16052 = state_15994__$1;
                                                statearr_16025_16052[2] = null;
                                                statearr_16025_16052[1] = 8;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__6137__auto__) {
        return function() {
          var state_machine__6138__auto__ = null;
          var state_machine__6138__auto____0 = function() {
            var statearr_16029 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            statearr_16029[0] = state_machine__6138__auto__;
            statearr_16029[1] = 1;
            return statearr_16029;
          };
          var state_machine__6138__auto____1 = function(state_15994) {
            while (true) {
              var ret_value__6139__auto__ = function() {
                try {
                  while (true) {
                    var result__6140__auto__ = switch__6137__auto__.call(null, state_15994);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__6140__auto__;
                    }
                    break;
                  }
                } catch (e16030) {
                  if (e16030 instanceof Object) {
                    var ex__6141__auto__ = e16030;
                    var statearr_16031_16053 = state_15994;
                    statearr_16031_16053[5] = ex__6141__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15994);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e16030;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__16054 = state_15994;
                state_15994 = G__16054;
                continue;
              } else {
                return ret_value__6139__auto__;
              }
              break;
            }
          };
          state_machine__6138__auto__ = function(state_15994) {
            switch(arguments.length) {
              case 0:
                return state_machine__6138__auto____0.call(this);
              case 1:
                return state_machine__6138__auto____1.call(this, state_15994);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
          state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
          return state_machine__6138__auto__;
        }();
      }(switch__6137__auto__);
    }();
    var state__6154__auto__ = function() {
      var statearr_16032 = f__6153__auto__.call(null);
      statearr_16032[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto__;
      return statearr_16032;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
  });
  return c__6152__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__6152__auto___16135 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6153__auto__ = function() {
        var switch__6137__auto__ = function(state_16114) {
          var state_val_16115 = state_16114[1];
          if (state_val_16115 === 1) {
            var state_16114__$1 = state_16114;
            var statearr_16116_16136 = state_16114__$1;
            statearr_16116_16136[2] = null;
            statearr_16116_16136[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_16115 === 2) {
              var state_16114__$1 = state_16114;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16114__$1, 4, from);
            } else {
              if (state_val_16115 === 3) {
                var inst_16112 = state_16114[2];
                var state_16114__$1 = state_16114;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16114__$1, inst_16112);
              } else {
                if (state_val_16115 === 4) {
                  var inst_16097 = state_16114[7];
                  var inst_16097__$1 = state_16114[2];
                  var inst_16098 = inst_16097__$1 == null;
                  var state_16114__$1 = function() {
                    var statearr_16117 = state_16114;
                    statearr_16117[7] = inst_16097__$1;
                    return statearr_16117;
                  }();
                  if (cljs.core.truth_(inst_16098)) {
                    var statearr_16118_16137 = state_16114__$1;
                    statearr_16118_16137[1] = 5;
                  } else {
                    var statearr_16119_16138 = state_16114__$1;
                    statearr_16119_16138[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_16115 === 5) {
                    var state_16114__$1 = state_16114;
                    if (cljs.core.truth_(close_QMARK_)) {
                      var statearr_16120_16139 = state_16114__$1;
                      statearr_16120_16139[1] = 8;
                    } else {
                      var statearr_16121_16140 = state_16114__$1;
                      statearr_16121_16140[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_16115 === 6) {
                      var inst_16097 = state_16114[7];
                      var state_16114__$1 = state_16114;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16114__$1, 11, to, inst_16097);
                    } else {
                      if (state_val_16115 === 7) {
                        var inst_16110 = state_16114[2];
                        var state_16114__$1 = state_16114;
                        var statearr_16122_16141 = state_16114__$1;
                        statearr_16122_16141[2] = inst_16110;
                        statearr_16122_16141[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_16115 === 8) {
                          var inst_16101 = cljs.core.async.close_BANG_.call(null, to);
                          var state_16114__$1 = state_16114;
                          var statearr_16123_16142 = state_16114__$1;
                          statearr_16123_16142[2] = inst_16101;
                          statearr_16123_16142[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_16115 === 9) {
                            var state_16114__$1 = state_16114;
                            var statearr_16124_16143 = state_16114__$1;
                            statearr_16124_16143[2] = null;
                            statearr_16124_16143[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_16115 === 10) {
                              var inst_16104 = state_16114[2];
                              var state_16114__$1 = state_16114;
                              var statearr_16125_16144 = state_16114__$1;
                              statearr_16125_16144[2] = inst_16104;
                              statearr_16125_16144[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_16115 === 11) {
                                var inst_16107 = state_16114[2];
                                var state_16114__$1 = function() {
                                  var statearr_16126 = state_16114;
                                  statearr_16126[8] = inst_16107;
                                  return statearr_16126;
                                }();
                                var statearr_16127_16145 = state_16114__$1;
                                statearr_16127_16145[2] = null;
                                statearr_16127_16145[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6137__auto__) {
          return function() {
            var state_machine__6138__auto__ = null;
            var state_machine__6138__auto____0 = function() {
              var statearr_16131 = [null, null, null, null, null, null, null, null, null];
              statearr_16131[0] = state_machine__6138__auto__;
              statearr_16131[1] = 1;
              return statearr_16131;
            };
            var state_machine__6138__auto____1 = function(state_16114) {
              while (true) {
                var ret_value__6139__auto__ = function() {
                  try {
                    while (true) {
                      var result__6140__auto__ = switch__6137__auto__.call(null, state_16114);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6140__auto__;
                      }
                      break;
                    }
                  } catch (e16132) {
                    if (e16132 instanceof Object) {
                      var ex__6141__auto__ = e16132;
                      var statearr_16133_16146 = state_16114;
                      statearr_16133_16146[5] = ex__6141__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16114);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e16132;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__16147 = state_16114;
                  state_16114 = G__16147;
                  continue;
                } else {
                  return ret_value__6139__auto__;
                }
                break;
              }
            };
            state_machine__6138__auto__ = function(state_16114) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6138__auto____0.call(this);
                case 1:
                  return state_machine__6138__auto____1.call(this, state_16114);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
            return state_machine__6138__auto__;
          }();
        }(switch__6137__auto__);
      }();
      var state__6154__auto__ = function() {
        var statearr_16134 = f__6153__auto__.call(null);
        statearr_16134[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___16135;
        return statearr_16134;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
    });
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__6152__auto___16234 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6153__auto__ = function() {
        var switch__6137__auto__ = function(state_16212) {
          var state_val_16213 = state_16212[1];
          if (state_val_16213 === 1) {
            var state_16212__$1 = state_16212;
            var statearr_16214_16235 = state_16212__$1;
            statearr_16214_16235[2] = null;
            statearr_16214_16235[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_16213 === 2) {
              var state_16212__$1 = state_16212;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16212__$1, 4, ch);
            } else {
              if (state_val_16213 === 3) {
                var inst_16210 = state_16212[2];
                var state_16212__$1 = state_16212;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16212__$1, inst_16210);
              } else {
                if (state_val_16213 === 4) {
                  var inst_16193 = state_16212[7];
                  var inst_16193__$1 = state_16212[2];
                  var inst_16194 = inst_16193__$1 == null;
                  var state_16212__$1 = function() {
                    var statearr_16215 = state_16212;
                    statearr_16215[7] = inst_16193__$1;
                    return statearr_16215;
                  }();
                  if (cljs.core.truth_(inst_16194)) {
                    var statearr_16216_16236 = state_16212__$1;
                    statearr_16216_16236[1] = 5;
                  } else {
                    var statearr_16217_16237 = state_16212__$1;
                    statearr_16217_16237[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_16213 === 5) {
                    var inst_16196 = cljs.core.async.close_BANG_.call(null, tc);
                    var inst_16197 = cljs.core.async.close_BANG_.call(null, fc);
                    var state_16212__$1 = function() {
                      var statearr_16218 = state_16212;
                      statearr_16218[8] = inst_16196;
                      return statearr_16218;
                    }();
                    var statearr_16219_16238 = state_16212__$1;
                    statearr_16219_16238[2] = inst_16197;
                    statearr_16219_16238[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_16213 === 6) {
                      var inst_16193 = state_16212[7];
                      var inst_16199 = p.call(null, inst_16193);
                      var state_16212__$1 = state_16212;
                      if (cljs.core.truth_(inst_16199)) {
                        var statearr_16220_16239 = state_16212__$1;
                        statearr_16220_16239[1] = 9;
                      } else {
                        var statearr_16221_16240 = state_16212__$1;
                        statearr_16221_16240[1] = 10;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_16213 === 7) {
                        var inst_16208 = state_16212[2];
                        var state_16212__$1 = state_16212;
                        var statearr_16222_16241 = state_16212__$1;
                        statearr_16222_16241[2] = inst_16208;
                        statearr_16222_16241[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_16213 === 8) {
                          var inst_16205 = state_16212[2];
                          var state_16212__$1 = function() {
                            var statearr_16223 = state_16212;
                            statearr_16223[9] = inst_16205;
                            return statearr_16223;
                          }();
                          var statearr_16224_16242 = state_16212__$1;
                          statearr_16224_16242[2] = null;
                          statearr_16224_16242[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_16213 === 9) {
                            var state_16212__$1 = state_16212;
                            var statearr_16225_16243 = state_16212__$1;
                            statearr_16225_16243[2] = tc;
                            statearr_16225_16243[1] = 11;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_16213 === 10) {
                              var state_16212__$1 = state_16212;
                              var statearr_16226_16244 = state_16212__$1;
                              statearr_16226_16244[2] = fc;
                              statearr_16226_16244[1] = 11;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_16213 === 11) {
                                var inst_16193 = state_16212[7];
                                var inst_16203 = state_16212[2];
                                var state_16212__$1 = state_16212;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16212__$1, 8, inst_16203, inst_16193);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6137__auto__) {
          return function() {
            var state_machine__6138__auto__ = null;
            var state_machine__6138__auto____0 = function() {
              var statearr_16230 = [null, null, null, null, null, null, null, null, null, null];
              statearr_16230[0] = state_machine__6138__auto__;
              statearr_16230[1] = 1;
              return statearr_16230;
            };
            var state_machine__6138__auto____1 = function(state_16212) {
              while (true) {
                var ret_value__6139__auto__ = function() {
                  try {
                    while (true) {
                      var result__6140__auto__ = switch__6137__auto__.call(null, state_16212);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6140__auto__;
                      }
                      break;
                    }
                  } catch (e16231) {
                    if (e16231 instanceof Object) {
                      var ex__6141__auto__ = e16231;
                      var statearr_16232_16245 = state_16212;
                      statearr_16232_16245[5] = ex__6141__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16212);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e16231;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__16246 = state_16212;
                  state_16212 = G__16246;
                  continue;
                } else {
                  return ret_value__6139__auto__;
                }
                break;
              }
            };
            state_machine__6138__auto__ = function(state_16212) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6138__auto____0.call(this);
                case 1:
                  return state_machine__6138__auto____1.call(this, state_16212);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
            return state_machine__6138__auto__;
          }();
        }(switch__6137__auto__);
      }();
      var state__6154__auto__ = function() {
        var statearr_16233 = f__6153__auto__.call(null);
        statearr_16233[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___16234;
        return statearr_16233;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
    });
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__6152__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__6153__auto__ = function() {
      var switch__6137__auto__ = function(state_16293) {
        var state_val_16294 = state_16293[1];
        if (state_val_16294 === 7) {
          var inst_16289 = state_16293[2];
          var state_16293__$1 = state_16293;
          var statearr_16295_16311 = state_16293__$1;
          statearr_16295_16311[2] = inst_16289;
          statearr_16295_16311[1] = 3;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_16294 === 6) {
            var inst_16279 = state_16293[7];
            var inst_16282 = state_16293[8];
            var inst_16286 = f.call(null, inst_16279, inst_16282);
            var inst_16279__$1 = inst_16286;
            var state_16293__$1 = function() {
              var statearr_16296 = state_16293;
              statearr_16296[7] = inst_16279__$1;
              return statearr_16296;
            }();
            var statearr_16297_16312 = state_16293__$1;
            statearr_16297_16312[2] = null;
            statearr_16297_16312[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_16294 === 5) {
              var inst_16279 = state_16293[7];
              var state_16293__$1 = state_16293;
              var statearr_16298_16313 = state_16293__$1;
              statearr_16298_16313[2] = inst_16279;
              statearr_16298_16313[1] = 7;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_16294 === 4) {
                var inst_16282 = state_16293[8];
                var inst_16282__$1 = state_16293[2];
                var inst_16283 = inst_16282__$1 == null;
                var state_16293__$1 = function() {
                  var statearr_16299 = state_16293;
                  statearr_16299[8] = inst_16282__$1;
                  return statearr_16299;
                }();
                if (cljs.core.truth_(inst_16283)) {
                  var statearr_16300_16314 = state_16293__$1;
                  statearr_16300_16314[1] = 5;
                } else {
                  var statearr_16301_16315 = state_16293__$1;
                  statearr_16301_16315[1] = 6;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_16294 === 3) {
                  var inst_16291 = state_16293[2];
                  var state_16293__$1 = state_16293;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16293__$1, inst_16291);
                } else {
                  if (state_val_16294 === 2) {
                    var state_16293__$1 = state_16293;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16293__$1, 4, ch);
                  } else {
                    if (state_val_16294 === 1) {
                      var inst_16279 = init;
                      var state_16293__$1 = function() {
                        var statearr_16302 = state_16293;
                        statearr_16302[7] = inst_16279;
                        return statearr_16302;
                      }();
                      var statearr_16303_16316 = state_16293__$1;
                      statearr_16303_16316[2] = null;
                      statearr_16303_16316[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      return null;
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__6137__auto__) {
        return function() {
          var state_machine__6138__auto__ = null;
          var state_machine__6138__auto____0 = function() {
            var statearr_16307 = [null, null, null, null, null, null, null, null, null];
            statearr_16307[0] = state_machine__6138__auto__;
            statearr_16307[1] = 1;
            return statearr_16307;
          };
          var state_machine__6138__auto____1 = function(state_16293) {
            while (true) {
              var ret_value__6139__auto__ = function() {
                try {
                  while (true) {
                    var result__6140__auto__ = switch__6137__auto__.call(null, state_16293);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__6140__auto__;
                    }
                    break;
                  }
                } catch (e16308) {
                  if (e16308 instanceof Object) {
                    var ex__6141__auto__ = e16308;
                    var statearr_16309_16317 = state_16293;
                    statearr_16309_16317[5] = ex__6141__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16293);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e16308;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__16318 = state_16293;
                state_16293 = G__16318;
                continue;
              } else {
                return ret_value__6139__auto__;
              }
              break;
            }
          };
          state_machine__6138__auto__ = function(state_16293) {
            switch(arguments.length) {
              case 0:
                return state_machine__6138__auto____0.call(this);
              case 1:
                return state_machine__6138__auto____1.call(this, state_16293);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
          state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
          return state_machine__6138__auto__;
        }();
      }(switch__6137__auto__);
    }();
    var state__6154__auto__ = function() {
      var statearr_16310 = f__6153__auto__.call(null);
      statearr_16310[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto__;
      return statearr_16310;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
  });
  return c__6152__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__6152__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6153__auto__ = function() {
        var switch__6137__auto__ = function(state_16380) {
          var state_val_16381 = state_16380[1];
          if (state_val_16381 === 1) {
            var inst_16360 = cljs.core.seq.call(null, coll);
            var inst_16361 = inst_16360;
            var state_16380__$1 = function() {
              var statearr_16382 = state_16380;
              statearr_16382[7] = inst_16361;
              return statearr_16382;
            }();
            var statearr_16383_16401 = state_16380__$1;
            statearr_16383_16401[2] = null;
            statearr_16383_16401[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_16381 === 2) {
              var inst_16361 = state_16380[7];
              var state_16380__$1 = state_16380;
              if (cljs.core.truth_(inst_16361)) {
                var statearr_16384_16402 = state_16380__$1;
                statearr_16384_16402[1] = 4;
              } else {
                var statearr_16385_16403 = state_16380__$1;
                statearr_16385_16403[1] = 5;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_16381 === 3) {
                var inst_16378 = state_16380[2];
                var state_16380__$1 = state_16380;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16380__$1, inst_16378);
              } else {
                if (state_val_16381 === 4) {
                  var inst_16361 = state_16380[7];
                  var inst_16364 = cljs.core.first.call(null, inst_16361);
                  var state_16380__$1 = state_16380;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16380__$1, 7, ch, inst_16364);
                } else {
                  if (state_val_16381 === 5) {
                    var state_16380__$1 = state_16380;
                    if (cljs.core.truth_(close_QMARK_)) {
                      var statearr_16386_16404 = state_16380__$1;
                      statearr_16386_16404[1] = 8;
                    } else {
                      var statearr_16387_16405 = state_16380__$1;
                      statearr_16387_16405[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_16381 === 6) {
                      var inst_16376 = state_16380[2];
                      var state_16380__$1 = state_16380;
                      var statearr_16388_16406 = state_16380__$1;
                      statearr_16388_16406[2] = inst_16376;
                      statearr_16388_16406[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_16381 === 7) {
                        var inst_16361 = state_16380[7];
                        var inst_16366 = state_16380[2];
                        var inst_16367 = cljs.core.next.call(null, inst_16361);
                        var inst_16361__$1 = inst_16367;
                        var state_16380__$1 = function() {
                          var statearr_16389 = state_16380;
                          statearr_16389[8] = inst_16366;
                          statearr_16389[7] = inst_16361__$1;
                          return statearr_16389;
                        }();
                        var statearr_16390_16407 = state_16380__$1;
                        statearr_16390_16407[2] = null;
                        statearr_16390_16407[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_16381 === 8) {
                          var inst_16371 = cljs.core.async.close_BANG_.call(null, ch);
                          var state_16380__$1 = state_16380;
                          var statearr_16391_16408 = state_16380__$1;
                          statearr_16391_16408[2] = inst_16371;
                          statearr_16391_16408[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_16381 === 9) {
                            var state_16380__$1 = state_16380;
                            var statearr_16392_16409 = state_16380__$1;
                            statearr_16392_16409[2] = null;
                            statearr_16392_16409[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_16381 === 10) {
                              var inst_16374 = state_16380[2];
                              var state_16380__$1 = state_16380;
                              var statearr_16393_16410 = state_16380__$1;
                              statearr_16393_16410[2] = inst_16374;
                              statearr_16393_16410[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6137__auto__) {
          return function() {
            var state_machine__6138__auto__ = null;
            var state_machine__6138__auto____0 = function() {
              var statearr_16397 = [null, null, null, null, null, null, null, null, null];
              statearr_16397[0] = state_machine__6138__auto__;
              statearr_16397[1] = 1;
              return statearr_16397;
            };
            var state_machine__6138__auto____1 = function(state_16380) {
              while (true) {
                var ret_value__6139__auto__ = function() {
                  try {
                    while (true) {
                      var result__6140__auto__ = switch__6137__auto__.call(null, state_16380);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6140__auto__;
                      }
                      break;
                    }
                  } catch (e16398) {
                    if (e16398 instanceof Object) {
                      var ex__6141__auto__ = e16398;
                      var statearr_16399_16411 = state_16380;
                      statearr_16399_16411[5] = ex__6141__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16380);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e16398;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__16412 = state_16380;
                  state_16380 = G__16412;
                  continue;
                } else {
                  return ret_value__6139__auto__;
                }
                break;
              }
            };
            state_machine__6138__auto__ = function(state_16380) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6138__auto____0.call(this);
                case 1:
                  return state_machine__6138__auto____1.call(this, state_16380);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
            return state_machine__6138__auto__;
          }();
        }(switch__6137__auto__);
      }();
      var state__6154__auto__ = function() {
        var statearr_16400 = f__6153__auto__.call(null);
        statearr_16400[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto__;
        return statearr_16400;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
    });
    return c__6152__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj16414 = {};
  return obj16414;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3391__auto__ = _;
    if (and__3391__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4030__auto__ = _ == null ? null : _;
    return function() {
      var or__3403__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj16416 = {};
  return obj16416;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3391__auto__ = m;
    if (and__3391__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4030__auto__ = m == null ? null : m;
    return function() {
      var or__3403__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3391__auto__ = m;
    if (and__3391__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4030__auto__ = m == null ? null : m;
    return function() {
      var or__3403__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3391__auto__ = m;
    if (and__3391__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4030__auto__ = m == null ? null : m;
    return function() {
      var or__3403__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t16640 !== "undefined") {
    } else {
      cljs.core.async.t16640 = function(cs, ch, mult, meta16641) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta16641 = meta16641;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t16640.cljs$lang$type = true;
      cljs.core.async.t16640.cljs$lang$ctorStr = "cljs.core.async/t16640";
      cljs.core.async.t16640.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
          return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t16640");
        };
      }(cs);
      cljs.core.async.t16640.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t16640.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t16640.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null;
        };
      }(cs);
      cljs.core.async.t16640.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t16640.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t16640.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t16640.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_16642) {
          var self__ = this;
          var _16642__$1 = this;
          return self__.meta16641;
        };
      }(cs);
      cljs.core.async.t16640.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_16642, meta16641__$1) {
          var self__ = this;
          var _16642__$1 = this;
          return new cljs.core.async.t16640(self__.cs, self__.ch, self__.mult, meta16641__$1);
        };
      }(cs);
      cljs.core.async.__GT_t16640 = function(cs) {
        return function __GT_t16640(cs__$1, ch__$1, mult__$1, meta16641) {
          return new cljs.core.async.t16640(cs__$1, ch__$1, mult__$1, meta16641);
        };
      }(cs);
    }
    return new cljs.core.async.t16640(cs, ch, mult, null);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function() {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__6152__auto___16863 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__6153__auto__ = function() {
      var switch__6137__auto__ = function(state_16777) {
        var state_val_16778 = state_16777[1];
        if (state_val_16778 === 32) {
          var inst_16645 = state_16777[7];
          var inst_16721 = state_16777[8];
          var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_16777, 31, Object, null, 30);
          var inst_16728 = cljs.core.async.put_BANG_.call(null, inst_16721, inst_16645, done);
          var state_16777__$1 = state_16777;
          var statearr_16779_16864 = state_16777__$1;
          statearr_16779_16864[2] = inst_16728;
          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16777__$1);
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_16778 === 1) {
            var state_16777__$1 = state_16777;
            var statearr_16780_16865 = state_16777__$1;
            statearr_16780_16865[2] = null;
            statearr_16780_16865[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_16778 === 33) {
              var inst_16734 = state_16777[9];
              var inst_16736 = cljs.core.chunked_seq_QMARK_.call(null, inst_16734);
              var state_16777__$1 = state_16777;
              if (inst_16736) {
                var statearr_16781_16866 = state_16777__$1;
                statearr_16781_16866[1] = 36;
              } else {
                var statearr_16782_16867 = state_16777__$1;
                statearr_16782_16867[1] = 37;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_16778 === 2) {
                var state_16777__$1 = state_16777;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16777__$1, 4, ch);
              } else {
                if (state_val_16778 === 34) {
                  var state_16777__$1 = state_16777;
                  var statearr_16783_16868 = state_16777__$1;
                  statearr_16783_16868[2] = null;
                  statearr_16783_16868[1] = 35;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_16778 === 3) {
                    var inst_16775 = state_16777[2];
                    var state_16777__$1 = state_16777;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16777__$1, inst_16775);
                  } else {
                    if (state_val_16778 === 35) {
                      var inst_16759 = state_16777[2];
                      var state_16777__$1 = state_16777;
                      var statearr_16784_16869 = state_16777__$1;
                      statearr_16784_16869[2] = inst_16759;
                      statearr_16784_16869[1] = 29;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_16778 === 4) {
                        var inst_16645 = state_16777[7];
                        var inst_16645__$1 = state_16777[2];
                        var inst_16646 = inst_16645__$1 == null;
                        var state_16777__$1 = function() {
                          var statearr_16785 = state_16777;
                          statearr_16785[7] = inst_16645__$1;
                          return statearr_16785;
                        }();
                        if (cljs.core.truth_(inst_16646)) {
                          var statearr_16786_16870 = state_16777__$1;
                          statearr_16786_16870[1] = 5;
                        } else {
                          var statearr_16787_16871 = state_16777__$1;
                          statearr_16787_16871[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_16778 === 36) {
                          var inst_16734 = state_16777[9];
                          var inst_16738 = cljs.core.chunk_first.call(null, inst_16734);
                          var inst_16739 = cljs.core.chunk_rest.call(null, inst_16734);
                          var inst_16740 = cljs.core.count.call(null, inst_16738);
                          var inst_16713 = inst_16739;
                          var inst_16714 = inst_16738;
                          var inst_16715 = inst_16740;
                          var inst_16716 = 0;
                          var state_16777__$1 = function() {
                            var statearr_16788 = state_16777;
                            statearr_16788[10] = inst_16713;
                            statearr_16788[11] = inst_16714;
                            statearr_16788[12] = inst_16715;
                            statearr_16788[13] = inst_16716;
                            return statearr_16788;
                          }();
                          var statearr_16789_16872 = state_16777__$1;
                          statearr_16789_16872[2] = null;
                          statearr_16789_16872[1] = 25;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_16778 === 5) {
                            var inst_16652 = cljs.core.deref.call(null, cs);
                            var inst_16653 = cljs.core.seq.call(null, inst_16652);
                            var inst_16654 = inst_16653;
                            var inst_16655 = null;
                            var inst_16656 = 0;
                            var inst_16657 = 0;
                            var state_16777__$1 = function() {
                              var statearr_16790 = state_16777;
                              statearr_16790[14] = inst_16657;
                              statearr_16790[15] = inst_16656;
                              statearr_16790[16] = inst_16655;
                              statearr_16790[17] = inst_16654;
                              return statearr_16790;
                            }();
                            var statearr_16791_16873 = state_16777__$1;
                            statearr_16791_16873[2] = null;
                            statearr_16791_16873[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_16778 === 37) {
                              var inst_16734 = state_16777[9];
                              var inst_16743 = cljs.core.first.call(null, inst_16734);
                              var state_16777__$1 = function() {
                                var statearr_16792 = state_16777;
                                statearr_16792[18] = inst_16743;
                                return statearr_16792;
                              }();
                              var statearr_16793_16874 = state_16777__$1;
                              statearr_16793_16874[2] = null;
                              statearr_16793_16874[1] = 41;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_16778 === 6) {
                                var inst_16705 = state_16777[19];
                                var inst_16704 = cljs.core.deref.call(null, cs);
                                var inst_16705__$1 = cljs.core.keys.call(null, inst_16704);
                                var inst_16706 = cljs.core.count.call(null, inst_16705__$1);
                                var inst_16707 = cljs.core.reset_BANG_.call(null, dctr, inst_16706);
                                var inst_16712 = cljs.core.seq.call(null, inst_16705__$1);
                                var inst_16713 = inst_16712;
                                var inst_16714 = null;
                                var inst_16715 = 0;
                                var inst_16716 = 0;
                                var state_16777__$1 = function() {
                                  var statearr_16794 = state_16777;
                                  statearr_16794[10] = inst_16713;
                                  statearr_16794[19] = inst_16705__$1;
                                  statearr_16794[20] = inst_16707;
                                  statearr_16794[11] = inst_16714;
                                  statearr_16794[12] = inst_16715;
                                  statearr_16794[13] = inst_16716;
                                  return statearr_16794;
                                }();
                                var statearr_16795_16875 = state_16777__$1;
                                statearr_16795_16875[2] = null;
                                statearr_16795_16875[1] = 25;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_16778 === 38) {
                                  var inst_16756 = state_16777[2];
                                  var state_16777__$1 = state_16777;
                                  var statearr_16796_16876 = state_16777__$1;
                                  statearr_16796_16876[2] = inst_16756;
                                  statearr_16796_16876[1] = 35;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_16778 === 7) {
                                    var inst_16773 = state_16777[2];
                                    var state_16777__$1 = state_16777;
                                    var statearr_16797_16877 = state_16777__$1;
                                    statearr_16797_16877[2] = inst_16773;
                                    statearr_16797_16877[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_16778 === 39) {
                                      var inst_16734 = state_16777[9];
                                      var inst_16752 = state_16777[2];
                                      var inst_16753 = cljs.core.next.call(null, inst_16734);
                                      var inst_16713 = inst_16753;
                                      var inst_16714 = null;
                                      var inst_16715 = 0;
                                      var inst_16716 = 0;
                                      var state_16777__$1 = function() {
                                        var statearr_16798 = state_16777;
                                        statearr_16798[10] = inst_16713;
                                        statearr_16798[21] = inst_16752;
                                        statearr_16798[11] = inst_16714;
                                        statearr_16798[12] = inst_16715;
                                        statearr_16798[13] = inst_16716;
                                        return statearr_16798;
                                      }();
                                      var statearr_16799_16878 = state_16777__$1;
                                      statearr_16799_16878[2] = null;
                                      statearr_16799_16878[1] = 25;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_16778 === 8) {
                                        var inst_16657 = state_16777[14];
                                        var inst_16656 = state_16777[15];
                                        var inst_16659 = inst_16657 < inst_16656;
                                        var inst_16660 = inst_16659;
                                        var state_16777__$1 = state_16777;
                                        if (cljs.core.truth_(inst_16660)) {
                                          var statearr_16800_16879 = state_16777__$1;
                                          statearr_16800_16879[1] = 10;
                                        } else {
                                          var statearr_16801_16880 = state_16777__$1;
                                          statearr_16801_16880[1] = 11;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_16778 === 40) {
                                          var inst_16743 = state_16777[18];
                                          var inst_16744 = state_16777[2];
                                          var inst_16745 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                          var inst_16746 = cljs.core.async.untap_STAR_.call(null, m, inst_16743);
                                          var state_16777__$1 = function() {
                                            var statearr_16802 = state_16777;
                                            statearr_16802[22] = inst_16745;
                                            statearr_16802[23] = inst_16744;
                                            return statearr_16802;
                                          }();
                                          var statearr_16803_16881 = state_16777__$1;
                                          statearr_16803_16881[2] = inst_16746;
                                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16777__$1);
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_16778 === 9) {
                                            var inst_16702 = state_16777[2];
                                            var state_16777__$1 = state_16777;
                                            var statearr_16804_16882 = state_16777__$1;
                                            statearr_16804_16882[2] = inst_16702;
                                            statearr_16804_16882[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_16778 === 41) {
                                              var inst_16743 = state_16777[18];
                                              var inst_16645 = state_16777[7];
                                              var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_16777, 40, Object, null, 39);
                                              var inst_16750 = cljs.core.async.put_BANG_.call(null, inst_16743, inst_16645, done);
                                              var state_16777__$1 = state_16777;
                                              var statearr_16805_16883 = state_16777__$1;
                                              statearr_16805_16883[2] = inst_16750;
                                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16777__$1);
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_16778 === 10) {
                                                var inst_16657 = state_16777[14];
                                                var inst_16655 = state_16777[16];
                                                var inst_16663 = cljs.core._nth.call(null, inst_16655, inst_16657);
                                                var inst_16664 = cljs.core.nth.call(null, inst_16663, 0, null);
                                                var inst_16665 = cljs.core.nth.call(null, inst_16663, 1, null);
                                                var state_16777__$1 = function() {
                                                  var statearr_16806 = state_16777;
                                                  statearr_16806[24] = inst_16664;
                                                  return statearr_16806;
                                                }();
                                                if (cljs.core.truth_(inst_16665)) {
                                                  var statearr_16807_16884 = state_16777__$1;
                                                  statearr_16807_16884[1] = 13;
                                                } else {
                                                  var statearr_16808_16885 = state_16777__$1;
                                                  statearr_16808_16885[1] = 14;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_16778 === 42) {
                                                  var state_16777__$1 = state_16777;
                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16777__$1, 45, dchan);
                                                } else {
                                                  if (state_val_16778 === 11) {
                                                    var inst_16674 = state_16777[25];
                                                    var inst_16654 = state_16777[17];
                                                    var inst_16674__$1 = cljs.core.seq.call(null, inst_16654);
                                                    var state_16777__$1 = function() {
                                                      var statearr_16809 = state_16777;
                                                      statearr_16809[25] = inst_16674__$1;
                                                      return statearr_16809;
                                                    }();
                                                    if (inst_16674__$1) {
                                                      var statearr_16810_16886 = state_16777__$1;
                                                      statearr_16810_16886[1] = 16;
                                                    } else {
                                                      var statearr_16811_16887 = state_16777__$1;
                                                      statearr_16811_16887[1] = 17;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_16778 === 43) {
                                                      var state_16777__$1 = state_16777;
                                                      var statearr_16812_16888 = state_16777__$1;
                                                      statearr_16812_16888[2] = null;
                                                      statearr_16812_16888[1] = 44;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_16778 === 12) {
                                                        var inst_16700 = state_16777[2];
                                                        var state_16777__$1 = state_16777;
                                                        var statearr_16813_16889 = state_16777__$1;
                                                        statearr_16813_16889[2] = inst_16700;
                                                        statearr_16813_16889[1] = 9;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_16778 === 44) {
                                                          var inst_16770 = state_16777[2];
                                                          var state_16777__$1 = function() {
                                                            var statearr_16814 = state_16777;
                                                            statearr_16814[26] = inst_16770;
                                                            return statearr_16814;
                                                          }();
                                                          var statearr_16815_16890 = state_16777__$1;
                                                          statearr_16815_16890[2] = null;
                                                          statearr_16815_16890[1] = 2;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          if (state_val_16778 === 13) {
                                                            var inst_16664 = state_16777[24];
                                                            var inst_16667 = cljs.core.async.close_BANG_.call(null, inst_16664);
                                                            var state_16777__$1 = state_16777;
                                                            var statearr_16816_16891 = state_16777__$1;
                                                            statearr_16816_16891[2] = inst_16667;
                                                            statearr_16816_16891[1] = 15;
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                          } else {
                                                            if (state_val_16778 === 45) {
                                                              var inst_16767 = state_16777[2];
                                                              var state_16777__$1 = state_16777;
                                                              var statearr_16820_16892 = state_16777__$1;
                                                              statearr_16820_16892[2] = inst_16767;
                                                              statearr_16820_16892[1] = 44;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                            } else {
                                                              if (state_val_16778 === 14) {
                                                                var state_16777__$1 = state_16777;
                                                                var statearr_16821_16893 = state_16777__$1;
                                                                statearr_16821_16893[2] = null;
                                                                statearr_16821_16893[1] = 15;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                              } else {
                                                                if (state_val_16778 === 15) {
                                                                  var inst_16657 = state_16777[14];
                                                                  var inst_16656 = state_16777[15];
                                                                  var inst_16655 = state_16777[16];
                                                                  var inst_16654 = state_16777[17];
                                                                  var inst_16670 = state_16777[2];
                                                                  var inst_16671 = inst_16657 + 1;
                                                                  var tmp16817 = inst_16656;
                                                                  var tmp16818 = inst_16655;
                                                                  var tmp16819 = inst_16654;
                                                                  var inst_16654__$1 = tmp16819;
                                                                  var inst_16655__$1 = tmp16818;
                                                                  var inst_16656__$1 = tmp16817;
                                                                  var inst_16657__$1 = inst_16671;
                                                                  var state_16777__$1 = function() {
                                                                    var statearr_16822 = state_16777;
                                                                    statearr_16822[27] = inst_16670;
                                                                    statearr_16822[14] = inst_16657__$1;
                                                                    statearr_16822[15] = inst_16656__$1;
                                                                    statearr_16822[16] = inst_16655__$1;
                                                                    statearr_16822[17] = inst_16654__$1;
                                                                    return statearr_16822;
                                                                  }();
                                                                  var statearr_16823_16894 = state_16777__$1;
                                                                  statearr_16823_16894[2] = null;
                                                                  statearr_16823_16894[1] = 8;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                } else {
                                                                  if (state_val_16778 === 16) {
                                                                    var inst_16674 = state_16777[25];
                                                                    var inst_16676 = cljs.core.chunked_seq_QMARK_.call(null, inst_16674);
                                                                    var state_16777__$1 = state_16777;
                                                                    if (inst_16676) {
                                                                      var statearr_16824_16895 = state_16777__$1;
                                                                      statearr_16824_16895[1] = 19;
                                                                    } else {
                                                                      var statearr_16825_16896 = state_16777__$1;
                                                                      statearr_16825_16896[1] = 20;
                                                                    }
                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                  } else {
                                                                    if (state_val_16778 === 17) {
                                                                      var state_16777__$1 = state_16777;
                                                                      var statearr_16826_16897 = state_16777__$1;
                                                                      statearr_16826_16897[2] = null;
                                                                      statearr_16826_16897[1] = 18;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                    } else {
                                                                      if (state_val_16778 === 18) {
                                                                        var inst_16698 = state_16777[2];
                                                                        var state_16777__$1 = state_16777;
                                                                        var statearr_16827_16898 = state_16777__$1;
                                                                        statearr_16827_16898[2] = inst_16698;
                                                                        statearr_16827_16898[1] = 12;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                      } else {
                                                                        if (state_val_16778 === 19) {
                                                                          var inst_16674 = state_16777[25];
                                                                          var inst_16678 = cljs.core.chunk_first.call(null, inst_16674);
                                                                          var inst_16679 = cljs.core.chunk_rest.call(null, inst_16674);
                                                                          var inst_16680 = cljs.core.count.call(null, inst_16678);
                                                                          var inst_16654 = inst_16679;
                                                                          var inst_16655 = inst_16678;
                                                                          var inst_16656 = inst_16680;
                                                                          var inst_16657 = 0;
                                                                          var state_16777__$1 = function() {
                                                                            var statearr_16828 = state_16777;
                                                                            statearr_16828[14] = inst_16657;
                                                                            statearr_16828[15] = inst_16656;
                                                                            statearr_16828[16] = inst_16655;
                                                                            statearr_16828[17] = inst_16654;
                                                                            return statearr_16828;
                                                                          }();
                                                                          var statearr_16829_16899 = state_16777__$1;
                                                                          statearr_16829_16899[2] = null;
                                                                          statearr_16829_16899[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                        } else {
                                                                          if (state_val_16778 === 20) {
                                                                            var inst_16674 = state_16777[25];
                                                                            var inst_16684 = cljs.core.first.call(null, inst_16674);
                                                                            var inst_16685 = cljs.core.nth.call(null, inst_16684, 0, null);
                                                                            var inst_16686 = cljs.core.nth.call(null, inst_16684, 1, null);
                                                                            var state_16777__$1 = function() {
                                                                              var statearr_16830 = state_16777;
                                                                              statearr_16830[28] = inst_16685;
                                                                              return statearr_16830;
                                                                            }();
                                                                            if (cljs.core.truth_(inst_16686)) {
                                                                              var statearr_16831_16900 = state_16777__$1;
                                                                              statearr_16831_16900[1] = 22;
                                                                            } else {
                                                                              var statearr_16832_16901 = state_16777__$1;
                                                                              statearr_16832_16901[1] = 23;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                          } else {
                                                                            if (state_val_16778 === 21) {
                                                                              var inst_16695 = state_16777[2];
                                                                              var state_16777__$1 = state_16777;
                                                                              var statearr_16833_16902 = state_16777__$1;
                                                                              statearr_16833_16902[2] = inst_16695;
                                                                              statearr_16833_16902[1] = 18;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                            } else {
                                                                              if (state_val_16778 === 22) {
                                                                                var inst_16685 = state_16777[28];
                                                                                var inst_16688 = cljs.core.async.close_BANG_.call(null, inst_16685);
                                                                                var state_16777__$1 = state_16777;
                                                                                var statearr_16834_16903 = state_16777__$1;
                                                                                statearr_16834_16903[2] = inst_16688;
                                                                                statearr_16834_16903[1] = 24;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                              } else {
                                                                                if (state_val_16778 === 23) {
                                                                                  var state_16777__$1 = state_16777;
                                                                                  var statearr_16835_16904 = state_16777__$1;
                                                                                  statearr_16835_16904[2] = null;
                                                                                  statearr_16835_16904[1] = 24;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                } else {
                                                                                  if (state_val_16778 === 24) {
                                                                                    var inst_16674 = state_16777[25];
                                                                                    var inst_16691 = state_16777[2];
                                                                                    var inst_16692 = cljs.core.next.call(null, inst_16674);
                                                                                    var inst_16654 = inst_16692;
                                                                                    var inst_16655 = null;
                                                                                    var inst_16656 = 0;
                                                                                    var inst_16657 = 0;
                                                                                    var state_16777__$1 = function() {
                                                                                      var statearr_16836 = state_16777;
                                                                                      statearr_16836[14] = inst_16657;
                                                                                      statearr_16836[15] = inst_16656;
                                                                                      statearr_16836[16] = inst_16655;
                                                                                      statearr_16836[17] = inst_16654;
                                                                                      statearr_16836[29] = inst_16691;
                                                                                      return statearr_16836;
                                                                                    }();
                                                                                    var statearr_16837_16905 = state_16777__$1;
                                                                                    statearr_16837_16905[2] = null;
                                                                                    statearr_16837_16905[1] = 8;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                  } else {
                                                                                    if (state_val_16778 === 25) {
                                                                                      var inst_16715 = state_16777[12];
                                                                                      var inst_16716 = state_16777[13];
                                                                                      var inst_16718 = inst_16716 < inst_16715;
                                                                                      var inst_16719 = inst_16718;
                                                                                      var state_16777__$1 = state_16777;
                                                                                      if (cljs.core.truth_(inst_16719)) {
                                                                                        var statearr_16838_16906 = state_16777__$1;
                                                                                        statearr_16838_16906[1] = 27;
                                                                                      } else {
                                                                                        var statearr_16839_16907 = state_16777__$1;
                                                                                        statearr_16839_16907[1] = 28;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                    } else {
                                                                                      if (state_val_16778 === 26) {
                                                                                        var inst_16705 = state_16777[19];
                                                                                        var inst_16763 = state_16777[2];
                                                                                        var inst_16764 = cljs.core.seq.call(null, inst_16705);
                                                                                        var state_16777__$1 = function() {
                                                                                          var statearr_16840 = state_16777;
                                                                                          statearr_16840[30] = inst_16763;
                                                                                          return statearr_16840;
                                                                                        }();
                                                                                        if (inst_16764) {
                                                                                          var statearr_16841_16908 = state_16777__$1;
                                                                                          statearr_16841_16908[1] = 42;
                                                                                        } else {
                                                                                          var statearr_16842_16909 = state_16777__$1;
                                                                                          statearr_16842_16909[1] = 43;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                      } else {
                                                                                        if (state_val_16778 === 27) {
                                                                                          var inst_16714 = state_16777[11];
                                                                                          var inst_16716 = state_16777[13];
                                                                                          var inst_16721 = cljs.core._nth.call(null, inst_16714, inst_16716);
                                                                                          var state_16777__$1 = function() {
                                                                                            var statearr_16843 = state_16777;
                                                                                            statearr_16843[8] = inst_16721;
                                                                                            return statearr_16843;
                                                                                          }();
                                                                                          var statearr_16844_16910 = state_16777__$1;
                                                                                          statearr_16844_16910[2] = null;
                                                                                          statearr_16844_16910[1] = 32;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                        } else {
                                                                                          if (state_val_16778 === 28) {
                                                                                            var inst_16713 = state_16777[10];
                                                                                            var inst_16734 = state_16777[9];
                                                                                            var inst_16734__$1 = cljs.core.seq.call(null, inst_16713);
                                                                                            var state_16777__$1 = function() {
                                                                                              var statearr_16848 = state_16777;
                                                                                              statearr_16848[9] = inst_16734__$1;
                                                                                              return statearr_16848;
                                                                                            }();
                                                                                            if (inst_16734__$1) {
                                                                                              var statearr_16849_16911 = state_16777__$1;
                                                                                              statearr_16849_16911[1] = 33;
                                                                                            } else {
                                                                                              var statearr_16850_16912 = state_16777__$1;
                                                                                              statearr_16850_16912[1] = 34;
                                                                                            }
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                          } else {
                                                                                            if (state_val_16778 === 29) {
                                                                                              var inst_16761 = state_16777[2];
                                                                                              var state_16777__$1 = state_16777;
                                                                                              var statearr_16851_16913 = state_16777__$1;
                                                                                              statearr_16851_16913[2] = inst_16761;
                                                                                              statearr_16851_16913[1] = 26;
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                            } else {
                                                                                              if (state_val_16778 === 30) {
                                                                                                var inst_16713 = state_16777[10];
                                                                                                var inst_16714 = state_16777[11];
                                                                                                var inst_16715 = state_16777[12];
                                                                                                var inst_16716 = state_16777[13];
                                                                                                var inst_16730 = state_16777[2];
                                                                                                var inst_16731 = inst_16716 + 1;
                                                                                                var tmp16845 = inst_16713;
                                                                                                var tmp16846 = inst_16714;
                                                                                                var tmp16847 = inst_16715;
                                                                                                var inst_16713__$1 = tmp16845;
                                                                                                var inst_16714__$1 = tmp16846;
                                                                                                var inst_16715__$1 = tmp16847;
                                                                                                var inst_16716__$1 = inst_16731;
                                                                                                var state_16777__$1 = function() {
                                                                                                  var statearr_16852 = state_16777;
                                                                                                  statearr_16852[10] = inst_16713__$1;
                                                                                                  statearr_16852[31] = inst_16730;
                                                                                                  statearr_16852[11] = inst_16714__$1;
                                                                                                  statearr_16852[12] = inst_16715__$1;
                                                                                                  statearr_16852[13] = inst_16716__$1;
                                                                                                  return statearr_16852;
                                                                                                }();
                                                                                                var statearr_16853_16914 = state_16777__$1;
                                                                                                statearr_16853_16914[2] = null;
                                                                                                statearr_16853_16914[1] = 25;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                              } else {
                                                                                                if (state_val_16778 === 31) {
                                                                                                  var inst_16721 = state_16777[8];
                                                                                                  var inst_16722 = state_16777[2];
                                                                                                  var inst_16723 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                                                                                  var inst_16724 = cljs.core.async.untap_STAR_.call(null, m, inst_16721);
                                                                                                  var state_16777__$1 = function() {
                                                                                                    var statearr_16854 = state_16777;
                                                                                                    statearr_16854[32] = inst_16723;
                                                                                                    statearr_16854[33] = inst_16722;
                                                                                                    return statearr_16854;
                                                                                                  }();
                                                                                                  var statearr_16855_16915 = state_16777__$1;
                                                                                                  statearr_16855_16915[2] = inst_16724;
                                                                                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16777__$1);
                                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                                } else {
                                                                                                  return null;
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__6137__auto__) {
        return function() {
          var state_machine__6138__auto__ = null;
          var state_machine__6138__auto____0 = function() {
            var statearr_16859 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            statearr_16859[0] = state_machine__6138__auto__;
            statearr_16859[1] = 1;
            return statearr_16859;
          };
          var state_machine__6138__auto____1 = function(state_16777) {
            while (true) {
              var ret_value__6139__auto__ = function() {
                try {
                  while (true) {
                    var result__6140__auto__ = switch__6137__auto__.call(null, state_16777);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__6140__auto__;
                    }
                    break;
                  }
                } catch (e16860) {
                  if (e16860 instanceof Object) {
                    var ex__6141__auto__ = e16860;
                    var statearr_16861_16916 = state_16777;
                    statearr_16861_16916[5] = ex__6141__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16777);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e16860;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__16917 = state_16777;
                state_16777 = G__16917;
                continue;
              } else {
                return ret_value__6139__auto__;
              }
              break;
            }
          };
          state_machine__6138__auto__ = function(state_16777) {
            switch(arguments.length) {
              case 0:
                return state_machine__6138__auto____0.call(this);
              case 1:
                return state_machine__6138__auto____1.call(this, state_16777);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
          state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
          return state_machine__6138__auto__;
        }();
      }(switch__6137__auto__);
    }();
    var state__6154__auto__ = function() {
      var statearr_16862 = f__6153__auto__.call(null);
      statearr_16862[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___16863;
      return statearr_16862;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
  });
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj16919 = {};
  return obj16919;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3391__auto__ = m;
    if (and__3391__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4030__auto__ = m == null ? null : m;
    return function() {
      var or__3403__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3391__auto__ = m;
    if (and__3391__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4030__auto__ = m == null ? null : m;
    return function() {
      var or__3403__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3391__auto__ = m;
    if (and__3391__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4030__auto__ = m == null ? null : m;
    return function() {
      var or__3403__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3391__auto__ = m;
    if (and__3391__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4030__auto__ = m == null ? null : m;
    return function() {
      var or__3403__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3391__auto__ = m;
    if (and__3391__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4030__auto__ = m == null ? null : m;
    return function() {
      var or__3403__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", 1120344424), null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", 1017440337));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", 1017440337), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", 1120344424), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1123523302), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), chs), new cljs.core.Keyword(null, "reads", "reads", 1122290959), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", 1120344424)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t17029 !== "undefined") {
    } else {
      cljs.core.async.t17029 = function(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, meta17030) {
        this.pick = pick;
        this.out = out;
        this.attrs = attrs;
        this.cs = cs;
        this.calc_state = calc_state;
        this.solo_modes = solo_modes;
        this.mix = mix;
        this.changed = changed;
        this.change = change;
        this.solo_mode = solo_mode;
        this.meta17030 = meta17030;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t17029.cljs$lang$type = true;
      cljs.core.async.t17029.cljs$lang$ctorStr = "cljs.core.async/t17029";
      cljs.core.async.t17029.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
          return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t17029");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17029.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t17029.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17029.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17029.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17029.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17029.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", -1162732933, null), new cljs.core.Symbol(null, "mode", "mode", -1637174436, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17029.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t17029.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17029.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_17031) {
          var self__ = this;
          var _17031__$1 = this;
          return self__.meta17030;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17029.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_17031, meta17030__$1) {
          var self__ = this;
          var _17031__$1 = this;
          return new cljs.core.async.t17029(self__.pick, self__.out, self__.attrs, self__.cs, self__.calc_state, self__.solo_modes, self__.mix, self__.changed, self__.change, self__.solo_mode, meta17030__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t17029 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t17029(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta17030) {
          return new cljs.core.async.t17029(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta17030);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t17029(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, null);
  }();
  var c__6152__auto___17138 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__6153__auto__ = function() {
      var switch__6137__auto__ = function(state_17096) {
        var state_val_17097 = state_17096[1];
        if (state_val_17097 === 1) {
          var inst_17035 = state_17096[7];
          var inst_17035__$1 = calc_state.call(null);
          var inst_17036 = cljs.core.seq_QMARK_.call(null, inst_17035__$1);
          var state_17096__$1 = function() {
            var statearr_17098 = state_17096;
            statearr_17098[7] = inst_17035__$1;
            return statearr_17098;
          }();
          if (inst_17036) {
            var statearr_17099_17139 = state_17096__$1;
            statearr_17099_17139[1] = 2;
          } else {
            var statearr_17100_17140 = state_17096__$1;
            statearr_17100_17140[1] = 3;
          }
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_17097 === 2) {
            var inst_17035 = state_17096[7];
            var inst_17038 = cljs.core.apply.call(null, cljs.core.hash_map, inst_17035);
            var state_17096__$1 = state_17096;
            var statearr_17101_17141 = state_17096__$1;
            statearr_17101_17141[2] = inst_17038;
            statearr_17101_17141[1] = 4;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_17097 === 3) {
              var inst_17035 = state_17096[7];
              var state_17096__$1 = state_17096;
              var statearr_17102_17142 = state_17096__$1;
              statearr_17102_17142[2] = inst_17035;
              statearr_17102_17142[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_17097 === 4) {
                var inst_17035 = state_17096[7];
                var inst_17041 = state_17096[2];
                var inst_17042 = cljs.core.get.call(null, inst_17041, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                var inst_17043 = cljs.core.get.call(null, inst_17041, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                var inst_17044 = cljs.core.get.call(null, inst_17041, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                var inst_17045 = inst_17035;
                var state_17096__$1 = function() {
                  var statearr_17103 = state_17096;
                  statearr_17103[8] = inst_17044;
                  statearr_17103[9] = inst_17043;
                  statearr_17103[10] = inst_17045;
                  statearr_17103[11] = inst_17042;
                  return statearr_17103;
                }();
                var statearr_17104_17143 = state_17096__$1;
                statearr_17104_17143[2] = null;
                statearr_17104_17143[1] = 5;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_17097 === 5) {
                  var inst_17045 = state_17096[10];
                  var inst_17048 = cljs.core.seq_QMARK_.call(null, inst_17045);
                  var state_17096__$1 = state_17096;
                  if (inst_17048) {
                    var statearr_17105_17144 = state_17096__$1;
                    statearr_17105_17144[1] = 7;
                  } else {
                    var statearr_17106_17145 = state_17096__$1;
                    statearr_17106_17145[1] = 8;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_17097 === 6) {
                    var inst_17094 = state_17096[2];
                    var state_17096__$1 = state_17096;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17096__$1, inst_17094);
                  } else {
                    if (state_val_17097 === 7) {
                      var inst_17045 = state_17096[10];
                      var inst_17050 = cljs.core.apply.call(null, cljs.core.hash_map, inst_17045);
                      var state_17096__$1 = state_17096;
                      var statearr_17107_17146 = state_17096__$1;
                      statearr_17107_17146[2] = inst_17050;
                      statearr_17107_17146[1] = 9;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_17097 === 8) {
                        var inst_17045 = state_17096[10];
                        var state_17096__$1 = state_17096;
                        var statearr_17108_17147 = state_17096__$1;
                        statearr_17108_17147[2] = inst_17045;
                        statearr_17108_17147[1] = 9;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_17097 === 9) {
                          var inst_17053 = state_17096[12];
                          var inst_17053__$1 = state_17096[2];
                          var inst_17054 = cljs.core.get.call(null, inst_17053__$1, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                          var inst_17055 = cljs.core.get.call(null, inst_17053__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                          var inst_17056 = cljs.core.get.call(null, inst_17053__$1, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                          var state_17096__$1 = function() {
                            var statearr_17109 = state_17096;
                            statearr_17109[12] = inst_17053__$1;
                            statearr_17109[13] = inst_17055;
                            statearr_17109[14] = inst_17056;
                            return statearr_17109;
                          }();
                          return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_17096__$1, 10, inst_17054);
                        } else {
                          if (state_val_17097 === 10) {
                            var inst_17061 = state_17096[15];
                            var inst_17060 = state_17096[16];
                            var inst_17059 = state_17096[2];
                            var inst_17060__$1 = cljs.core.nth.call(null, inst_17059, 0, null);
                            var inst_17061__$1 = cljs.core.nth.call(null, inst_17059, 1, null);
                            var inst_17062 = inst_17060__$1 == null;
                            var inst_17063 = cljs.core._EQ_.call(null, inst_17061__$1, change);
                            var inst_17064 = inst_17062 || inst_17063;
                            var state_17096__$1 = function() {
                              var statearr_17110 = state_17096;
                              statearr_17110[15] = inst_17061__$1;
                              statearr_17110[16] = inst_17060__$1;
                              return statearr_17110;
                            }();
                            if (cljs.core.truth_(inst_17064)) {
                              var statearr_17111_17148 = state_17096__$1;
                              statearr_17111_17148[1] = 11;
                            } else {
                              var statearr_17112_17149 = state_17096__$1;
                              statearr_17112_17149[1] = 12;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_17097 === 11) {
                              var inst_17060 = state_17096[16];
                              var inst_17066 = inst_17060 == null;
                              var state_17096__$1 = state_17096;
                              if (cljs.core.truth_(inst_17066)) {
                                var statearr_17113_17150 = state_17096__$1;
                                statearr_17113_17150[1] = 14;
                              } else {
                                var statearr_17114_17151 = state_17096__$1;
                                statearr_17114_17151[1] = 15;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_17097 === 12) {
                                var inst_17061 = state_17096[15];
                                var inst_17056 = state_17096[14];
                                var inst_17075 = state_17096[17];
                                var inst_17075__$1 = inst_17056.call(null, inst_17061);
                                var state_17096__$1 = function() {
                                  var statearr_17115 = state_17096;
                                  statearr_17115[17] = inst_17075__$1;
                                  return statearr_17115;
                                }();
                                if (cljs.core.truth_(inst_17075__$1)) {
                                  var statearr_17116_17152 = state_17096__$1;
                                  statearr_17116_17152[1] = 17;
                                } else {
                                  var statearr_17117_17153 = state_17096__$1;
                                  statearr_17117_17153[1] = 18;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_17097 === 13) {
                                  var inst_17092 = state_17096[2];
                                  var state_17096__$1 = state_17096;
                                  var statearr_17118_17154 = state_17096__$1;
                                  statearr_17118_17154[2] = inst_17092;
                                  statearr_17118_17154[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_17097 === 14) {
                                    var inst_17061 = state_17096[15];
                                    var inst_17068 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_17061);
                                    var state_17096__$1 = state_17096;
                                    var statearr_17119_17155 = state_17096__$1;
                                    statearr_17119_17155[2] = inst_17068;
                                    statearr_17119_17155[1] = 16;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_17097 === 15) {
                                      var state_17096__$1 = state_17096;
                                      var statearr_17120_17156 = state_17096__$1;
                                      statearr_17120_17156[2] = null;
                                      statearr_17120_17156[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_17097 === 16) {
                                        var inst_17071 = state_17096[2];
                                        var inst_17072 = calc_state.call(null);
                                        var inst_17045 = inst_17072;
                                        var state_17096__$1 = function() {
                                          var statearr_17121 = state_17096;
                                          statearr_17121[10] = inst_17045;
                                          statearr_17121[18] = inst_17071;
                                          return statearr_17121;
                                        }();
                                        var statearr_17122_17157 = state_17096__$1;
                                        statearr_17122_17157[2] = null;
                                        statearr_17122_17157[1] = 5;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_17097 === 17) {
                                          var inst_17075 = state_17096[17];
                                          var state_17096__$1 = state_17096;
                                          var statearr_17123_17158 = state_17096__$1;
                                          statearr_17123_17158[2] = inst_17075;
                                          statearr_17123_17158[1] = 19;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_17097 === 18) {
                                            var inst_17061 = state_17096[15];
                                            var inst_17055 = state_17096[13];
                                            var inst_17056 = state_17096[14];
                                            var inst_17078 = cljs.core.empty_QMARK_.call(null, inst_17056);
                                            var inst_17079 = inst_17055.call(null, inst_17061);
                                            var inst_17080 = cljs.core.not.call(null, inst_17079);
                                            var inst_17081 = inst_17078 && inst_17080;
                                            var state_17096__$1 = state_17096;
                                            var statearr_17124_17159 = state_17096__$1;
                                            statearr_17124_17159[2] = inst_17081;
                                            statearr_17124_17159[1] = 19;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_17097 === 19) {
                                              var inst_17083 = state_17096[2];
                                              var state_17096__$1 = state_17096;
                                              if (cljs.core.truth_(inst_17083)) {
                                                var statearr_17125_17160 = state_17096__$1;
                                                statearr_17125_17160[1] = 20;
                                              } else {
                                                var statearr_17126_17161 = state_17096__$1;
                                                statearr_17126_17161[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_17097 === 20) {
                                                var inst_17060 = state_17096[16];
                                                var state_17096__$1 = state_17096;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17096__$1, 23, out, inst_17060);
                                              } else {
                                                if (state_val_17097 === 21) {
                                                  var state_17096__$1 = state_17096;
                                                  var statearr_17127_17162 = state_17096__$1;
                                                  statearr_17127_17162[2] = null;
                                                  statearr_17127_17162[1] = 22;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_17097 === 22) {
                                                    var inst_17053 = state_17096[12];
                                                    var inst_17089 = state_17096[2];
                                                    var inst_17045 = inst_17053;
                                                    var state_17096__$1 = function() {
                                                      var statearr_17128 = state_17096;
                                                      statearr_17128[19] = inst_17089;
                                                      statearr_17128[10] = inst_17045;
                                                      return statearr_17128;
                                                    }();
                                                    var statearr_17129_17163 = state_17096__$1;
                                                    statearr_17129_17163[2] = null;
                                                    statearr_17129_17163[1] = 5;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_17097 === 23) {
                                                      var inst_17086 = state_17096[2];
                                                      var state_17096__$1 = state_17096;
                                                      var statearr_17130_17164 = state_17096__$1;
                                                      statearr_17130_17164[2] = inst_17086;
                                                      statearr_17130_17164[1] = 22;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__6137__auto__) {
        return function() {
          var state_machine__6138__auto__ = null;
          var state_machine__6138__auto____0 = function() {
            var statearr_17134 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            statearr_17134[0] = state_machine__6138__auto__;
            statearr_17134[1] = 1;
            return statearr_17134;
          };
          var state_machine__6138__auto____1 = function(state_17096) {
            while (true) {
              var ret_value__6139__auto__ = function() {
                try {
                  while (true) {
                    var result__6140__auto__ = switch__6137__auto__.call(null, state_17096);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__6140__auto__;
                    }
                    break;
                  }
                } catch (e17135) {
                  if (e17135 instanceof Object) {
                    var ex__6141__auto__ = e17135;
                    var statearr_17136_17165 = state_17096;
                    statearr_17136_17165[5] = ex__6141__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17096);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e17135;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__17166 = state_17096;
                state_17096 = G__17166;
                continue;
              } else {
                return ret_value__6139__auto__;
              }
              break;
            }
          };
          state_machine__6138__auto__ = function(state_17096) {
            switch(arguments.length) {
              case 0:
                return state_machine__6138__auto____0.call(this);
              case 1:
                return state_machine__6138__auto____1.call(this, state_17096);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
          state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
          return state_machine__6138__auto__;
        }();
      }(switch__6137__auto__);
    }();
    var state__6154__auto__ = function() {
      var statearr_17137 = f__6153__auto__.call(null);
      statearr_17137[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___17138;
      return statearr_17137;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
  });
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj17168 = {};
  return obj17168;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3391__auto__ = p;
    if (and__3391__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4030__auto__ = p == null ? null : p;
    return function() {
      var or__3403__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3391__auto__ = p;
    if (and__3391__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4030__auto__ = p == null ? null : p;
    return function() {
      var or__3403__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3391__auto__ = p;
      if (and__3391__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4030__auto__ = p == null ? null : p;
      return function() {
        var or__3403__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3391__auto__ = p;
      if (and__3391__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3391__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4030__auto__ = p == null ? null : p;
      return function() {
        var or__3403__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4030__auto__)];
        if (or__3403__auto__) {
          return or__3403__auto__;
        } else {
          var or__3403__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3403__auto____$1) {
            return or__3403__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3403__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3403__auto__, mults) {
            return function(p1__17169_SHARP_) {
              if (cljs.core.truth_(p1__17169_SHARP_.call(null, topic))) {
                return p1__17169_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__17169_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3403__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t17294 !== "undefined") {
      } else {
        cljs.core.async.t17294 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta17295) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta17295 = meta17295;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t17294.cljs$lang$type = true;
        cljs.core.async.t17294.cljs$lang$ctorStr = "cljs.core.async/t17294";
        cljs.core.async.t17294.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
            return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t17294");
          };
        }(mults, ensure_mult);
        cljs.core.async.t17294.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t17294.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t17294.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var p__$1 = this;
            var temp__4092__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4092__auto__)) {
              var m = temp__4092__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t17294.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t17294.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t17294.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t17294.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t17294.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_17296) {
            var self__ = this;
            var _17296__$1 = this;
            return self__.meta17295;
          };
        }(mults, ensure_mult);
        cljs.core.async.t17294.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_17296, meta17295__$1) {
            var self__ = this;
            var _17296__$1 = this;
            return new cljs.core.async.t17294(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta17295__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t17294 = function(mults, ensure_mult) {
          return function __GT_t17294(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta17295) {
            return new cljs.core.async.t17294(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta17295);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t17294(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null);
    }();
    var c__6152__auto___17418 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6153__auto__ = function() {
        var switch__6137__auto__ = function(state_17370) {
          var state_val_17371 = state_17370[1];
          if (state_val_17371 === 1) {
            var state_17370__$1 = state_17370;
            var statearr_17372_17419 = state_17370__$1;
            statearr_17372_17419[2] = null;
            statearr_17372_17419[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_17371 === 2) {
              var state_17370__$1 = state_17370;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17370__$1, 4, ch);
            } else {
              if (state_val_17371 === 3) {
                var inst_17368 = state_17370[2];
                var state_17370__$1 = state_17370;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17370__$1, inst_17368);
              } else {
                if (state_val_17371 === 4) {
                  var inst_17299 = state_17370[7];
                  var inst_17299__$1 = state_17370[2];
                  var inst_17300 = inst_17299__$1 == null;
                  var state_17370__$1 = function() {
                    var statearr_17373 = state_17370;
                    statearr_17373[7] = inst_17299__$1;
                    return statearr_17373;
                  }();
                  if (cljs.core.truth_(inst_17300)) {
                    var statearr_17374_17420 = state_17370__$1;
                    statearr_17374_17420[1] = 5;
                  } else {
                    var statearr_17375_17421 = state_17370__$1;
                    statearr_17375_17421[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_17371 === 5) {
                    var inst_17306 = cljs.core.deref.call(null, mults);
                    var inst_17307 = cljs.core.vals.call(null, inst_17306);
                    var inst_17308 = cljs.core.seq.call(null, inst_17307);
                    var inst_17309 = inst_17308;
                    var inst_17310 = null;
                    var inst_17311 = 0;
                    var inst_17312 = 0;
                    var state_17370__$1 = function() {
                      var statearr_17376 = state_17370;
                      statearr_17376[8] = inst_17311;
                      statearr_17376[9] = inst_17312;
                      statearr_17376[10] = inst_17310;
                      statearr_17376[11] = inst_17309;
                      return statearr_17376;
                    }();
                    var statearr_17377_17422 = state_17370__$1;
                    statearr_17377_17422[2] = null;
                    statearr_17377_17422[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_17371 === 6) {
                      var inst_17299 = state_17370[7];
                      var inst_17349 = state_17370[12];
                      var inst_17347 = state_17370[13];
                      var inst_17347__$1 = topic_fn.call(null, inst_17299);
                      var inst_17348 = cljs.core.deref.call(null, mults);
                      var inst_17349__$1 = cljs.core.get.call(null, inst_17348, inst_17347__$1);
                      var state_17370__$1 = function() {
                        var statearr_17378 = state_17370;
                        statearr_17378[12] = inst_17349__$1;
                        statearr_17378[13] = inst_17347__$1;
                        return statearr_17378;
                      }();
                      if (cljs.core.truth_(inst_17349__$1)) {
                        var statearr_17379_17423 = state_17370__$1;
                        statearr_17379_17423[1] = 19;
                      } else {
                        var statearr_17380_17424 = state_17370__$1;
                        statearr_17380_17424[1] = 20;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_17371 === 7) {
                        var inst_17366 = state_17370[2];
                        var state_17370__$1 = state_17370;
                        var statearr_17381_17425 = state_17370__$1;
                        statearr_17381_17425[2] = inst_17366;
                        statearr_17381_17425[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_17371 === 8) {
                          var inst_17311 = state_17370[8];
                          var inst_17312 = state_17370[9];
                          var inst_17314 = inst_17312 < inst_17311;
                          var inst_17315 = inst_17314;
                          var state_17370__$1 = state_17370;
                          if (cljs.core.truth_(inst_17315)) {
                            var statearr_17385_17426 = state_17370__$1;
                            statearr_17385_17426[1] = 10;
                          } else {
                            var statearr_17386_17427 = state_17370__$1;
                            statearr_17386_17427[1] = 11;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_17371 === 9) {
                            var inst_17345 = state_17370[2];
                            var state_17370__$1 = state_17370;
                            var statearr_17387_17428 = state_17370__$1;
                            statearr_17387_17428[2] = inst_17345;
                            statearr_17387_17428[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_17371 === 10) {
                              var inst_17311 = state_17370[8];
                              var inst_17312 = state_17370[9];
                              var inst_17310 = state_17370[10];
                              var inst_17309 = state_17370[11];
                              var inst_17317 = cljs.core._nth.call(null, inst_17310, inst_17312);
                              var inst_17318 = cljs.core.async.muxch_STAR_.call(null, inst_17317);
                              var inst_17319 = cljs.core.async.close_BANG_.call(null, inst_17318);
                              var inst_17320 = inst_17312 + 1;
                              var tmp17382 = inst_17311;
                              var tmp17383 = inst_17310;
                              var tmp17384 = inst_17309;
                              var inst_17309__$1 = tmp17384;
                              var inst_17310__$1 = tmp17383;
                              var inst_17311__$1 = tmp17382;
                              var inst_17312__$1 = inst_17320;
                              var state_17370__$1 = function() {
                                var statearr_17388 = state_17370;
                                statearr_17388[8] = inst_17311__$1;
                                statearr_17388[9] = inst_17312__$1;
                                statearr_17388[14] = inst_17319;
                                statearr_17388[10] = inst_17310__$1;
                                statearr_17388[11] = inst_17309__$1;
                                return statearr_17388;
                              }();
                              var statearr_17389_17429 = state_17370__$1;
                              statearr_17389_17429[2] = null;
                              statearr_17389_17429[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_17371 === 11) {
                                var inst_17323 = state_17370[15];
                                var inst_17309 = state_17370[11];
                                var inst_17323__$1 = cljs.core.seq.call(null, inst_17309);
                                var state_17370__$1 = function() {
                                  var statearr_17390 = state_17370;
                                  statearr_17390[15] = inst_17323__$1;
                                  return statearr_17390;
                                }();
                                if (inst_17323__$1) {
                                  var statearr_17391_17430 = state_17370__$1;
                                  statearr_17391_17430[1] = 13;
                                } else {
                                  var statearr_17392_17431 = state_17370__$1;
                                  statearr_17392_17431[1] = 14;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_17371 === 12) {
                                  var inst_17343 = state_17370[2];
                                  var state_17370__$1 = state_17370;
                                  var statearr_17393_17432 = state_17370__$1;
                                  statearr_17393_17432[2] = inst_17343;
                                  statearr_17393_17432[1] = 9;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_17371 === 13) {
                                    var inst_17323 = state_17370[15];
                                    var inst_17325 = cljs.core.chunked_seq_QMARK_.call(null, inst_17323);
                                    var state_17370__$1 = state_17370;
                                    if (inst_17325) {
                                      var statearr_17394_17433 = state_17370__$1;
                                      statearr_17394_17433[1] = 16;
                                    } else {
                                      var statearr_17395_17434 = state_17370__$1;
                                      statearr_17395_17434[1] = 17;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_17371 === 14) {
                                      var state_17370__$1 = state_17370;
                                      var statearr_17396_17435 = state_17370__$1;
                                      statearr_17396_17435[2] = null;
                                      statearr_17396_17435[1] = 15;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_17371 === 15) {
                                        var inst_17341 = state_17370[2];
                                        var state_17370__$1 = state_17370;
                                        var statearr_17397_17436 = state_17370__$1;
                                        statearr_17397_17436[2] = inst_17341;
                                        statearr_17397_17436[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_17371 === 16) {
                                          var inst_17323 = state_17370[15];
                                          var inst_17327 = cljs.core.chunk_first.call(null, inst_17323);
                                          var inst_17328 = cljs.core.chunk_rest.call(null, inst_17323);
                                          var inst_17329 = cljs.core.count.call(null, inst_17327);
                                          var inst_17309 = inst_17328;
                                          var inst_17310 = inst_17327;
                                          var inst_17311 = inst_17329;
                                          var inst_17312 = 0;
                                          var state_17370__$1 = function() {
                                            var statearr_17398 = state_17370;
                                            statearr_17398[8] = inst_17311;
                                            statearr_17398[9] = inst_17312;
                                            statearr_17398[10] = inst_17310;
                                            statearr_17398[11] = inst_17309;
                                            return statearr_17398;
                                          }();
                                          var statearr_17399_17437 = state_17370__$1;
                                          statearr_17399_17437[2] = null;
                                          statearr_17399_17437[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_17371 === 17) {
                                            var inst_17323 = state_17370[15];
                                            var inst_17332 = cljs.core.first.call(null, inst_17323);
                                            var inst_17333 = cljs.core.async.muxch_STAR_.call(null, inst_17332);
                                            var inst_17334 = cljs.core.async.close_BANG_.call(null, inst_17333);
                                            var inst_17335 = cljs.core.next.call(null, inst_17323);
                                            var inst_17309 = inst_17335;
                                            var inst_17310 = null;
                                            var inst_17311 = 0;
                                            var inst_17312 = 0;
                                            var state_17370__$1 = function() {
                                              var statearr_17400 = state_17370;
                                              statearr_17400[8] = inst_17311;
                                              statearr_17400[9] = inst_17312;
                                              statearr_17400[10] = inst_17310;
                                              statearr_17400[11] = inst_17309;
                                              statearr_17400[16] = inst_17334;
                                              return statearr_17400;
                                            }();
                                            var statearr_17401_17438 = state_17370__$1;
                                            statearr_17401_17438[2] = null;
                                            statearr_17401_17438[1] = 8;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_17371 === 18) {
                                              var inst_17338 = state_17370[2];
                                              var state_17370__$1 = state_17370;
                                              var statearr_17402_17439 = state_17370__$1;
                                              statearr_17402_17439[2] = inst_17338;
                                              statearr_17402_17439[1] = 15;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_17371 === 19) {
                                                var state_17370__$1 = state_17370;
                                                var statearr_17403_17440 = state_17370__$1;
                                                statearr_17403_17440[2] = null;
                                                statearr_17403_17440[1] = 24;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_17371 === 20) {
                                                  var state_17370__$1 = state_17370;
                                                  var statearr_17404_17441 = state_17370__$1;
                                                  statearr_17404_17441[2] = null;
                                                  statearr_17404_17441[1] = 21;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_17371 === 21) {
                                                    var inst_17363 = state_17370[2];
                                                    var state_17370__$1 = function() {
                                                      var statearr_17405 = state_17370;
                                                      statearr_17405[17] = inst_17363;
                                                      return statearr_17405;
                                                    }();
                                                    var statearr_17406_17442 = state_17370__$1;
                                                    statearr_17406_17442[2] = null;
                                                    statearr_17406_17442[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_17371 === 22) {
                                                      var inst_17360 = state_17370[2];
                                                      var state_17370__$1 = state_17370;
                                                      var statearr_17407_17443 = state_17370__$1;
                                                      statearr_17407_17443[2] = inst_17360;
                                                      statearr_17407_17443[1] = 21;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_17371 === 23) {
                                                        var inst_17347 = state_17370[13];
                                                        var inst_17351 = state_17370[2];
                                                        var inst_17352 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_17347);
                                                        var state_17370__$1 = function() {
                                                          var statearr_17408 = state_17370;
                                                          statearr_17408[18] = inst_17351;
                                                          return statearr_17408;
                                                        }();
                                                        var statearr_17409_17444 = state_17370__$1;
                                                        statearr_17409_17444[2] = inst_17352;
                                                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17370__$1);
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_17371 === 24) {
                                                          var inst_17299 = state_17370[7];
                                                          var inst_17349 = state_17370[12];
                                                          var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_17370, 23, Object, null, 22);
                                                          var inst_17356 = cljs.core.async.muxch_STAR_.call(null, inst_17349);
                                                          var state_17370__$1 = state_17370;
                                                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17370__$1, 25, inst_17356, inst_17299);
                                                        } else {
                                                          if (state_val_17371 === 25) {
                                                            var inst_17358 = state_17370[2];
                                                            var state_17370__$1 = state_17370;
                                                            var statearr_17410_17445 = state_17370__$1;
                                                            statearr_17410_17445[2] = inst_17358;
                                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17370__$1);
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                          } else {
                                                            return null;
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6137__auto__) {
          return function() {
            var state_machine__6138__auto__ = null;
            var state_machine__6138__auto____0 = function() {
              var statearr_17414 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_17414[0] = state_machine__6138__auto__;
              statearr_17414[1] = 1;
              return statearr_17414;
            };
            var state_machine__6138__auto____1 = function(state_17370) {
              while (true) {
                var ret_value__6139__auto__ = function() {
                  try {
                    while (true) {
                      var result__6140__auto__ = switch__6137__auto__.call(null, state_17370);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6140__auto__;
                      }
                      break;
                    }
                  } catch (e17415) {
                    if (e17415 instanceof Object) {
                      var ex__6141__auto__ = e17415;
                      var statearr_17416_17446 = state_17370;
                      statearr_17416_17446[5] = ex__6141__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17370);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e17415;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__17447 = state_17370;
                  state_17370 = G__17447;
                  continue;
                } else {
                  return ret_value__6139__auto__;
                }
                break;
              }
            };
            state_machine__6138__auto__ = function(state_17370) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6138__auto____0.call(this);
                case 1:
                  return state_machine__6138__auto____1.call(this, state_17370);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
            return state_machine__6138__auto__;
          }();
        }(switch__6137__auto__);
      }();
      var state__6154__auto__ = function() {
        var statearr_17417 = f__6153__auto__.call(null);
        statearr_17417[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___17418;
        return statearr_17417;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
    });
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__6152__auto___17584 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6153__auto__ = function() {
        var switch__6137__auto__ = function(state_17554) {
          var state_val_17555 = state_17554[1];
          if (state_val_17555 === 1) {
            var state_17554__$1 = state_17554;
            var statearr_17556_17585 = state_17554__$1;
            statearr_17556_17585[2] = null;
            statearr_17556_17585[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_17555 === 2) {
              var inst_17517 = cljs.core.reset_BANG_.call(null, dctr, cnt);
              var inst_17518 = 0;
              var state_17554__$1 = function() {
                var statearr_17557 = state_17554;
                statearr_17557[7] = inst_17517;
                statearr_17557[8] = inst_17518;
                return statearr_17557;
              }();
              var statearr_17558_17586 = state_17554__$1;
              statearr_17558_17586[2] = null;
              statearr_17558_17586[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_17555 === 3) {
                var inst_17552 = state_17554[2];
                var state_17554__$1 = state_17554;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17554__$1, inst_17552);
              } else {
                if (state_val_17555 === 4) {
                  var inst_17518 = state_17554[8];
                  var inst_17520 = inst_17518 < cnt;
                  var state_17554__$1 = state_17554;
                  if (cljs.core.truth_(inst_17520)) {
                    var statearr_17559_17587 = state_17554__$1;
                    statearr_17559_17587[1] = 6;
                  } else {
                    var statearr_17560_17588 = state_17554__$1;
                    statearr_17560_17588[1] = 7;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_17555 === 5) {
                    var inst_17538 = state_17554[2];
                    var state_17554__$1 = function() {
                      var statearr_17561 = state_17554;
                      statearr_17561[9] = inst_17538;
                      return statearr_17561;
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17554__$1, 12, dchan);
                  } else {
                    if (state_val_17555 === 6) {
                      var state_17554__$1 = state_17554;
                      var statearr_17562_17589 = state_17554__$1;
                      statearr_17562_17589[2] = null;
                      statearr_17562_17589[1] = 11;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_17555 === 7) {
                        var state_17554__$1 = state_17554;
                        var statearr_17563_17590 = state_17554__$1;
                        statearr_17563_17590[2] = null;
                        statearr_17563_17590[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_17555 === 8) {
                          var inst_17536 = state_17554[2];
                          var state_17554__$1 = state_17554;
                          var statearr_17564_17591 = state_17554__$1;
                          statearr_17564_17591[2] = inst_17536;
                          statearr_17564_17591[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_17555 === 9) {
                            var inst_17518 = state_17554[8];
                            var inst_17531 = state_17554[2];
                            var inst_17532 = inst_17518 + 1;
                            var inst_17518__$1 = inst_17532;
                            var state_17554__$1 = function() {
                              var statearr_17565 = state_17554;
                              statearr_17565[8] = inst_17518__$1;
                              statearr_17565[10] = inst_17531;
                              return statearr_17565;
                            }();
                            var statearr_17566_17592 = state_17554__$1;
                            statearr_17566_17592[2] = null;
                            statearr_17566_17592[1] = 4;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_17555 === 10) {
                              var inst_17522 = state_17554[2];
                              var inst_17523 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                              var state_17554__$1 = function() {
                                var statearr_17567 = state_17554;
                                statearr_17567[11] = inst_17522;
                                return statearr_17567;
                              }();
                              var statearr_17568_17593 = state_17554__$1;
                              statearr_17568_17593[2] = inst_17523;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17554__$1);
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_17555 === 11) {
                                var inst_17518 = state_17554[8];
                                var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_17554, 10, Object, null, 9);
                                var inst_17527 = chs__$1.call(null, inst_17518);
                                var inst_17528 = done.call(null, inst_17518);
                                var inst_17529 = cljs.core.async.take_BANG_.call(null, inst_17527, inst_17528);
                                var state_17554__$1 = state_17554;
                                var statearr_17569_17594 = state_17554__$1;
                                statearr_17569_17594[2] = inst_17529;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17554__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_17555 === 12) {
                                  var inst_17540 = state_17554[12];
                                  var inst_17540__$1 = state_17554[2];
                                  var inst_17541 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_17540__$1);
                                  var state_17554__$1 = function() {
                                    var statearr_17570 = state_17554;
                                    statearr_17570[12] = inst_17540__$1;
                                    return statearr_17570;
                                  }();
                                  if (cljs.core.truth_(inst_17541)) {
                                    var statearr_17571_17595 = state_17554__$1;
                                    statearr_17571_17595[1] = 13;
                                  } else {
                                    var statearr_17572_17596 = state_17554__$1;
                                    statearr_17572_17596[1] = 14;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_17555 === 13) {
                                    var inst_17543 = cljs.core.async.close_BANG_.call(null, out);
                                    var state_17554__$1 = state_17554;
                                    var statearr_17573_17597 = state_17554__$1;
                                    statearr_17573_17597[2] = inst_17543;
                                    statearr_17573_17597[1] = 15;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_17555 === 14) {
                                      var inst_17540 = state_17554[12];
                                      var inst_17545 = cljs.core.apply.call(null, f, inst_17540);
                                      var state_17554__$1 = state_17554;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17554__$1, 16, out, inst_17545);
                                    } else {
                                      if (state_val_17555 === 15) {
                                        var inst_17550 = state_17554[2];
                                        var state_17554__$1 = state_17554;
                                        var statearr_17574_17598 = state_17554__$1;
                                        statearr_17574_17598[2] = inst_17550;
                                        statearr_17574_17598[1] = 3;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_17555 === 16) {
                                          var inst_17547 = state_17554[2];
                                          var state_17554__$1 = function() {
                                            var statearr_17575 = state_17554;
                                            statearr_17575[13] = inst_17547;
                                            return statearr_17575;
                                          }();
                                          var statearr_17576_17599 = state_17554__$1;
                                          statearr_17576_17599[2] = null;
                                          statearr_17576_17599[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6137__auto__) {
          return function() {
            var state_machine__6138__auto__ = null;
            var state_machine__6138__auto____0 = function() {
              var statearr_17580 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_17580[0] = state_machine__6138__auto__;
              statearr_17580[1] = 1;
              return statearr_17580;
            };
            var state_machine__6138__auto____1 = function(state_17554) {
              while (true) {
                var ret_value__6139__auto__ = function() {
                  try {
                    while (true) {
                      var result__6140__auto__ = switch__6137__auto__.call(null, state_17554);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6140__auto__;
                      }
                      break;
                    }
                  } catch (e17581) {
                    if (e17581 instanceof Object) {
                      var ex__6141__auto__ = e17581;
                      var statearr_17582_17600 = state_17554;
                      statearr_17582_17600[5] = ex__6141__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17554);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e17581;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__17601 = state_17554;
                  state_17554 = G__17601;
                  continue;
                } else {
                  return ret_value__6139__auto__;
                }
                break;
              }
            };
            state_machine__6138__auto__ = function(state_17554) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6138__auto____0.call(this);
                case 1:
                  return state_machine__6138__auto____1.call(this, state_17554);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
            return state_machine__6138__auto__;
          }();
        }(switch__6137__auto__);
      }();
      var state__6154__auto__ = function() {
        var statearr_17583 = f__6153__auto__.call(null);
        statearr_17583[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___17584;
        return statearr_17583;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
    });
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6152__auto___17709 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6153__auto__ = function() {
        var switch__6137__auto__ = function(state_17685) {
          var state_val_17686 = state_17685[1];
          if (state_val_17686 === 1) {
            var inst_17656 = cljs.core.vec.call(null, chs);
            var inst_17657 = inst_17656;
            var state_17685__$1 = function() {
              var statearr_17687 = state_17685;
              statearr_17687[7] = inst_17657;
              return statearr_17687;
            }();
            var statearr_17688_17710 = state_17685__$1;
            statearr_17688_17710[2] = null;
            statearr_17688_17710[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_17686 === 2) {
              var inst_17657 = state_17685[7];
              var inst_17659 = cljs.core.count.call(null, inst_17657);
              var inst_17660 = inst_17659 > 0;
              var state_17685__$1 = state_17685;
              if (cljs.core.truth_(inst_17660)) {
                var statearr_17689_17711 = state_17685__$1;
                statearr_17689_17711[1] = 4;
              } else {
                var statearr_17690_17712 = state_17685__$1;
                statearr_17690_17712[1] = 5;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_17686 === 3) {
                var inst_17683 = state_17685[2];
                var state_17685__$1 = state_17685;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17685__$1, inst_17683);
              } else {
                if (state_val_17686 === 4) {
                  var inst_17657 = state_17685[7];
                  var state_17685__$1 = state_17685;
                  return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_17685__$1, 7, inst_17657);
                } else {
                  if (state_val_17686 === 5) {
                    var inst_17679 = cljs.core.async.close_BANG_.call(null, out);
                    var state_17685__$1 = state_17685;
                    var statearr_17691_17713 = state_17685__$1;
                    statearr_17691_17713[2] = inst_17679;
                    statearr_17691_17713[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_17686 === 6) {
                      var inst_17681 = state_17685[2];
                      var state_17685__$1 = state_17685;
                      var statearr_17692_17714 = state_17685__$1;
                      statearr_17692_17714[2] = inst_17681;
                      statearr_17692_17714[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_17686 === 7) {
                        var inst_17665 = state_17685[8];
                        var inst_17664 = state_17685[9];
                        var inst_17664__$1 = state_17685[2];
                        var inst_17665__$1 = cljs.core.nth.call(null, inst_17664__$1, 0, null);
                        var inst_17666 = cljs.core.nth.call(null, inst_17664__$1, 1, null);
                        var inst_17667 = inst_17665__$1 == null;
                        var state_17685__$1 = function() {
                          var statearr_17693 = state_17685;
                          statearr_17693[8] = inst_17665__$1;
                          statearr_17693[10] = inst_17666;
                          statearr_17693[9] = inst_17664__$1;
                          return statearr_17693;
                        }();
                        if (cljs.core.truth_(inst_17667)) {
                          var statearr_17694_17715 = state_17685__$1;
                          statearr_17694_17715[1] = 8;
                        } else {
                          var statearr_17695_17716 = state_17685__$1;
                          statearr_17695_17716[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_17686 === 8) {
                          var inst_17665 = state_17685[8];
                          var inst_17666 = state_17685[10];
                          var inst_17664 = state_17685[9];
                          var inst_17657 = state_17685[7];
                          var inst_17669 = function() {
                            var c = inst_17666;
                            var v = inst_17665;
                            var vec__17662 = inst_17664;
                            var cs = inst_17657;
                            return function(c, v, vec__17662, cs, inst_17665, inst_17666, inst_17664, inst_17657, state_val_17686) {
                              return function(p1__17602_SHARP_) {
                                return cljs.core.not_EQ_.call(null, c, p1__17602_SHARP_);
                              };
                            }(c, v, vec__17662, cs, inst_17665, inst_17666, inst_17664, inst_17657, state_val_17686);
                          }();
                          var inst_17670 = cljs.core.filterv.call(null, inst_17669, inst_17657);
                          var inst_17657__$1 = inst_17670;
                          var state_17685__$1 = function() {
                            var statearr_17696 = state_17685;
                            statearr_17696[7] = inst_17657__$1;
                            return statearr_17696;
                          }();
                          var statearr_17697_17717 = state_17685__$1;
                          statearr_17697_17717[2] = null;
                          statearr_17697_17717[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_17686 === 9) {
                            var inst_17665 = state_17685[8];
                            var state_17685__$1 = state_17685;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17685__$1, 11, out, inst_17665);
                          } else {
                            if (state_val_17686 === 10) {
                              var inst_17677 = state_17685[2];
                              var state_17685__$1 = state_17685;
                              var statearr_17699_17718 = state_17685__$1;
                              statearr_17699_17718[2] = inst_17677;
                              statearr_17699_17718[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_17686 === 11) {
                                var inst_17657 = state_17685[7];
                                var inst_17674 = state_17685[2];
                                var tmp17698 = inst_17657;
                                var inst_17657__$1 = tmp17698;
                                var state_17685__$1 = function() {
                                  var statearr_17700 = state_17685;
                                  statearr_17700[11] = inst_17674;
                                  statearr_17700[7] = inst_17657__$1;
                                  return statearr_17700;
                                }();
                                var statearr_17701_17719 = state_17685__$1;
                                statearr_17701_17719[2] = null;
                                statearr_17701_17719[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6137__auto__) {
          return function() {
            var state_machine__6138__auto__ = null;
            var state_machine__6138__auto____0 = function() {
              var statearr_17705 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_17705[0] = state_machine__6138__auto__;
              statearr_17705[1] = 1;
              return statearr_17705;
            };
            var state_machine__6138__auto____1 = function(state_17685) {
              while (true) {
                var ret_value__6139__auto__ = function() {
                  try {
                    while (true) {
                      var result__6140__auto__ = switch__6137__auto__.call(null, state_17685);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6140__auto__;
                      }
                      break;
                    }
                  } catch (e17706) {
                    if (e17706 instanceof Object) {
                      var ex__6141__auto__ = e17706;
                      var statearr_17707_17720 = state_17685;
                      statearr_17707_17720[5] = ex__6141__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17685);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e17706;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__17721 = state_17685;
                  state_17685 = G__17721;
                  continue;
                } else {
                  return ret_value__6139__auto__;
                }
                break;
              }
            };
            state_machine__6138__auto__ = function(state_17685) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6138__auto____0.call(this);
                case 1:
                  return state_machine__6138__auto____1.call(this, state_17685);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
            return state_machine__6138__auto__;
          }();
        }(switch__6137__auto__);
      }();
      var state__6154__auto__ = function() {
        var statearr_17708 = f__6153__auto__.call(null);
        statearr_17708[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___17709;
        return statearr_17708;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
    });
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6152__auto___17814 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6153__auto__ = function() {
        var switch__6137__auto__ = function(state_17791) {
          var state_val_17792 = state_17791[1];
          if (state_val_17792 === 1) {
            var inst_17768 = 0;
            var state_17791__$1 = function() {
              var statearr_17793 = state_17791;
              statearr_17793[7] = inst_17768;
              return statearr_17793;
            }();
            var statearr_17794_17815 = state_17791__$1;
            statearr_17794_17815[2] = null;
            statearr_17794_17815[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_17792 === 2) {
              var inst_17768 = state_17791[7];
              var inst_17770 = inst_17768 < n;
              var state_17791__$1 = state_17791;
              if (cljs.core.truth_(inst_17770)) {
                var statearr_17795_17816 = state_17791__$1;
                statearr_17795_17816[1] = 4;
              } else {
                var statearr_17796_17817 = state_17791__$1;
                statearr_17796_17817[1] = 5;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_17792 === 3) {
                var inst_17788 = state_17791[2];
                var inst_17789 = cljs.core.async.close_BANG_.call(null, out);
                var state_17791__$1 = function() {
                  var statearr_17797 = state_17791;
                  statearr_17797[8] = inst_17788;
                  return statearr_17797;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17791__$1, inst_17789);
              } else {
                if (state_val_17792 === 4) {
                  var state_17791__$1 = state_17791;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17791__$1, 7, ch);
                } else {
                  if (state_val_17792 === 5) {
                    var state_17791__$1 = state_17791;
                    var statearr_17798_17818 = state_17791__$1;
                    statearr_17798_17818[2] = null;
                    statearr_17798_17818[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_17792 === 6) {
                      var inst_17786 = state_17791[2];
                      var state_17791__$1 = state_17791;
                      var statearr_17799_17819 = state_17791__$1;
                      statearr_17799_17819[2] = inst_17786;
                      statearr_17799_17819[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_17792 === 7) {
                        var inst_17773 = state_17791[9];
                        var inst_17773__$1 = state_17791[2];
                        var inst_17774 = inst_17773__$1 == null;
                        var inst_17775 = cljs.core.not.call(null, inst_17774);
                        var state_17791__$1 = function() {
                          var statearr_17800 = state_17791;
                          statearr_17800[9] = inst_17773__$1;
                          return statearr_17800;
                        }();
                        if (inst_17775) {
                          var statearr_17801_17820 = state_17791__$1;
                          statearr_17801_17820[1] = 8;
                        } else {
                          var statearr_17802_17821 = state_17791__$1;
                          statearr_17802_17821[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_17792 === 8) {
                          var inst_17773 = state_17791[9];
                          var state_17791__$1 = state_17791;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17791__$1, 11, out, inst_17773);
                        } else {
                          if (state_val_17792 === 9) {
                            var state_17791__$1 = state_17791;
                            var statearr_17803_17822 = state_17791__$1;
                            statearr_17803_17822[2] = null;
                            statearr_17803_17822[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_17792 === 10) {
                              var inst_17783 = state_17791[2];
                              var state_17791__$1 = state_17791;
                              var statearr_17804_17823 = state_17791__$1;
                              statearr_17804_17823[2] = inst_17783;
                              statearr_17804_17823[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_17792 === 11) {
                                var inst_17768 = state_17791[7];
                                var inst_17778 = state_17791[2];
                                var inst_17779 = inst_17768 + 1;
                                var inst_17768__$1 = inst_17779;
                                var state_17791__$1 = function() {
                                  var statearr_17805 = state_17791;
                                  statearr_17805[7] = inst_17768__$1;
                                  statearr_17805[10] = inst_17778;
                                  return statearr_17805;
                                }();
                                var statearr_17806_17824 = state_17791__$1;
                                statearr_17806_17824[2] = null;
                                statearr_17806_17824[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6137__auto__) {
          return function() {
            var state_machine__6138__auto__ = null;
            var state_machine__6138__auto____0 = function() {
              var statearr_17810 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_17810[0] = state_machine__6138__auto__;
              statearr_17810[1] = 1;
              return statearr_17810;
            };
            var state_machine__6138__auto____1 = function(state_17791) {
              while (true) {
                var ret_value__6139__auto__ = function() {
                  try {
                    while (true) {
                      var result__6140__auto__ = switch__6137__auto__.call(null, state_17791);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6140__auto__;
                      }
                      break;
                    }
                  } catch (e17811) {
                    if (e17811 instanceof Object) {
                      var ex__6141__auto__ = e17811;
                      var statearr_17812_17825 = state_17791;
                      statearr_17812_17825[5] = ex__6141__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17791);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e17811;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__17826 = state_17791;
                  state_17791 = G__17826;
                  continue;
                } else {
                  return ret_value__6139__auto__;
                }
                break;
              }
            };
            state_machine__6138__auto__ = function(state_17791) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6138__auto____0.call(this);
                case 1:
                  return state_machine__6138__auto____1.call(this, state_17791);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
            return state_machine__6138__auto__;
          }();
        }(switch__6137__auto__);
      }();
      var state__6154__auto__ = function() {
        var statearr_17813 = f__6153__auto__.call(null);
        statearr_17813[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___17814;
        return statearr_17813;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
    });
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6152__auto___17923 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6153__auto__ = function() {
        var switch__6137__auto__ = function(state_17898) {
          var state_val_17899 = state_17898[1];
          if (state_val_17899 === 1) {
            var inst_17875 = null;
            var state_17898__$1 = function() {
              var statearr_17900 = state_17898;
              statearr_17900[7] = inst_17875;
              return statearr_17900;
            }();
            var statearr_17901_17924 = state_17898__$1;
            statearr_17901_17924[2] = null;
            statearr_17901_17924[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_17899 === 2) {
              var state_17898__$1 = state_17898;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17898__$1, 4, ch);
            } else {
              if (state_val_17899 === 3) {
                var inst_17895 = state_17898[2];
                var inst_17896 = cljs.core.async.close_BANG_.call(null, out);
                var state_17898__$1 = function() {
                  var statearr_17902 = state_17898;
                  statearr_17902[8] = inst_17895;
                  return statearr_17902;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17898__$1, inst_17896);
              } else {
                if (state_val_17899 === 4) {
                  var inst_17878 = state_17898[9];
                  var inst_17878__$1 = state_17898[2];
                  var inst_17879 = inst_17878__$1 == null;
                  var inst_17880 = cljs.core.not.call(null, inst_17879);
                  var state_17898__$1 = function() {
                    var statearr_17903 = state_17898;
                    statearr_17903[9] = inst_17878__$1;
                    return statearr_17903;
                  }();
                  if (inst_17880) {
                    var statearr_17904_17925 = state_17898__$1;
                    statearr_17904_17925[1] = 5;
                  } else {
                    var statearr_17905_17926 = state_17898__$1;
                    statearr_17905_17926[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_17899 === 5) {
                    var inst_17875 = state_17898[7];
                    var inst_17878 = state_17898[9];
                    var inst_17882 = cljs.core._EQ_.call(null, inst_17878, inst_17875);
                    var state_17898__$1 = state_17898;
                    if (inst_17882) {
                      var statearr_17906_17927 = state_17898__$1;
                      statearr_17906_17927[1] = 8;
                    } else {
                      var statearr_17907_17928 = state_17898__$1;
                      statearr_17907_17928[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_17899 === 6) {
                      var state_17898__$1 = state_17898;
                      var statearr_17909_17929 = state_17898__$1;
                      statearr_17909_17929[2] = null;
                      statearr_17909_17929[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_17899 === 7) {
                        var inst_17893 = state_17898[2];
                        var state_17898__$1 = state_17898;
                        var statearr_17910_17930 = state_17898__$1;
                        statearr_17910_17930[2] = inst_17893;
                        statearr_17910_17930[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_17899 === 8) {
                          var inst_17875 = state_17898[7];
                          var tmp17908 = inst_17875;
                          var inst_17875__$1 = tmp17908;
                          var state_17898__$1 = function() {
                            var statearr_17911 = state_17898;
                            statearr_17911[7] = inst_17875__$1;
                            return statearr_17911;
                          }();
                          var statearr_17912_17931 = state_17898__$1;
                          statearr_17912_17931[2] = null;
                          statearr_17912_17931[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_17899 === 9) {
                            var inst_17878 = state_17898[9];
                            var state_17898__$1 = state_17898;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17898__$1, 11, out, inst_17878);
                          } else {
                            if (state_val_17899 === 10) {
                              var inst_17890 = state_17898[2];
                              var state_17898__$1 = state_17898;
                              var statearr_17913_17932 = state_17898__$1;
                              statearr_17913_17932[2] = inst_17890;
                              statearr_17913_17932[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_17899 === 11) {
                                var inst_17878 = state_17898[9];
                                var inst_17887 = state_17898[2];
                                var inst_17875 = inst_17878;
                                var state_17898__$1 = function() {
                                  var statearr_17914 = state_17898;
                                  statearr_17914[7] = inst_17875;
                                  statearr_17914[10] = inst_17887;
                                  return statearr_17914;
                                }();
                                var statearr_17915_17933 = state_17898__$1;
                                statearr_17915_17933[2] = null;
                                statearr_17915_17933[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6137__auto__) {
          return function() {
            var state_machine__6138__auto__ = null;
            var state_machine__6138__auto____0 = function() {
              var statearr_17919 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_17919[0] = state_machine__6138__auto__;
              statearr_17919[1] = 1;
              return statearr_17919;
            };
            var state_machine__6138__auto____1 = function(state_17898) {
              while (true) {
                var ret_value__6139__auto__ = function() {
                  try {
                    while (true) {
                      var result__6140__auto__ = switch__6137__auto__.call(null, state_17898);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6140__auto__;
                      }
                      break;
                    }
                  } catch (e17920) {
                    if (e17920 instanceof Object) {
                      var ex__6141__auto__ = e17920;
                      var statearr_17921_17934 = state_17898;
                      statearr_17921_17934[5] = ex__6141__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17898);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e17920;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__17935 = state_17898;
                  state_17898 = G__17935;
                  continue;
                } else {
                  return ret_value__6139__auto__;
                }
                break;
              }
            };
            state_machine__6138__auto__ = function(state_17898) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6138__auto____0.call(this);
                case 1:
                  return state_machine__6138__auto____1.call(this, state_17898);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
            return state_machine__6138__auto__;
          }();
        }(switch__6137__auto__);
      }();
      var state__6154__auto__ = function() {
        var statearr_17922 = f__6153__auto__.call(null);
        statearr_17922[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___17923;
        return statearr_17922;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
    });
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6152__auto___18070 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6153__auto__ = function() {
        var switch__6137__auto__ = function(state_18040) {
          var state_val_18041 = state_18040[1];
          if (state_val_18041 === 1) {
            var inst_18003 = new Array(n);
            var inst_18004 = inst_18003;
            var inst_18005 = 0;
            var state_18040__$1 = function() {
              var statearr_18042 = state_18040;
              statearr_18042[7] = inst_18004;
              statearr_18042[8] = inst_18005;
              return statearr_18042;
            }();
            var statearr_18043_18071 = state_18040__$1;
            statearr_18043_18071[2] = null;
            statearr_18043_18071[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_18041 === 2) {
              var state_18040__$1 = state_18040;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18040__$1, 4, ch);
            } else {
              if (state_val_18041 === 3) {
                var inst_18038 = state_18040[2];
                var state_18040__$1 = state_18040;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18040__$1, inst_18038);
              } else {
                if (state_val_18041 === 4) {
                  var inst_18008 = state_18040[9];
                  var inst_18008__$1 = state_18040[2];
                  var inst_18009 = inst_18008__$1 == null;
                  var inst_18010 = cljs.core.not.call(null, inst_18009);
                  var state_18040__$1 = function() {
                    var statearr_18044 = state_18040;
                    statearr_18044[9] = inst_18008__$1;
                    return statearr_18044;
                  }();
                  if (inst_18010) {
                    var statearr_18045_18072 = state_18040__$1;
                    statearr_18045_18072[1] = 5;
                  } else {
                    var statearr_18046_18073 = state_18040__$1;
                    statearr_18046_18073[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_18041 === 5) {
                    var inst_18004 = state_18040[7];
                    var inst_18005 = state_18040[8];
                    var inst_18008 = state_18040[9];
                    var inst_18013 = state_18040[10];
                    var inst_18012 = inst_18004[inst_18005] = inst_18008;
                    var inst_18013__$1 = inst_18005 + 1;
                    var inst_18014 = inst_18013__$1 < n;
                    var state_18040__$1 = function() {
                      var statearr_18047 = state_18040;
                      statearr_18047[11] = inst_18012;
                      statearr_18047[10] = inst_18013__$1;
                      return statearr_18047;
                    }();
                    if (cljs.core.truth_(inst_18014)) {
                      var statearr_18048_18074 = state_18040__$1;
                      statearr_18048_18074[1] = 8;
                    } else {
                      var statearr_18049_18075 = state_18040__$1;
                      statearr_18049_18075[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_18041 === 6) {
                      var inst_18005 = state_18040[8];
                      var inst_18026 = inst_18005 > 0;
                      var state_18040__$1 = state_18040;
                      if (cljs.core.truth_(inst_18026)) {
                        var statearr_18051_18076 = state_18040__$1;
                        statearr_18051_18076[1] = 12;
                      } else {
                        var statearr_18052_18077 = state_18040__$1;
                        statearr_18052_18077[1] = 13;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_18041 === 7) {
                        var inst_18036 = state_18040[2];
                        var state_18040__$1 = state_18040;
                        var statearr_18053_18078 = state_18040__$1;
                        statearr_18053_18078[2] = inst_18036;
                        statearr_18053_18078[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_18041 === 8) {
                          var inst_18004 = state_18040[7];
                          var inst_18013 = state_18040[10];
                          var tmp18050 = inst_18004;
                          var inst_18004__$1 = tmp18050;
                          var inst_18005 = inst_18013;
                          var state_18040__$1 = function() {
                            var statearr_18054 = state_18040;
                            statearr_18054[7] = inst_18004__$1;
                            statearr_18054[8] = inst_18005;
                            return statearr_18054;
                          }();
                          var statearr_18055_18079 = state_18040__$1;
                          statearr_18055_18079[2] = null;
                          statearr_18055_18079[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_18041 === 9) {
                            var inst_18004 = state_18040[7];
                            var inst_18018 = cljs.core.vec.call(null, inst_18004);
                            var state_18040__$1 = state_18040;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18040__$1, 11, out, inst_18018);
                          } else {
                            if (state_val_18041 === 10) {
                              var inst_18024 = state_18040[2];
                              var state_18040__$1 = state_18040;
                              var statearr_18056_18080 = state_18040__$1;
                              statearr_18056_18080[2] = inst_18024;
                              statearr_18056_18080[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_18041 === 11) {
                                var inst_18020 = state_18040[2];
                                var inst_18021 = new Array(n);
                                var inst_18004 = inst_18021;
                                var inst_18005 = 0;
                                var state_18040__$1 = function() {
                                  var statearr_18057 = state_18040;
                                  statearr_18057[7] = inst_18004;
                                  statearr_18057[8] = inst_18005;
                                  statearr_18057[12] = inst_18020;
                                  return statearr_18057;
                                }();
                                var statearr_18058_18081 = state_18040__$1;
                                statearr_18058_18081[2] = null;
                                statearr_18058_18081[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_18041 === 12) {
                                  var inst_18004 = state_18040[7];
                                  var inst_18028 = cljs.core.vec.call(null, inst_18004);
                                  var state_18040__$1 = state_18040;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18040__$1, 15, out, inst_18028);
                                } else {
                                  if (state_val_18041 === 13) {
                                    var state_18040__$1 = state_18040;
                                    var statearr_18059_18082 = state_18040__$1;
                                    statearr_18059_18082[2] = null;
                                    statearr_18059_18082[1] = 14;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_18041 === 14) {
                                      var inst_18033 = state_18040[2];
                                      var inst_18034 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_18040__$1 = function() {
                                        var statearr_18060 = state_18040;
                                        statearr_18060[13] = inst_18033;
                                        return statearr_18060;
                                      }();
                                      var statearr_18061_18083 = state_18040__$1;
                                      statearr_18061_18083[2] = inst_18034;
                                      statearr_18061_18083[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_18041 === 15) {
                                        var inst_18030 = state_18040[2];
                                        var state_18040__$1 = state_18040;
                                        var statearr_18062_18084 = state_18040__$1;
                                        statearr_18062_18084[2] = inst_18030;
                                        statearr_18062_18084[1] = 14;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6137__auto__) {
          return function() {
            var state_machine__6138__auto__ = null;
            var state_machine__6138__auto____0 = function() {
              var statearr_18066 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_18066[0] = state_machine__6138__auto__;
              statearr_18066[1] = 1;
              return statearr_18066;
            };
            var state_machine__6138__auto____1 = function(state_18040) {
              while (true) {
                var ret_value__6139__auto__ = function() {
                  try {
                    while (true) {
                      var result__6140__auto__ = switch__6137__auto__.call(null, state_18040);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6140__auto__;
                      }
                      break;
                    }
                  } catch (e18067) {
                    if (e18067 instanceof Object) {
                      var ex__6141__auto__ = e18067;
                      var statearr_18068_18085 = state_18040;
                      statearr_18068_18085[5] = ex__6141__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18040);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e18067;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__18086 = state_18040;
                  state_18040 = G__18086;
                  continue;
                } else {
                  return ret_value__6139__auto__;
                }
                break;
              }
            };
            state_machine__6138__auto__ = function(state_18040) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6138__auto____0.call(this);
                case 1:
                  return state_machine__6138__auto____1.call(this, state_18040);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
            return state_machine__6138__auto__;
          }();
        }(switch__6137__auto__);
      }();
      var state__6154__auto__ = function() {
        var statearr_18069 = f__6153__auto__.call(null);
        statearr_18069[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___18070;
        return statearr_18069;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
    });
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6152__auto___18229 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6153__auto__ = function() {
        var switch__6137__auto__ = function(state_18199) {
          var state_val_18200 = state_18199[1];
          if (state_val_18200 === 1) {
            var inst_18158 = [];
            var inst_18159 = inst_18158;
            var inst_18160 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538);
            var state_18199__$1 = function() {
              var statearr_18201 = state_18199;
              statearr_18201[7] = inst_18160;
              statearr_18201[8] = inst_18159;
              return statearr_18201;
            }();
            var statearr_18202_18230 = state_18199__$1;
            statearr_18202_18230[2] = null;
            statearr_18202_18230[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_18200 === 2) {
              var state_18199__$1 = state_18199;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18199__$1, 4, ch);
            } else {
              if (state_val_18200 === 3) {
                var inst_18197 = state_18199[2];
                var state_18199__$1 = state_18199;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18199__$1, inst_18197);
              } else {
                if (state_val_18200 === 4) {
                  var inst_18163 = state_18199[9];
                  var inst_18163__$1 = state_18199[2];
                  var inst_18164 = inst_18163__$1 == null;
                  var inst_18165 = cljs.core.not.call(null, inst_18164);
                  var state_18199__$1 = function() {
                    var statearr_18203 = state_18199;
                    statearr_18203[9] = inst_18163__$1;
                    return statearr_18203;
                  }();
                  if (inst_18165) {
                    var statearr_18204_18231 = state_18199__$1;
                    statearr_18204_18231[1] = 5;
                  } else {
                    var statearr_18205_18232 = state_18199__$1;
                    statearr_18205_18232[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_18200 === 5) {
                    var inst_18167 = state_18199[10];
                    var inst_18160 = state_18199[7];
                    var inst_18163 = state_18199[9];
                    var inst_18167__$1 = f.call(null, inst_18163);
                    var inst_18168 = cljs.core._EQ_.call(null, inst_18167__$1, inst_18160);
                    var inst_18169 = cljs.core.keyword_identical_QMARK_.call(null, inst_18160, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538));
                    var inst_18170 = inst_18168 || inst_18169;
                    var state_18199__$1 = function() {
                      var statearr_18206 = state_18199;
                      statearr_18206[10] = inst_18167__$1;
                      return statearr_18206;
                    }();
                    if (cljs.core.truth_(inst_18170)) {
                      var statearr_18207_18233 = state_18199__$1;
                      statearr_18207_18233[1] = 8;
                    } else {
                      var statearr_18208_18234 = state_18199__$1;
                      statearr_18208_18234[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_18200 === 6) {
                      var inst_18159 = state_18199[8];
                      var inst_18184 = inst_18159.length;
                      var inst_18185 = inst_18184 > 0;
                      var state_18199__$1 = state_18199;
                      if (cljs.core.truth_(inst_18185)) {
                        var statearr_18210_18235 = state_18199__$1;
                        statearr_18210_18235[1] = 12;
                      } else {
                        var statearr_18211_18236 = state_18199__$1;
                        statearr_18211_18236[1] = 13;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_18200 === 7) {
                        var inst_18195 = state_18199[2];
                        var state_18199__$1 = state_18199;
                        var statearr_18212_18237 = state_18199__$1;
                        statearr_18212_18237[2] = inst_18195;
                        statearr_18212_18237[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_18200 === 8) {
                          var inst_18167 = state_18199[10];
                          var inst_18163 = state_18199[9];
                          var inst_18159 = state_18199[8];
                          var inst_18172 = inst_18159.push(inst_18163);
                          var tmp18209 = inst_18159;
                          var inst_18159__$1 = tmp18209;
                          var inst_18160 = inst_18167;
                          var state_18199__$1 = function() {
                            var statearr_18213 = state_18199;
                            statearr_18213[11] = inst_18172;
                            statearr_18213[7] = inst_18160;
                            statearr_18213[8] = inst_18159__$1;
                            return statearr_18213;
                          }();
                          var statearr_18214_18238 = state_18199__$1;
                          statearr_18214_18238[2] = null;
                          statearr_18214_18238[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_18200 === 9) {
                            var inst_18159 = state_18199[8];
                            var inst_18175 = cljs.core.vec.call(null, inst_18159);
                            var state_18199__$1 = state_18199;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18199__$1, 11, out, inst_18175);
                          } else {
                            if (state_val_18200 === 10) {
                              var inst_18182 = state_18199[2];
                              var state_18199__$1 = state_18199;
                              var statearr_18215_18239 = state_18199__$1;
                              statearr_18215_18239[2] = inst_18182;
                              statearr_18215_18239[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_18200 === 11) {
                                var inst_18167 = state_18199[10];
                                var inst_18163 = state_18199[9];
                                var inst_18177 = state_18199[2];
                                var inst_18178 = [];
                                var inst_18179 = inst_18178.push(inst_18163);
                                var inst_18159 = inst_18178;
                                var inst_18160 = inst_18167;
                                var state_18199__$1 = function() {
                                  var statearr_18216 = state_18199;
                                  statearr_18216[12] = inst_18177;
                                  statearr_18216[13] = inst_18179;
                                  statearr_18216[7] = inst_18160;
                                  statearr_18216[8] = inst_18159;
                                  return statearr_18216;
                                }();
                                var statearr_18217_18240 = state_18199__$1;
                                statearr_18217_18240[2] = null;
                                statearr_18217_18240[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_18200 === 12) {
                                  var inst_18159 = state_18199[8];
                                  var inst_18187 = cljs.core.vec.call(null, inst_18159);
                                  var state_18199__$1 = state_18199;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18199__$1, 15, out, inst_18187);
                                } else {
                                  if (state_val_18200 === 13) {
                                    var state_18199__$1 = state_18199;
                                    var statearr_18218_18241 = state_18199__$1;
                                    statearr_18218_18241[2] = null;
                                    statearr_18218_18241[1] = 14;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_18200 === 14) {
                                      var inst_18192 = state_18199[2];
                                      var inst_18193 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_18199__$1 = function() {
                                        var statearr_18219 = state_18199;
                                        statearr_18219[14] = inst_18192;
                                        return statearr_18219;
                                      }();
                                      var statearr_18220_18242 = state_18199__$1;
                                      statearr_18220_18242[2] = inst_18193;
                                      statearr_18220_18242[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_18200 === 15) {
                                        var inst_18189 = state_18199[2];
                                        var state_18199__$1 = state_18199;
                                        var statearr_18221_18243 = state_18199__$1;
                                        statearr_18221_18243[2] = inst_18189;
                                        statearr_18221_18243[1] = 14;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6137__auto__) {
          return function() {
            var state_machine__6138__auto__ = null;
            var state_machine__6138__auto____0 = function() {
              var statearr_18225 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_18225[0] = state_machine__6138__auto__;
              statearr_18225[1] = 1;
              return statearr_18225;
            };
            var state_machine__6138__auto____1 = function(state_18199) {
              while (true) {
                var ret_value__6139__auto__ = function() {
                  try {
                    while (true) {
                      var result__6140__auto__ = switch__6137__auto__.call(null, state_18199);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6140__auto__;
                      }
                      break;
                    }
                  } catch (e18226) {
                    if (e18226 instanceof Object) {
                      var ex__6141__auto__ = e18226;
                      var statearr_18227_18244 = state_18199;
                      statearr_18227_18244[5] = ex__6141__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18199);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e18226;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__18245 = state_18199;
                  state_18199 = G__18245;
                  continue;
                } else {
                  return ret_value__6139__auto__;
                }
                break;
              }
            };
            state_machine__6138__auto__ = function(state_18199) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6138__auto____0.call(this);
                case 1:
                  return state_machine__6138__auto____1.call(this, state_18199);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
            state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
            return state_machine__6138__auto__;
          }();
        }(switch__6137__auto__);
      }();
      var state__6154__auto__ = function() {
        var statearr_18228 = f__6153__auto__.call(null);
        statearr_18228[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___18229;
        return statearr_18228;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
    });
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("floor16.ui.generic");
goog.require("cljs.core");
goog.require("floor16.lang");
goog.require("cljs.core.async");
goog.require("floor16.navigation");
goog.require("floor16.navigation");
goog.require("goog.events");
goog.require("floor16.datum");
goog.require("goog.events.EventType");
goog.require("goog.dom");
goog.require("floor16.auth");
goog.require("om.dom");
goog.require("om.core");
goog.require("goog.dom");
goog.require("om.core");
goog.require("floor16.auth");
goog.require("floor16.lang");
goog.require("floor16.datum");
goog.require("om.dom");
goog.require("cljs.core.async");
goog.require("goog.events");
floor16.ui.generic.active_QMARK_ = function active_QMARK_(owner) {
  return om.core.get_state.call(null, owner, new cljs.core.Keyword("floor16.ui.generic", "active", "floor16.ui.generic/active", 4493575432));
};
floor16.ui.generic.active_BANG_ = function active_BANG_(owner, v) {
  return om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword("floor16.ui.generic", "active", "floor16.ui.generic/active", 4493575432), v);
};
floor16.ui.generic.el_matcher = function el_matcher(el) {
  return function(other) {
    return other === el;
  };
};
floor16.ui.generic.in_QMARK_ = function in_QMARK_(e, el) {
  var target = e.target;
  return target === el || !(goog.dom.getAncestor(target, floor16.ui.generic.el_matcher.call(null, el)) == null);
};
floor16.ui.generic.self_closeable = function self_closeable(cursor, owner, p__13829) {
  var map__13850 = p__13829;
  var map__13850__$1 = cljs.core.seq_QMARK_.call(null, map__13850) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13850) : map__13850;
  var opts = map__13850__$1;
  var do_close = cljs.core.get.call(null, map__13850__$1, new cljs.core.Keyword(null, "do-close", "do-close", 4607974824));
  var view = cljs.core.get.call(null, map__13850__$1, new cljs.core.Keyword(null, "view", "view", 1017523735));
  if (typeof floor16.ui.generic.t13851 !== "undefined") {
  } else {
    floor16.ui.generic.t13851 = function(view, do_close, opts, map__13850, p__13829, owner, cursor, self_closeable, meta13852) {
      this.view = view;
      this.do_close = do_close;
      this.opts = opts;
      this.map__13850 = map__13850;
      this.p__13829 = p__13829;
      this.owner = owner;
      this.cursor = cursor;
      this.self_closeable = self_closeable;
      this.meta13852 = meta13852;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.generic.t13851.cljs$lang$type = true;
    floor16.ui.generic.t13851.cljs$lang$ctorStr = "floor16.ui.generic/t13851";
    floor16.ui.generic.t13851.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.ui.generic/t13851");
    };
    floor16.ui.generic.t13851.prototype.om$core$IRenderState$ = true;
    floor16.ui.generic.t13851.prototype.om$core$IRenderState$render_state$arity$2 = function(this$, p__13854) {
      var self__ = this;
      var map__13855 = p__13854;
      var map__13855__$1 = cljs.core.seq_QMARK_.call(null, map__13855) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13855) : map__13855;
      var close_chan = cljs.core.get.call(null, map__13855__$1, new cljs.core.Keyword(null, "close-chan", "close-chan", 3200632185));
      var this$__$1 = this;
      return om.core.build.call(null, self__.view, self__.cursor, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "init-state", "init-state", 4479067398), om.core.get_state.call(null, self__.owner), new cljs.core.Keyword(null, "opts", "opts", 1017322386), cljs.core.assoc.call(null, cljs.core.dissoc.call(null, self__.opts, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "view", "view", 1017523735), new cljs.core.Keyword(null, 
      "do-close", "do-close", 4607974824)], null)), new cljs.core.Keyword(null, "close-chan", "close-chan", 3200632185), close_chan)], null));
    };
    floor16.ui.generic.t13851.prototype.om$core$IWillUnmount$ = true;
    floor16.ui.generic.t13851.prototype.om$core$IWillUnmount$will_unmount$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      var temp__4092__auto__ = om.core.get_state.call(null, self__.owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("floor16.ui.generic", "window-listener", "floor16.ui.generic/window-listener", 1117526547)], null));
      if (cljs.core.truth_(temp__4092__auto__)) {
        var mouse_handler = temp__4092__auto__;
        return goog.events.unlisten(window, goog.events.EventType.MOUSEDOWN, mouse_handler);
      } else {
        return null;
      }
    };
    floor16.ui.generic.t13851.prototype.om$core$IDidMount$ = true;
    floor16.ui.generic.t13851.prototype.om$core$IDidMount$did_mount$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      var mouse_handler = function(p1__13828_SHARP_) {
        if (cljs.core.truth_(self__.do_close)) {
          if (floor16.ui.generic.in_QMARK_.call(null, p1__13828_SHARP_, om.core.get_node.call(null, self__.owner))) {
            return null;
          } else {
            return self__.do_close.call(null);
          }
        } else {
          return null;
        }
      };
      goog.events.listen(window, goog.events.EventType.MOUSEDOWN, mouse_handler);
      return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("floor16.ui.generic", "window-listener", "floor16.ui.generic/window-listener", 1117526547)], null), mouse_handler);
    };
    floor16.ui.generic.t13851.prototype.om$core$IWillMount$ = true;
    floor16.ui.generic.t13851.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var close_chan = cljs.core.async.chan.call(null);
      om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "close-chan", "close-chan", 3200632185), close_chan);
      var c__6152__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function() {
        var f__6153__auto__ = function() {
          var switch__6137__auto__ = function(state_13860) {
            var state_val_13861 = state_13860[1];
            if (state_val_13861 === 2) {
              var inst_13857 = state_13860[2];
              var inst_13858 = self__.do_close.call(null);
              var state_13860__$1 = function() {
                var statearr_13862 = state_13860;
                statearr_13862[7] = inst_13857;
                return statearr_13862;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13860__$1, inst_13858);
            } else {
              if (state_val_13861 === 1) {
                var state_13860__$1 = state_13860;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13860__$1, 2, close_chan);
              } else {
                return null;
              }
            }
          };
          return function(switch__6137__auto__) {
            return function() {
              var state_machine__6138__auto__ = null;
              var state_machine__6138__auto____0 = function() {
                var statearr_13866 = [null, null, null, null, null, null, null, null];
                statearr_13866[0] = state_machine__6138__auto__;
                statearr_13866[1] = 1;
                return statearr_13866;
              };
              var state_machine__6138__auto____1 = function(state_13860) {
                while (true) {
                  var ret_value__6139__auto__ = function() {
                    try {
                      while (true) {
                        var result__6140__auto__ = switch__6137__auto__.call(null, state_13860);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6140__auto__;
                        }
                        break;
                      }
                    } catch (e13867) {
                      if (e13867 instanceof Object) {
                        var ex__6141__auto__ = e13867;
                        var statearr_13868_13870 = state_13860;
                        statearr_13868_13870[5] = ex__6141__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13860);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e13867;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__13871 = state_13860;
                    state_13860 = G__13871;
                    continue;
                  } else {
                    return ret_value__6139__auto__;
                  }
                  break;
                }
              };
              state_machine__6138__auto__ = function(state_13860) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6138__auto____0.call(this);
                  case 1:
                    return state_machine__6138__auto____1.call(this, state_13860);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
              state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
              return state_machine__6138__auto__;
            }();
          }(switch__6137__auto__);
        }();
        var state__6154__auto__ = function() {
          var statearr_13869 = f__6153__auto__.call(null);
          statearr_13869[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto__;
          return statearr_13869;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
      });
      return c__6152__auto__;
    };
    floor16.ui.generic.t13851.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13853) {
      var self__ = this;
      var _13853__$1 = this;
      return self__.meta13852;
    };
    floor16.ui.generic.t13851.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13853, meta13852__$1) {
      var self__ = this;
      var _13853__$1 = this;
      return new floor16.ui.generic.t13851(self__.view, self__.do_close, self__.opts, self__.map__13850, self__.p__13829, self__.owner, self__.cursor, self__.self_closeable, meta13852__$1);
    };
    floor16.ui.generic.__GT_t13851 = function __GT_t13851(view__$1, do_close__$1, opts__$1, map__13850__$2, p__13829__$1, owner__$1, cursor__$1, self_closeable__$1, meta13852) {
      return new floor16.ui.generic.t13851(view__$1, do_close__$1, opts__$1, map__13850__$2, p__13829__$1, owner__$1, cursor__$1, self_closeable__$1, meta13852);
    };
  }
  return new floor16.ui.generic.t13851(view, do_close, opts, map__13850__$1, p__13829, owner, cursor, self_closeable, null);
};
floor16.ui.generic.drop_down_menu = function drop_down_menu(cursor, owner, p__13872) {
  var map__13879 = p__13872;
  var map__13879__$1 = cljs.core.seq_QMARK_.call(null, map__13879) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13879) : map__13879;
  var opts = map__13879__$1;
  var after_update = cljs.core.get.call(null, map__13879__$1, new cljs.core.Keyword(null, "after-update", "after-update", 4410540364));
  var close_chan = cljs.core.get.call(null, map__13879__$1, new cljs.core.Keyword(null, "close-chan", "close-chan", 3200632185));
  var dict = cljs.core.get.call(null, map__13879__$1, new cljs.core.Keyword(null, "dict", "dict", 1016987432));
  var data_key = cljs.core.get.call(null, map__13879__$1, new cljs.core.Keyword(null, "data-key", "data-key", 2801799470));
  if (typeof floor16.ui.generic.t13880 !== "undefined") {
  } else {
    floor16.ui.generic.t13880 = function(drop_down_menu, opts, map__13879, p__13872, dict, data_key, after_update, owner, cursor, close_chan, meta13881) {
      this.drop_down_menu = drop_down_menu;
      this.opts = opts;
      this.map__13879 = map__13879;
      this.p__13872 = p__13872;
      this.dict = dict;
      this.data_key = data_key;
      this.after_update = after_update;
      this.owner = owner;
      this.cursor = cursor;
      this.close_chan = close_chan;
      this.meta13881 = meta13881;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.generic.t13880.cljs$lang$type = true;
    floor16.ui.generic.t13880.cljs$lang$ctorStr = "floor16.ui.generic/t13880";
    floor16.ui.generic.t13880.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.ui.generic/t13880");
    };
    floor16.ui.generic.t13880.prototype.om$core$IRenderState$ = true;
    floor16.ui.generic.t13880.prototype.om$core$IRenderState$render_state$arity$2 = function(this$, p__13883) {
      var self__ = this;
      var map__13884 = p__13883;
      var map__13884__$1 = cljs.core.seq_QMARK_.call(null, map__13884) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13884) : map__13884;
      var items = cljs.core.get.call(null, map__13884__$1, new cljs.core.Keyword(null, "items", "items", 1114430258));
      var this$__$1 = this;
      var dk = floor16.datum.dkey.call(null, self__.dict);
      var dn = floor16.datum.dname.call(null, self__.dict);
      return cljs.core.apply.call(null, om.dom.ul, null, cljs.core.map.call(null, function(i) {
        return React.DOM.li({"onClick":function(e) {
          om.core.update_BANG_.call(null, self__.cursor, self__.data_key, dk.call(null, i));
          self__.after_update.call(null);
          return cljs.core.async.put_BANG_.call(null, self__.close_chan, new cljs.core.Keyword(null, "close", "close", 1108660586));
        }}, dn.call(null, i));
      }, items));
    };
    floor16.ui.generic.t13880.prototype.om$core$IDidMount$ = true;
    floor16.ui.generic.t13880.prototype.om$core$IDidMount$did_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "items", "items", 1114430258), floor16.datum.get_all.call(null, self__.dict));
    };
    floor16.ui.generic.t13880.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13882) {
      var self__ = this;
      var _13882__$1 = this;
      return self__.meta13881;
    };
    floor16.ui.generic.t13880.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13882, meta13881__$1) {
      var self__ = this;
      var _13882__$1 = this;
      return new floor16.ui.generic.t13880(self__.drop_down_menu, self__.opts, self__.map__13879, self__.p__13872, self__.dict, self__.data_key, self__.after_update, self__.owner, self__.cursor, self__.close_chan, meta13881__$1);
    };
    floor16.ui.generic.__GT_t13880 = function __GT_t13880(drop_down_menu__$1, opts__$1, map__13879__$2, p__13872__$1, dict__$1, data_key__$1, after_update__$1, owner__$1, cursor__$1, close_chan__$1, meta13881) {
      return new floor16.ui.generic.t13880(drop_down_menu__$1, opts__$1, map__13879__$2, p__13872__$1, dict__$1, data_key__$1, after_update__$1, owner__$1, cursor__$1, close_chan__$1, meta13881);
    };
  }
  return new floor16.ui.generic.t13880(drop_down_menu, opts, map__13879__$1, p__13872, dict, data_key, after_update, owner, cursor, close_chan, null);
};
floor16.ui.generic.select = function select(cursor, owner, p__13885) {
  var map__13890 = p__13885;
  var map__13890__$1 = cljs.core.seq_QMARK_.call(null, map__13890) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13890) : map__13890;
  var opts = map__13890__$1;
  var after_update = cljs.core.get.call(null, map__13890__$1, new cljs.core.Keyword(null, "after-update", "after-update", 4410540364));
  var dict = cljs.core.get.call(null, map__13890__$1, new cljs.core.Keyword(null, "dict", "dict", 1016987432));
  var selector = cljs.core.get.call(null, map__13890__$1, new cljs.core.Keyword(null, "selector", "selector", 2205476689));
  var placeholder = cljs.core.get.call(null, map__13890__$1, new cljs.core.Keyword(null, "placeholder", "placeholder", 1612151013));
  var data_key = cljs.core.get.call(null, map__13890__$1, new cljs.core.Keyword(null, "data-key", "data-key", 2801799470));
  if (typeof floor16.ui.generic.t13891 !== "undefined") {
  } else {
    floor16.ui.generic.t13891 = function(opts, select, placeholder, selector, dict, data_key, map__13890, after_update, owner, cursor, p__13885, meta13892) {
      this.opts = opts;
      this.select = select;
      this.placeholder = placeholder;
      this.selector = selector;
      this.dict = dict;
      this.data_key = data_key;
      this.map__13890 = map__13890;
      this.after_update = after_update;
      this.owner = owner;
      this.cursor = cursor;
      this.p__13885 = p__13885;
      this.meta13892 = meta13892;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.generic.t13891.cljs$lang$type = true;
    floor16.ui.generic.t13891.cljs$lang$ctorStr = "floor16.ui.generic/t13891";
    floor16.ui.generic.t13891.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.ui.generic/t13891");
    };
    floor16.ui.generic.t13891.prototype.om$core$IRender$ = true;
    floor16.ui.generic.t13891.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      var v = self__.data_key.call(null, self__.cursor);
      var display_name = cljs.core.truth_(v) ? floor16.datum.name_by_key.call(null, self__.dict, v) : null;
      var placeholder__$2 = function() {
        var or__3403__auto__ = self__.placeholder;
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return floor16.lang.l.call(null, new cljs.core.Keyword(null, "select-value", "select-value", 1968185554));
        }
      }();
      var selector__$2 = function() {
        var or__3403__auto__ = self__.selector;
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return floor16.ui.generic.drop_down_menu;
        }
      }();
      return React.DOM.span({"onClick":function() {
        return floor16.ui.generic.active_BANG_.call(null, self__.owner, true);
      }, "className":"gen-select"}, cljs.core.not.call(null, v) ? React.DOM.span({"className":"placeholder"}, placeholder__$2) : React.DOM.span({"className":"value"}, display_name), React.DOM.span({"className":"btn"}, "..."), cljs.core.truth_(floor16.ui.generic.active_QMARK_.call(null, self__.owner)) ? om.core.build.call(null, floor16.ui.generic.self_closeable, self__.cursor, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 
      5, [new cljs.core.Keyword(null, "view", "view", 1017523735), selector__$2, new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), self__.data_key, new cljs.core.Keyword(null, "do-close", "do-close", 4607974824), function() {
        return floor16.ui.generic.active_BANG_.call(null, self__.owner, false);
      }, new cljs.core.Keyword(null, "dict", "dict", 1016987432), self__.dict, new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), self__.after_update], null)], null)) : null);
    };
    floor16.ui.generic.t13891.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13893) {
      var self__ = this;
      var _13893__$1 = this;
      return self__.meta13892;
    };
    floor16.ui.generic.t13891.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13893, meta13892__$1) {
      var self__ = this;
      var _13893__$1 = this;
      return new floor16.ui.generic.t13891(self__.opts, self__.select, self__.placeholder, self__.selector, self__.dict, self__.data_key, self__.map__13890, self__.after_update, self__.owner, self__.cursor, self__.p__13885, meta13892__$1);
    };
    floor16.ui.generic.__GT_t13891 = function __GT_t13891(opts__$1, select__$1, placeholder__$1, selector__$1, dict__$1, data_key__$1, map__13890__$2, after_update__$1, owner__$1, cursor__$1, p__13885__$1, meta13892) {
      return new floor16.ui.generic.t13891(opts__$1, select__$1, placeholder__$1, selector__$1, dict__$1, data_key__$1, map__13890__$2, after_update__$1, owner__$1, cursor__$1, p__13885__$1, meta13892);
    };
  }
  return new floor16.ui.generic.t13891(opts, select, placeholder, selector, dict, data_key, map__13890__$1, after_update, owner, cursor, p__13885, null);
};
floor16.ui.generic.sort_select = function sort_select(data, owner, opts) {
  if (typeof floor16.ui.generic.t13897 !== "undefined") {
  } else {
    floor16.ui.generic.t13897 = function(opts, owner, data, sort_select, meta13898) {
      this.opts = opts;
      this.owner = owner;
      this.data = data;
      this.sort_select = sort_select;
      this.meta13898 = meta13898;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.generic.t13897.cljs$lang$type = true;
    floor16.ui.generic.t13897.cljs$lang$ctorStr = "floor16.ui.generic/t13897";
    floor16.ui.generic.t13897.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.ui.generic/t13897");
    };
    floor16.ui.generic.t13897.prototype.om$core$IRender$ = true;
    floor16.ui.generic.t13897.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div({"className":""}, "gen-sort-select");
    };
    floor16.ui.generic.t13897.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13899) {
      var self__ = this;
      var _13899__$1 = this;
      return self__.meta13898;
    };
    floor16.ui.generic.t13897.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13899, meta13898__$1) {
      var self__ = this;
      var _13899__$1 = this;
      return new floor16.ui.generic.t13897(self__.opts, self__.owner, self__.data, self__.sort_select, meta13898__$1);
    };
    floor16.ui.generic.__GT_t13897 = function __GT_t13897(opts__$1, owner__$1, data__$1, sort_select__$1, meta13898) {
      return new floor16.ui.generic.t13897(opts__$1, owner__$1, data__$1, sort_select__$1, meta13898);
    };
  }
  return new floor16.ui.generic.t13897(opts, owner, data, sort_select, null);
};
floor16.ui.generic.view_select = function view_select(data, owner, opts) {
  if (typeof floor16.ui.generic.t13903 !== "undefined") {
  } else {
    floor16.ui.generic.t13903 = function(opts, owner, data, view_select, meta13904) {
      this.opts = opts;
      this.owner = owner;
      this.data = data;
      this.view_select = view_select;
      this.meta13904 = meta13904;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.generic.t13903.cljs$lang$type = true;
    floor16.ui.generic.t13903.cljs$lang$ctorStr = "floor16.ui.generic/t13903";
    floor16.ui.generic.t13903.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.ui.generic/t13903");
    };
    floor16.ui.generic.t13903.prototype.om$core$IRender$ = true;
    floor16.ui.generic.t13903.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div({"className":""}, "gen-view-select");
    };
    floor16.ui.generic.t13903.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13905) {
      var self__ = this;
      var _13905__$1 = this;
      return self__.meta13904;
    };
    floor16.ui.generic.t13903.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13905, meta13904__$1) {
      var self__ = this;
      var _13905__$1 = this;
      return new floor16.ui.generic.t13903(self__.opts, self__.owner, self__.data, self__.view_select, meta13904__$1);
    };
    floor16.ui.generic.__GT_t13903 = function __GT_t13903(opts__$1, owner__$1, data__$1, view_select__$1, meta13904) {
      return new floor16.ui.generic.t13903(opts__$1, owner__$1, data__$1, view_select__$1, meta13904);
    };
  }
  return new floor16.ui.generic.t13903(opts, owner, data, view_select, null);
};
floor16.ui.generic.empty_view = function empty_view(p__13906, owner) {
  var map__13911 = p__13906;
  var map__13911__$1 = cljs.core.seq_QMARK_.call(null, map__13911) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13911) : map__13911;
  var empty_text = cljs.core.get.call(null, map__13911__$1, new cljs.core.Keyword(null, "empty-text", "empty-text", 4203552031));
  if (typeof floor16.ui.generic.t13912 !== "undefined") {
  } else {
    floor16.ui.generic.t13912 = function(empty_text, map__13911, owner, p__13906, empty_view, meta13913) {
      this.empty_text = empty_text;
      this.map__13911 = map__13911;
      this.owner = owner;
      this.p__13906 = p__13906;
      this.empty_view = empty_view;
      this.meta13913 = meta13913;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.generic.t13912.cljs$lang$type = true;
    floor16.ui.generic.t13912.cljs$lang$ctorStr = "floor16.ui.generic/t13912";
    floor16.ui.generic.t13912.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.ui.generic/t13912");
    };
    floor16.ui.generic.t13912.prototype.om$core$IRender$ = true;
    floor16.ui.generic.t13912.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div({"className":"empty"}, self__.empty_text);
    };
    floor16.ui.generic.t13912.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13914) {
      var self__ = this;
      var _13914__$1 = this;
      return self__.meta13913;
    };
    floor16.ui.generic.t13912.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13914, meta13913__$1) {
      var self__ = this;
      var _13914__$1 = this;
      return new floor16.ui.generic.t13912(self__.empty_text, self__.map__13911, self__.owner, self__.p__13906, self__.empty_view, meta13913__$1);
    };
    floor16.ui.generic.__GT_t13912 = function __GT_t13912(empty_text__$1, map__13911__$2, owner__$1, p__13906__$1, empty_view__$1, meta13913) {
      return new floor16.ui.generic.t13912(empty_text__$1, map__13911__$2, owner__$1, p__13906__$1, empty_view__$1, meta13913);
    };
  }
  return new floor16.ui.generic.t13912(empty_text, map__13911__$1, owner, p__13906, empty_view, null);
};
floor16.ui.generic.data_header = function data_header(p__13916, owner, p__13917) {
  var map__13923 = p__13916;
  var map__13923__$1 = cljs.core.seq_QMARK_.call(null, map__13923) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13923) : map__13923;
  var cursor = map__13923__$1;
  var data = cljs.core.get.call(null, map__13923__$1, new cljs.core.Keyword(null, "data", "data", 1016980252));
  var query = cljs.core.get.call(null, map__13923__$1, new cljs.core.Keyword(null, "query", "query", 1121848378));
  var map__13924 = p__13917;
  var map__13924__$1 = cljs.core.seq_QMARK_.call(null, map__13924) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13924) : map__13924;
  var header_opts = cljs.core.get.call(null, map__13924__$1, new cljs.core.Keyword(null, "header-opts", "header-opts", 2151738066));
  if (typeof floor16.ui.generic.t13925 !== "undefined") {
  } else {
    floor16.ui.generic.t13925 = function(query, data, data_header, header_opts, owner, cursor, p__13916, p__13917, map__13923, map__13924, meta13926) {
      this.query = query;
      this.data = data;
      this.data_header = data_header;
      this.header_opts = header_opts;
      this.owner = owner;
      this.cursor = cursor;
      this.p__13916 = p__13916;
      this.p__13917 = p__13917;
      this.map__13923 = map__13923;
      this.map__13924 = map__13924;
      this.meta13926 = meta13926;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.generic.t13925.cljs$lang$type = true;
    floor16.ui.generic.t13925.cljs$lang$ctorStr = "floor16.ui.generic/t13925";
    floor16.ui.generic.t13925.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.ui.generic/t13925");
    };
    floor16.ui.generic.t13925.prototype.om$core$IRender$ = true;
    floor16.ui.generic.t13925.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div({"className":"data-header"}, function() {
        var temp__4092__auto__ = (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(self__.data);
        if (cljs.core.truth_(temp__4092__auto__)) {
          var total = temp__4092__auto__;
          return React.DOM.div({"className":"total"}, React.DOM.span({"className":"count-nums"}, total), React.DOM.span({"className":"count-words"}, floor16.lang.l.call(null, new cljs.core.Keyword(null, "ad", "ad", 1013907349), total)));
        } else {
          return null;
        }
      }(), cljs.core.apply.call(null, om.dom.div, {"className":"opts"}, cljs.core.map.call(null, function(p1__13915_SHARP_) {
        return om.core.build.call(null, (new cljs.core.Keyword(null, "view", "view", 1017523735)).cljs$core$IFn$_invoke$arity$1(cljs.core.val.call(null, p1__13915_SHARP_)), self__.query, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), (new cljs.core.Keyword(null, "opts", "opts", 1017322386)).cljs$core$IFn$_invoke$arity$1(cljs.core.val.call(null, p1__13915_SHARP_))], null));
      }, self__.header_opts)));
    };
    floor16.ui.generic.t13925.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13927) {
      var self__ = this;
      var _13927__$1 = this;
      return self__.meta13926;
    };
    floor16.ui.generic.t13925.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13927, meta13926__$1) {
      var self__ = this;
      var _13927__$1 = this;
      return new floor16.ui.generic.t13925(self__.query, self__.data, self__.data_header, self__.header_opts, self__.owner, self__.cursor, self__.p__13916, self__.p__13917, self__.map__13923, self__.map__13924, meta13926__$1);
    };
    floor16.ui.generic.__GT_t13925 = function __GT_t13925(query__$1, data__$1, data_header__$1, header_opts__$1, owner__$1, cursor__$1, p__13916__$1, p__13917__$1, map__13923__$2, map__13924__$2, meta13926) {
      return new floor16.ui.generic.t13925(query__$1, data__$1, data_header__$1, header_opts__$1, owner__$1, cursor__$1, p__13916__$1, p__13917__$1, map__13923__$2, map__13924__$2, meta13926);
    };
  }
  return new floor16.ui.generic.t13925(query, data, data_header, header_opts, owner, cursor, p__13916, p__13917, map__13923__$1, map__13924__$1, null);
};
floor16.ui.generic.page_item = function page_item(query, owner, p__13928) {
  var map__13930 = p__13928;
  var map__13930__$1 = cljs.core.seq_QMARK_.call(null, map__13930) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13930) : map__13930;
  var list_mode = cljs.core.get.call(null, map__13930__$1, new cljs.core.Keyword(null, "list-mode", "list-mode", 4038414564));
  var className = cljs.core.get.call(null, map__13930__$1, new cljs.core.Keyword(null, "className", "className", 1004015509));
  var text = cljs.core.get.call(null, map__13930__$1, new cljs.core.Keyword(null, "text", "text", 1017460895));
  var current_QMARK_ = cljs.core.get.call(null, map__13930__$1, new cljs.core.Keyword(null, "current?", "current?", 1589306712));
  var index = cljs.core.get.call(null, map__13930__$1, new cljs.core.Keyword(null, "index", "index", 1114250308));
  var url = floor16.navigation.url_to.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "mode", "mode", 1017261333), list_mode, new cljs.core.Keyword(null, "url-params", "url-params", 3432736534), cljs.core.assoc.call(null, query, new cljs.core.Keyword(null, "o-page", "o-page", 4236731551), index)], null));
  return React.DOM.li({"className":[cljs.core.str("pager-item "), cljs.core.str(cljs.core.truth_(current_QMARK_) ? "current " : null), cljs.core.str(cljs.core.truth_(className) ? className : null)].join(""), "key":index}, React.DOM.a({"onClick":function(e) {
    e.preventDefault();
    return floor16.navigation.goto$.call(null, url);
  }, "href":url}, function() {
    var or__3403__auto__ = text;
    if (cljs.core.truth_(or__3403__auto__)) {
      return or__3403__auto__;
    } else {
      return index + 1;
    }
  }()));
};
floor16.ui.generic.data_pager = function data_pager(p__13932, owner, p__13933) {
  var map__13939 = p__13932;
  var map__13939__$1 = cljs.core.seq_QMARK_.call(null, map__13939) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13939) : map__13939;
  var cursor = map__13939__$1;
  var data = cljs.core.get.call(null, map__13939__$1, new cljs.core.Keyword(null, "data", "data", 1016980252));
  var query = cljs.core.get.call(null, map__13939__$1, new cljs.core.Keyword(null, "query", "query", 1121848378));
  var map__13940 = p__13933;
  var map__13940__$1 = cljs.core.seq_QMARK_.call(null, map__13940) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13940) : map__13940;
  var opts = map__13940__$1;
  var list_mode = cljs.core.get.call(null, map__13940__$1, new cljs.core.Keyword(null, "list-mode", "list-mode", 4038414564));
  if (typeof floor16.ui.generic.t13941 !== "undefined") {
  } else {
    floor16.ui.generic.t13941 = function(opts, query, p__13932, p__13933, list_mode, map__13939, data, data_pager, owner, cursor, map__13940, meta13942) {
      this.opts = opts;
      this.query = query;
      this.p__13932 = p__13932;
      this.p__13933 = p__13933;
      this.list_mode = list_mode;
      this.map__13939 = map__13939;
      this.data = data;
      this.data_pager = data_pager;
      this.owner = owner;
      this.cursor = cursor;
      this.map__13940 = map__13940;
      this.meta13942 = meta13942;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.generic.t13941.cljs$lang$type = true;
    floor16.ui.generic.t13941.cljs$lang$ctorStr = "floor16.ui.generic/t13941";
    floor16.ui.generic.t13941.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.ui.generic/t13941");
    };
    floor16.ui.generic.t13941.prototype.om$core$IRender$ = true;
    floor16.ui.generic.t13941.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      var max_pages = 9;
      var middle = cljs.core.quot.call(null, max_pages, 2);
      var total = (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(self__.data);
      var offset = (new cljs.core.Keyword(null, "offset", "offset", 4289091589)).cljs$core$IFn$_invoke$arity$1(self__.data);
      var limit = (new cljs.core.Keyword(null, "limit", "limit", 1116880685)).cljs$core$IFn$_invoke$arity$1(self__.data);
      var pg_count = Math.ceil(total / limit);
      var pg_num = cljs.core.quot.call(null, offset, limit);
      var cur_pg = function() {
        var or__3403__auto__ = (new cljs.core.Keyword(null, "o-page", "o-page", 4236731551)).cljs$core$IFn$_invoke$arity$1(self__.query);
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return pg_num;
        }
      }();
      var can_right = pg_count - 1 - cur_pg;
      var to_show = function() {
        var x__3717__auto__ = max_pages;
        var y__3718__auto__ = pg_count;
        return x__3717__auto__ < y__3718__auto__ ? x__3717__auto__ : y__3718__auto__;
      }();
      var left = cur_pg - function() {
        var x__3717__auto__ = cur_pg;
        var y__3718__auto__ = function() {
          var x__3710__auto__ = middle;
          var y__3711__auto__ = to_show - 1 - can_right;
          return x__3710__auto__ > y__3711__auto__ ? x__3710__auto__ : y__3711__auto__;
        }();
        return x__3717__auto__ < y__3718__auto__ ? x__3717__auto__ : y__3718__auto__;
      }();
      var right = cur_pg + function() {
        var x__3717__auto__ = can_right;
        var y__3718__auto__ = function() {
          var x__3710__auto__ = middle;
          var y__3711__auto__ = to_show - 1 - cur_pg;
          return x__3710__auto__ > y__3711__auto__ ? x__3710__auto__ : y__3711__auto__;
        }();
        return x__3717__auto__ < y__3718__auto__ ? x__3717__auto__ : y__3718__auto__;
      }();
      return cljs.core.apply.call(null, om.dom.ul, {"className":"data-pager"}, cljs.core.concat.call(null, cljs.core._EQ_.call(null, cur_pg, 0) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [om.core.build.call(null, floor16.ui.generic.page_item, self__.query, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
      "index", "index", 1114250308), cur_pg - 1, new cljs.core.Keyword(null, "text", "text", 1017460895), floor16.lang.l.call(null, new cljs.core.Keyword(null, "data-pager-prev", "data-pager-prev", 2462390130)), new cljs.core.Keyword(null, "list-mode", "list-mode", 4038414564), self__.list_mode, new cljs.core.Keyword(null, "className", "className", 1004015509), "prev"], null)], null))], null), cljs.core.map.call(null, function(p1__13931_SHARP_) {
        return om.core.build.call(null, floor16.ui.generic.page_item, self__.query, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "index", "index", 1114250308), p1__13931_SHARP_, new cljs.core.Keyword(null, "current?", "current?", 1589306712), cljs.core._EQ_.call(null, p1__13931_SHARP_, cur_pg), new cljs.core.Keyword(null, "list-mode", "list-mode", 4038414564), self__.list_mode], 
        null)], null));
      }, cljs.core.range.call(null, left, right + 1)), cljs.core._EQ_.call(null, cur_pg, pg_count - 1) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [om.core.build.call(null, floor16.ui.generic.page_item, self__.query, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "index", "index", 1114250308), cur_pg + 
      1, new cljs.core.Keyword(null, "text", "text", 1017460895), floor16.lang.l.call(null, new cljs.core.Keyword(null, "data-pager-next", "data-pager-next", 2462318642)), new cljs.core.Keyword(null, "list-mode", "list-mode", 4038414564), self__.list_mode, new cljs.core.Keyword(null, "className", "className", 1004015509), "next"], null)], null))], null)));
    };
    floor16.ui.generic.t13941.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13943) {
      var self__ = this;
      var _13943__$1 = this;
      return self__.meta13942;
    };
    floor16.ui.generic.t13941.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13943, meta13942__$1) {
      var self__ = this;
      var _13943__$1 = this;
      return new floor16.ui.generic.t13941(self__.opts, self__.query, self__.p__13932, self__.p__13933, self__.list_mode, self__.map__13939, self__.data, self__.data_pager, self__.owner, self__.cursor, self__.map__13940, meta13942__$1);
    };
    floor16.ui.generic.__GT_t13941 = function __GT_t13941(opts__$1, query__$1, p__13932__$1, p__13933__$1, list_mode__$1, map__13939__$2, data__$1, data_pager__$1, owner__$1, cursor__$1, map__13940__$2, meta13942) {
      return new floor16.ui.generic.t13941(opts__$1, query__$1, p__13932__$1, p__13933__$1, list_mode__$1, map__13939__$2, data__$1, data_pager__$1, owner__$1, cursor__$1, map__13940__$2, meta13942);
    };
  }
  return new floor16.ui.generic.t13941(opts, query, p__13932, p__13933, list_mode, map__13939__$1, data, data_pager, owner, cursor, map__13940__$1, null);
};
floor16.ui.generic.load_progress = function load_progress(data, owner, opts) {
  if (typeof floor16.ui.generic.t13947 !== "undefined") {
  } else {
    floor16.ui.generic.t13947 = function(opts, owner, data, load_progress, meta13948) {
      this.opts = opts;
      this.owner = owner;
      this.data = data;
      this.load_progress = load_progress;
      this.meta13948 = meta13948;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.generic.t13947.cljs$lang$type = true;
    floor16.ui.generic.t13947.cljs$lang$ctorStr = "floor16.ui.generic/t13947";
    floor16.ui.generic.t13947.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.ui.generic/t13947");
    };
    floor16.ui.generic.t13947.prototype.om$core$IRender$ = true;
    floor16.ui.generic.t13947.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div({"className":"load-progress"}, "gen-load-progress");
    };
    floor16.ui.generic.t13947.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13949) {
      var self__ = this;
      var _13949__$1 = this;
      return self__.meta13948;
    };
    floor16.ui.generic.t13947.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13949, meta13948__$1) {
      var self__ = this;
      var _13949__$1 = this;
      return new floor16.ui.generic.t13947(self__.opts, self__.owner, self__.data, self__.load_progress, meta13948__$1);
    };
    floor16.ui.generic.__GT_t13947 = function __GT_t13947(opts__$1, owner__$1, data__$1, load_progress__$1, meta13948) {
      return new floor16.ui.generic.t13947(opts__$1, owner__$1, data__$1, load_progress__$1, meta13948);
    };
  }
  return new floor16.ui.generic.t13947(opts, owner, data, load_progress, null);
};
floor16.ui.generic.list_view = function list_view(p__13951, owner, p__13952) {
  var map__13958 = p__13951;
  var map__13958__$1 = cljs.core.seq_QMARK_.call(null, map__13958) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13958) : map__13958;
  var cursor = map__13958__$1;
  var data = cljs.core.get.call(null, map__13958__$1, new cljs.core.Keyword(null, "data", "data", 1016980252));
  var query = cljs.core.get.call(null, map__13958__$1, new cljs.core.Keyword(null, "query", "query", 1121848378));
  var map__13959 = p__13952;
  var map__13959__$1 = cljs.core.seq_QMARK_.call(null, map__13959) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13959) : map__13959;
  var res = cljs.core.get.call(null, map__13959__$1, new cljs.core.Keyword(null, "res", "res", 1014017042));
  var data_head = cljs.core.get.call(null, map__13959__$1, new cljs.core.Keyword(null, "data-head", "data-head", 603991445));
  var top_filter = cljs.core.get.call(null, map__13959__$1, new cljs.core.Keyword(null, "top-filter", "top-filter", 2858888802));
  var list_mode = cljs.core.get.call(null, map__13959__$1, new cljs.core.Keyword(null, "list-mode", "list-mode", 4038414564));
  var empty_text = cljs.core.get.call(null, map__13959__$1, new cljs.core.Keyword(null, "empty-text", "empty-text", 4203552031));
  var side_filter = cljs.core.get.call(null, map__13959__$1, new cljs.core.Keyword(null, "side-filter", "side-filter", 945679392));
  var item_view_mode = cljs.core.get.call(null, map__13959__$1, new cljs.core.Keyword(null, "item-view-mode", "item-view-mode", 4070495491));
  var header_opts = cljs.core.get.call(null, map__13959__$1, new cljs.core.Keyword(null, "header-opts", "header-opts", 2151738066));
  var data_empty = cljs.core.get.call(null, map__13959__$1, new cljs.core.Keyword(null, "data-empty", "data-empty", 1188992220));
  var kw_id = cljs.core.get.call(null, map__13959__$1, new cljs.core.Keyword(null, "kw-id", "kw-id", 1116312718));
  var item_view = cljs.core.get.call(null, map__13959__$1, new cljs.core.Keyword(null, "item-view", "item-view", 3121596561));
  if (typeof floor16.ui.generic.t13960 !== "undefined") {
  } else {
    floor16.ui.generic.t13960 = function(res, list_view, data_head, query, top_filter, map__13958, list_mode, map__13959, empty_text, data, side_filter, item_view_mode, header_opts, p__13951, p__13952, owner, cursor, data_empty, kw_id, item_view, meta13961) {
      this.res = res;
      this.list_view = list_view;
      this.data_head = data_head;
      this.query = query;
      this.top_filter = top_filter;
      this.map__13958 = map__13958;
      this.list_mode = list_mode;
      this.map__13959 = map__13959;
      this.empty_text = empty_text;
      this.data = data;
      this.side_filter = side_filter;
      this.item_view_mode = item_view_mode;
      this.header_opts = header_opts;
      this.p__13951 = p__13951;
      this.p__13952 = p__13952;
      this.owner = owner;
      this.cursor = cursor;
      this.data_empty = data_empty;
      this.kw_id = kw_id;
      this.item_view = item_view;
      this.meta13961 = meta13961;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.generic.t13960.cljs$lang$type = true;
    floor16.ui.generic.t13960.cljs$lang$ctorStr = "floor16.ui.generic/t13960";
    floor16.ui.generic.t13960.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.ui.generic/t13960");
    };
    floor16.ui.generic.t13960.prototype.om$core$IRenderState$ = true;
    floor16.ui.generic.t13960.prototype.om$core$IRenderState$render_state$arity$2 = function(this$, state) {
      var self__ = this;
      var this$__$1 = this;
      var kw_id__$2 = function() {
        var or__3403__auto__ = self__.kw_id;
        if (cljs.core.truth_(or__3403__auto__)) {
          return or__3403__auto__;
        } else {
          return new cljs.core.Keyword(null, "id", "id", 1013907597);
        }
      }();
      var items = (new cljs.core.Keyword(null, "items", "items", 1114430258)).cljs$core$IFn$_invoke$arity$1(self__.data);
      var no_items_QMARK_ = cljs.core.empty_QMARK_.call(null, items);
      return React.DOM.div(null, cljs.core.truth_(self__.top_filter) ? om.core.build.call(null, self__.top_filter, self__.query) : null, React.DOM.div({"className":"data-container"}, cljs.core.truth_((new cljs.core.Keyword(null, "loading", "loading", 1350554798)).cljs$core$IFn$_invoke$arity$1(self__.data)) ? om.core.build.call(null, floor16.ui.generic.load_progress, self__.data) : null, cljs.core.truth_(self__.data_head) ? om.core.build.call(null, self__.data_head, self__.cursor) : om.core.build.call(null, 
      floor16.ui.generic.data_header, self__.cursor, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "header-opts", "header-opts", 2151738066), self__.header_opts], null)], null)), no_items_QMARK_ ? cljs.core.truth_(self__.data_empty) ? om.core.build.call(null, self__.data_empty, om.core.graft.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "empty-text", 
      "empty-text", 4203552031), self__.empty_text], null), self__.cursor)) : om.core.build.call(null, floor16.ui.generic.empty_view, om.core.graft.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "empty-text", "empty-text", 4203552031), self__.empty_text], null), self__.cursor)) : cljs.core.apply.call(null, om.dom.ul, null, cljs.core.map.call(null, function(p1__13950_SHARP_) {
        return React.DOM.li({"key":kw_id__$2.call(null, p1__13950_SHARP_)}, om.core.build.call(null, self__.item_view, p1__13950_SHARP_));
      }, items)), no_items_QMARK_ ? null : om.core.build.call(null, floor16.ui.generic.data_pager, self__.cursor, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "list-mode", "list-mode", 4038414564), self__.list_mode], null)], null))), cljs.core.truth_(self__.side_filter) ? om.core.build.call(null, self__.side_filter, self__.query) : null);
    };
    floor16.ui.generic.t13960.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13962) {
      var self__ = this;
      var _13962__$1 = this;
      return self__.meta13961;
    };
    floor16.ui.generic.t13960.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13962, meta13961__$1) {
      var self__ = this;
      var _13962__$1 = this;
      return new floor16.ui.generic.t13960(self__.res, self__.list_view, self__.data_head, self__.query, self__.top_filter, self__.map__13958, self__.list_mode, self__.map__13959, self__.empty_text, self__.data, self__.side_filter, self__.item_view_mode, self__.header_opts, self__.p__13951, self__.p__13952, self__.owner, self__.cursor, self__.data_empty, self__.kw_id, self__.item_view, meta13961__$1);
    };
    floor16.ui.generic.__GT_t13960 = function __GT_t13960(res__$1, list_view__$1, data_head__$1, query__$1, top_filter__$1, map__13958__$2, list_mode__$1, map__13959__$2, empty_text__$1, data__$1, side_filter__$1, item_view_mode__$1, header_opts__$1, p__13951__$1, p__13952__$1, owner__$1, cursor__$1, data_empty__$1, kw_id__$1, item_view__$1, meta13961) {
      return new floor16.ui.generic.t13960(res__$1, list_view__$1, data_head__$1, query__$1, top_filter__$1, map__13958__$2, list_mode__$1, map__13959__$2, empty_text__$1, data__$1, side_filter__$1, item_view_mode__$1, header_opts__$1, p__13951__$1, p__13952__$1, owner__$1, cursor__$1, data_empty__$1, kw_id__$1, item_view__$1, meta13961);
    };
  }
  return new floor16.ui.generic.t13960(res, list_view, data_head, query, top_filter, map__13958__$1, list_mode, map__13959__$1, empty_text, data, side_filter, item_view_mode, header_opts, p__13951, p__13952, owner, cursor, data_empty, kw_id, item_view, null);
};
goog.provide("floor16.pages.search");
goog.require("cljs.core");
goog.require("floor16.lang");
goog.require("cljs.core.async");
goog.require("goog.events");
goog.require("goog.events.EventType");
goog.require("floor16.auth");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("floor16.auth");
goog.require("floor16.lang");
goog.require("floor16.ui.generic");
goog.require("om.dom");
goog.require("cljs.core.async");
goog.require("goog.events");
goog.require("floor16.ui.generic");
floor16.pages.search.simple_filter = function simple_filter(filt, owner) {
  if (typeof floor16.pages.search.t14086 !== "undefined") {
  } else {
    floor16.pages.search.t14086 = function(owner, filt, simple_filter, meta14087) {
      this.owner = owner;
      this.filt = filt;
      this.simple_filter = simple_filter;
      this.meta14087 = meta14087;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.pages.search.t14086.cljs$lang$type = true;
    floor16.pages.search.t14086.cljs$lang$ctorStr = "floor16.pages.search/t14086";
    floor16.pages.search.t14086.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.pages.search/t14086");
    };
    floor16.pages.search.t14086.prototype.om$core$IRender$ = true;
    floor16.pages.search.t14086.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div({"className":"simple-filter"}, om.core.build.call(null, floor16.ui.generic.select, self__.filt, floor16.ui.generic.add_filter_chan.call(null, self__.owner, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), new cljs.core.Keyword(null, "city-id", "city-id", 1799296047), new cljs.core.Keyword(null, "placeholder", "placeholder", 
      1612151013), floor16.lang.l.call(null, new cljs.core.Keyword(null, "city", "city", 1016958173)), new cljs.core.Keyword(null, "resource", "resource", 672839552), floor16.ui.generic.res_city.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "common", "common", 3954056541), new cljs.core.Keyword(null, "refs", "refs", 1017400754), new cljs.core.Keyword(null, "cities", "cities", 3948719803)], null))], null)], null))));
    };
    floor16.pages.search.t14086.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14088) {
      var self__ = this;
      var _14088__$1 = this;
      return self__.meta14087;
    };
    floor16.pages.search.t14086.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14088, meta14087__$1) {
      var self__ = this;
      var _14088__$1 = this;
      return new floor16.pages.search.t14086(self__.owner, self__.filt, self__.simple_filter, meta14087__$1);
    };
    floor16.pages.search.__GT_t14086 = function __GT_t14086(owner__$1, filt__$1, simple_filter__$1, meta14087) {
      return new floor16.pages.search.t14086(owner__$1, filt__$1, simple_filter__$1, meta14087);
    };
  }
  return new floor16.pages.search.t14086(owner, filt, simple_filter, null);
};
floor16.pages.search.extended_filter = function extended_filter(data, owner, opts) {
  if (typeof floor16.pages.search.t14092 !== "undefined") {
  } else {
    floor16.pages.search.t14092 = function(opts, owner, data, extended_filter, meta14093) {
      this.opts = opts;
      this.owner = owner;
      this.data = data;
      this.extended_filter = extended_filter;
      this.meta14093 = meta14093;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.pages.search.t14092.cljs$lang$type = true;
    floor16.pages.search.t14092.cljs$lang$ctorStr = "floor16.pages.search/t14092";
    floor16.pages.search.t14092.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.pages.search/t14092");
    };
    floor16.pages.search.t14092.prototype.om$core$IRender$ = true;
    floor16.pages.search.t14092.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div({"className":""}, "extended-filter");
    };
    floor16.pages.search.t14092.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14094) {
      var self__ = this;
      var _14094__$1 = this;
      return self__.meta14093;
    };
    floor16.pages.search.t14092.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14094, meta14093__$1) {
      var self__ = this;
      var _14094__$1 = this;
      return new floor16.pages.search.t14092(self__.opts, self__.owner, self__.data, self__.extended_filter, meta14093__$1);
    };
    floor16.pages.search.__GT_t14092 = function __GT_t14092(opts__$1, owner__$1, data__$1, extended_filter__$1, meta14093) {
      return new floor16.pages.search.t14092(opts__$1, owner__$1, data__$1, extended_filter__$1, meta14093);
    };
  }
  return new floor16.pages.search.t14092(opts, owner, data, extended_filter, null);
};
floor16.pages.search.ad_item_view = function ad_item_view(item, owner, opts) {
  if (typeof floor16.pages.search.t14098 !== "undefined") {
  } else {
    floor16.pages.search.t14098 = function(opts, owner, item, ad_item_view, meta14099) {
      this.opts = opts;
      this.owner = owner;
      this.item = item;
      this.ad_item_view = ad_item_view;
      this.meta14099 = meta14099;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.pages.search.t14098.cljs$lang$type = true;
    floor16.pages.search.t14098.cljs$lang$ctorStr = "floor16.pages.search/t14098";
    floor16.pages.search.t14098.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.pages.search/t14098");
    };
    floor16.pages.search.t14098.prototype.om$core$IRender$ = true;
    floor16.pages.search.t14098.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div({"className":""}, "ad-item-view");
    };
    floor16.pages.search.t14098.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14100) {
      var self__ = this;
      var _14100__$1 = this;
      return self__.meta14099;
    };
    floor16.pages.search.t14098.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14100, meta14099__$1) {
      var self__ = this;
      var _14100__$1 = this;
      return new floor16.pages.search.t14098(self__.opts, self__.owner, self__.item, self__.ad_item_view, meta14099__$1);
    };
    floor16.pages.search.__GT_t14098 = function __GT_t14098(opts__$1, owner__$1, item__$1, ad_item_view__$1, meta14099) {
      return new floor16.pages.search.t14098(opts__$1, owner__$1, item__$1, ad_item_view__$1, meta14099);
    };
  }
  return new floor16.pages.search.t14098(opts, owner, item, ad_item_view, null);
};
floor16.pages.search.page = function page(cursor, owner, p__14101) {
  var map__14106 = p__14101;
  var map__14106__$1 = cljs.core.seq_QMARK_.call(null, map__14106) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14106) : map__14106;
  var opts = map__14106__$1;
  var page_path = cljs.core.get.call(null, map__14106__$1, new cljs.core.Keyword(null, "page-path", "page-path", 1851480085));
  var page_id = cljs.core.get.call(null, map__14106__$1, new cljs.core.Keyword(null, "page-id", "page-id", 4505274507));
  if (typeof floor16.pages.search.t14107 !== "undefined") {
  } else {
    floor16.pages.search.t14107 = function(page_id, page_path, opts, map__14106, p__14101, owner, cursor, page, meta14108) {
      this.page_id = page_id;
      this.page_path = page_path;
      this.opts = opts;
      this.map__14106 = map__14106;
      this.p__14101 = p__14101;
      this.owner = owner;
      this.cursor = cursor;
      this.page = page;
      this.meta14108 = meta14108;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.pages.search.t14107.cljs$lang$type = true;
    floor16.pages.search.t14107.cljs$lang$ctorStr = "floor16.pages.search/t14107";
    floor16.pages.search.t14107.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.pages.search/t14107");
    };
    floor16.pages.search.t14107.prototype.om$core$IRender$ = true;
    floor16.pages.search.t14107.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div({"id":"sec-home"}, React.DOM.div({"className":"design-layer", "id":"spot"}), React.DOM.div({"className":"design-layer", "id":"icons"}), React.DOM.div({"className":"design-layer", "id":"cells"}), React.DOM.div({"className":"container"}, floor16.auth.guest_QMARK_.call(null) ? React.DOM.div({"className":"advert"}, React.DOM.div({"className":"eight columns", "id":"slogan"}, React.DOM.h1(null, React.DOM.img({"alt":"\u041d\u0430\u0439\u0434\u0438 \u0436\u0438\u043b\u044c\u0435 \u0441\u0430\u043c! \u041f\u0440\u044f\u043c\u0430\u044f \u0430\u0440\u0435\u043d\u0434\u0430 \u043e\u0442 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u0438\u043a\u043e\u0432!", 
      "src":"/img/slogan.png"})), React.DOM.p(null, "\u0415\u0436\u0435\u0434\u043d\u0435\u0432\u043d\u044b\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0431\u0430\u0437\u044b \u0436\u0438\u043b\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432", React.DOM.br(null), "SMS \u0438 E-mail \u0440\u0430\u0441\u0441\u044b\u043b\u043a\u0430 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432", React.DOM.br(null), 
      "\u0413\u0438\u0431\u043a\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u0442\u0430\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438")), React.DOM.div({"className":"offset-by-one six columns", "id":"scheme"}, React.DOM.img({"alt":"\u0423\u0434\u043e\u0431\u043d\u044b\u0439 \u043f\u043e\u0438\u0441\u043a. \u0415\u0436\u0435\u0434\u043d\u0435\u0432\u043d\u044b\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f. \u0410\u0432\u0442\u043e\u043f\u043e\u0434\u0431\u043e\u0440 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432. SMS \u0438 E-mail \u0440\u0430\u0441\u0441\u044b\u043b\u043a\u0430. \u041e\u043d\u043b\u0430\u0439\u043d \u043a\u043e\u043d\u0441\u0443\u043b\u044c\u0442\u0430\u0446\u0438\u0438.", 
      "src":"/img/scheme.png"})), React.DOM.div({"className":"clear"})) : null, function() {
        var pg = cljs.core.get_in.call(null, self__.cursor, self__.page_path);
        if (cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "filter", "filter", 4034379498)).cljs$core$IFn$_invoke$arity$1(pg))) {
          return om.core.build.call(null, floor16.pages.search.simple_filter, (new cljs.core.Keyword(null, "filter", "filter", 4034379498)).cljs$core$IFn$_invoke$arity$1(pg));
        } else {
          return om.core.build.call(null, floor16.ui.generic.list_view, pg, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "top-filter", "top-filter", 2858888802), floor16.pages.search.simple_filter, new cljs.core.Keyword(null, "side-filter", "side-filter", 945679392), floor16.pages.search.extended_filter, new cljs.core.Keyword(null, "header-opts", "header-opts", 2151738066), 
          new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "sort", "sort", 1017440528), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "view", "view", 1017523735), floor16.ui.generic.sort_select], null), new cljs.core.Keyword(null, "views", "views", 1126108640), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "view", "view", 1017523735), floor16.ui.generic.view_select], null)], null), new cljs.core.Keyword(null, "empty-text", "empty-text", 
          4203552031), floor16.lang.l.call(null, new cljs.core.Keyword(null, "empty-search", "empty-search", 3924434330)), new cljs.core.Keyword(null, "item-view", "item-view", 3121596561), floor16.pages.search.ad_item_view, new cljs.core.Keyword(null, "res", "res", 1014017042), floor16.ui.generic.res_city.call(null, cljs.core.conj.call(null, self__.page_path, new cljs.core.Keyword(null, "data", "data", 1016980252)))], null)], null));
        }
      }()));
    };
    floor16.pages.search.t14107.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14109) {
      var self__ = this;
      var _14109__$1 = this;
      return self__.meta14108;
    };
    floor16.pages.search.t14107.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14109, meta14108__$1) {
      var self__ = this;
      var _14109__$1 = this;
      return new floor16.pages.search.t14107(self__.page_id, self__.page_path, self__.opts, self__.map__14106, self__.p__14101, self__.owner, self__.cursor, self__.page, meta14108__$1);
    };
    floor16.pages.search.__GT_t14107 = function __GT_t14107(page_id__$1, page_path__$1, opts__$1, map__14106__$2, p__14101__$1, owner__$1, cursor__$1, page__$1, meta14108) {
      return new floor16.pages.search.t14107(page_id__$1, page_path__$1, opts__$1, map__14106__$2, p__14101__$1, owner__$1, cursor__$1, page__$1, meta14108);
    };
  }
  return new floor16.pages.search.t14107(page_id, page_path, opts, map__14106__$1, p__14101, owner, cursor, page, null);
};
goog.provide("floor16.app");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("floor16.navigation");
goog.require("floor16.navigation");
goog.require("goog.events");
goog.require("goog.events.EventType");
goog.require("floor16.pages.search");
goog.require("floor16.auth");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("floor16.auth");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("floor16.ui.generic");
goog.require("om.dom");
goog.require("cljs.core.async");
goog.require("goog.events");
goog.require("floor16.ui.generic");
cljs.core.enable_console_print_BANG_.call(null);
floor16.app.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "roles", "roles", 1122599471), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "leaser", "leaser", 4202131658), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 1124275658), "\u0410\u0440\u0435\u043d\u0434\u0430\u0442\u043e\u0440"], null), new cljs.core.Keyword(null, "householder", "householder", 2839130174), new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "title", "title", 1124275658), "\u0414\u043e\u043c\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u0435\u0446"], null)], null), new cljs.core.Keyword(null, "pages", "pages", 1120330550), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "search", "search", 4402534682), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "filter", "filter", 4034379498), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "data", "data", 
1016980252), cljs.core.PersistentArrayMap.EMPTY], null)], null)], null));
floor16.app.fake_page = function fake_page(value) {
  return function page(state, owner, opts) {
    if (typeof floor16.app.t14013 !== "undefined") {
    } else {
      floor16.app.t14013 = function(opts, owner, state, page, value, fake_page, meta14014) {
        this.opts = opts;
        this.owner = owner;
        this.state = state;
        this.page = page;
        this.value = value;
        this.fake_page = fake_page;
        this.meta14014 = meta14014;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      floor16.app.t14013.cljs$lang$type = true;
      floor16.app.t14013.cljs$lang$ctorStr = "floor16.app/t14013";
      floor16.app.t14013.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
        return cljs.core._write.call(null, writer__3971__auto__, "floor16.app/t14013");
      };
      floor16.app.t14013.prototype.om$core$IRender$ = true;
      floor16.app.t14013.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
        var self__ = this;
        var this__4922__auto____$1 = this;
        return React.DOM.div({}, self__.value);
      };
      floor16.app.t14013.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14015) {
        var self__ = this;
        var _14015__$1 = this;
        return self__.meta14014;
      };
      floor16.app.t14013.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14015, meta14014__$1) {
        var self__ = this;
        var _14015__$1 = this;
        return new floor16.app.t14013(self__.opts, self__.owner, self__.state, self__.page, self__.value, self__.fake_page, meta14014__$1);
      };
      floor16.app.__GT_t14013 = function __GT_t14013(opts__$1, owner__$1, state__$1, page__$1, value__$1, fake_page__$1, meta14014) {
        return new floor16.app.t14013(opts__$1, owner__$1, state__$1, page__$1, value__$1, fake_page__$1, meta14014);
      };
    }
    return new floor16.app.t14013(opts, owner, state, page, value, fake_page, null);
  };
};
floor16.app.nav_conf = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "app", "app", 1014001043), floor16.app.app_state, new cljs.core.Keyword(null, "pages", "pages", 1120330550), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "search", "search", 4402534682), new cljs.core.Keyword(null, "component", "component", 3908964463), 
floor16.pages.search.page, new cljs.core.Keyword(null, "link-title", "link-title", 769029687), "\u041f\u043e\u0438\u0441\u043a \u043a\u0432\u0430\u0440\u0442\u0438\u0440", new cljs.core.Keyword(null, "uri-aliases", "uri-aliases", 3989618447), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "!/search/:query"], null)], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "object", "object", 
4285503153), new cljs.core.Keyword(null, "component", "component", 3908964463), floor16.app.fake_page.call(null, "\u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043e\u0431\u044a\u0435\u043a\u0442\u0430"), new cljs.core.Keyword(null, "uri", "uri", 1014020318), "!/:city-code/:area-type-code/:area-code/:obj-type-code/:obj-id", new cljs.core.Keyword(null, "link-title", "link-title", 769029687), "\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "to-realtors", "to-realtors", 2092517150), new cljs.core.Keyword(null, "component", "component", 3908964463), floor16.app.fake_page.call(null, "\u0420\u0438\u044d\u043b\u0442\u043e\u0440\u0430\u043c"), new cljs.core.Keyword(null, "link-title", "link-title", 769029687), "\u0420\u0438\u044d\u043b\u0442\u043e\u0440\u0430\u043c"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", 
1013907597), new cljs.core.Keyword(null, "to-hh", "to-hh", 1124386052), new cljs.core.Keyword(null, "component", "component", 3908964463), floor16.app.fake_page.call(null, "\u0414\u043e\u043c\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430\u043c"), new cljs.core.Keyword(null, "link-title", "link-title", 769029687), "\u0414\u043e\u043c\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430\u043c"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", 
"id", 1013907597), new cljs.core.Keyword(null, "profile", "profile", 704478491), new cljs.core.Keyword(null, "component", "component", 3908964463), floor16.app.fake_page.call(null, "\u041f\u0440\u043e\u0444\u0438\u043b\u044c"), new cljs.core.Keyword(null, "link-title", "link-title", 769029687), "\u041f\u0440\u043e\u0444\u0438\u043b\u044c"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "own-objects", "own-objects", 
4006372671), new cljs.core.Keyword(null, "component", "component", 3908964463), floor16.app.fake_page.call(null, "\u041c\u043e\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u044b"), new cljs.core.Keyword(null, "link-title", "link-title", 769029687), "\u041c\u043e\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u044b"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "realtor-objects", "realtor-objects", 1154952626), new cljs.core.Keyword(null, 
"component", "component", 3908964463), floor16.app.fake_page.call(null, "\u041c\u043e\u044f \u0431\u0430\u0437\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432"), new cljs.core.Keyword(null, "link-title", "link-title", 769029687), "\u041c\u043e\u044f \u0431\u0430\u0437\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432"], null)], null), new cljs.core.Keyword(null, "main-page", "main-page", 716578197), new cljs.core.Keyword(null, "search", "search", 4402534682), new cljs.core.Keyword(null, 
"main-menu", "main-menu", 716492901), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "pages", "pages", 1120330550), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "search", "search", 4402534682), new cljs.core.Keyword(null, "to-realtors", "to-realtors", 2092517150), new cljs.core.Keyword(null, "to-hh", "to-hh", 1124386052)], null)], null), new cljs.core.Keyword(null, "user-menu", "user-menu", 1307043219), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "pages", "pages", 1120330550), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "profile", "profile", 704478491), new cljs.core.Keyword(null, "realtor-objects", "realtor-objects", 1154952626), new cljs.core.Keyword(null, "own-objects", "own-objects", 4006372671)], null), new cljs.core.Keyword(null, "draw-icons?", "draw-icons?", 2875165824), true], null), new cljs.core.Keyword(null, "user-menu-top", "user-menu-top", 
637936411), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "pages", "pages", 1120330550), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "profile", "profile", 704478491), new cljs.core.Keyword(null, "own-objects", "own-objects", 4006372671)], null)], null)], null);
floor16.app.try_login = function try_login(cursor, owner) {
  om.core.set_state_BANG_.call(null, owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error", "error", 1110689146)], null), false);
  return floor16.auth.do_login.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "username", "username", 748190792), om.core.get_node.call(null, owner, "username").value, new cljs.core.Keyword(null, "password", "password", 2230889997), om.core.get_node.call(null, owner, "pwd").value], null), function() {
    return om.core.set_state_BANG_.call(null, owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "active", "active", 3885920888)], null), false);
  }, function() {
    return om.core.set_state_BANG_.call(null, owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error", "error", 1110689146)], null), true);
  });
};
floor16.app.login_keydown = function login_keydown(cursor, owner, e, node_ref) {
  if (cljs.core._EQ_.call(null, 13, e.keyCode)) {
    if (cljs.core._EQ_.call(null, node_ref, "username")) {
      return om.core.get_node.call(null, owner, "pwd").focus();
    } else {
      return floor16.app.try_login.call(null, cursor, owner);
    }
  } else {
    return null;
  }
};
floor16.app.logout_item = function logout_item(app, owner) {
  if (typeof floor16.app.t14019 !== "undefined") {
  } else {
    floor16.app.t14019 = function(owner, app, logout_item, meta14020) {
      this.owner = owner;
      this.app = app;
      this.logout_item = logout_item;
      this.meta14020 = meta14020;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.app.t14019.cljs$lang$type = true;
    floor16.app.t14019.cljs$lang$ctorStr = "floor16.app/t14019";
    floor16.app.t14019.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.app/t14019");
    };
    floor16.app.t14019.prototype.om$core$IRender$ = true;
    floor16.app.t14019.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.li({"className":"exit-link", "key":"exit-link"}, React.DOM.span({"onClick":function() {
        return floor16.auth.do_logout.call(null);
      }}, "\u0412\u044b\u0445\u043e\u0434"));
    };
    floor16.app.t14019.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14021) {
      var self__ = this;
      var _14021__$1 = this;
      return self__.meta14020;
    };
    floor16.app.t14019.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14021, meta14020__$1) {
      var self__ = this;
      var _14021__$1 = this;
      return new floor16.app.t14019(self__.owner, self__.app, self__.logout_item, meta14020__$1);
    };
    floor16.app.__GT_t14019 = function __GT_t14019(owner__$1, app__$1, logout_item__$1, meta14020) {
      return new floor16.app.t14019(owner__$1, app__$1, logout_item__$1, meta14020);
    };
  }
  return new floor16.app.t14019(owner, app, logout_item, null);
};
floor16.app.menu = function menu(app, owner, p__14023) {
  var map__14031 = p__14023;
  var map__14031__$1 = cljs.core.seq_QMARK_.call(null, map__14031) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14031) : map__14031;
  var add_items = cljs.core.get.call(null, map__14031__$1, new cljs.core.Keyword(null, "add-items", "add-items", 4211714822));
  var menu_id = cljs.core.get.call(null, map__14031__$1, new cljs.core.Keyword(null, "menu-id", "menu-id", 1964221371));
  if (typeof floor16.app.t14032 !== "undefined") {
  } else {
    floor16.app.t14032 = function(menu_id, add_items, map__14031, p__14023, owner, app, menu, meta14033) {
      this.menu_id = menu_id;
      this.add_items = add_items;
      this.map__14031 = map__14031;
      this.p__14023 = p__14023;
      this.owner = owner;
      this.app = app;
      this.menu = menu;
      this.meta14033 = meta14033;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.app.t14032.cljs$lang$type = true;
    floor16.app.t14032.cljs$lang$ctorStr = "floor16.app/t14032";
    floor16.app.t14032.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.app/t14032");
    };
    floor16.app.t14032.prototype.om$core$IRender$ = true;
    floor16.app.t14032.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      var map__14035 = floor16.navigation.get_menu.call(null, self__.menu_id);
      var map__14035__$1 = cljs.core.seq_QMARK_.call(null, map__14035) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14035) : map__14035;
      var draw_icons_QMARK_ = cljs.core.get.call(null, map__14035__$1, new cljs.core.Keyword(null, "draw-icons?", "draw-icons?", 2875165824));
      var pages = cljs.core.get.call(null, map__14035__$1, new cljs.core.Keyword(null, "pages", "pages", 1120330550));
      return cljs.core.apply.call(null, om.dom.ul, {"className":cljs.core.truth_(draw_icons_QMARK_) ? "with-icon" : null, "id":cljs.core.name.call(null, self__.menu_id)}, cljs.core.concat.call(null, cljs.core.map.call(null, function(p__14036) {
        var map__14037 = p__14036;
        var map__14037__$1 = cljs.core.seq_QMARK_.call(null, map__14037) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14037) : map__14037;
        var link_title = cljs.core.get.call(null, map__14037__$1, new cljs.core.Keyword(null, "link-title", "link-title", 769029687));
        var uri = cljs.core.get.call(null, map__14037__$1, new cljs.core.Keyword(null, "uri", "uri", 1014020318));
        var id = cljs.core.get.call(null, map__14037__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
        return React.DOM.li({"className":cljs.core.truth_(floor16.navigation.current_QMARK_.call(null, id)) ? "current" : "", "key":id}, React.DOM.a({"className":[cljs.core.str("menu-link "), cljs.core.str(cljs.core.name.call(null, id))].join(""), "title":link_title, "href":uri}, link_title));
      }, pages), cljs.core.map.call(null, function(p1__14022_SHARP_) {
        return om.core.build.call(null, p1__14022_SHARP_, self__.app);
      }, self__.add_items)));
    };
    floor16.app.t14032.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14034) {
      var self__ = this;
      var _14034__$1 = this;
      return self__.meta14033;
    };
    floor16.app.t14032.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14034, meta14033__$1) {
      var self__ = this;
      var _14034__$1 = this;
      return new floor16.app.t14032(self__.menu_id, self__.add_items, self__.map__14031, self__.p__14023, self__.owner, self__.app, self__.menu, meta14033__$1);
    };
    floor16.app.__GT_t14032 = function __GT_t14032(menu_id__$1, add_items__$1, map__14031__$2, p__14023__$1, owner__$1, app__$1, menu__$1, meta14033) {
      return new floor16.app.t14032(menu_id__$1, add_items__$1, map__14031__$2, p__14023__$1, owner__$1, app__$1, menu__$1, meta14033);
    };
  }
  return new floor16.app.t14032(menu_id, add_items, map__14031__$1, p__14023, owner, app, menu, null);
};
floor16.app.user_login = function user_login(app, owner) {
  var set_active_BANG_ = function(value) {
    return om.core.set_state_BANG_.call(null, owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "active", "active", 3885920888)], null), value);
  };
  var set_error_BANG_ = function(set_active_BANG_) {
    return function(value) {
      return om.core.set_state_BANG_.call(null, owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error", "error", 1110689146)], null), value);
    };
  }(set_active_BANG_);
  if (typeof floor16.app.t14045 !== "undefined") {
  } else {
    floor16.app.t14045 = function(set_error_BANG_, set_active_BANG_, owner, app, user_login, meta14046) {
      this.set_error_BANG_ = set_error_BANG_;
      this.set_active_BANG_ = set_active_BANG_;
      this.owner = owner;
      this.app = app;
      this.user_login = user_login;
      this.meta14046 = meta14046;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.app.t14045.cljs$lang$type = true;
    floor16.app.t14045.cljs$lang$ctorStr = "floor16.app/t14045";
    floor16.app.t14045.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.app/t14045");
    };
    floor16.app.t14045.prototype.om$core$IRenderState$ = true;
    floor16.app.t14045.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__14048) {
      var self__ = this;
      var map__14049 = p__14048;
      var map__14049__$1 = cljs.core.seq_QMARK_.call(null, map__14049) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14049) : map__14049;
      var active_QMARK_ = cljs.core.get.call(null, map__14049__$1, new cljs.core.Keyword(null, "active", "active", 3885920888));
      var error_QMARK_ = cljs.core.get.call(null, map__14049__$1, new cljs.core.Keyword(null, "error", "error", 1110689146));
      var ___$1 = this;
      return React.DOM.div({"className":cljs.core.truth_(active_QMARK_) ? "active" : "", "id":"user-login"}, floor16.auth.guest_QMARK_.call(null) ? React.DOM.span({"onClick":function(e) {
        return self__.set_active_BANG_.call(null, cljs.core.not.call(null, active_QMARK_));
      }, "title":"\u0412\u0445\u043e\u0434", "id":"login-link"}, [cljs.core.str("\u0412\u0445\u043e\u0434"), cljs.core.str(cljs.core.truth_(active_QMARK_) ? ":" : null)].join("")) : null, cljs.core.truth_(function() {
        var and__3391__auto__ = floor16.auth.guest_QMARK_.call(null);
        if (and__3391__auto__) {
          return active_QMARK_;
        } else {
          return and__3391__auto__;
        }
      }()) ? React.DOM.div({"className":"five columns login"}, om.dom.input.call(null, {"onKeyDown":function(p1__14038_SHARP_) {
        return floor16.app.login_keydown.call(null, self__.app, self__.owner, p1__14038_SHARP_, "username");
      }, "placeholder":"\u0422\u0435\u043b\u0435\u0444\u043e\u043d...", "type":"text", "ref":"username"}), om.dom.input.call(null, {"onKeyDown":function(p1__14039_SHARP_) {
        return floor16.app.login_keydown.call(null, self__.app, self__.owner, p1__14039_SHARP_, "pwd");
      }, "placeholder":"\u041f\u0430\u0440\u043e\u043b\u044c...", "type":"password", "ref":"pwd"}), React.DOM.span({"onClick":function() {
        return floor16.app.try_login.call(null, self__.app, self__.owner);
      }, "className":"enter-link"}, "\u0412\u043e\u0439\u0442\u0438"), cljs.core.truth_(error_QMARK_) ? React.DOM.span({"className":"error"}, "\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0435 \u0443\u0447\u0435\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435.") : null, cljs.core.truth_(error_QMARK_) ? React.DOM.span({"className":"error link"}, "\u0417\u0430\u0431\u044b\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c?") : null) : null);
    };
    floor16.app.t14045.prototype.om$core$IWillUnmount$ = true;
    floor16.app.t14045.prototype.om$core$IWillUnmount$will_unmount$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      var temp__4090__auto__ = om.core.get_state.call(null, self__.owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "mouse-handler", "mouse-handler", 3567449492)], null));
      if (cljs.core.truth_(temp__4090__auto__)) {
        var mouse_handler = temp__4090__auto__;
        return goog.events.unlisten(document.body, goog.events.EventType.MOUSEDOWN, mouse_handler);
      } else {
        return null;
      }
    };
    floor16.app.t14045.prototype.om$core$IDidUpdate$ = true;
    floor16.app.t14045.prototype.om$core$IDidUpdate$did_update$arity$3 = function(this$, prev_props, prev_state) {
      var self__ = this;
      var this$__$1 = this;
      var temp__4092__auto__ = om.core.get_node.call(null, this$__$1, "username");
      if (cljs.core.truth_(temp__4092__auto__)) {
        var un_input = temp__4092__auto__;
        return un_input.focus();
      } else {
        return null;
      }
    };
    floor16.app.t14045.prototype.om$core$IDidMount$ = true;
    floor16.app.t14045.prototype.om$core$IDidMount$did_mount$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      var mouse_handler = function(e) {
        if (cljs.core.truth_(om.core.get_state.call(null, self__.owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "active", "active", 3885920888)], null)))) {
          if (floor16.ui.generic.in_QMARK_.call(null, e, om.core.get_node.call(null, self__.owner))) {
            return null;
          } else {
            self__.set_active_BANG_.call(null, false);
            return self__.set_error_BANG_.call(null, false);
          }
        } else {
          return null;
        }
      };
      goog.events.listen(document.body, goog.events.EventType.MOUSEDOWN, mouse_handler);
      return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "mouse-handler", "mouse-handler", 3567449492)], null), mouse_handler);
    };
    floor16.app.t14045.prototype.om$core$IInitState$ = true;
    floor16.app.t14045.prototype.om$core$IInitState$init_state$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "active", "active", 3885920888), false, new cljs.core.Keyword(null, "error", "error", 1110689146), false], null);
    };
    floor16.app.t14045.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14047) {
      var self__ = this;
      var _14047__$1 = this;
      return self__.meta14046;
    };
    floor16.app.t14045.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14047, meta14046__$1) {
      var self__ = this;
      var _14047__$1 = this;
      return new floor16.app.t14045(self__.set_error_BANG_, self__.set_active_BANG_, self__.owner, self__.app, self__.user_login, meta14046__$1);
    };
    floor16.app.__GT_t14045 = function __GT_t14045(set_error_BANG___$1, set_active_BANG___$1, owner__$1, app__$1, user_login__$1, meta14046) {
      return new floor16.app.t14045(set_error_BANG___$1, set_active_BANG___$1, owner__$1, app__$1, user_login__$1, meta14046);
    };
  }
  return new floor16.app.t14045(set_error_BANG_, set_active_BANG_, owner, app, user_login, null);
};
floor16.app.user_panel = function user_panel(app, owner) {
  if (typeof floor16.app.t14057 !== "undefined") {
  } else {
    floor16.app.t14057 = function(owner, app, user_panel, meta14058) {
      this.owner = owner;
      this.app = app;
      this.user_panel = user_panel;
      this.meta14058 = meta14058;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.app.t14057.cljs$lang$type = true;
    floor16.app.t14057.cljs$lang$ctorStr = "floor16.app/t14057";
    floor16.app.t14057.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.app/t14057");
    };
    floor16.app.t14057.prototype.om$core$IRenderState$ = true;
    floor16.app.t14057.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__14060) {
      var self__ = this;
      var map__14061 = p__14060;
      var map__14061__$1 = cljs.core.seq_QMARK_.call(null, map__14061) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14061) : map__14061;
      var active_QMARK_ = cljs.core.get.call(null, map__14061__$1, new cljs.core.Keyword(null, "active", "active", 3885920888));
      var ___$1 = this;
      var map__14062 = floor16.auth.get_user.call(null);
      var map__14062__$1 = cljs.core.seq_QMARK_.call(null, map__14062) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14062) : map__14062;
      var roles = cljs.core.get.call(null, map__14062__$1, new cljs.core.Keyword(null, "roles", "roles", 1122599471));
      var lname = cljs.core.get.call(null, map__14062__$1, new cljs.core.Keyword(null, "lname", "lname", 1117018217));
      var fname = cljs.core.get.call(null, map__14062__$1, new cljs.core.Keyword(null, "fname", "fname", 1111477091));
      return React.DOM.nav({"onClick":function() {
        if (cljs.core.not.call(null, active_QMARK_)) {
          return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "active", "active", 3885920888)], null), true);
        } else {
          return null;
        }
      }, "className":cljs.core.truth_(active_QMARK_) ? "five columns active" : "closed", "id":"user-panel"}, cljs.core.truth_(active_QMARK_) ? cljs.core.into_array.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.span({"onClick":function() {
        return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "active", "active", 3885920888)], null), false);
      }, "className":"close"}), React.DOM.img({"src":"/img/user.png", "id":"user-pic"}), React.DOM.div({"id":"user-info"}, React.DOM.span({"id":"user-name"}, [cljs.core.str(fname), cljs.core.str(" "), cljs.core.str(lname)].join("")), React.DOM.span({"id":"user-roles"}, clojure.string.join.call(null, ", ", cljs.core.map.call(null, function(p1__14050_SHARP_) {
        return cljs.core.get_in.call(null, self__.app, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "roles", "roles", 1122599471), p1__14050_SHARP_, new cljs.core.Keyword(null, "title", "title", 1124275658)], null));
      }, roles)))), om.core.build.call(null, floor16.app.menu, self__.app, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "menu-id", "menu-id", 1964221371), new cljs.core.Keyword(null, "user-menu", "user-menu", 1307043219), new cljs.core.Keyword(null, "add-items", "add-items", 4211714822), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [floor16.app.logout_item], 
      null)], null)], null))], null)) : "\u2630");
    };
    floor16.app.t14057.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14059) {
      var self__ = this;
      var _14059__$1 = this;
      return self__.meta14058;
    };
    floor16.app.t14057.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14059, meta14058__$1) {
      var self__ = this;
      var _14059__$1 = this;
      return new floor16.app.t14057(self__.owner, self__.app, self__.user_panel, meta14058__$1);
    };
    floor16.app.__GT_t14057 = function __GT_t14057(owner__$1, app__$1, user_panel__$1, meta14058) {
      return new floor16.app.t14057(owner__$1, app__$1, user_panel__$1, meta14058);
    };
  }
  return new floor16.app.t14057(owner, app, user_panel, null);
};
floor16.app.app_header = function app_header(app, owner) {
  if (typeof floor16.app.t14066 !== "undefined") {
  } else {
    floor16.app.t14066 = function(owner, app, app_header, meta14067) {
      this.owner = owner;
      this.app = app;
      this.app_header = app_header;
      this.meta14067 = meta14067;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.app.t14066.cljs$lang$type = true;
    floor16.app.t14066.cljs$lang$ctorStr = "floor16.app/t14066";
    floor16.app.t14066.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.app/t14066");
    };
    floor16.app.t14066.prototype.om$core$IRender$ = true;
    floor16.app.t14066.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.nav({"className":"container", "id":"menu"}, om.core.build.call(null, floor16.app.menu, self__.app, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "menu-id", "menu-id", 1964221371), new cljs.core.Keyword(null, "main-menu", "main-menu", 716492901)], null)], null)), floor16.auth.guest_QMARK_.call(null) ? om.core.build.call(null, floor16.app.user_login, self__.app) : 
      om.core.build.call(null, floor16.app.menu, self__.app, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "menu-id", "menu-id", 1964221371), new cljs.core.Keyword(null, "user-menu-top", "user-menu-top", 637936411), new cljs.core.Keyword(null, "add-items", "add-items", 4211714822), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [floor16.app.logout_item], 
      null)], null)], null)), React.DOM.a({"title":"\u041f\u0435\u0440\u0435\u0439\u0442\u0438 \u043a \u043d\u0430\u0447\u0430\u043b\u0443 \u0441\u0430\u0439\u0442\u0430", "href":"#", "id":"logo"}, React.DOM.img({"alt":"\u041f\u0440\u043e\u0435\u043a\u0442 \x26quot\u042d\u0422\u0410\u0416 16\x26quot", "src":"/img/logo.png"})), !floor16.auth.guest_QMARK_.call(null) ? om.core.build.call(null, floor16.app.user_panel, self__.app, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
      "init-state", "init-state", 4479067398), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "active", "active", 3885920888), cljs.core.not.call(null, floor16.auth.autologin_QMARK_.call(null))], null)], null)) : null);
    };
    floor16.app.t14066.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14068) {
      var self__ = this;
      var _14068__$1 = this;
      return self__.meta14067;
    };
    floor16.app.t14066.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14068, meta14067__$1) {
      var self__ = this;
      var _14068__$1 = this;
      return new floor16.app.t14066(self__.owner, self__.app, self__.app_header, meta14067__$1);
    };
    floor16.app.__GT_t14066 = function __GT_t14066(owner__$1, app__$1, app_header__$1, meta14067) {
      return new floor16.app.t14066(owner__$1, app__$1, app_header__$1, meta14067);
    };
  }
  return new floor16.app.t14066(owner, app, app_header, null);
};
floor16.app.app_main = function app_main(app, owner) {
  if (typeof floor16.app.t14073 !== "undefined") {
  } else {
    floor16.app.t14073 = function(owner, app, app_main, meta14074) {
      this.owner = owner;
      this.app = app;
      this.app_main = app_main;
      this.meta14074 = meta14074;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.app.t14073.cljs$lang$type = true;
    floor16.app.t14073.cljs$lang$ctorStr = "floor16.app/t14073";
    floor16.app.t14073.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.app/t14073");
    };
    floor16.app.t14073.prototype.om$core$IRender$ = true;
    floor16.app.t14073.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      var map__14076 = floor16.navigation.curr_page.call(null);
      var map__14076__$1 = cljs.core.seq_QMARK_.call(null, map__14076) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14076) : map__14076;
      var component = cljs.core.get.call(null, map__14076__$1, new cljs.core.Keyword(null, "component", "component", 3908964463));
      var id = cljs.core.get.call(null, map__14076__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
      return om.core.build.call(null, component, self__.app, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "page-id", "page-id", 4505274507), id, new cljs.core.Keyword(null, "page-path", "page-path", 1851480085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pages", "pages", 1120330550), id], null)], null)], 
      null));
    };
    floor16.app.t14073.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14075) {
      var self__ = this;
      var _14075__$1 = this;
      return self__.meta14074;
    };
    floor16.app.t14073.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14075, meta14074__$1) {
      var self__ = this;
      var _14075__$1 = this;
      return new floor16.app.t14073(self__.owner, self__.app, self__.app_main, meta14074__$1);
    };
    floor16.app.__GT_t14073 = function __GT_t14073(owner__$1, app__$1, app_main__$1, meta14074) {
      return new floor16.app.t14073(owner__$1, app__$1, app_main__$1, meta14074);
    };
  }
  return new floor16.app.t14073(owner, app, app_main, null);
};
floor16.app.main = function main() {
  om.core.root.call(null, floor16.app.app_header, floor16.app.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), document.getElementById("header")], null));
  return om.core.root.call(null, floor16.app.app_main, floor16.app.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), document.getElementById("content")], null));
};
goog.exportSymbol("floor16.app.main", floor16.app.main);
floor16.app.as = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
floor16.app.get_server_state = function get_server_state() {
  var temp__4092__auto__ = window.serverState;
  if (cljs.core.truth_(temp__4092__auto__)) {
    var data = temp__4092__auto__;
    return cljs.reader.read_string.call(null, data);
  } else {
    return null;
  }
};
floor16.app.test_app = function test_app(app, owner) {
  if (typeof floor16.app.t14080 !== "undefined") {
  } else {
    floor16.app.t14080 = function(owner, app, test_app, meta14081) {
      this.owner = owner;
      this.app = app;
      this.test_app = test_app;
      this.meta14081 = meta14081;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.app.t14080.cljs$lang$type = true;
    floor16.app.t14080.cljs$lang$ctorStr = "floor16.app/t14080";
    floor16.app.t14080.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.app/t14080");
    };
    floor16.app.t14080.prototype.om$core$IRender$ = true;
    floor16.app.t14080.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div(null, React.DOM.span({"onClick":function() {
        return om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "text", "text", 1017460895), "Omg! I Am Clicked!");
      }}, (new cljs.core.Keyword(null, "text", "text", 1017460895)).cljs$core$IFn$_invoke$arity$1(self__.app)), React.DOM.span({"onClick":function() {
        return om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "text", "text", 1017460895), "Omg! I Am Clicked Tooo!");
      }}, "I Am Just Static Text :0)"));
    };
    floor16.app.t14080.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14082) {
      var self__ = this;
      var _14082__$1 = this;
      return self__.meta14081;
    };
    floor16.app.t14080.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14082, meta14081__$1) {
      var self__ = this;
      var _14082__$1 = this;
      return new floor16.app.t14080(self__.owner, self__.app, self__.test_app, meta14081__$1);
    };
    floor16.app.__GT_t14080 = function __GT_t14080(owner__$1, app__$1, test_app__$1, meta14081) {
      return new floor16.app.t14080(owner__$1, app__$1, test_app__$1, meta14081);
    };
  }
  return new floor16.app.t14080(owner, app, test_app, null);
};
floor16.app.main1 = function main1() {
  cljs.core.reset_BANG_.call(null, floor16.app.as, floor16.app.get_server_state.call(null));
  floor16.navigation.nav_sys.call(null, floor16.app.nav_conf);
  floor16.auth.auth_sys.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "app", "app", 1014001043), floor16.app.app_state, new cljs.core.Keyword(null, "api-url", "api-url", 4507306670), "oauth/token"], null));
  cljs.core.println.call(null, om.core.to_cursor.call(null, floor16.app.as));
  return om.core.root.call(null, floor16.app.test_app, floor16.app.as, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), document.getElementById("content")], null));
};
goog.exportSymbol("floor16.app.main1", floor16.app.main1);
floor16.app.render = function render(data) {
  var data__$1 = cljs.reader.read_string.call(null, data);
  return React.renderComponentToString(om.core.build.call(null, floor16.app.test_app, om.core.to_cursor.call(null, data__$1)));
};
goog.exportSymbol("floor16.app.render", floor16.app.render);
goog.provide("floor16.resources");
goog.require("cljs.core");
floor16.resources.IResource = function() {
  var obj14216 = {};
  return obj14216;
}();
floor16.resources.all = function all(this$, state) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$resources$IResource$all$arity$2;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$resources$IResource$all$arity$2(this$, state);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.resources.all[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.resources.all["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IResource.all", this$);
        }
      }
    }().call(null, this$, state);
  }
};
floor16.resources.by_key = function by_key(this$, state, k) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$resources$IResource$by_key$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$resources$IResource$by_key$arity$3(this$, state, k);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.resources.by_key[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.resources.by_key["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IResource.by-key", this$);
        }
      }
    }().call(null, this$, state, k);
  }
};
floor16.resources.name_by_key = function name_by_key(this$, state, k) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$resources$IResource$name_by_key$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$resources$IResource$name_by_key$arity$3(this$, state, k);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.resources.name_by_key[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.resources.name_by_key["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IResource.name-by-key", this$);
        }
      }
    }().call(null, this$, state, k);
  }
};
floor16.resources.d_key = function d_key(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$resources$IResource$d_key$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$resources$IResource$d_key$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.resources.d_key[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.resources.d_key["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IResource.d-key", this$);
        }
      }
    }().call(null, this$);
  }
};
floor16.resources.d_name = function d_name(this$) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$resources$IResource$d_name$arity$1;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$resources$IResource$d_name$arity$1(this$);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.resources.d_name[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.resources.d_name["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IResource.d-name", this$);
        }
      }
    }().call(null, this$);
  }
};
floor16.resources.by_query = function by_query(this$, state, query) {
  if (function() {
    var and__3391__auto__ = this$;
    if (and__3391__auto__) {
      return this$.floor16$resources$IResource$by_query$arity$3;
    } else {
      return and__3391__auto__;
    }
  }()) {
    return this$.floor16$resources$IResource$by_query$arity$3(this$, state, query);
  } else {
    var x__4030__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3403__auto__ = floor16.resources.by_query[goog.typeOf(x__4030__auto__)];
      if (or__3403__auto__) {
        return or__3403__auto__;
      } else {
        var or__3403__auto____$1 = floor16.resources.by_query["_"];
        if (or__3403__auto____$1) {
          return or__3403__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IResource.by-query", this$);
        }
      }
    }().call(null, this$, state, query);
  }
};
goog.provide("floor16.appsearch");
goog.require("cljs.core");
goog.require("floor16.lang");
goog.require("cljs.core.async");
goog.require("floor16.navigation");
goog.require("floor16.navigation");
goog.require("floor16.datum");
goog.require("floor16.global");
goog.require("floor16.datum");
goog.require("secretary.core");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("floor16.xhr");
goog.require("floor16.lang");
goog.require("floor16.ui.generic");
goog.require("om.dom");
goog.require("floor16.global");
goog.require("cljs.core.async");
goog.require("floor16.xhr");
goog.require("secretary.core");
goog.require("floor16.ui.generic");
floor16.appsearch.astate = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
floor16.appsearch.app_modes = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "init", "init", 1017141378), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "route", "route", 1122608571), "/", new cljs.core.Keyword(null, "view-type", "view-type", 3689695444), new cljs.core.Keyword(null, "list", "list", 1017226256)], null), new cljs.core.Keyword(null, "grid", "grid", 1017085624), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "route", 
"route", 1122608571), "/ads/", new cljs.core.Keyword(null, "view-type", "view-type", 3689695444), new cljs.core.Keyword(null, "list", "list", 1017226256), new cljs.core.Keyword(null, "data-path", "data-path", 604226522), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", 1016980252)], null), new cljs.core.Keyword(null, "query-path", "query-path", 799448444), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.Keyword(null, "query", "query", 1121848378)], null), new cljs.core.Keyword(null, "resource-key", "resource-key", 628364178), new cljs.core.Keyword(null, "some", "some", 1017440358)], null), new cljs.core.Keyword(null, "ad", "ad", 1013907349), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "route", "route", 1122608571), "/ads/:id", new cljs.core.Keyword(null, "view-type", "view-type", 3689695444), new cljs.core.Keyword(null, "item-view", "item-view", 3121596561), 
new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), new cljs.core.Keyword(null, "id", "id", 1013907597)], null)], null);
floor16.appsearch.simple_filter = function simple_filter(query, owner) {
  if (typeof floor16.appsearch.t18808 !== "undefined") {
  } else {
    floor16.appsearch.t18808 = function(owner, query, simple_filter, meta18809) {
      this.owner = owner;
      this.query = query;
      this.simple_filter = simple_filter;
      this.meta18809 = meta18809;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.appsearch.t18808.cljs$lang$type = true;
    floor16.appsearch.t18808.cljs$lang$ctorStr = "floor16.appsearch/t18808";
    floor16.appsearch.t18808.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.appsearch/t18808");
    };
    floor16.appsearch.t18808.prototype.om$core$IRender$ = true;
    floor16.appsearch.t18808.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div({"className":"simple-filter"}, om.core.build.call(null, floor16.ui.generic.select, self__.query, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), new cljs.core.Keyword(null, "city", "city", 1016958173), new cljs.core.Keyword(null, "placeholder", "placeholder", 1612151013), floor16.lang.l.call(null, new cljs.core.Keyword(null, 
      "city", "city", 1016958173)), new cljs.core.Keyword(null, "dict", "dict", 1016987432), floor16.datum.dict.call(null, new cljs.core.Keyword(null, "cities", "cities", 3948719803)), new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), function() {
        return floor16.navigation.url_update.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "mode", "mode", 1017261333), new cljs.core.Keyword(null, "grid", "grid", 1017085624), new cljs.core.Keyword(null, "url-params", "url-params", 3432736534), cljs.core.deref.call(null, self__.query)], null));
      }], null)], null)), function() {
        var url = floor16.navigation.url_to.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "mode", "mode", 1017261333), new cljs.core.Keyword(null, "grid", "grid", 1017085624), new cljs.core.Keyword(null, "url-params", "url-params", 3432736534), self__.query], null));
        return React.DOM.a({"onClick":function(e) {
          e.preventDefault();
          return floor16.navigation.goto$.call(null, url);
        }, "href":url}, "test-link");
      }());
    };
    floor16.appsearch.t18808.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18810) {
      var self__ = this;
      var _18810__$1 = this;
      return self__.meta18809;
    };
    floor16.appsearch.t18808.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18810, meta18809__$1) {
      var self__ = this;
      var _18810__$1 = this;
      return new floor16.appsearch.t18808(self__.owner, self__.query, self__.simple_filter, meta18809__$1);
    };
    floor16.appsearch.__GT_t18808 = function __GT_t18808(owner__$1, query__$1, simple_filter__$1, meta18809) {
      return new floor16.appsearch.t18808(owner__$1, query__$1, simple_filter__$1, meta18809);
    };
  }
  return new floor16.appsearch.t18808(owner, query, simple_filter, null);
};
floor16.appsearch.extended_filter = function extended_filter(data, owner, opts) {
  if (typeof floor16.appsearch.t18814 !== "undefined") {
  } else {
    floor16.appsearch.t18814 = function(opts, owner, data, extended_filter, meta18815) {
      this.opts = opts;
      this.owner = owner;
      this.data = data;
      this.extended_filter = extended_filter;
      this.meta18815 = meta18815;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.appsearch.t18814.cljs$lang$type = true;
    floor16.appsearch.t18814.cljs$lang$ctorStr = "floor16.appsearch/t18814";
    floor16.appsearch.t18814.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.appsearch/t18814");
    };
    floor16.appsearch.t18814.prototype.om$core$IRender$ = true;
    floor16.appsearch.t18814.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div({"className":""}, "extended-filter");
    };
    floor16.appsearch.t18814.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18816) {
      var self__ = this;
      var _18816__$1 = this;
      return self__.meta18815;
    };
    floor16.appsearch.t18814.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18816, meta18815__$1) {
      var self__ = this;
      var _18816__$1 = this;
      return new floor16.appsearch.t18814(self__.opts, self__.owner, self__.data, self__.extended_filter, meta18815__$1);
    };
    floor16.appsearch.__GT_t18814 = function __GT_t18814(opts__$1, owner__$1, data__$1, extended_filter__$1, meta18815) {
      return new floor16.appsearch.t18814(opts__$1, owner__$1, data__$1, extended_filter__$1, meta18815);
    };
  }
  return new floor16.appsearch.t18814(opts, owner, data, extended_filter, null);
};
floor16.appsearch.ad_item_view = function ad_item_view(item, owner, opts) {
  if (typeof floor16.appsearch.t18820 !== "undefined") {
  } else {
    floor16.appsearch.t18820 = function(opts, owner, item, ad_item_view, meta18821) {
      this.opts = opts;
      this.owner = owner;
      this.item = item;
      this.ad_item_view = ad_item_view;
      this.meta18821 = meta18821;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.appsearch.t18820.cljs$lang$type = true;
    floor16.appsearch.t18820.cljs$lang$ctorStr = "floor16.appsearch/t18820";
    floor16.appsearch.t18820.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.appsearch/t18820");
    };
    floor16.appsearch.t18820.prototype.om$core$IRender$ = true;
    floor16.appsearch.t18820.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div({"className":""}, "ad-item-view");
    };
    floor16.appsearch.t18820.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18822) {
      var self__ = this;
      var _18822__$1 = this;
      return self__.meta18821;
    };
    floor16.appsearch.t18820.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18822, meta18821__$1) {
      var self__ = this;
      var _18822__$1 = this;
      return new floor16.appsearch.t18820(self__.opts, self__.owner, self__.item, self__.ad_item_view, meta18821__$1);
    };
    floor16.appsearch.__GT_t18820 = function __GT_t18820(opts__$1, owner__$1, item__$1, ad_item_view__$1, meta18821) {
      return new floor16.appsearch.t18820(opts__$1, owner__$1, item__$1, ad_item_view__$1, meta18821);
    };
  }
  return new floor16.appsearch.t18820(opts, owner, item, ad_item_view, null);
};
floor16.appsearch.ad_view = function ad_view(cursor, owner) {
  if (typeof floor16.appsearch.t18826 !== "undefined") {
  } else {
    floor16.appsearch.t18826 = function(owner, cursor, ad_view, meta18827) {
      this.owner = owner;
      this.cursor = cursor;
      this.ad_view = ad_view;
      this.meta18827 = meta18827;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.appsearch.t18826.cljs$lang$type = true;
    floor16.appsearch.t18826.cljs$lang$ctorStr = "floor16.appsearch/t18826";
    floor16.appsearch.t18826.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.appsearch/t18826");
    };
    floor16.appsearch.t18826.prototype.om$core$IRender$ = true;
    floor16.appsearch.t18826.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div(null, "ad-view");
    };
    floor16.appsearch.t18826.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18828) {
      var self__ = this;
      var _18828__$1 = this;
      return self__.meta18827;
    };
    floor16.appsearch.t18826.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18828, meta18827__$1) {
      var self__ = this;
      var _18828__$1 = this;
      return new floor16.appsearch.t18826(self__.owner, self__.cursor, self__.ad_view, meta18827__$1);
    };
    floor16.appsearch.__GT_t18826 = function __GT_t18826(owner__$1, cursor__$1, ad_view__$1, meta18827) {
      return new floor16.appsearch.t18826(owner__$1, cursor__$1, ad_view__$1, meta18827);
    };
  }
  return new floor16.appsearch.t18826(owner, cursor, ad_view, null);
};
floor16.appsearch.app = function app(p__18829, owner) {
  var map__18834 = p__18829;
  var map__18834__$1 = cljs.core.seq_QMARK_.call(null, map__18834) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18834) : map__18834;
  var cursor = map__18834__$1;
  var data = cljs.core.get.call(null, map__18834__$1, new cljs.core.Keyword(null, "data", "data", 1016980252));
  var query = cljs.core.get.call(null, map__18834__$1, new cljs.core.Keyword(null, "query", "query", 1121848378));
  var app_mode = cljs.core.get.call(null, map__18834__$1, new cljs.core.Keyword(null, "app-mode", "app-mode", 2135359809));
  if (typeof floor16.appsearch.t18835 !== "undefined") {
  } else {
    floor16.appsearch.t18835 = function(app_mode, query, data, cursor, map__18834, owner, p__18829, app, meta18836) {
      this.app_mode = app_mode;
      this.query = query;
      this.data = data;
      this.cursor = cursor;
      this.map__18834 = map__18834;
      this.owner = owner;
      this.p__18829 = p__18829;
      this.app = app;
      this.meta18836 = meta18836;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.appsearch.t18835.cljs$lang$type = true;
    floor16.appsearch.t18835.cljs$lang$ctorStr = "floor16.appsearch/t18835";
    floor16.appsearch.t18835.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.appsearch/t18835");
    };
    floor16.appsearch.t18835.prototype.om$core$IRender$ = true;
    floor16.appsearch.t18835.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div(null, cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "grid", "grid", 1017085624), self__.app_mode) ? om.core.build.call(null, floor16.ui.generic.list_view, self__.cursor, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "top-filter", "top-filter", 2858888802), floor16.appsearch.simple_filter, new cljs.core.Keyword(null, "side-filter", "side-filter", 
      945679392), floor16.appsearch.extended_filter, new cljs.core.Keyword(null, "header-opts", "header-opts", 2151738066), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "sort", "sort", 1017440528), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "view", "view", 1017523735), floor16.ui.generic.sort_select], null), new cljs.core.Keyword(null, "views", "views", 1126108640), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "view", 
      "view", 1017523735), floor16.ui.generic.view_select], null)], null), new cljs.core.Keyword(null, "empty-text", "empty-text", 4203552031), floor16.lang.l.call(null, new cljs.core.Keyword(null, "empty-search", "empty-search", 3924434330)), new cljs.core.Keyword(null, "item-view", "item-view", 3121596561), floor16.appsearch.ad_item_view, new cljs.core.Keyword(null, "res", "res", 1014017042), floor16.datum.res.call(null, new cljs.core.Keyword(null, "ads", "ads", 1014000674)), new cljs.core.Keyword(null, 
      "list-mode", "list-mode", 4038414564), new cljs.core.Keyword(null, "grid", "grid", 1017085624), new cljs.core.Keyword(null, "item-view-mode", "item-view-mode", 4070495491), new cljs.core.Keyword(null, "ad", "ad", 1013907349)], null)], null)) : cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "ad", "ad", 1013907349), self__.app_mode) ? om.core.build.call(null, floor16.appsearch.ad_view, self__.data) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? om.core.build.call(null, floor16.appsearch.simple_filter, 
      self__.query) : null);
    };
    floor16.appsearch.t18835.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18837) {
      var self__ = this;
      var _18837__$1 = this;
      return self__.meta18836;
    };
    floor16.appsearch.t18835.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18837, meta18836__$1) {
      var self__ = this;
      var _18837__$1 = this;
      return new floor16.appsearch.t18835(self__.app_mode, self__.query, self__.data, self__.cursor, self__.map__18834, self__.owner, self__.p__18829, self__.app, meta18836__$1);
    };
    floor16.appsearch.__GT_t18835 = function __GT_t18835(app_mode__$1, query__$1, data__$1, cursor__$1, map__18834__$2, owner__$1, p__18829__$1, app__$1, meta18836) {
      return new floor16.appsearch.t18835(app_mode__$1, query__$1, data__$1, cursor__$1, map__18834__$2, owner__$1, p__18829__$1, app__$1, meta18836);
    };
  }
  return new floor16.appsearch.t18835(app_mode, query, data, cursor, map__18834__$1, owner, p__18829, app, null);
};
floor16.appsearch.yinit = function yinit() {
  floor16.appsearch.yama = ymaps;
  return cljs.core.println.call(null, floor16.appsearch.yama.geolocation.city);
};
goog.exportSymbol("floor16.appsearch.yinit", floor16.appsearch.yinit);
floor16.appsearch.main = function main(edn_data) {
  var data = cljs.reader.read_string.call(null, edn_data);
  cljs.core.println.call(null, "Main: ", data);
  cljs.core.reset_BANG_.call(null, floor16.appsearch.astate, data);
  floor16.datum.init_data.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "app-state", "app-state", 1424976215), floor16.appsearch.astate], null));
  floor16.navigation.init_nav.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "app-state", "app-state", 1424976215), floor16.appsearch.astate, new cljs.core.Keyword(null, "app-modes", "app-modes", 1419288566), floor16.appsearch.app_modes], null));
  return om.core.root.call(null, floor16.appsearch.app, floor16.appsearch.astate, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), document.getElementById("app-search")], null));
};
goog.exportSymbol("floor16.appsearch.main", floor16.appsearch.main);
floor16.appsearch.render = function render(edn_data) {
  floor16.global.server_side_QMARK_ = true;
  var data = cljs.reader.read_string.call(null, edn_data);
  cljs.core.reset_BANG_.call(null, floor16.appsearch.astate, data);
  floor16.datum.init_data.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "app-state", "app-state", 1424976215), floor16.appsearch.astate, new cljs.core.Keyword(null, "local?", "local?", 4211409318), true], null));
  floor16.navigation.init_nav.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "app-state", "app-state", 1424976215), floor16.appsearch.astate, new cljs.core.Keyword(null, "app-modes", "app-modes", 1419288566), floor16.appsearch.app_modes], null));
  return React.renderComponentToString(om.core.build.call(null, floor16.appsearch.app, om.core.to_cursor.call(null, cljs.core.deref.call(null, floor16.appsearch.astate))));
};
goog.exportSymbol("floor16.appsearch.render", floor16.appsearch.render);
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.array");
goog.require("goog.events");
goog.require("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_handler) {
  goog.Disposable.call(this);
  this.handler_ = opt_handler;
  this.keys_ = [];
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture, opt_handler) {
  if (!goog.isArray(type)) {
    goog.events.EventHandler.typeArray_[0] = (type);
    type = goog.events.EventHandler.typeArray_;
  }
  for (var i = 0;i < type.length;i++) {
    var key = (goog.events.listen(src, type[i], opt_fn || this, opt_capture || false, opt_handler || (this.handler_ || this)));
    this.keys_.push(key);
  }
  return this;
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.listenOnce(src, type[i], opt_fn, opt_capture, opt_handler);
    }
  } else {
    var key = (goog.events.listenOnce(src, type, opt_fn || this, opt_capture, opt_handler || (this.handler_ || this)));
    this.keys_.push(key);
  }
  return this;
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler || (this.handler_ || this), this);
  return this;
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  return this.keys_.length;
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_handler);
    }
  } else {
    var listener = goog.events.getListener(src, type, opt_fn || this, opt_capture, opt_handler || (this.handler_ || this));
    if (listener) {
      var key = listener.key;
      goog.events.unlistenByKey(key);
      goog.array.remove(this.keys_, key);
    }
  }
  return this;
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler || (this.handler_ || this), this);
  return this;
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.array.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_.length = 0;
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll();
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.style.bidi");
goog.require("goog.dom");
goog.require("goog.style");
goog.require("goog.userAgent");
goog.style.bidi.getScrollLeft = function(element) {
  var isRtl = goog.style.isRightToLeft(element);
  if (isRtl && goog.userAgent.GECKO) {
    return-element.scrollLeft;
  } else {
    if (isRtl && !(goog.userAgent.IE && goog.userAgent.isVersion("8"))) {
      var overflowX = goog.style.getComputedOverflowX(element);
      if (overflowX == "visible") {
        return element.scrollLeft;
      } else {
        return element.scrollWidth - element.clientWidth - element.scrollLeft;
      }
    }
  }
  return element.scrollLeft;
};
goog.style.bidi.getOffsetStart = function(element) {
  var offsetLeftForReal = element.offsetLeft;
  var bestParent = element.offsetParent;
  if (!bestParent && goog.style.getComputedPosition(element) == "fixed") {
    bestParent = goog.dom.getOwnerDocument(element).documentElement;
  }
  if (!bestParent) {
    return offsetLeftForReal;
  }
  if (goog.userAgent.GECKO) {
    var borderWidths = goog.style.getBorderBox(bestParent);
    offsetLeftForReal += borderWidths.left;
  } else {
    if (goog.userAgent.isDocumentMode(8)) {
      var borderWidths = goog.style.getBorderBox(bestParent);
      offsetLeftForReal -= borderWidths.left;
    }
  }
  if (goog.style.isRightToLeft(bestParent)) {
    var elementRightOffset = offsetLeftForReal + element.offsetWidth;
    return bestParent.clientWidth - elementRightOffset;
  }
  return offsetLeftForReal;
};
goog.style.bidi.setScrollOffset = function(element, offsetStart) {
  offsetStart = Math.max(offsetStart, 0);
  if (!goog.style.isRightToLeft(element)) {
    element.scrollLeft = offsetStart;
  } else {
    if (goog.userAgent.GECKO) {
      element.scrollLeft = -offsetStart;
    } else {
      if (!(goog.userAgent.IE && goog.userAgent.isVersion("8"))) {
        element.scrollLeft = element.scrollWidth - offsetStart - element.clientWidth;
      } else {
        element.scrollLeft = offsetStart;
      }
    }
  }
};
goog.style.bidi.setPosition = function(elem, left, top, isRtl) {
  if (!goog.isNull(top)) {
    elem.style.top = top + "px";
  }
  if (isRtl) {
    elem.style.right = left + "px";
    elem.style.left = "";
  } else {
    elem.style.left = left + "px";
    elem.style.right = "";
  }
};
goog.provide("goog.fx.DragEvent");
goog.provide("goog.fx.Dragger");
goog.provide("goog.fx.Dragger.EventType");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.Event");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.style");
goog.require("goog.style.bidi");
goog.require("goog.userAgent");
goog.fx.Dragger = function(target, opt_handle, opt_limits) {
  goog.events.EventTarget.call(this);
  this.target = target;
  this.handle = opt_handle || target;
  this.limits = opt_limits || new goog.math.Rect(NaN, NaN, NaN, NaN);
  this.document_ = goog.dom.getOwnerDocument(target);
  this.eventHandler_ = new goog.events.EventHandler(this);
  goog.events.listen(this.handle, [goog.events.EventType.TOUCHSTART, goog.events.EventType.MOUSEDOWN], this.startDrag, false, this);
};
goog.inherits(goog.fx.Dragger, goog.events.EventTarget);
goog.fx.Dragger.HAS_SET_CAPTURE_ = goog.userAgent.IE || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.3");
goog.fx.Dragger.EventType = {EARLY_CANCEL:"earlycancel", START:"start", BEFOREDRAG:"beforedrag", DRAG:"drag", END:"end"};
goog.fx.Dragger.prototype.target;
goog.fx.Dragger.prototype.handle;
goog.fx.Dragger.prototype.limits;
goog.fx.Dragger.prototype.rightToLeft_;
goog.fx.Dragger.prototype.clientX = 0;
goog.fx.Dragger.prototype.clientY = 0;
goog.fx.Dragger.prototype.screenX = 0;
goog.fx.Dragger.prototype.screenY = 0;
goog.fx.Dragger.prototype.startX = 0;
goog.fx.Dragger.prototype.startY = 0;
goog.fx.Dragger.prototype.deltaX = 0;
goog.fx.Dragger.prototype.deltaY = 0;
goog.fx.Dragger.prototype.pageScroll;
goog.fx.Dragger.prototype.enabled_ = true;
goog.fx.Dragger.prototype.dragging_ = false;
goog.fx.Dragger.prototype.hysteresisDistanceSquared_ = 0;
goog.fx.Dragger.prototype.mouseDownTime_ = 0;
goog.fx.Dragger.prototype.document_;
goog.fx.Dragger.prototype.eventHandler_;
goog.fx.Dragger.prototype.scrollTarget_;
goog.fx.Dragger.prototype.ieDragStartCancellingOn_ = false;
goog.fx.Dragger.prototype.useRightPositioningForRtl_ = false;
goog.fx.Dragger.prototype.enableRightPositioningForRtl = function(useRightPositioningForRtl) {
  this.useRightPositioningForRtl_ = useRightPositioningForRtl;
};
goog.fx.Dragger.prototype.getHandler = function() {
  return this.eventHandler_;
};
goog.fx.Dragger.prototype.setLimits = function(limits) {
  this.limits = limits || new goog.math.Rect(NaN, NaN, NaN, NaN);
};
goog.fx.Dragger.prototype.setHysteresis = function(distance) {
  this.hysteresisDistanceSquared_ = Math.pow(distance, 2);
};
goog.fx.Dragger.prototype.getHysteresis = function() {
  return Math.sqrt(this.hysteresisDistanceSquared_);
};
goog.fx.Dragger.prototype.setScrollTarget = function(scrollTarget) {
  this.scrollTarget_ = scrollTarget;
};
goog.fx.Dragger.prototype.setCancelIeDragStart = function(cancelIeDragStart) {
  this.ieDragStartCancellingOn_ = cancelIeDragStart;
};
goog.fx.Dragger.prototype.getEnabled = function() {
  return this.enabled_;
};
goog.fx.Dragger.prototype.setEnabled = function(enabled) {
  this.enabled_ = enabled;
};
goog.fx.Dragger.prototype.disposeInternal = function() {
  goog.fx.Dragger.superClass_.disposeInternal.call(this);
  goog.events.unlisten(this.handle, [goog.events.EventType.TOUCHSTART, goog.events.EventType.MOUSEDOWN], this.startDrag, false, this);
  this.cleanUpAfterDragging_();
  this.target = null;
  this.handle = null;
  this.eventHandler_ = null;
};
goog.fx.Dragger.prototype.isRightToLeft_ = function() {
  if (!goog.isDef(this.rightToLeft_)) {
    this.rightToLeft_ = goog.style.isRightToLeft(this.target);
  }
  return this.rightToLeft_;
};
goog.fx.Dragger.prototype.startDrag = function(e) {
  var isMouseDown = e.type == goog.events.EventType.MOUSEDOWN;
  if (this.enabled_ && (!this.dragging_ && (!isMouseDown || e.isMouseActionButton()))) {
    this.maybeReinitTouchEvent_(e);
    if (this.hysteresisDistanceSquared_ == 0) {
      if (this.fireDragStart_(e)) {
        this.dragging_ = true;
        e.preventDefault();
      } else {
        return;
      }
    } else {
      e.preventDefault();
    }
    this.setupDragHandlers();
    this.clientX = this.startX = e.clientX;
    this.clientY = this.startY = e.clientY;
    this.screenX = e.screenX;
    this.screenY = e.screenY;
    this.deltaX = this.useRightPositioningForRtl_ ? goog.style.bidi.getOffsetStart(this.target) : this.target.offsetLeft;
    this.deltaY = this.target.offsetTop;
    this.pageScroll = goog.dom.getDomHelper(this.document_).getDocumentScroll();
    this.mouseDownTime_ = goog.now();
  } else {
    this.dispatchEvent(goog.fx.Dragger.EventType.EARLY_CANCEL);
  }
};
goog.fx.Dragger.prototype.setupDragHandlers = function() {
  var doc = this.document_;
  var docEl = doc.documentElement;
  var useCapture = !goog.fx.Dragger.HAS_SET_CAPTURE_;
  this.eventHandler_.listen(doc, [goog.events.EventType.TOUCHMOVE, goog.events.EventType.MOUSEMOVE], this.handleMove_, useCapture);
  this.eventHandler_.listen(doc, [goog.events.EventType.TOUCHEND, goog.events.EventType.MOUSEUP], this.endDrag, useCapture);
  if (goog.fx.Dragger.HAS_SET_CAPTURE_) {
    docEl.setCapture(false);
    this.eventHandler_.listen(docEl, goog.events.EventType.LOSECAPTURE, this.endDrag);
  } else {
    this.eventHandler_.listen(goog.dom.getWindow(doc), goog.events.EventType.BLUR, this.endDrag);
  }
  if (goog.userAgent.IE && this.ieDragStartCancellingOn_) {
    this.eventHandler_.listen(doc, goog.events.EventType.DRAGSTART, goog.events.Event.preventDefault);
  }
  if (this.scrollTarget_) {
    this.eventHandler_.listen(this.scrollTarget_, goog.events.EventType.SCROLL, this.onScroll_, useCapture);
  }
};
goog.fx.Dragger.prototype.fireDragStart_ = function(e) {
  return this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.START, this, e.clientX, e.clientY, e));
};
goog.fx.Dragger.prototype.cleanUpAfterDragging_ = function() {
  this.eventHandler_.removeAll();
  if (goog.fx.Dragger.HAS_SET_CAPTURE_) {
    this.document_.releaseCapture();
  }
};
goog.fx.Dragger.prototype.endDrag = function(e, opt_dragCanceled) {
  this.cleanUpAfterDragging_();
  if (this.dragging_) {
    this.maybeReinitTouchEvent_(e);
    this.dragging_ = false;
    var x = this.limitX(this.deltaX);
    var y = this.limitY(this.deltaY);
    var dragCanceled = opt_dragCanceled || e.type == goog.events.EventType.TOUCHCANCEL;
    this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.END, this, e.clientX, e.clientY, e, x, y, dragCanceled));
  } else {
    this.dispatchEvent(goog.fx.Dragger.EventType.EARLY_CANCEL);
  }
  if (e.type == goog.events.EventType.TOUCHEND || e.type == goog.events.EventType.TOUCHCANCEL) {
    e.preventDefault();
  }
};
goog.fx.Dragger.prototype.endDragCancel = function(e) {
  this.endDrag(e, true);
};
goog.fx.Dragger.prototype.maybeReinitTouchEvent_ = function(e) {
  var type = e.type;
  if (type == goog.events.EventType.TOUCHSTART || type == goog.events.EventType.TOUCHMOVE) {
    e.init(e.getBrowserEvent().targetTouches[0], e.currentTarget);
  } else {
    if (type == goog.events.EventType.TOUCHEND || type == goog.events.EventType.TOUCHCANCEL) {
      e.init(e.getBrowserEvent().changedTouches[0], e.currentTarget);
    }
  }
};
goog.fx.Dragger.prototype.handleMove_ = function(e) {
  if (this.enabled_) {
    this.maybeReinitTouchEvent_(e);
    var sign = this.useRightPositioningForRtl_ && this.isRightToLeft_() ? -1 : 1;
    var dx = sign * (e.clientX - this.clientX);
    var dy = e.clientY - this.clientY;
    this.clientX = e.clientX;
    this.clientY = e.clientY;
    this.screenX = e.screenX;
    this.screenY = e.screenY;
    if (!this.dragging_) {
      var diffX = this.startX - this.clientX;
      var diffY = this.startY - this.clientY;
      var distance = diffX * diffX + diffY * diffY;
      if (distance > this.hysteresisDistanceSquared_) {
        if (this.fireDragStart_(e)) {
          this.dragging_ = true;
        } else {
          if (!this.isDisposed()) {
            this.endDrag(e);
          }
          return;
        }
      }
    }
    var pos = this.calculatePosition_(dx, dy);
    var x = pos.x;
    var y = pos.y;
    if (this.dragging_) {
      var rv = this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.BEFOREDRAG, this, e.clientX, e.clientY, e, x, y));
      if (rv) {
        this.doDrag(e, x, y, false);
        e.preventDefault();
      }
    }
  }
};
goog.fx.Dragger.prototype.calculatePosition_ = function(dx, dy) {
  var pageScroll = goog.dom.getDomHelper(this.document_).getDocumentScroll();
  dx += pageScroll.x - this.pageScroll.x;
  dy += pageScroll.y - this.pageScroll.y;
  this.pageScroll = pageScroll;
  this.deltaX += dx;
  this.deltaY += dy;
  var x = this.limitX(this.deltaX);
  var y = this.limitY(this.deltaY);
  return new goog.math.Coordinate(x, y);
};
goog.fx.Dragger.prototype.onScroll_ = function(e) {
  var pos = this.calculatePosition_(0, 0);
  e.clientX = this.clientX;
  e.clientY = this.clientY;
  this.doDrag(e, pos.x, pos.y, true);
};
goog.fx.Dragger.prototype.doDrag = function(e, x, y, dragFromScroll) {
  this.defaultAction(x, y);
  this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.DRAG, this, e.clientX, e.clientY, e, x, y));
};
goog.fx.Dragger.prototype.limitX = function(x) {
  var rect = this.limits;
  var left = !isNaN(rect.left) ? rect.left : null;
  var width = !isNaN(rect.width) ? rect.width : 0;
  var maxX = left != null ? left + width : Infinity;
  var minX = left != null ? left : -Infinity;
  return Math.min(maxX, Math.max(minX, x));
};
goog.fx.Dragger.prototype.limitY = function(y) {
  var rect = this.limits;
  var top = !isNaN(rect.top) ? rect.top : null;
  var height = !isNaN(rect.height) ? rect.height : 0;
  var maxY = top != null ? top + height : Infinity;
  var minY = top != null ? top : -Infinity;
  return Math.min(maxY, Math.max(minY, y));
};
goog.fx.Dragger.prototype.defaultAction = function(x, y) {
  if (this.useRightPositioningForRtl_ && this.isRightToLeft_()) {
    this.target.style.right = x + "px";
  } else {
    this.target.style.left = x + "px";
  }
  this.target.style.top = y + "px";
};
goog.fx.Dragger.prototype.isDragging = function() {
  return this.dragging_;
};
goog.fx.DragEvent = function(type, dragobj, clientX, clientY, browserEvent, opt_actX, opt_actY, opt_dragCanceled) {
  goog.events.Event.call(this, type);
  this.clientX = clientX;
  this.clientY = clientY;
  this.browserEvent = browserEvent;
  this.left = goog.isDef(opt_actX) ? opt_actX : dragobj.deltaX;
  this.top = goog.isDef(opt_actY) ? opt_actY : dragobj.deltaY;
  this.dragger = dragobj;
  this.dragCanceled = !!opt_dragCanceled;
};
goog.inherits(goog.fx.DragEvent, goog.events.Event);
goog.provide("floor16.ui.range_edit");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("goog.math.Rect");
goog.require("goog.events");
goog.require("goog.events.EventType");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("om.dom");
goog.require("cljs.core.async");
goog.require("goog.events");
goog.require("goog.fx.Dragger");
floor16.ui.range_edit.ExtendedDragger = function ExtendedDragger(el, limit) {
  return goog.base(this, el, null, limit);
};
goog.inherits(floor16.ui.range_edit.ExtendedDragger, goog.fx.Dragger);
floor16.ui.range_edit.ExtendedDragger.prototype.defaultAction = function(x, y) {
  return null;
};
floor16.ui.range_edit.val_to_pos = function val_to_pos(value, min_btm, max_top) {
  return 100 * value / (max_top - min_btm);
};
floor16.ui.range_edit.step_round = function step_round(v, step) {
  return Math.floor.call(null, v / step) * step;
};
floor16.ui.range_edit.pos_to_val = function pos_to_val(pos, min_btm, max_top, step, width) {
  return floor16.ui.range_edit.step_round.call(null, (max_top - min_btm) * pos / width, step);
};
floor16.ui.range_edit.slider_handle = function slider_handle(range_value, owner, p__14110) {
  var map__14115 = p__14110;
  var map__14115__$1 = cljs.core.seq_QMARK_.call(null, map__14115) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14115) : map__14115;
  var opts = map__14115__$1;
  var comm = cljs.core.get.call(null, map__14115__$1, new cljs.core.Keyword(null, "comm", "comm", 1016963710));
  var step = cljs.core.get.call(null, map__14115__$1, new cljs.core.Keyword(null, "step", "step", 1017444926));
  var max_top = cljs.core.get.call(null, map__14115__$1, new cljs.core.Keyword(null, "max-top", "max-top", 1856863454));
  var min_bottom = cljs.core.get.call(null, map__14115__$1, new cljs.core.Keyword(null, "min-bottom", "min-bottom", 2894918008));
  var bound = cljs.core.get.call(null, map__14115__$1, new cljs.core.Keyword(null, "bound", "bound", 1107832048));
  if (typeof floor16.ui.range_edit.t14116 !== "undefined") {
  } else {
    floor16.ui.range_edit.t14116 = function(step, opts, bound, slider_handle, range_value, comm, p__14110, owner, map__14115, max_top, min_bottom, meta14117) {
      this.step = step;
      this.opts = opts;
      this.bound = bound;
      this.slider_handle = slider_handle;
      this.range_value = range_value;
      this.comm = comm;
      this.p__14110 = p__14110;
      this.owner = owner;
      this.map__14115 = map__14115;
      this.max_top = max_top;
      this.min_bottom = min_bottom;
      this.meta14117 = meta14117;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.range_edit.t14116.cljs$lang$type = true;
    floor16.ui.range_edit.t14116.cljs$lang$ctorStr = "floor16.ui.range-edit/t14116";
    floor16.ui.range_edit.t14116.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.ui.range-edit/t14116");
    };
    floor16.ui.range_edit.t14116.prototype.om$core$IRender$ = true;
    floor16.ui.range_edit.t14116.prototype.om$core$IRender$render$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return React.DOM.a({"style":{"left":[cljs.core.str(floor16.ui.range_edit.val_to_pos.call(null, self__.bound.call(null, self__.range_value), self__.min_bottom, self__.max_top)), cljs.core.str("%")].join("")}, "className":"slider-handle"});
    };
    floor16.ui.range_edit.t14116.prototype.om$core$IWillUnmount$ = true;
    floor16.ui.range_edit.t14116.prototype.om$core$IWillUnmount$will_unmount$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return console.log(this$__$1, self__.owner);
    };
    floor16.ui.range_edit.t14116.prototype.om$core$IDidMount$ = true;
    floor16.ui.range_edit.t14116.prototype.om$core$IDidMount$did_mount$arity$2 = function(this$, node) {
      var self__ = this;
      var this$__$1 = this;
      var parentWidth = node.parentNode.offsetWidth;
      var dragger = new floor16.ui.range_edit.ExtendedDragger(node, null, new goog.math.Rect(0, node.offsetTop, parentWidth, 0));
      return goog.events.listen(dragger, goog.events.EventType.DRAG, function(e) {
        return cljs.core.async.put_BANG_.call(null, self__.comm, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bound", "bound", 1107832048), self__.bound, new cljs.core.Keyword(null, "value", "value", 1125876963), floor16.ui.range_edit.pos_to_val.call(null, e.left, self__.min_bottom, self__.max_top, self__.step, parentWidth)], null));
      });
    };
    floor16.ui.range_edit.t14116.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14118) {
      var self__ = this;
      var _14118__$1 = this;
      return self__.meta14117;
    };
    floor16.ui.range_edit.t14116.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14118, meta14117__$1) {
      var self__ = this;
      var _14118__$1 = this;
      return new floor16.ui.range_edit.t14116(self__.step, self__.opts, self__.bound, self__.slider_handle, self__.range_value, self__.comm, self__.p__14110, self__.owner, self__.map__14115, self__.max_top, self__.min_bottom, meta14117__$1);
    };
    floor16.ui.range_edit.__GT_t14116 = function __GT_t14116(step__$1, opts__$1, bound__$1, slider_handle__$1, range_value__$1, comm__$1, p__14110__$1, owner__$1, map__14115__$2, max_top__$1, min_bottom__$1, meta14117) {
      return new floor16.ui.range_edit.t14116(step__$1, opts__$1, bound__$1, slider_handle__$1, range_value__$1, comm__$1, p__14110__$1, owner__$1, map__14115__$2, max_top__$1, min_bottom__$1, meta14117);
    };
  }
  return new floor16.ui.range_edit.t14116(step, opts, bound, slider_handle, range_value, comm, p__14110, owner, map__14115__$1, max_top, min_bottom, null);
};
floor16.ui.range_edit.slider_range = function slider_range(range_value, owner, p__14119) {
  var map__14124 = p__14119;
  var map__14124__$1 = cljs.core.seq_QMARK_.call(null, map__14124) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14124) : map__14124;
  var max_top = cljs.core.get.call(null, map__14124__$1, new cljs.core.Keyword(null, "max-top", "max-top", 1856863454));
  var min_bottom = cljs.core.get.call(null, map__14124__$1, new cljs.core.Keyword(null, "min-bottom", "min-bottom", 2894918008));
  if (typeof floor16.ui.range_edit.t14125 !== "undefined") {
  } else {
    floor16.ui.range_edit.t14125 = function(min_bottom, max_top, map__14124, p__14119, owner, range_value, slider_range, meta14126) {
      this.min_bottom = min_bottom;
      this.max_top = max_top;
      this.map__14124 = map__14124;
      this.p__14119 = p__14119;
      this.owner = owner;
      this.range_value = range_value;
      this.slider_range = slider_range;
      this.meta14126 = meta14126;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.range_edit.t14125.cljs$lang$type = true;
    floor16.ui.range_edit.t14125.cljs$lang$ctorStr = "floor16.ui.range-edit/t14125";
    floor16.ui.range_edit.t14125.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.ui.range-edit/t14125");
    };
    floor16.ui.range_edit.t14125.prototype.om$core$IRender$ = true;
    floor16.ui.range_edit.t14125.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return React.DOM.div({"style":{"width":[cljs.core.str(floor16.ui.range_edit.val_to_pos.call(null, (new cljs.core.Keyword(null, "top", "top", 1014019271)).cljs$core$IFn$_invoke$arity$1(self__.range_value) - (new cljs.core.Keyword(null, "bottom", "bottom", 3925642653)).cljs$core$IFn$_invoke$arity$1(self__.range_value), self__.min_bottom, self__.max_top)), cljs.core.str("%")].join(""), "left":[cljs.core.str(floor16.ui.range_edit.val_to_pos.call(null, (new cljs.core.Keyword(null, "bottom", "bottom", 
      3925642653)).cljs$core$IFn$_invoke$arity$1(self__.range_value), self__.min_bottom, self__.max_top)), cljs.core.str("%")].join("")}, "className":"slider-range"});
    };
    floor16.ui.range_edit.t14125.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14127) {
      var self__ = this;
      var _14127__$1 = this;
      return self__.meta14126;
    };
    floor16.ui.range_edit.t14125.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14127, meta14126__$1) {
      var self__ = this;
      var _14127__$1 = this;
      return new floor16.ui.range_edit.t14125(self__.min_bottom, self__.max_top, self__.map__14124, self__.p__14119, self__.owner, self__.range_value, self__.slider_range, meta14126__$1);
    };
    floor16.ui.range_edit.__GT_t14125 = function __GT_t14125(min_bottom__$1, max_top__$1, map__14124__$2, p__14119__$1, owner__$1, range_value__$1, slider_range__$1, meta14126) {
      return new floor16.ui.range_edit.t14125(min_bottom__$1, max_top__$1, map__14124__$2, p__14119__$1, owner__$1, range_value__$1, slider_range__$1, meta14126);
    };
  }
  return new floor16.ui.range_edit.t14125(min_bottom, max_top, map__14124__$1, p__14119, owner, range_value, slider_range, null);
};
floor16.ui.range_edit.parse_int = function parse_int(v) {
  if (cljs.core.empty_QMARK_.call(null, v)) {
    return 0;
  } else {
    return parseInt(v);
  }
};
floor16.ui.range_edit.range_textbox = function range_textbox(range_value, owner, p__14128) {
  var map__14133 = p__14128;
  var map__14133__$1 = cljs.core.seq_QMARK_.call(null, map__14133) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14133) : map__14133;
  var comm = cljs.core.get.call(null, map__14133__$1, new cljs.core.Keyword(null, "comm", "comm", 1016963710));
  var bound = cljs.core.get.call(null, map__14133__$1, new cljs.core.Keyword(null, "bound", "bound", 1107832048));
  if (typeof floor16.ui.range_edit.t14134 !== "undefined") {
  } else {
    floor16.ui.range_edit.t14134 = function(bound, comm, map__14133, p__14128, owner, range_value, range_textbox, meta14135) {
      this.bound = bound;
      this.comm = comm;
      this.map__14133 = map__14133;
      this.p__14128 = p__14128;
      this.owner = owner;
      this.range_value = range_value;
      this.range_textbox = range_textbox;
      this.meta14135 = meta14135;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.range_edit.t14134.cljs$lang$type = true;
    floor16.ui.range_edit.t14134.cljs$lang$ctorStr = "floor16.ui.range-edit/t14134";
    floor16.ui.range_edit.t14134.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.ui.range-edit/t14134");
    };
    floor16.ui.range_edit.t14134.prototype.om$core$IRender$ = true;
    floor16.ui.range_edit.t14134.prototype.om$core$IRender$render$arity$1 = function(this__4922__auto__) {
      var self__ = this;
      var this__4922__auto____$1 = this;
      return om.dom.input.call(null, {"onChange":function(e) {
        return cljs.core.async.put_BANG_.call(null, self__.comm, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bound", "bound", 1107832048), self__.bound, new cljs.core.Keyword(null, "value", "value", 1125876963), floor16.ui.range_edit.parse_int.call(null, e.target.value)], null));
      }, "value":self__.bound.call(null, self__.range_value), "className":cljs.core.name.call(null, self__.bound), "type":"text"});
    };
    floor16.ui.range_edit.t14134.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14136) {
      var self__ = this;
      var _14136__$1 = this;
      return self__.meta14135;
    };
    floor16.ui.range_edit.t14134.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14136, meta14135__$1) {
      var self__ = this;
      var _14136__$1 = this;
      return new floor16.ui.range_edit.t14134(self__.bound, self__.comm, self__.map__14133, self__.p__14128, self__.owner, self__.range_value, self__.range_textbox, meta14135__$1);
    };
    floor16.ui.range_edit.__GT_t14134 = function __GT_t14134(bound__$1, comm__$1, map__14133__$2, p__14128__$1, owner__$1, range_value__$1, range_textbox__$1, meta14135) {
      return new floor16.ui.range_edit.t14134(bound__$1, comm__$1, map__14133__$2, p__14128__$1, owner__$1, range_value__$1, range_textbox__$1, meta14135);
    };
  }
  return new floor16.ui.range_edit.t14134(bound, comm, map__14133__$1, p__14128, owner, range_value, range_textbox, null);
};
floor16.ui.range_edit.actualize = function actualize(cursor) {
  var state = cursor.state;
  var path = cursor.path;
  if (cljs.core.empty_QMARK_.call(null, path)) {
    return cljs.core.deref.call(null, state);
  } else {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path);
  }
};
floor16.ui.range_edit.range_editor = function range_editor(range_value, owner, p__14137) {
  var map__14172 = p__14137;
  var map__14172__$1 = cljs.core.seq_QMARK_.call(null, map__14172) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14172) : map__14172;
  var opts = map__14172__$1;
  var max_top = cljs.core.get.call(null, map__14172__$1, new cljs.core.Keyword(null, "max-top", "max-top", 1856863454));
  var min_bottom = cljs.core.get.call(null, map__14172__$1, new cljs.core.Keyword(null, "min-bottom", "min-bottom", 2894918008));
  var config = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bottom", "bottom", 3925642653), function(v) {
    var x__3717__auto__ = function() {
      var x__3710__auto__ = min_bottom;
      var y__3711__auto__ = v;
      return x__3710__auto__ > y__3711__auto__ ? x__3710__auto__ : y__3711__auto__;
    }();
    var y__3718__auto__ = (new cljs.core.Keyword(null, "top", "top", 1014019271)).cljs$core$IFn$_invoke$arity$1(floor16.ui.range_edit.actualize.call(null, range_value));
    return x__3717__auto__ < y__3718__auto__ ? x__3717__auto__ : y__3718__auto__;
  }, new cljs.core.Keyword(null, "top", "top", 1014019271), function(v) {
    var x__3710__auto__ = function() {
      var x__3717__auto__ = max_top;
      var y__3718__auto__ = v;
      return x__3717__auto__ < y__3718__auto__ ? x__3717__auto__ : y__3718__auto__;
    }();
    var y__3711__auto__ = (new cljs.core.Keyword(null, "bottom", "bottom", 3925642653)).cljs$core$IFn$_invoke$arity$1(floor16.ui.range_edit.actualize.call(null, range_value));
    return x__3710__auto__ > y__3711__auto__ ? x__3710__auto__ : y__3711__auto__;
  }], null);
  var handle_change = function(config) {
    return function(p__14173) {
      var map__14174 = p__14173;
      var map__14174__$1 = cljs.core.seq_QMARK_.call(null, map__14174) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14174) : map__14174;
      var e = map__14174__$1;
      var value = cljs.core.get.call(null, map__14174__$1, new cljs.core.Keyword(null, "value", "value", 1125876963));
      var bound = cljs.core.get.call(null, map__14174__$1, new cljs.core.Keyword(null, "bound", "bound", 1107832048));
      var v = cljs.core.not.call(null, isNaN(value)) ? value : bound.call(null, floor16.ui.range_edit.actualize.call(null, range_value));
      return om.core.transact_BANG_.call(null, range_value, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [bound], null), function(v, map__14174, map__14174__$1, e, value, bound, config) {
        return function(_) {
          return bound.call(null, config).call(null, v);
        };
      }(v, map__14174, map__14174__$1, e, value, bound, config));
    };
  }(config);
  if (typeof floor16.ui.range_edit.t14175 !== "undefined") {
  } else {
    floor16.ui.range_edit.t14175 = function(opts, handle_change, range_editor, config, range_value, map__14172, owner, max_top, p__14137, min_bottom, meta14176) {
      this.opts = opts;
      this.handle_change = handle_change;
      this.range_editor = range_editor;
      this.config = config;
      this.range_value = range_value;
      this.map__14172 = map__14172;
      this.owner = owner;
      this.max_top = max_top;
      this.p__14137 = p__14137;
      this.min_bottom = min_bottom;
      this.meta14176 = meta14176;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.range_edit.t14175.cljs$lang$type = true;
    floor16.ui.range_edit.t14175.cljs$lang$ctorStr = "floor16.ui.range-edit/t14175";
    floor16.ui.range_edit.t14175.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "floor16.ui.range-edit/t14175");
    };
    floor16.ui.range_edit.t14175.prototype.om$core$IRender$ = true;
    floor16.ui.range_edit.t14175.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var new_opts = cljs.core.assoc.call(null, self__.opts, new cljs.core.Keyword(null, "comm", "comm", 1016963710), om.core.get_state.call(null, self__.owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comm", "comm", 1016963710)], null)));
      var top_opts = cljs.core.assoc.call(null, new_opts, new cljs.core.Keyword(null, "bound", "bound", 1107832048), new cljs.core.Keyword(null, "top", "top", 1014019271));
      var bottom_opts = cljs.core.assoc.call(null, new_opts, new cljs.core.Keyword(null, "bound", "bound", 1107832048), new cljs.core.Keyword(null, "bottom", "bottom", 3925642653));
      return React.DOM.div(null, React.DOM.div({"className":"range-edit-wrapper"}, om.core.build.call(null, floor16.ui.range_edit.range_textbox, self__.range_value, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), bottom_opts], null)), React.DOM.div({"className":"slider"}, om.core.build.call(null, floor16.ui.range_edit.slider_range, self__.range_value, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), 
      self__.opts], null)), om.core.build.call(null, floor16.ui.range_edit.slider_handle, self__.range_value, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), bottom_opts], null)), om.core.build.call(null, floor16.ui.range_edit.slider_handle, self__.range_value, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), top_opts], null))), om.core.build.call(null, floor16.ui.range_edit.range_textbox, self__.range_value, 
      new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), top_opts], null))));
    };
    floor16.ui.range_edit.t14175.prototype.om$core$IInitState$ = true;
    floor16.ui.range_edit.t14175.prototype.om$core$IInitState$init_state$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      var comm = cljs.core.async.chan.call(null);
      var c__6152__auto___14206 = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function() {
        var f__6153__auto__ = function() {
          var switch__6137__auto__ = function(state_14190) {
            var state_val_14191 = state_14190[1];
            if (state_val_14191 === 7) {
              var inst_14181 = state_14190[2];
              var inst_14182 = self__.handle_change.call(null, inst_14181);
              var state_14190__$1 = function() {
                var statearr_14192 = state_14190;
                statearr_14192[7] = inst_14182;
                return statearr_14192;
              }();
              var statearr_14193_14207 = state_14190__$1;
              statearr_14193_14207[2] = null;
              statearr_14193_14207[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_14191 === 6) {
                var inst_14186 = state_14190[2];
                var state_14190__$1 = state_14190;
                var statearr_14194_14208 = state_14190__$1;
                statearr_14194_14208[2] = inst_14186;
                statearr_14194_14208[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_14191 === 5) {
                  var state_14190__$1 = state_14190;
                  var statearr_14195_14209 = state_14190__$1;
                  statearr_14195_14209[2] = null;
                  statearr_14195_14209[1] = 6;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_14191 === 4) {
                    var state_14190__$1 = state_14190;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14190__$1, 7, comm);
                  } else {
                    if (state_val_14191 === 3) {
                      var inst_14188 = state_14190[2];
                      var state_14190__$1 = state_14190;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14190__$1, inst_14188);
                    } else {
                      if (state_val_14191 === 2) {
                        var state_14190__$1 = state_14190;
                        if (true) {
                          var statearr_14196_14210 = state_14190__$1;
                          statearr_14196_14210[1] = 4;
                        } else {
                          var statearr_14197_14211 = state_14190__$1;
                          statearr_14197_14211[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_14191 === 1) {
                          var state_14190__$1 = state_14190;
                          var statearr_14198_14212 = state_14190__$1;
                          statearr_14198_14212[2] = null;
                          statearr_14198_14212[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
          return function(switch__6137__auto__) {
            return function() {
              var state_machine__6138__auto__ = null;
              var state_machine__6138__auto____0 = function() {
                var statearr_14202 = [null, null, null, null, null, null, null, null];
                statearr_14202[0] = state_machine__6138__auto__;
                statearr_14202[1] = 1;
                return statearr_14202;
              };
              var state_machine__6138__auto____1 = function(state_14190) {
                while (true) {
                  var ret_value__6139__auto__ = function() {
                    try {
                      while (true) {
                        var result__6140__auto__ = switch__6137__auto__.call(null, state_14190);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6140__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6140__auto__;
                        }
                        break;
                      }
                    } catch (e14203) {
                      if (e14203 instanceof Object) {
                        var ex__6141__auto__ = e14203;
                        var statearr_14204_14213 = state_14190;
                        statearr_14204_14213[5] = ex__6141__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14190);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e14203;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6139__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__14214 = state_14190;
                    state_14190 = G__14214;
                    continue;
                  } else {
                    return ret_value__6139__auto__;
                  }
                  break;
                }
              };
              state_machine__6138__auto__ = function(state_14190) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6138__auto____0.call(this);
                  case 1:
                    return state_machine__6138__auto____1.call(this, state_14190);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6138__auto____0;
              state_machine__6138__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6138__auto____1;
              return state_machine__6138__auto__;
            }();
          }(switch__6137__auto__);
        }();
        var state__6154__auto__ = function() {
          var statearr_14205 = f__6153__auto__.call(null);
          statearr_14205[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6152__auto___14206;
          return statearr_14205;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6154__auto__);
      });
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), comm], null);
    };
    floor16.ui.range_edit.t14175.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14177) {
      var self__ = this;
      var _14177__$1 = this;
      return self__.meta14176;
    };
    floor16.ui.range_edit.t14175.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14177, meta14176__$1) {
      var self__ = this;
      var _14177__$1 = this;
      return new floor16.ui.range_edit.t14175(self__.opts, self__.handle_change, self__.range_editor, self__.config, self__.range_value, self__.map__14172, self__.owner, self__.max_top, self__.p__14137, self__.min_bottom, meta14176__$1);
    };
    floor16.ui.range_edit.__GT_t14175 = function __GT_t14175(opts__$1, handle_change__$1, range_editor__$1, config__$1, range_value__$1, map__14172__$2, owner__$1, max_top__$1, p__14137__$1, min_bottom__$1, meta14176) {
      return new floor16.ui.range_edit.t14175(opts__$1, handle_change__$1, range_editor__$1, config__$1, range_value__$1, map__14172__$2, owner__$1, max_top__$1, p__14137__$1, min_bottom__$1, meta14176);
    };
  }
  return new floor16.ui.range_edit.t14175(opts, handle_change, range_editor, config, range_value, map__14172__$1, owner, max_top, p__14137, min_bottom, null);
};

//# sourceMappingURL=site2.js.map