var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.TRUSTED_SITE = true;
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name);
  };
  goog.implicitNamespaces_ = {};
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
if (!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && (typeof value.splice != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")))) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call"))) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isDef = function(val) {
  return val !== undefined;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for (var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value);
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.subs = function(str, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement);
  }
  return str;
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && (ch >= " " && ch <= "~") || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;");
  } else {
    if (!goog.string.allRe_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;");
    }
    return str;
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1;
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && (index < s.length && stringLength > 0)) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || (goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]));
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    this.stack = (new Error).stack || "";
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return(value);
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if (arr.reduce) {
    if (opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val);
    } else {
      return arr.reduce(f, val);
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if (arr.reduceRight) {
    if (opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val);
    } else {
      return arr.reduceRight(f, val);
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || (!goog.isArrayLike(arr2) || arr1.length != arr2.length)) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn);
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2173";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  3960797560), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__9792__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__9792 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__9792__delegate.call(this, args);
    };
    G__9792.cljs$lang$maxFixedArity = 0;
    G__9792.cljs$lang$applyTo = function(arglist__9793) {
      var args = cljs.core.seq(arglist__9793);
      return G__9792__delegate(args);
    };
    G__9792.cljs$core$IFn$_invoke$arity$variadic = G__9792__delegate;
    return G__9792;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false;
      } else {
        return null;
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3431__auto__ = ty;
    if (cljs.core.truth_(and__3431__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3431__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4090__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4090__auto__)) {
    var s = temp__4090__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4291__auto___9794 = len;
  var i_9795 = 0;
  while (true) {
    if (i_9795 < n__4291__auto___9794) {
      new_arr[i_9795] = arr[i_9795];
      var G__9796 = i_9795 + 1;
      i_9795 = G__9796;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__9797__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__9797 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9797__delegate.call(this, array, i, idxs);
    };
    G__9797.cljs$lang$maxFixedArity = 2;
    G__9797.cljs$lang$applyTo = function(arglist__9798) {
      var array = cljs.core.first(arglist__9798);
      arglist__9798 = cljs.core.next(arglist__9798);
      var i = cljs.core.first(arglist__9798);
      var idxs = cljs.core.rest(arglist__9798);
      return G__9797__delegate(array, i, idxs);
    };
    G__9797.cljs$core$IFn$_invoke$arity$variadic = G__9797__delegate;
    return G__9797;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__9799__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__9799 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__9799__delegate.call(this, array, idx, idx2, idxv);
    };
    G__9799.cljs$lang$maxFixedArity = 3;
    G__9799.cljs$lang$applyTo = function(arglist__9800) {
      var array = cljs.core.first(arglist__9800);
      arglist__9800 = cljs.core.next(arglist__9800);
      var idx = cljs.core.first(arglist__9800);
      arglist__9800 = cljs.core.next(arglist__9800);
      var idx2 = cljs.core.first(arglist__9800);
      var idxv = cljs.core.rest(arglist__9800);
      return G__9799__delegate(array, idx, idx2, idxv);
    };
    G__9799.cljs$core$IFn$_invoke$arity$variadic = G__9799__delegate;
    return G__9799;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj9802 = {};
  return obj9802;
}();
cljs.core.IFn = function() {
  var obj9804 = {};
  return obj9804;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj9806 = {};
  return obj9806;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3431__auto__ = value;
    if (and__3431__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4070__auto__ = value == null ? null : value;
    return function() {
      var or__3443__auto__ = cljs.core._clone[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._clone["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj9808 = {};
  return obj9808;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._count[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._count["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj9810 = {};
  return obj9810;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._empty[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._empty["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj9812 = {};
  return obj9812;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._conj[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._conj["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj9814 = {};
  return obj9814;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3431__auto__ = coll;
      if (and__3431__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4070__auto__ = coll == null ? null : coll;
      return function() {
        var or__3443__auto__ = cljs.core._nth[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._nth["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3431__auto__ = coll;
      if (and__3431__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4070__auto__ = coll == null ? null : coll;
      return function() {
        var or__3443__auto__ = cljs.core._nth[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._nth["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj9816 = {};
  return obj9816;
}();
cljs.core.ISeq = function() {
  var obj9818 = {};
  return obj9818;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._first[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._first["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._rest[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._rest["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj9820 = {};
  return obj9820;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._next[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._next["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj9822 = {};
  return obj9822;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3431__auto__ = o;
      if (and__3431__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4070__auto__ = o == null ? null : o;
      return function() {
        var or__3443__auto__ = cljs.core._lookup[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._lookup["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3431__auto__ = o;
      if (and__3431__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4070__auto__ = o == null ? null : o;
      return function() {
        var or__3443__auto__ = cljs.core._lookup[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._lookup["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj9824 = {};
  return obj9824;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._assoc[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._assoc["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj9826 = {};
  return obj9826;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._dissoc[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._dissoc["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj9828 = {};
  return obj9828;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._key[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._key["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._val[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._val["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj9830 = {};
  return obj9830;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._disjoin[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._disjoin["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj9832 = {};
  return obj9832;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._peek[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._peek["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._pop[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._pop["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj9834 = {};
  return obj9834;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._assoc_n[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj9836 = {};
  return obj9836;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._deref[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._deref["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj9838 = {};
  return obj9838;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj9840 = {};
  return obj9840;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._meta[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._meta["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj9842 = {};
  return obj9842;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._with_meta[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._with_meta["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj9844 = {};
  return obj9844;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3431__auto__ = coll;
      if (and__3431__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4070__auto__ = coll == null ? null : coll;
      return function() {
        var or__3443__auto__ = cljs.core._reduce[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._reduce["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3431__auto__ = coll;
      if (and__3431__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4070__auto__ = coll == null ? null : coll;
      return function() {
        var or__3443__auto__ = cljs.core._reduce[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._reduce["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj9846 = {};
  return obj9846;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj9848 = {};
  return obj9848;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._equiv[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._equiv["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj9850 = {};
  return obj9850;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._hash[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._hash["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj9852 = {};
  return obj9852;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._seq[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._seq["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj9854 = {};
  return obj9854;
}();
cljs.core.IList = function() {
  var obj9856 = {};
  return obj9856;
}();
cljs.core.IRecord = function() {
  var obj9858 = {};
  return obj9858;
}();
cljs.core.IReversible = function() {
  var obj9860 = {};
  return obj9860;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._rseq[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._rseq["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj9862 = {};
  return obj9862;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._entry_key[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._entry_key["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._comparator[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._comparator["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj9864 = {};
  return obj9864;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3431__auto__ = writer;
    if (and__3431__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4070__auto__ = writer == null ? null : writer;
    return function() {
      var or__3443__auto__ = cljs.core._write[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._write["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3431__auto__ = writer;
    if (and__3431__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4070__auto__ = writer == null ? null : writer;
    return function() {
      var or__3443__auto__ = cljs.core._flush[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._flush["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj9866 = {};
  return obj9866;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._pr_writer[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj9868 = {};
  return obj9868;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3431__auto__ = d;
    if (and__3431__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4070__auto__ = d == null ? null : d;
    return function() {
      var or__3443__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj9870 = {};
  return obj9870;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = cljs.core._notify_watches[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = cljs.core._add_watch[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._add_watch["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = cljs.core._remove_watch[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj9872 = {};
  return obj9872;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._as_transient[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._as_transient["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj9874 = {};
  return obj9874;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3431__auto__ = tcoll;
    if (and__3431__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4070__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3443__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3431__auto__ = tcoll;
    if (and__3431__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4070__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3443__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj9876 = {};
  return obj9876;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3431__auto__ = tcoll;
    if (and__3431__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4070__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3443__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj9878 = {};
  return obj9878;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3431__auto__ = tcoll;
    if (and__3431__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4070__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3443__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj9880 = {};
  return obj9880;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3431__auto__ = tcoll;
    if (and__3431__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4070__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3443__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3431__auto__ = tcoll;
    if (and__3431__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4070__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3443__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj9882 = {};
  return obj9882;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3431__auto__ = tcoll;
    if (and__3431__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4070__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3443__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj9884 = {};
  return obj9884;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = cljs.core._compare[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._compare["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj9886 = {};
  return obj9886;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._drop_first[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._drop_first["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj9888 = {};
  return obj9888;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._chunked_first[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj9890 = {};
  return obj9890;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._chunked_next[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj9892 = {};
  return obj9892;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = cljs.core._name[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._name["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = cljs.core._namespace[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._namespace["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("");
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3431__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3431__auto__) {
        return b.ns;
      } else {
        return and__3431__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return cljs.core.compare.call(null, a.name, b.name);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3854__auto__ = self__._hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__9894 = null;
  var G__9894__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__9894__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__9894 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9894__2.call(this, self__, coll);
      case 3:
        return G__9894__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9894;
}();
cljs.core.Symbol.prototype.apply = function(self__, args9893) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9893)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__9896 = value;
  if (G__9896) {
    var bit__4093__auto__ = G__9896.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4093__auto__ || G__9896.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__9896.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__9896);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__9896);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__9898 = coll;
      if (G__9898) {
        var bit__4086__auto__ = G__9898.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4086__auto__ || G__9898.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__9900 = coll;
      if (G__9900) {
        var bit__4086__auto__ = G__9900.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4086__auto__ || G__9900.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__9902 = coll;
      if (G__9902) {
        var bit__4086__auto__ = G__9902.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4086__auto__ || G__9902.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__9904 = coll;
      if (G__9904) {
        var bit__4086__auto__ = G__9904.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4086__auto__ || G__9904.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__9905__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__9906 = y;
            var G__9907 = cljs.core.first.call(null, more);
            var G__9908 = cljs.core.next.call(null, more);
            x = G__9906;
            y = G__9907;
            more = G__9908;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__9905 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9905__delegate.call(this, x, y, more);
    };
    G__9905.cljs$lang$maxFixedArity = 2;
    G__9905.cljs$lang$applyTo = function(arglist__9909) {
      var x = cljs.core.first(arglist__9909);
      arglist__9909 = cljs.core.next(arglist__9909);
      var y = cljs.core.first(arglist__9909);
      var more = cljs.core.rest(arglist__9909);
      return G__9905__delegate(x, y, more);
    };
    G__9905.cljs$core$IFn$_invoke$arity$variadic = G__9905__delegate;
    return G__9905;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__9910 = nval;
            var G__9911 = n + 1;
            val = G__9910;
            n = G__9911;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__9912 = nval;
          var G__9913 = n + 1;
          val__$1 = G__9912;
          n = G__9913;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__9914 = nval;
          var G__9915 = n + 1;
          val__$1 = G__9914;
          n = G__9915;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__9916 = nval;
            var G__9917 = n + 1;
            val = G__9916;
            n = G__9917;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__9918 = nval;
          var G__9919 = n + 1;
          val__$1 = G__9918;
          n = G__9919;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__9920 = nval;
          var G__9921 = n + 1;
          val__$1 = G__9920;
          n = G__9921;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__9923 = x;
  if (G__9923) {
    var bit__4093__auto__ = G__9923.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4093__auto__ || G__9923.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__9923.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__9923);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__9923);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__9925 = x;
  if (G__9925) {
    var bit__4093__auto__ = G__9925.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4093__auto__ || G__9925.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__9925.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__9925);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__9925);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__9926 = sn;
      s = G__9926;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__9927__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__9928 = conj.call(null, coll, x);
          var G__9929 = cljs.core.first.call(null, xs);
          var G__9930 = cljs.core.next.call(null, xs);
          coll = G__9928;
          x = G__9929;
          xs = G__9930;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__9927 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9927__delegate.call(this, coll, x, xs);
    };
    G__9927.cljs$lang$maxFixedArity = 2;
    G__9927.cljs$lang$applyTo = function(arglist__9931) {
      var coll = cljs.core.first(arglist__9931);
      arglist__9931 = cljs.core.next(arglist__9931);
      var x = cljs.core.first(arglist__9931);
      var xs = cljs.core.rest(arglist__9931);
      return G__9927__delegate(coll, x, xs);
    };
    G__9927.cljs$core$IFn$_invoke$arity$variadic = G__9927__delegate;
    return G__9927;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__9932 = cljs.core.next.call(null, s);
      var G__9933 = acc + 1;
      s = G__9932;
      acc = G__9933;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__9935 = coll;
      if (G__9935) {
        var bit__4086__auto__ = G__9935.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4086__auto__ || G__9935.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count.call(null, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__9936 = cljs.core.next.call(null, coll);
              var G__9937 = n - 1;
              coll = G__9936;
              n = G__9937;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__9938 = cljs.core.next.call(null, coll);
              var G__9939 = n - 1;
              var G__9940 = not_found;
              coll = G__9938;
              n = G__9939;
              not_found = G__9940;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (coll == null) {
      return null;
    } else {
      if (function() {
        var G__9945 = coll;
        if (G__9945) {
          var bit__4086__auto__ = G__9945.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4086__auto__ || G__9945.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._nth.call(null, coll, n);
      } else {
        if (coll instanceof Array) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if (function() {
                  var G__9946 = coll;
                  if (G__9946) {
                    var bit__4093__auto__ = G__9946.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4093__auto__ || G__9946.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__9946.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9946);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9946);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(coll == null)) {
      if (function() {
        var G__9947 = coll;
        if (G__9947) {
          var bit__4086__auto__ = G__9947.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4086__auto__ || G__9947.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._nth.call(null, coll, n, not_found);
      } else {
        if (coll instanceof Array) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if (function() {
                  var G__9948 = coll;
                  if (G__9948) {
                    var bit__4093__auto__ = G__9948.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4093__auto__ || G__9948.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__9948.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9948);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9948);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__9951 = o;
        if (G__9951) {
          var bit__4086__auto__ = G__9951.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4086__auto__ || G__9951.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__9952 = o;
        if (G__9952) {
          var bit__4086__auto__ = G__9952.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4086__auto__ || G__9952.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays.call(null, [k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__9953__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__9954 = ret;
          var G__9955 = cljs.core.first.call(null, kvs);
          var G__9956 = cljs.core.second.call(null, kvs);
          var G__9957 = cljs.core.nnext.call(null, kvs);
          coll = G__9954;
          k = G__9955;
          v = G__9956;
          kvs = G__9957;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__9953 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__9953__delegate.call(this, coll, k, v, kvs);
    };
    G__9953.cljs$lang$maxFixedArity = 3;
    G__9953.cljs$lang$applyTo = function(arglist__9958) {
      var coll = cljs.core.first(arglist__9958);
      arglist__9958 = cljs.core.next(arglist__9958);
      var k = cljs.core.first(arglist__9958);
      arglist__9958 = cljs.core.next(arglist__9958);
      var v = cljs.core.first(arglist__9958);
      var kvs = cljs.core.rest(arglist__9958);
      return G__9953__delegate(coll, k, v, kvs);
    };
    G__9953.cljs$core$IFn$_invoke$arity$variadic = G__9953__delegate;
    return G__9953;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__9959__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__9960 = ret;
            var G__9961 = cljs.core.first.call(null, ks);
            var G__9962 = cljs.core.next.call(null, ks);
            coll = G__9960;
            k = G__9961;
            ks = G__9962;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__9959 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9959__delegate.call(this, coll, k, ks);
    };
    G__9959.cljs$lang$maxFixedArity = 2;
    G__9959.cljs$lang$applyTo = function(arglist__9963) {
      var coll = cljs.core.first(arglist__9963);
      arglist__9963 = cljs.core.next(arglist__9963);
      var k = cljs.core.first(arglist__9963);
      var ks = cljs.core.rest(arglist__9963);
      return G__9959__delegate(coll, k, ks);
    };
    G__9959.cljs$core$IFn$_invoke$arity$variadic = G__9959__delegate;
    return G__9959;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3443__auto__ = goog.isFunction(f);
  if (or__3443__auto__) {
    return or__3443__auto__;
  } else {
    var G__9967 = f;
    if (G__9967) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto____$1 = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto____$1)) {
          return or__3443__auto____$1;
        } else {
          return G__9967.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__9967.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__9967);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__9967);
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__9975 = o;
    if (G__9975) {
      var bit__4093__auto__ = G__9975.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4093__auto__ || G__9975.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__9975.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__9975);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__9975);
    }
  }()) {
    return with_meta.call(null, function() {
      if (typeof cljs.core.t9976 !== "undefined") {
      } else {
        cljs.core.t9976 = function(meta, o, with_meta, meta9977) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta9977 = meta9977;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217;
        };
        cljs.core.t9976.cljs$lang$type = true;
        cljs.core.t9976.cljs$lang$ctorStr = "cljs.core/t9976";
        cljs.core.t9976.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
          return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/t9976");
        };
        cljs.core.t9976.prototype.call = function() {
          var G__9980__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__9980 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
            }
            return G__9980__delegate.call(this, self__, args);
          };
          G__9980.cljs$lang$maxFixedArity = 1;
          G__9980.cljs$lang$applyTo = function(arglist__9981) {
            var self__ = cljs.core.first(arglist__9981);
            var args = cljs.core.rest(arglist__9981);
            return G__9980__delegate(self__, args);
          };
          G__9980.cljs$core$IFn$_invoke$arity$variadic = G__9980__delegate;
          return G__9980;
        }();
        cljs.core.t9976.prototype.apply = function(self__, args9979) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9979)));
        };
        cljs.core.t9976.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
          var G__9982__delegate = function(args) {
            var _ = this;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__9982 = function(var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__9982__delegate.call(this, args);
          };
          G__9982.cljs$lang$maxFixedArity = 0;
          G__9982.cljs$lang$applyTo = function(arglist__9983) {
            var args = cljs.core.seq(arglist__9983);
            return G__9982__delegate(args);
          };
          G__9982.cljs$core$IFn$_invoke$arity$variadic = G__9982__delegate;
          return G__9982;
        }();
        cljs.core.t9976.prototype.cljs$core$Fn$ = true;
        cljs.core.t9976.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9978) {
          var self__ = this;
          var _9978__$1 = this;
          return self__.meta9977;
        };
        cljs.core.t9976.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9978, meta9977__$1) {
          var self__ = this;
          var _9978__$1 = this;
          return new cljs.core.t9976(self__.meta, self__.o, self__.with_meta, meta9977__$1);
        };
        cljs.core.__GT_t9976 = function __GT_t9976(meta__$1, o__$1, with_meta__$1, meta9977) {
          return new cljs.core.t9976(meta__$1, o__$1, with_meta__$1, meta9977);
        };
      }
      return new cljs.core.t9976(meta, o, with_meta, null);
    }(), meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3431__auto__ = !(o == null);
    if (and__3431__auto__) {
      var G__9987 = o;
      if (G__9987) {
        var bit__4093__auto__ = G__9987.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4093__auto__ || G__9987.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__9987.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__9987);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__9987);
      }
    } else {
      return and__3431__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__9988__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__9989 = ret;
            var G__9990 = cljs.core.first.call(null, ks);
            var G__9991 = cljs.core.next.call(null, ks);
            coll = G__9989;
            k = G__9990;
            ks = G__9991;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__9988 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9988__delegate.call(this, coll, k, ks);
    };
    G__9988.cljs$lang$maxFixedArity = 2;
    G__9988.cljs$lang$applyTo = function(arglist__9992) {
      var coll = cljs.core.first(arglist__9992);
      arglist__9992 = cljs.core.next(arglist__9992);
      var k = cljs.core.first(arglist__9992);
      var ks = cljs.core.rest(arglist__9992);
      return G__9988__delegate(coll, k, ks);
    };
    G__9988.cljs$core$IFn$_invoke$arity$variadic = G__9988__delegate;
    return G__9988;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.string_hash_cache = function() {
  var obj9994 = {};
  return obj9994;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj9998 = {};
      return obj9998;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__10000 = o;
    if (G__10000) {
      var bit__4086__auto__ = G__10000.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4086__auto__ || G__10000.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.check_string_hash_cache.call(null, o);
          } else {
            if (o == null) {
              return 0;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return cljs.core._hash.call(null, o);
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__10002 = x;
    if (G__10002) {
      var bit__4093__auto__ = G__10002.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4093__auto__ || G__10002.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__10002.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__10002);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__10002);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__10004 = x;
    if (G__10004) {
      var bit__4093__auto__ = G__10004.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4093__auto__ || G__10004.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__10004.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__10004);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__10004);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__10006 = x;
  if (G__10006) {
    var bit__4093__auto__ = G__10006.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4093__auto__ || G__10006.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__10006.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__10006);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__10006);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__10008 = x;
  if (G__10008) {
    var bit__4093__auto__ = G__10008.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4093__auto__ || G__10008.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__10008.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__10008);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__10008);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__10010 = x;
  if (G__10010) {
    var bit__4093__auto__ = G__10010.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4093__auto__ || G__10010.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__10010.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__10010);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__10010);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__10012 = x;
  if (G__10012) {
    var bit__4093__auto__ = G__10012.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4093__auto__ || G__10012.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__10012.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__10012);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__10012);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__10014 = x;
    if (G__10014) {
      var bit__4093__auto__ = G__10014.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4093__auto__ || G__10014.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__10014.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__10014);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__10014);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__10016 = x;
  if (G__10016) {
    var bit__4093__auto__ = G__10016.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4093__auto__ || G__10016.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__10016.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__10016);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__10016);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__10018 = x;
  if (G__10018) {
    var bit__4086__auto__ = G__10018.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4086__auto__ || G__10018.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj10022 = {};
    return obj10022;
  };
  var js_obj__1 = function() {
    var G__10023__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__10023 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__10023__delegate.call(this, keyvals);
    };
    G__10023.cljs$lang$maxFixedArity = 0;
    G__10023.cljs$lang$applyTo = function(arglist__10024) {
      var keyvals = cljs.core.seq(arglist__10024);
      return G__10023__delegate(keyvals);
    };
    G__10023.cljs$core$IFn$_invoke$arity$variadic = G__10023__delegate;
    return G__10023;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(val, key, obj__$1) {
    return keys.push(key);
  });
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__10025 = i__$1 + 1;
      var G__10026 = j__$1 + 1;
      var G__10027 = len__$1 - 1;
      i__$1 = G__10025;
      j__$1 = G__10026;
      len__$1 = G__10027;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__10028 = i__$1 - 1;
      var G__10029 = j__$1 - 1;
      var G__10030 = len__$1 - 1;
      i__$1 = G__10028;
      j__$1 = G__10029;
      len__$1 = G__10030;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj10032 = {};
  return obj10032;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__10034 = s;
    if (G__10034) {
      var bit__4093__auto__ = G__10034.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4093__auto__ || G__10034.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__10034.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__10034);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__10034);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__10036 = s;
  if (G__10036) {
    var bit__4093__auto__ = G__10036.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4093__auto__ || G__10036.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__10036.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__10036);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__10036);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3443__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3443__auto__) {
    return or__3443__auto__;
  } else {
    var G__10040 = f;
    if (G__10040) {
      var bit__4093__auto__ = G__10040.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4093__auto__ || G__10040.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__10040.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__10040);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__10040);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && (!isNaN(n) && (!(n === Infinity) && parseFloat(n) === parseInt(n, 10)));
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && (cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__10041__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, x], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__10042 = cljs.core.conj.call(null, s, x__$1);
              var G__10043 = etc;
              s = G__10042;
              xs = G__10043;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__10041 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10041__delegate.call(this, x, y, more);
    };
    G__10041.cljs$lang$maxFixedArity = 2;
    G__10041.cljs$lang$applyTo = function(arglist__10044) {
      var x = cljs.core.first(arglist__10044);
      arglist__10044 = cljs.core.next(arglist__10044);
      var y = cljs.core.first(arglist__10044);
      var more = cljs.core.rest(arglist__10044);
      return G__10041__delegate(x, y, more);
    };
    G__10041.cljs$core$IFn$_invoke$arity$variadic = G__10041__delegate;
    return G__10041;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3443__auto__ = cljs.core.seq.call(null, coll);
    if (or__3443__auto__) {
      return or__3443__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__10046 = x;
            if (G__10046) {
              var bit__4086__auto__ = G__10046.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4086__auto__ || G__10046.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.call(null, xs, ys, xl, 0);
        } else {
          return null;
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__10047 = xs;
        var G__10048 = ys;
        var G__10049 = len;
        var G__10050 = n + 1;
        xs = G__10047;
        ys = G__10048;
        len = G__10049;
        n = G__10050;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__10051 = nval;
          var G__10052 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__10051;
          coll__$1 = G__10052;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__10055 = coll;
      if (G__10055) {
        var bit__4086__auto__ = G__10055.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4086__auto__ || G__10055.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__10056 = coll;
      if (G__10056) {
        var bit__4086__auto__ = G__10056.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4086__auto__ || G__10056.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, val, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__10057__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__10057 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10057__delegate.call(this, x, y, more);
    };
    G__10057.cljs$lang$maxFixedArity = 2;
    G__10057.cljs$lang$applyTo = function(arglist__10058) {
      var x = cljs.core.first(arglist__10058);
      arglist__10058 = cljs.core.next(arglist__10058);
      var y = cljs.core.first(arglist__10058);
      var more = cljs.core.rest(arglist__10058);
      return G__10057__delegate(x, y, more);
    };
    G__10057.cljs$core$IFn$_invoke$arity$variadic = G__10057__delegate;
    return G__10057;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__10059__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__10059 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10059__delegate.call(this, x, y, more);
    };
    G__10059.cljs$lang$maxFixedArity = 2;
    G__10059.cljs$lang$applyTo = function(arglist__10060) {
      var x = cljs.core.first(arglist__10060);
      arglist__10060 = cljs.core.next(arglist__10060);
      var y = cljs.core.first(arglist__10060);
      var more = cljs.core.rest(arglist__10060);
      return G__10059__delegate(x, y, more);
    };
    G__10059.cljs$core$IFn$_invoke$arity$variadic = G__10059__delegate;
    return G__10059;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__10061__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__10061 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10061__delegate.call(this, x, y, more);
    };
    G__10061.cljs$lang$maxFixedArity = 2;
    G__10061.cljs$lang$applyTo = function(arglist__10062) {
      var x = cljs.core.first(arglist__10062);
      arglist__10062 = cljs.core.next(arglist__10062);
      var y = cljs.core.first(arglist__10062);
      var more = cljs.core.rest(arglist__10062);
      return G__10061__delegate(x, y, more);
    };
    G__10061.cljs$core$IFn$_invoke$arity$variadic = G__10061__delegate;
    return G__10061;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__10063__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__10063 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10063__delegate.call(this, x, y, more);
    };
    G__10063.cljs$lang$maxFixedArity = 2;
    G__10063.cljs$lang$applyTo = function(arglist__10064) {
      var x = cljs.core.first(arglist__10064);
      arglist__10064 = cljs.core.next(arglist__10064);
      var y = cljs.core.first(arglist__10064);
      var more = cljs.core.rest(arglist__10064);
      return G__10063__delegate(x, y, more);
    };
    G__10063.cljs$core$IFn$_invoke$arity$variadic = G__10063__delegate;
    return G__10063;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__10065__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__10066 = y;
            var G__10067 = cljs.core.first.call(null, more);
            var G__10068 = cljs.core.next.call(null, more);
            x = G__10066;
            y = G__10067;
            more = G__10068;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10065 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10065__delegate.call(this, x, y, more);
    };
    G__10065.cljs$lang$maxFixedArity = 2;
    G__10065.cljs$lang$applyTo = function(arglist__10069) {
      var x = cljs.core.first(arglist__10069);
      arglist__10069 = cljs.core.next(arglist__10069);
      var y = cljs.core.first(arglist__10069);
      var more = cljs.core.rest(arglist__10069);
      return G__10065__delegate(x, y, more);
    };
    G__10065.cljs$core$IFn$_invoke$arity$variadic = G__10065__delegate;
    return G__10065;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__10070__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__10071 = y;
            var G__10072 = cljs.core.first.call(null, more);
            var G__10073 = cljs.core.next.call(null, more);
            x = G__10071;
            y = G__10072;
            more = G__10073;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10070 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10070__delegate.call(this, x, y, more);
    };
    G__10070.cljs$lang$maxFixedArity = 2;
    G__10070.cljs$lang$applyTo = function(arglist__10074) {
      var x = cljs.core.first(arglist__10074);
      arglist__10074 = cljs.core.next(arglist__10074);
      var y = cljs.core.first(arglist__10074);
      var more = cljs.core.rest(arglist__10074);
      return G__10070__delegate(x, y, more);
    };
    G__10070.cljs$core$IFn$_invoke$arity$variadic = G__10070__delegate;
    return G__10070;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__10075__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__10076 = y;
            var G__10077 = cljs.core.first.call(null, more);
            var G__10078 = cljs.core.next.call(null, more);
            x = G__10076;
            y = G__10077;
            more = G__10078;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10075 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10075__delegate.call(this, x, y, more);
    };
    G__10075.cljs$lang$maxFixedArity = 2;
    G__10075.cljs$lang$applyTo = function(arglist__10079) {
      var x = cljs.core.first(arglist__10079);
      arglist__10079 = cljs.core.next(arglist__10079);
      var y = cljs.core.first(arglist__10079);
      var more = cljs.core.rest(arglist__10079);
      return G__10075__delegate(x, y, more);
    };
    G__10075.cljs$core$IFn$_invoke$arity$variadic = G__10075__delegate;
    return G__10075;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__10080__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__10081 = y;
            var G__10082 = cljs.core.first.call(null, more);
            var G__10083 = cljs.core.next.call(null, more);
            x = G__10081;
            y = G__10082;
            more = G__10083;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10080 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10080__delegate.call(this, x, y, more);
    };
    G__10080.cljs$lang$maxFixedArity = 2;
    G__10080.cljs$lang$applyTo = function(arglist__10084) {
      var x = cljs.core.first(arglist__10084);
      arglist__10084 = cljs.core.next(arglist__10084);
      var y = cljs.core.first(arglist__10084);
      var more = cljs.core.rest(arglist__10084);
      return G__10080__delegate(x, y, more);
    };
    G__10080.cljs$core$IFn$_invoke$arity$variadic = G__10080__delegate;
    return G__10080;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3750__auto__ = x;
    var y__3751__auto__ = y;
    return x__3750__auto__ > y__3751__auto__ ? x__3750__auto__ : y__3751__auto__;
  };
  var max__3 = function() {
    var G__10085__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3750__auto__ = x;
        var y__3751__auto__ = y;
        return x__3750__auto__ > y__3751__auto__ ? x__3750__auto__ : y__3751__auto__;
      }(), more);
    };
    var G__10085 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10085__delegate.call(this, x, y, more);
    };
    G__10085.cljs$lang$maxFixedArity = 2;
    G__10085.cljs$lang$applyTo = function(arglist__10086) {
      var x = cljs.core.first(arglist__10086);
      arglist__10086 = cljs.core.next(arglist__10086);
      var y = cljs.core.first(arglist__10086);
      var more = cljs.core.rest(arglist__10086);
      return G__10085__delegate(x, y, more);
    };
    G__10085.cljs$core$IFn$_invoke$arity$variadic = G__10085__delegate;
    return G__10085;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3757__auto__ = x;
    var y__3758__auto__ = y;
    return x__3757__auto__ < y__3758__auto__ ? x__3757__auto__ : y__3758__auto__;
  };
  var min__3 = function() {
    var G__10087__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3757__auto__ = x;
        var y__3758__auto__ = y;
        return x__3757__auto__ < y__3758__auto__ ? x__3757__auto__ : y__3758__auto__;
      }(), more);
    };
    var G__10087 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10087__delegate.call(this, x, y, more);
    };
    G__10087.cljs$lang$maxFixedArity = 2;
    G__10087.cljs$lang$applyTo = function(arglist__10088) {
      var x = cljs.core.first(arglist__10088);
      arglist__10088 = cljs.core.next(arglist__10088);
      var y = cljs.core.first(arglist__10088);
      var more = cljs.core.rest(arglist__10088);
      return G__10087__delegate(x, y, more);
    };
    G__10087.cljs$core$IFn$_invoke$arity$variadic = G__10087__delegate;
    return G__10087;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      } else {
        return null;
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__10089__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__10089 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10089__delegate.call(this, x, y, more);
    };
    G__10089.cljs$lang$maxFixedArity = 2;
    G__10089.cljs$lang$applyTo = function(arglist__10090) {
      var x = cljs.core.first(arglist__10090);
      arglist__10090 = cljs.core.next(arglist__10090);
      var y = cljs.core.first(arglist__10090);
      var more = cljs.core.rest(arglist__10090);
      return G__10089__delegate(x, y, more);
    };
    G__10089.cljs$core$IFn$_invoke$arity$variadic = G__10089__delegate;
    return G__10089;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__10091__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__10091 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10091__delegate.call(this, x, y, more);
    };
    G__10091.cljs$lang$maxFixedArity = 2;
    G__10091.cljs$lang$applyTo = function(arglist__10092) {
      var x = cljs.core.first(arglist__10092);
      arglist__10092 = cljs.core.next(arglist__10092);
      var y = cljs.core.first(arglist__10092);
      var more = cljs.core.rest(arglist__10092);
      return G__10091__delegate(x, y, more);
    };
    G__10091.cljs$core$IFn$_invoke$arity$variadic = G__10091__delegate;
    return G__10091;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__10093__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__10093 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10093__delegate.call(this, x, y, more);
    };
    G__10093.cljs$lang$maxFixedArity = 2;
    G__10093.cljs$lang$applyTo = function(arglist__10094) {
      var x = cljs.core.first(arglist__10094);
      arglist__10094 = cljs.core.next(arglist__10094);
      var y = cljs.core.first(arglist__10094);
      var more = cljs.core.rest(arglist__10094);
      return G__10093__delegate(x, y, more);
    };
    G__10093.cljs$core$IFn$_invoke$arity$variadic = G__10093__delegate;
    return G__10093;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__10095__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__10095 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10095__delegate.call(this, x, y, more);
    };
    G__10095.cljs$lang$maxFixedArity = 2;
    G__10095.cljs$lang$applyTo = function(arglist__10096) {
      var x = cljs.core.first(arglist__10096);
      arglist__10096 = cljs.core.next(arglist__10096);
      var y = cljs.core.first(arglist__10096);
      var more = cljs.core.rest(arglist__10096);
      return G__10095__delegate(x, y, more);
    };
    G__10095.cljs$core$IFn$_invoke$arity$variadic = G__10095__delegate;
    return G__10095;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__10097__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__10097 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10097__delegate.call(this, x, y, more);
    };
    G__10097.cljs$lang$maxFixedArity = 2;
    G__10097.cljs$lang$applyTo = function(arglist__10098) {
      var x = cljs.core.first(arglist__10098);
      arglist__10098 = cljs.core.next(arglist__10098);
      var y = cljs.core.first(arglist__10098);
      var more = cljs.core.rest(arglist__10098);
      return G__10097__delegate(x, y, more);
    };
    G__10097.cljs$core$IFn$_invoke$arity$variadic = G__10097__delegate;
    return G__10097;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x;
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract__3 = function() {
    var G__10099__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more);
    };
    var G__10099 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10099__delegate.call(this, x, y, more);
    };
    G__10099.cljs$lang$maxFixedArity = 2;
    G__10099.cljs$lang$applyTo = function(arglist__10100) {
      var x = cljs.core.first(arglist__10100);
      arglist__10100 = cljs.core.next(arglist__10100);
      var y = cljs.core.first(arglist__10100);
      var more = cljs.core.rest(arglist__10100);
      return G__10099__delegate(x, y, more);
    };
    G__10099.cljs$core$IFn$_invoke$arity$variadic = G__10099__delegate;
    return G__10099;
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract;
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x;
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract_int__3 = function() {
    var G__10101__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more);
    };
    var G__10101 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10101__delegate.call(this, x, y, more);
    };
    G__10101.cljs$lang$maxFixedArity = 2;
    G__10101.cljs$lang$applyTo = function(arglist__10102) {
      var x = cljs.core.first(arglist__10102);
      arglist__10102 = cljs.core.next(arglist__10102);
      var y = cljs.core.first(arglist__10102);
      var more = cljs.core.rest(arglist__10102);
      return G__10101__delegate(x, y, more);
    };
    G__10101.cljs$core$IFn$_invoke$arity$variadic = G__10101__delegate;
    return G__10101;
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__10103__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__10104 = y;
            var G__10105 = cljs.core.first.call(null, more);
            var G__10106 = cljs.core.next.call(null, more);
            x = G__10104;
            y = G__10105;
            more = G__10106;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10103 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10103__delegate.call(this, x, y, more);
    };
    G__10103.cljs$lang$maxFixedArity = 2;
    G__10103.cljs$lang$applyTo = function(arglist__10107) {
      var x = cljs.core.first(arglist__10107);
      arglist__10107 = cljs.core.next(arglist__10107);
      var y = cljs.core.first(arglist__10107);
      var more = cljs.core.rest(arglist__10107);
      return G__10103__delegate(x, y, more);
    };
    G__10103.cljs$core$IFn$_invoke$arity$variadic = G__10103__delegate;
    return G__10103;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__10108 = n__$1 - 1;
      var G__10109 = cljs.core.next.call(null, xs);
      n__$1 = G__10108;
      xs = G__10109;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return x.toString();
    }
  };
  var str__2 = function() {
    var G__10110__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__10111 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__10112 = cljs.core.next.call(null, more);
          sb = G__10111;
          more = G__10112;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__10110 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__10110__delegate.call(this, x, ys);
    };
    G__10110.cljs$lang$maxFixedArity = 1;
    G__10110.cljs$lang$applyTo = function(arglist__10113) {
      var x = cljs.core.first(arglist__10113);
      var ys = cljs.core.rest(arglist__10113);
      return G__10110__delegate(x, ys);
    };
    G__10110.cljs$core$IFn$_invoke$arity$variadic = G__10110__delegate;
    return G__10110;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__10114 = cljs.core.next.call(null, xs);
            var G__10115 = cljs.core.next.call(null, ys);
            xs = G__10114;
            ys = G__10115;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__10116 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__10117 = cljs.core.next.call(null, s);
        res = G__10116;
        s = G__10117;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__10118 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__10119 = cljs.core.next.call(null, s);
      h = G__10118;
      s = G__10119;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__10120 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__10121 = cljs.core.next.call(null, s__$1);
      h = G__10120;
      s__$1 = G__10121;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__10128_10134 = cljs.core.seq.call(null, fn_map);
  var chunk__10129_10135 = null;
  var count__10130_10136 = 0;
  var i__10131_10137 = 0;
  while (true) {
    if (i__10131_10137 < count__10130_10136) {
      var vec__10132_10138 = cljs.core._nth.call(null, chunk__10129_10135, i__10131_10137);
      var key_name_10139 = cljs.core.nth.call(null, vec__10132_10138, 0, null);
      var f_10140 = cljs.core.nth.call(null, vec__10132_10138, 1, null);
      var str_name_10141 = cljs.core.name.call(null, key_name_10139);
      obj[str_name_10141] = f_10140;
      var G__10142 = seq__10128_10134;
      var G__10143 = chunk__10129_10135;
      var G__10144 = count__10130_10136;
      var G__10145 = i__10131_10137 + 1;
      seq__10128_10134 = G__10142;
      chunk__10129_10135 = G__10143;
      count__10130_10136 = G__10144;
      i__10131_10137 = G__10145;
      continue;
    } else {
      var temp__4092__auto___10146 = cljs.core.seq.call(null, seq__10128_10134);
      if (temp__4092__auto___10146) {
        var seq__10128_10147__$1 = temp__4092__auto___10146;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10128_10147__$1)) {
          var c__4191__auto___10148 = cljs.core.chunk_first.call(null, seq__10128_10147__$1);
          var G__10149 = cljs.core.chunk_rest.call(null, seq__10128_10147__$1);
          var G__10150 = c__4191__auto___10148;
          var G__10151 = cljs.core.count.call(null, c__4191__auto___10148);
          var G__10152 = 0;
          seq__10128_10134 = G__10149;
          chunk__10129_10135 = G__10150;
          count__10130_10136 = G__10151;
          i__10131_10137 = G__10152;
          continue;
        } else {
          var vec__10133_10153 = cljs.core.first.call(null, seq__10128_10147__$1);
          var key_name_10154 = cljs.core.nth.call(null, vec__10133_10153, 0, null);
          var f_10155 = cljs.core.nth.call(null, vec__10133_10153, 1, null);
          var str_name_10156 = cljs.core.name.call(null, key_name_10154);
          obj[str_name_10156] = f_10155;
          var G__10157 = cljs.core.next.call(null, seq__10128_10147__$1);
          var G__10158 = null;
          var G__10159 = 0;
          var G__10160 = 0;
          seq__10128_10134 = G__10157;
          chunk__10129_10135 = G__10158;
          count__10130_10136 = G__10159;
          i__10131_10137 = G__10160;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/List");
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__10162 = coll;
  if (G__10162) {
    var bit__4093__auto__ = G__10162.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4093__auto__ || G__10162.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__10162.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__10162);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__10162);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__10163 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__10163;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__10164 = i - 1;
        var G__10165 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__10164;
        r = G__10165;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__10166) {
    var xs = cljs.core.seq(arglist__10166);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3443__auto__ = coll == null;
    if (or__3443__auto__) {
      return or__3443__auto__;
    } else {
      var G__10170 = coll;
      if (G__10170) {
        var bit__4086__auto__ = G__10170.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4086__auto__ || G__10170.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__10172 = x;
  if (G__10172) {
    var bit__4093__auto__ = G__10172.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4093__auto__ || G__10172.cljs$core$IList$) {
      return true;
    } else {
      if (!G__10172.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__10172);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__10172);
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._hash == null) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name)) + 2654435769;
    return self__._hash;
  } else {
    return self__._hash;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__10174 = null;
  var G__10174__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__10174__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__10174 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10174__2.call(this, self__, coll);
      case 3:
        return G__10174__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10174;
}();
cljs.core.Keyword.prototype.apply = function(self__, args10173) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10173)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__10176 = x;
    if (G__10176) {
      var bit__4086__auto__ = G__10176.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4086__auto__ || G__10176.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__10177 = ls.sval();
        ls = G__10177;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__10179 = s;
    if (G__10179) {
      var bit__4086__auto__ = G__10179.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4086__auto__ || G__10179.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__10180 = cljs.core.next.call(null, s__$1);
      s__$1 = G__10180;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_10181 = 0;
  var xs_10182 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_10182) {
      ret[i_10181] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_10182));
      var G__10183 = i_10181 + 1;
      var G__10184 = cljs.core.next.call(null, xs_10182);
      i_10181 = G__10183;
      xs_10182 = G__10184;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__10185 = i + 1;
          var G__10186 = cljs.core.next.call(null, s__$1);
          i = G__10185;
          s__$1 = G__10186;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4291__auto___10187 = size;
      var i_10188 = 0;
      while (true) {
        if (i_10188 < n__4291__auto___10187) {
          a[i_10188] = init_val_or_seq;
          var G__10189 = i_10188 + 1;
          i_10188 = G__10189;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__10190 = i + 1;
          var G__10191 = cljs.core.next.call(null, s__$1);
          i = G__10190;
          s__$1 = G__10191;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4291__auto___10192 = size;
      var i_10193 = 0;
      while (true) {
        if (i_10193 < n__4291__auto___10192) {
          a[i_10193] = init_val_or_seq;
          var G__10194 = i_10193 + 1;
          i_10193 = G__10194;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__10195 = i + 1;
          var G__10196 = cljs.core.next.call(null, s__$1);
          i = G__10195;
          s__$1 = G__10196;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4291__auto___10197 = size;
      var i_10198 = 0;
      while (true) {
        if (i_10198 < n__4291__auto___10197) {
          a[i_10198] = init_val_or_seq;
          var G__10199 = i_10198 + 1;
          i_10198 = G__10199;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__10200 = i + 1;
          var G__10201 = cljs.core.next.call(null, s__$1);
          i = G__10200;
          s__$1 = G__10201;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4291__auto___10202 = size;
      var i_10203 = 0;
      while (true) {
        if (i_10203 < n__4291__auto___10202) {
          a[i_10203] = init_val_or_seq;
          var G__10204 = i_10203 + 1;
          i_10203 = G__10204;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__10205 = cljs.core.next.call(null, s__$1);
        var G__10206 = i - 1;
        var G__10207 = sum + 1;
        s__$1 = G__10205;
        i = G__10206;
        sum = G__10207;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__10208__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__10208 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10208__delegate.call(this, x, y, zs);
    };
    G__10208.cljs$lang$maxFixedArity = 2;
    G__10208.cljs$lang$applyTo = function(arglist__10209) {
      var x = cljs.core.first(arglist__10209);
      arglist__10209 = cljs.core.next(arglist__10209);
      var y = cljs.core.first(arglist__10209);
      var zs = cljs.core.rest(arglist__10209);
      return G__10208__delegate(x, y, zs);
    };
    G__10208.cljs$core$IFn$_invoke$arity$variadic = G__10208__delegate;
    return G__10208;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__10210__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__10210 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__10210__delegate.call(this, a, b, c, d, more);
    };
    G__10210.cljs$lang$maxFixedArity = 4;
    G__10210.cljs$lang$applyTo = function(arglist__10211) {
      var a = cljs.core.first(arglist__10211);
      arglist__10211 = cljs.core.next(arglist__10211);
      var b = cljs.core.first(arglist__10211);
      arglist__10211 = cljs.core.next(arglist__10211);
      var c = cljs.core.first(arglist__10211);
      arglist__10211 = cljs.core.next(arglist__10211);
      var d = cljs.core.first(arglist__10211);
      var more = cljs.core.rest(arglist__10211);
      return G__10210__delegate(a, b, c, d, more);
    };
    G__10210.cljs$core$IFn$_invoke$arity$variadic = G__10210__delegate;
    return G__10210;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__10212__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__10213 = ntcoll;
          var G__10214 = cljs.core.first.call(null, vals);
          var G__10215 = cljs.core.next.call(null, vals);
          tcoll = G__10213;
          val = G__10214;
          vals = G__10215;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__10212 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10212__delegate.call(this, tcoll, val, vals);
    };
    G__10212.cljs$lang$maxFixedArity = 2;
    G__10212.cljs$lang$applyTo = function(arglist__10216) {
      var tcoll = cljs.core.first(arglist__10216);
      arglist__10216 = cljs.core.next(arglist__10216);
      var val = cljs.core.first(arglist__10216);
      var vals = cljs.core.rest(arglist__10216);
      return G__10212__delegate(tcoll, val, vals);
    };
    G__10212.cljs$core$IFn$_invoke$arity$variadic = G__10212__delegate;
    return G__10212;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__10217__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__10218 = ntcoll;
          var G__10219 = cljs.core.first.call(null, kvs);
          var G__10220 = cljs.core.second.call(null, kvs);
          var G__10221 = cljs.core.nnext.call(null, kvs);
          tcoll = G__10218;
          key = G__10219;
          val = G__10220;
          kvs = G__10221;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__10217 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10217__delegate.call(this, tcoll, key, val, kvs);
    };
    G__10217.cljs$lang$maxFixedArity = 3;
    G__10217.cljs$lang$applyTo = function(arglist__10222) {
      var tcoll = cljs.core.first(arglist__10222);
      arglist__10222 = cljs.core.next(arglist__10222);
      var key = cljs.core.first(arglist__10222);
      arglist__10222 = cljs.core.next(arglist__10222);
      var val = cljs.core.first(arglist__10222);
      var kvs = cljs.core.rest(arglist__10222);
      return G__10217__delegate(tcoll, key, val, kvs);
    };
    G__10217.cljs$core$IFn$_invoke$arity$variadic = G__10217__delegate;
    return G__10217;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__10223__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__10224 = ntcoll;
          var G__10225 = cljs.core.first.call(null, ks);
          var G__10226 = cljs.core.next.call(null, ks);
          tcoll = G__10224;
          key = G__10225;
          ks = G__10226;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__10223 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10223__delegate.call(this, tcoll, key, ks);
    };
    G__10223.cljs$lang$maxFixedArity = 2;
    G__10223.cljs$lang$applyTo = function(arglist__10227) {
      var tcoll = cljs.core.first(arglist__10227);
      arglist__10227 = cljs.core.next(arglist__10227);
      var key = cljs.core.first(arglist__10227);
      var ks = cljs.core.rest(arglist__10227);
      return G__10223__delegate(tcoll, key, ks);
    };
    G__10223.cljs$core$IFn$_invoke$arity$variadic = G__10223__delegate;
    return G__10223;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__10228__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__10229 = ntcoll;
          var G__10230 = cljs.core.first.call(null, vals);
          var G__10231 = cljs.core.next.call(null, vals);
          tcoll = G__10229;
          val = G__10230;
          vals = G__10231;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__10228 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10228__delegate.call(this, tcoll, val, vals);
    };
    G__10228.cljs$lang$maxFixedArity = 2;
    G__10228.cljs$lang$applyTo = function(arglist__10232) {
      var tcoll = cljs.core.first(arglist__10232);
      arglist__10232 = cljs.core.next(arglist__10232);
      var val = cljs.core.first(arglist__10232);
      var vals = cljs.core.rest(arglist__10232);
      return G__10228__delegate(tcoll, val, vals);
    };
    G__10228.cljs$core$IFn$_invoke$arity$variadic = G__10228__delegate;
    return G__10228;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a);
      } else {
        return f.call(null, a);
      }
    } else {
      var b = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a, b);
        } else {
          return f.call(null, a, b);
        }
      } else {
        var c = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a, b, c);
          } else {
            return f.call(null, a, b, c);
          }
        } else {
          var d = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a, b, c, d);
            } else {
              return f.call(null, a, b, c, d);
            }
          } else {
            var e = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e);
              } else {
                return f.call(null, a, b, c, d, e);
              }
            } else {
              var f__$1 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f__$1.cljs$core$IFn$_invoke$arity$6) {
                  return f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1);
                } else {
                  return f__$1.call(null, a, b, c, d, e, f__$1);
                }
              } else {
                var g = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f__$1.cljs$core$IFn$_invoke$arity$7) {
                    return f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g);
                  } else {
                    return f__$1.call(null, a, b, c, d, e, f__$1, g);
                  }
                } else {
                  var h = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f__$1.cljs$core$IFn$_invoke$arity$8) {
                      return f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h);
                    } else {
                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h);
                    }
                  } else {
                    var i = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f__$1.cljs$core$IFn$_invoke$arity$9) {
                        return f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i);
                      } else {
                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i);
                      }
                    } else {
                      var j = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f__$1.cljs$core$IFn$_invoke$arity$10) {
                          return f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j);
                        } else {
                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j);
                        }
                      } else {
                        var k = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f__$1.cljs$core$IFn$_invoke$arity$11) {
                            return f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k);
                          } else {
                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k);
                          }
                        } else {
                          var l = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f__$1.cljs$core$IFn$_invoke$arity$12) {
                              return f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l);
                            } else {
                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l);
                            }
                          } else {
                            var m = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f__$1.cljs$core$IFn$_invoke$arity$13) {
                                return f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
                              } else {
                                return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
                              }
                            } else {
                              var n = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f__$1.cljs$core$IFn$_invoke$arity$14) {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
                                } else {
                                  return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
                                }
                              } else {
                                var o = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f__$1.cljs$core$IFn$_invoke$arity$15) {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
                                  } else {
                                    return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
                                  }
                                } else {
                                  var p = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f__$1.cljs$core$IFn$_invoke$arity$16) {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
                                    } else {
                                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
                                    }
                                  } else {
                                    var q = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f__$1.cljs$core$IFn$_invoke$arity$17) {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
                                      } else {
                                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
                                      }
                                    } else {
                                      var r = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f__$1.cljs$core$IFn$_invoke$arity$18) {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
                                        } else {
                                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
                                        }
                                      } else {
                                        var s = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f__$1.cljs$core$IFn$_invoke$arity$19) {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
                                          } else {
                                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
                                          }
                                        } else {
                                          var t = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f__$1.cljs$core$IFn$_invoke$arity$20) {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
                                            } else {
                                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__10233__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__10233 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__10233__delegate.call(this, f, a, b, c, d, args);
    };
    G__10233.cljs$lang$maxFixedArity = 5;
    G__10233.cljs$lang$applyTo = function(arglist__10234) {
      var f = cljs.core.first(arglist__10234);
      arglist__10234 = cljs.core.next(arglist__10234);
      var a = cljs.core.first(arglist__10234);
      arglist__10234 = cljs.core.next(arglist__10234);
      var b = cljs.core.first(arglist__10234);
      arglist__10234 = cljs.core.next(arglist__10234);
      var c = cljs.core.first(arglist__10234);
      arglist__10234 = cljs.core.next(arglist__10234);
      var d = cljs.core.first(arglist__10234);
      var args = cljs.core.rest(arglist__10234);
      return G__10233__delegate(f, a, b, c, d, args);
    };
    G__10233.cljs$core$IFn$_invoke$arity$variadic = G__10233__delegate;
    return G__10233;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__10235__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__10235 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__10235__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__10235.cljs$lang$maxFixedArity = 6;
    G__10235.cljs$lang$applyTo = function(arglist__10236) {
      var obj = cljs.core.first(arglist__10236);
      arglist__10236 = cljs.core.next(arglist__10236);
      var f = cljs.core.first(arglist__10236);
      arglist__10236 = cljs.core.next(arglist__10236);
      var a = cljs.core.first(arglist__10236);
      arglist__10236 = cljs.core.next(arglist__10236);
      var b = cljs.core.first(arglist__10236);
      arglist__10236 = cljs.core.next(arglist__10236);
      var c = cljs.core.first(arglist__10236);
      arglist__10236 = cljs.core.next(arglist__10236);
      var d = cljs.core.first(arglist__10236);
      var args = cljs.core.rest(arglist__10236);
      return G__10235__delegate(obj, f, a, b, c, d, args);
    };
    G__10235.cljs$core$IFn$_invoke$arity$variadic = G__10235__delegate;
    return G__10235;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__10237__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__10237 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10237__delegate.call(this, x, y, more);
    };
    G__10237.cljs$lang$maxFixedArity = 2;
    G__10237.cljs$lang$applyTo = function(arglist__10238) {
      var x = cljs.core.first(arglist__10238);
      arglist__10238 = cljs.core.next(arglist__10238);
      var y = cljs.core.first(arglist__10238);
      var more = cljs.core.rest(arglist__10238);
      return G__10237__delegate(x, y, more);
    };
    G__10237.cljs$core$IFn$_invoke$arity$variadic = G__10237__delegate;
    return G__10237;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__10239 = pred;
        var G__10240 = cljs.core.next.call(null, coll);
        pred = G__10239;
        coll = G__10240;
        continue;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3443__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        var G__10241 = pred;
        var G__10242 = cljs.core.next.call(null, coll);
        pred = G__10241;
        coll = G__10242;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__10243 = null;
    var G__10243__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__10243__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__10243__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__10243__3 = function() {
      var G__10244__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__10244 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__10244__delegate.call(this, x, y, zs);
      };
      G__10244.cljs$lang$maxFixedArity = 2;
      G__10244.cljs$lang$applyTo = function(arglist__10245) {
        var x = cljs.core.first(arglist__10245);
        arglist__10245 = cljs.core.next(arglist__10245);
        var y = cljs.core.first(arglist__10245);
        var zs = cljs.core.rest(arglist__10245);
        return G__10244__delegate(x, y, zs);
      };
      G__10244.cljs$core$IFn$_invoke$arity$variadic = G__10244__delegate;
      return G__10244;
    }();
    G__10243 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__10243__0.call(this);
        case 1:
          return G__10243__1.call(this, x);
        case 2:
          return G__10243__2.call(this, x, y);
        default:
          return G__10243__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10243.cljs$lang$maxFixedArity = 2;
    G__10243.cljs$lang$applyTo = G__10243__3.cljs$lang$applyTo;
    return G__10243;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__10246__delegate = function(args) {
      return x;
    };
    var G__10246 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__10246__delegate.call(this, args);
    };
    G__10246.cljs$lang$maxFixedArity = 0;
    G__10246.cljs$lang$applyTo = function(arglist__10247) {
      var args = cljs.core.seq(arglist__10247);
      return G__10246__delegate(args);
    };
    G__10246.cljs$core$IFn$_invoke$arity$variadic = G__10246__delegate;
    return G__10246;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__10248 = null;
      var G__10248__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__10248__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__10248__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__10248__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__10248__4 = function() {
        var G__10249__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__10249 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10249__delegate.call(this, x, y, z, args);
        };
        G__10249.cljs$lang$maxFixedArity = 3;
        G__10249.cljs$lang$applyTo = function(arglist__10250) {
          var x = cljs.core.first(arglist__10250);
          arglist__10250 = cljs.core.next(arglist__10250);
          var y = cljs.core.first(arglist__10250);
          arglist__10250 = cljs.core.next(arglist__10250);
          var z = cljs.core.first(arglist__10250);
          var args = cljs.core.rest(arglist__10250);
          return G__10249__delegate(x, y, z, args);
        };
        G__10249.cljs$core$IFn$_invoke$arity$variadic = G__10249__delegate;
        return G__10249;
      }();
      G__10248 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10248__0.call(this);
          case 1:
            return G__10248__1.call(this, x);
          case 2:
            return G__10248__2.call(this, x, y);
          case 3:
            return G__10248__3.call(this, x, y, z);
          default:
            return G__10248__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10248.cljs$lang$maxFixedArity = 3;
      G__10248.cljs$lang$applyTo = G__10248__4.cljs$lang$applyTo;
      return G__10248;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__10251 = null;
      var G__10251__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__10251__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__10251__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__10251__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__10251__4 = function() {
        var G__10252__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__10252 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10252__delegate.call(this, x, y, z, args);
        };
        G__10252.cljs$lang$maxFixedArity = 3;
        G__10252.cljs$lang$applyTo = function(arglist__10253) {
          var x = cljs.core.first(arglist__10253);
          arglist__10253 = cljs.core.next(arglist__10253);
          var y = cljs.core.first(arglist__10253);
          arglist__10253 = cljs.core.next(arglist__10253);
          var z = cljs.core.first(arglist__10253);
          var args = cljs.core.rest(arglist__10253);
          return G__10252__delegate(x, y, z, args);
        };
        G__10252.cljs$core$IFn$_invoke$arity$variadic = G__10252__delegate;
        return G__10252;
      }();
      G__10251 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10251__0.call(this);
          case 1:
            return G__10251__1.call(this, x);
          case 2:
            return G__10251__2.call(this, x, y);
          case 3:
            return G__10251__3.call(this, x, y, z);
          default:
            return G__10251__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10251.cljs$lang$maxFixedArity = 3;
      G__10251.cljs$lang$applyTo = G__10251__4.cljs$lang$applyTo;
      return G__10251;
    }();
  };
  var comp__4 = function() {
    var G__10254__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__10255__delegate = function(args) {
          var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
          var fs__$2 = cljs.core.next.call(null, fs__$1);
          while (true) {
            if (fs__$2) {
              var G__10256 = cljs.core.first.call(null, fs__$2).call(null, ret);
              var G__10257 = cljs.core.next.call(null, fs__$2);
              ret = G__10256;
              fs__$2 = G__10257;
              continue;
            } else {
              return ret;
            }
            break;
          }
        };
        var G__10255 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__10255__delegate.call(this, args);
        };
        G__10255.cljs$lang$maxFixedArity = 0;
        G__10255.cljs$lang$applyTo = function(arglist__10258) {
          var args = cljs.core.seq(arglist__10258);
          return G__10255__delegate(args);
        };
        G__10255.cljs$core$IFn$_invoke$arity$variadic = G__10255__delegate;
        return G__10255;
      }();
    };
    var G__10254 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10254__delegate.call(this, f1, f2, f3, fs);
    };
    G__10254.cljs$lang$maxFixedArity = 3;
    G__10254.cljs$lang$applyTo = function(arglist__10259) {
      var f1 = cljs.core.first(arglist__10259);
      arglist__10259 = cljs.core.next(arglist__10259);
      var f2 = cljs.core.first(arglist__10259);
      arglist__10259 = cljs.core.next(arglist__10259);
      var f3 = cljs.core.first(arglist__10259);
      var fs = cljs.core.rest(arglist__10259);
      return G__10254__delegate(f1, f2, f3, fs);
    };
    G__10254.cljs$core$IFn$_invoke$arity$variadic = G__10254__delegate;
    return G__10254;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__10260__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__10260 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__10260__delegate.call(this, args);
      };
      G__10260.cljs$lang$maxFixedArity = 0;
      G__10260.cljs$lang$applyTo = function(arglist__10261) {
        var args = cljs.core.seq(arglist__10261);
        return G__10260__delegate(args);
      };
      G__10260.cljs$core$IFn$_invoke$arity$variadic = G__10260__delegate;
      return G__10260;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__10262__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__10262 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__10262__delegate.call(this, args);
      };
      G__10262.cljs$lang$maxFixedArity = 0;
      G__10262.cljs$lang$applyTo = function(arglist__10263) {
        var args = cljs.core.seq(arglist__10263);
        return G__10262__delegate(args);
      };
      G__10262.cljs$core$IFn$_invoke$arity$variadic = G__10262__delegate;
      return G__10262;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__10264__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__10264 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__10264__delegate.call(this, args);
      };
      G__10264.cljs$lang$maxFixedArity = 0;
      G__10264.cljs$lang$applyTo = function(arglist__10265) {
        var args = cljs.core.seq(arglist__10265);
        return G__10264__delegate(args);
      };
      G__10264.cljs$core$IFn$_invoke$arity$variadic = G__10264__delegate;
      return G__10264;
    }();
  };
  var partial__5 = function() {
    var G__10266__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__10267__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__10267 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__10267__delegate.call(this, args);
        };
        G__10267.cljs$lang$maxFixedArity = 0;
        G__10267.cljs$lang$applyTo = function(arglist__10268) {
          var args = cljs.core.seq(arglist__10268);
          return G__10267__delegate(args);
        };
        G__10267.cljs$core$IFn$_invoke$arity$variadic = G__10267__delegate;
        return G__10267;
      }();
    };
    var G__10266 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__10266__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__10266.cljs$lang$maxFixedArity = 4;
    G__10266.cljs$lang$applyTo = function(arglist__10269) {
      var f = cljs.core.first(arglist__10269);
      arglist__10269 = cljs.core.next(arglist__10269);
      var arg1 = cljs.core.first(arglist__10269);
      arglist__10269 = cljs.core.next(arglist__10269);
      var arg2 = cljs.core.first(arglist__10269);
      arglist__10269 = cljs.core.next(arglist__10269);
      var arg3 = cljs.core.first(arglist__10269);
      var more = cljs.core.rest(arglist__10269);
      return G__10266__delegate(f, arg1, arg2, arg3, more);
    };
    G__10266.cljs$core$IFn$_invoke$arity$variadic = G__10266__delegate;
    return G__10266;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__10270 = null;
      var G__10270__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__10270__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__10270__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__10270__4 = function() {
        var G__10271__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__10271 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10271__delegate.call(this, a, b, c, ds);
        };
        G__10271.cljs$lang$maxFixedArity = 3;
        G__10271.cljs$lang$applyTo = function(arglist__10272) {
          var a = cljs.core.first(arglist__10272);
          arglist__10272 = cljs.core.next(arglist__10272);
          var b = cljs.core.first(arglist__10272);
          arglist__10272 = cljs.core.next(arglist__10272);
          var c = cljs.core.first(arglist__10272);
          var ds = cljs.core.rest(arglist__10272);
          return G__10271__delegate(a, b, c, ds);
        };
        G__10271.cljs$core$IFn$_invoke$arity$variadic = G__10271__delegate;
        return G__10271;
      }();
      G__10270 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__10270__1.call(this, a);
          case 2:
            return G__10270__2.call(this, a, b);
          case 3:
            return G__10270__3.call(this, a, b, c);
          default:
            return G__10270__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10270.cljs$lang$maxFixedArity = 3;
      G__10270.cljs$lang$applyTo = G__10270__4.cljs$lang$applyTo;
      return G__10270;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__10273 = null;
      var G__10273__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__10273__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__10273__4 = function() {
        var G__10274__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__10274 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10274__delegate.call(this, a, b, c, ds);
        };
        G__10274.cljs$lang$maxFixedArity = 3;
        G__10274.cljs$lang$applyTo = function(arglist__10275) {
          var a = cljs.core.first(arglist__10275);
          arglist__10275 = cljs.core.next(arglist__10275);
          var b = cljs.core.first(arglist__10275);
          arglist__10275 = cljs.core.next(arglist__10275);
          var c = cljs.core.first(arglist__10275);
          var ds = cljs.core.rest(arglist__10275);
          return G__10274__delegate(a, b, c, ds);
        };
        G__10274.cljs$core$IFn$_invoke$arity$variadic = G__10274__delegate;
        return G__10274;
      }();
      G__10273 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__10273__2.call(this, a, b);
          case 3:
            return G__10273__3.call(this, a, b, c);
          default:
            return G__10273__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10273.cljs$lang$maxFixedArity = 3;
      G__10273.cljs$lang$applyTo = G__10273__4.cljs$lang$applyTo;
      return G__10273;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__10276 = null;
      var G__10276__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__10276__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__10276__4 = function() {
        var G__10277__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__10277 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10277__delegate.call(this, a, b, c, ds);
        };
        G__10277.cljs$lang$maxFixedArity = 3;
        G__10277.cljs$lang$applyTo = function(arglist__10278) {
          var a = cljs.core.first(arglist__10278);
          arglist__10278 = cljs.core.next(arglist__10278);
          var b = cljs.core.first(arglist__10278);
          arglist__10278 = cljs.core.next(arglist__10278);
          var c = cljs.core.first(arglist__10278);
          var ds = cljs.core.rest(arglist__10278);
          return G__10277__delegate(a, b, c, ds);
        };
        G__10277.cljs$core$IFn$_invoke$arity$variadic = G__10277__delegate;
        return G__10277;
      }();
      G__10276 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__10276__2.call(this, a, b);
          case 3:
            return G__10276__3.call(this, a, b, c);
          default:
            return G__10276__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10276.cljs$lang$maxFixedArity = 3;
      G__10276.cljs$lang$applyTo = G__10276__4.cljs$lang$applyTo;
      return G__10276;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4291__auto___10279 = size;
          var i_10280 = 0;
          while (true) {
            if (i_10280 < n__4291__auto___10279) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_10280, cljs.core._nth.call(null, c, i_10280)));
              var G__10281 = i_10280 + 1;
              i_10280 = G__10281;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4291__auto___10282 = size;
        var i_10283 = 0;
        while (true) {
          if (i_10283 < n__4291__auto___10282) {
            var x_10284 = f.call(null, cljs.core._nth.call(null, c, i_10283));
            if (x_10284 == null) {
            } else {
              cljs.core.chunk_append.call(null, b, x_10284);
            }
            var G__10285 = i_10283 + 1;
            i_10283 = G__10285;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
      } else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if (x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s));
        } else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4291__auto___10286 = size;
          var i_10287 = 0;
          while (true) {
            if (i_10287 < n__4291__auto___10286) {
              var x_10288 = f.call(null, idx + i_10287, cljs.core._nth.call(null, c, i_10287));
              if (x_10288 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_10288);
              }
              var G__10289 = i_10287 + 1;
              i_10287 = G__10289;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if (x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi.call(null, 0, coll);
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3431__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3431__auto__)) {
            return p.call(null, y);
          } else {
            return and__3431__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3431__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3431__auto__)) {
            var and__3431__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3431__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3431__auto____$1;
            }
          } else {
            return and__3431__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__10296__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__10296 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10296__delegate.call(this, x, y, z, args);
        };
        G__10296.cljs$lang$maxFixedArity = 3;
        G__10296.cljs$lang$applyTo = function(arglist__10297) {
          var x = cljs.core.first(arglist__10297);
          arglist__10297 = cljs.core.next(arglist__10297);
          var y = cljs.core.first(arglist__10297);
          arglist__10297 = cljs.core.next(arglist__10297);
          var z = cljs.core.first(arglist__10297);
          var args = cljs.core.rest(arglist__10297);
          return G__10296__delegate(x, y, z, args);
        };
        G__10296.cljs$core$IFn$_invoke$arity$variadic = G__10296__delegate;
        return G__10296;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3431__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3431__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3431__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3431__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3431__auto__)) {
            var and__3431__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3431__auto____$1)) {
              var and__3431__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3431__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3431__auto____$2;
              }
            } else {
              return and__3431__auto____$1;
            }
          } else {
            return and__3431__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3431__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3431__auto__)) {
            var and__3431__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3431__auto____$1)) {
              var and__3431__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3431__auto____$2)) {
                var and__3431__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3431__auto____$3)) {
                  var and__3431__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3431__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3431__auto____$4;
                  }
                } else {
                  return and__3431__auto____$3;
                }
              } else {
                return and__3431__auto____$2;
              }
            } else {
              return and__3431__auto____$1;
            }
          } else {
            return and__3431__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__10298__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__10290_SHARP_) {
            var and__3431__auto__ = p1.call(null, p1__10290_SHARP_);
            if (cljs.core.truth_(and__3431__auto__)) {
              return p2.call(null, p1__10290_SHARP_);
            } else {
              return and__3431__auto__;
            }
          }, args));
        };
        var G__10298 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10298__delegate.call(this, x, y, z, args);
        };
        G__10298.cljs$lang$maxFixedArity = 3;
        G__10298.cljs$lang$applyTo = function(arglist__10299) {
          var x = cljs.core.first(arglist__10299);
          arglist__10299 = cljs.core.next(arglist__10299);
          var y = cljs.core.first(arglist__10299);
          arglist__10299 = cljs.core.next(arglist__10299);
          var z = cljs.core.first(arglist__10299);
          var args = cljs.core.rest(arglist__10299);
          return G__10298__delegate(x, y, z, args);
        };
        G__10298.cljs$core$IFn$_invoke$arity$variadic = G__10298__delegate;
        return G__10298;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3431__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3431__auto__)) {
            var and__3431__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3431__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3431__auto____$1;
            }
          } else {
            return and__3431__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3431__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3431__auto__)) {
            var and__3431__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3431__auto____$1)) {
              var and__3431__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3431__auto____$2)) {
                var and__3431__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3431__auto____$3)) {
                  var and__3431__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3431__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3431__auto____$4;
                  }
                } else {
                  return and__3431__auto____$3;
                }
              } else {
                return and__3431__auto____$2;
              }
            } else {
              return and__3431__auto____$1;
            }
          } else {
            return and__3431__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3431__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3431__auto__)) {
            var and__3431__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3431__auto____$1)) {
              var and__3431__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3431__auto____$2)) {
                var and__3431__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3431__auto____$3)) {
                  var and__3431__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3431__auto____$4)) {
                    var and__3431__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3431__auto____$5)) {
                      var and__3431__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3431__auto____$6)) {
                        var and__3431__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3431__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3431__auto____$7;
                        }
                      } else {
                        return and__3431__auto____$6;
                      }
                    } else {
                      return and__3431__auto____$5;
                    }
                  } else {
                    return and__3431__auto____$4;
                  }
                } else {
                  return and__3431__auto____$3;
                }
              } else {
                return and__3431__auto____$2;
              }
            } else {
              return and__3431__auto____$1;
            }
          } else {
            return and__3431__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__10300__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__10291_SHARP_) {
            var and__3431__auto__ = p1.call(null, p1__10291_SHARP_);
            if (cljs.core.truth_(and__3431__auto__)) {
              var and__3431__auto____$1 = p2.call(null, p1__10291_SHARP_);
              if (cljs.core.truth_(and__3431__auto____$1)) {
                return p3.call(null, p1__10291_SHARP_);
              } else {
                return and__3431__auto____$1;
              }
            } else {
              return and__3431__auto__;
            }
          }, args));
        };
        var G__10300 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10300__delegate.call(this, x, y, z, args);
        };
        G__10300.cljs$lang$maxFixedArity = 3;
        G__10300.cljs$lang$applyTo = function(arglist__10301) {
          var x = cljs.core.first(arglist__10301);
          arglist__10301 = cljs.core.next(arglist__10301);
          var y = cljs.core.first(arglist__10301);
          arglist__10301 = cljs.core.next(arglist__10301);
          var z = cljs.core.first(arglist__10301);
          var args = cljs.core.rest(arglist__10301);
          return G__10300__delegate(x, y, z, args);
        };
        G__10300.cljs$core$IFn$_invoke$arity$variadic = G__10300__delegate;
        return G__10300;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__10302__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true;
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__10292_SHARP_) {
            return p1__10292_SHARP_.call(null, x);
          }, ps__$1);
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__10293_SHARP_) {
            var and__3431__auto__ = p1__10293_SHARP_.call(null, x);
            if (cljs.core.truth_(and__3431__auto__)) {
              return p1__10293_SHARP_.call(null, y);
            } else {
              return and__3431__auto__;
            }
          }, ps__$1);
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__10294_SHARP_) {
            var and__3431__auto__ = p1__10294_SHARP_.call(null, x);
            if (cljs.core.truth_(and__3431__auto__)) {
              var and__3431__auto____$1 = p1__10294_SHARP_.call(null, y);
              if (cljs.core.truth_(and__3431__auto____$1)) {
                return p1__10294_SHARP_.call(null, z);
              } else {
                return and__3431__auto____$1;
              }
            } else {
              return and__3431__auto__;
            }
          }, ps__$1);
        };
        var epn__4 = function() {
          var G__10303__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__10295_SHARP_) {
              return cljs.core.every_QMARK_.call(null, p1__10295_SHARP_, args);
            }, ps__$1));
          };
          var G__10303 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__10303__delegate.call(this, x, y, z, args);
          };
          G__10303.cljs$lang$maxFixedArity = 3;
          G__10303.cljs$lang$applyTo = function(arglist__10304) {
            var x = cljs.core.first(arglist__10304);
            arglist__10304 = cljs.core.next(arglist__10304);
            var y = cljs.core.first(arglist__10304);
            arglist__10304 = cljs.core.next(arglist__10304);
            var z = cljs.core.first(arglist__10304);
            var args = cljs.core.rest(arglist__10304);
            return G__10303__delegate(x, y, z, args);
          };
          G__10303.cljs$core$IFn$_invoke$arity$variadic = G__10303__delegate;
          return G__10303;
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
        epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
        epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
        epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
        epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
        return epn;
      }();
    };
    var G__10302 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10302__delegate.call(this, p1, p2, p3, ps);
    };
    G__10302.cljs$lang$maxFixedArity = 3;
    G__10302.cljs$lang$applyTo = function(arglist__10305) {
      var p1 = cljs.core.first(arglist__10305);
      arglist__10305 = cljs.core.next(arglist__10305);
      var p2 = cljs.core.first(arglist__10305);
      arglist__10305 = cljs.core.next(arglist__10305);
      var p3 = cljs.core.first(arglist__10305);
      var ps = cljs.core.rest(arglist__10305);
      return G__10302__delegate(p1, p2, p3, ps);
    };
    G__10302.cljs$core$IFn$_invoke$arity$variadic = G__10302__delegate;
    return G__10302;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3443__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3443__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3443__auto____$1)) {
            return or__3443__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__10312__delegate = function(x, y, z, args) {
          var or__3443__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__10312 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10312__delegate.call(this, x, y, z, args);
        };
        G__10312.cljs$lang$maxFixedArity = 3;
        G__10312.cljs$lang$applyTo = function(arglist__10313) {
          var x = cljs.core.first(arglist__10313);
          arglist__10313 = cljs.core.next(arglist__10313);
          var y = cljs.core.first(arglist__10313);
          arglist__10313 = cljs.core.next(arglist__10313);
          var z = cljs.core.first(arglist__10313);
          var args = cljs.core.rest(arglist__10313);
          return G__10312__delegate(x, y, z, args);
        };
        G__10312.cljs$core$IFn$_invoke$arity$variadic = G__10312__delegate;
        return G__10312;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3443__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3443__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3443__auto____$1)) {
            return or__3443__auto____$1;
          } else {
            var or__3443__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3443__auto____$2)) {
              return or__3443__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3443__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3443__auto____$1)) {
            return or__3443__auto____$1;
          } else {
            var or__3443__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3443__auto____$2)) {
              return or__3443__auto____$2;
            } else {
              var or__3443__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3443__auto____$3)) {
                return or__3443__auto____$3;
              } else {
                var or__3443__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3443__auto____$4)) {
                  return or__3443__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__10314__delegate = function(x, y, z, args) {
          var or__3443__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return cljs.core.some.call(null, function(p1__10306_SHARP_) {
              var or__3443__auto____$1 = p1.call(null, p1__10306_SHARP_);
              if (cljs.core.truth_(or__3443__auto____$1)) {
                return or__3443__auto____$1;
              } else {
                return p2.call(null, p1__10306_SHARP_);
              }
            }, args);
          }
        };
        var G__10314 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10314__delegate.call(this, x, y, z, args);
        };
        G__10314.cljs$lang$maxFixedArity = 3;
        G__10314.cljs$lang$applyTo = function(arglist__10315) {
          var x = cljs.core.first(arglist__10315);
          arglist__10315 = cljs.core.next(arglist__10315);
          var y = cljs.core.first(arglist__10315);
          arglist__10315 = cljs.core.next(arglist__10315);
          var z = cljs.core.first(arglist__10315);
          var args = cljs.core.rest(arglist__10315);
          return G__10314__delegate(x, y, z, args);
        };
        G__10314.cljs$core$IFn$_invoke$arity$variadic = G__10314__delegate;
        return G__10314;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3443__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3443__auto____$1)) {
            return or__3443__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3443__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3443__auto____$1)) {
            return or__3443__auto____$1;
          } else {
            var or__3443__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3443__auto____$2)) {
              return or__3443__auto____$2;
            } else {
              var or__3443__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3443__auto____$3)) {
                return or__3443__auto____$3;
              } else {
                var or__3443__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3443__auto____$4)) {
                  return or__3443__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3443__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3443__auto____$1)) {
            return or__3443__auto____$1;
          } else {
            var or__3443__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3443__auto____$2)) {
              return or__3443__auto____$2;
            } else {
              var or__3443__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3443__auto____$3)) {
                return or__3443__auto____$3;
              } else {
                var or__3443__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3443__auto____$4)) {
                  return or__3443__auto____$4;
                } else {
                  var or__3443__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3443__auto____$5)) {
                    return or__3443__auto____$5;
                  } else {
                    var or__3443__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3443__auto____$6)) {
                      return or__3443__auto____$6;
                    } else {
                      var or__3443__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3443__auto____$7)) {
                        return or__3443__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__10316__delegate = function(x, y, z, args) {
          var or__3443__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return cljs.core.some.call(null, function(p1__10307_SHARP_) {
              var or__3443__auto____$1 = p1.call(null, p1__10307_SHARP_);
              if (cljs.core.truth_(or__3443__auto____$1)) {
                return or__3443__auto____$1;
              } else {
                var or__3443__auto____$2 = p2.call(null, p1__10307_SHARP_);
                if (cljs.core.truth_(or__3443__auto____$2)) {
                  return or__3443__auto____$2;
                } else {
                  return p3.call(null, p1__10307_SHARP_);
                }
              }
            }, args);
          }
        };
        var G__10316 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10316__delegate.call(this, x, y, z, args);
        };
        G__10316.cljs$lang$maxFixedArity = 3;
        G__10316.cljs$lang$applyTo = function(arglist__10317) {
          var x = cljs.core.first(arglist__10317);
          arglist__10317 = cljs.core.next(arglist__10317);
          var y = cljs.core.first(arglist__10317);
          arglist__10317 = cljs.core.next(arglist__10317);
          var z = cljs.core.first(arglist__10317);
          var args = cljs.core.rest(arglist__10317);
          return G__10316__delegate(x, y, z, args);
        };
        G__10316.cljs$core$IFn$_invoke$arity$variadic = G__10316__delegate;
        return G__10316;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__10318__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null;
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__10308_SHARP_) {
            return p1__10308_SHARP_.call(null, x);
          }, ps__$1);
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__10309_SHARP_) {
            var or__3443__auto__ = p1__10309_SHARP_.call(null, x);
            if (cljs.core.truth_(or__3443__auto__)) {
              return or__3443__auto__;
            } else {
              return p1__10309_SHARP_.call(null, y);
            }
          }, ps__$1);
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__10310_SHARP_) {
            var or__3443__auto__ = p1__10310_SHARP_.call(null, x);
            if (cljs.core.truth_(or__3443__auto__)) {
              return or__3443__auto__;
            } else {
              var or__3443__auto____$1 = p1__10310_SHARP_.call(null, y);
              if (cljs.core.truth_(or__3443__auto____$1)) {
                return or__3443__auto____$1;
              } else {
                return p1__10310_SHARP_.call(null, z);
              }
            }
          }, ps__$1);
        };
        var spn__4 = function() {
          var G__10319__delegate = function(x, y, z, args) {
            var or__3443__auto__ = spn.call(null, x, y, z);
            if (cljs.core.truth_(or__3443__auto__)) {
              return or__3443__auto__;
            } else {
              return cljs.core.some.call(null, function(p1__10311_SHARP_) {
                return cljs.core.some.call(null, p1__10311_SHARP_, args);
              }, ps__$1);
            }
          };
          var G__10319 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__10319__delegate.call(this, x, y, z, args);
          };
          G__10319.cljs$lang$maxFixedArity = 3;
          G__10319.cljs$lang$applyTo = function(arglist__10320) {
            var x = cljs.core.first(arglist__10320);
            arglist__10320 = cljs.core.next(arglist__10320);
            var y = cljs.core.first(arglist__10320);
            arglist__10320 = cljs.core.next(arglist__10320);
            var z = cljs.core.first(arglist__10320);
            var args = cljs.core.rest(arglist__10320);
            return G__10319__delegate(x, y, z, args);
          };
          G__10319.cljs$core$IFn$_invoke$arity$variadic = G__10319__delegate;
          return G__10319;
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
        spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
        spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
        spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
        spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
        return spn;
      }();
    };
    var G__10318 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10318__delegate.call(this, p1, p2, p3, ps);
    };
    G__10318.cljs$lang$maxFixedArity = 3;
    G__10318.cljs$lang$applyTo = function(arglist__10321) {
      var p1 = cljs.core.first(arglist__10321);
      arglist__10321 = cljs.core.next(arglist__10321);
      var p2 = cljs.core.first(arglist__10321);
      arglist__10321 = cljs.core.next(arglist__10321);
      var p3 = cljs.core.first(arglist__10321);
      var ps = cljs.core.rest(arglist__10321);
      return G__10318__delegate(p1, p2, p3, ps);
    };
    G__10318.cljs$core$IFn$_invoke$arity$variadic = G__10318__delegate;
    return G__10318;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4291__auto___10323 = size;
          var i_10324 = 0;
          while (true) {
            if (i_10324 < n__4291__auto___10323) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_10324)));
              var G__10325 = i_10324 + 1;
              i_10324 = G__10325;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && (s2 && s3)) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__10326__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(p1__10322_SHARP_) {
        return cljs.core.apply.call(null, f, p1__10322_SHARP_);
      }, step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__10326 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__10326__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__10326.cljs$lang$maxFixedArity = 4;
    G__10326.cljs$lang$applyTo = function(arglist__10327) {
      var f = cljs.core.first(arglist__10327);
      arglist__10327 = cljs.core.next(arglist__10327);
      var c1 = cljs.core.first(arglist__10327);
      arglist__10327 = cljs.core.next(arglist__10327);
      var c2 = cljs.core.first(arglist__10327);
      arglist__10327 = cljs.core.next(arglist__10327);
      var c3 = cljs.core.first(arglist__10327);
      var colls = cljs.core.rest(arglist__10327);
      return G__10326__delegate(f, c1, c2, c3, colls);
    };
    G__10326.cljs$core$IFn$_invoke$arity$variadic = G__10326__delegate;
    return G__10326;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (n__$1 > 0 && s) {
        var G__10328 = n__$1 - 1;
        var G__10329 = cljs.core.rest.call(null, s);
        n__$1 = G__10328;
        coll__$1 = G__10329;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, n, coll);
  }, null, null);
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__10330 = cljs.core.next.call(null, s);
      var G__10331 = cljs.core.next.call(null, lead);
      s = G__10330;
      lead = G__10331;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (cljs.core.truth_(function() {
        var and__3431__auto__ = s;
        if (and__3431__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s));
        } else {
          return and__3431__auto__;
        }
      }())) {
        var G__10332 = pred__$1;
        var G__10333 = cljs.core.rest.call(null, s);
        pred__$1 = G__10332;
        coll__$1 = G__10333;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, pred, coll);
  }, null, null);
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__10334__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__10334 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10334__delegate.call(this, c1, c2, colls);
    };
    G__10334.cljs$lang$maxFixedArity = 2;
    G__10334.cljs$lang$applyTo = function(arglist__10335) {
      var c1 = cljs.core.first(arglist__10335);
      arglist__10335 = cljs.core.next(arglist__10335);
      var c2 = cljs.core.first(arglist__10335);
      var colls = cljs.core.rest(arglist__10335);
      return G__10334__delegate(c1, c2, colls);
    };
    G__10334.cljs$core$IFn$_invoke$arity$variadic = G__10334__delegate;
    return G__10334;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll));
  };
  var mapcat__3 = function() {
    var G__10336__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls));
    };
    var G__10336 = function(f, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10336__delegate.call(this, f, coll, colls);
    };
    G__10336.cljs$lang$maxFixedArity = 2;
    G__10336.cljs$lang$applyTo = function(arglist__10337) {
      var f = cljs.core.first(arglist__10337);
      arglist__10337 = cljs.core.next(arglist__10337);
      var coll = cljs.core.first(arglist__10337);
      var colls = cljs.core.rest(arglist__10337);
      return G__10336__delegate(f, coll, colls);
    };
    G__10336.cljs$core$IFn$_invoke$arity$variadic = G__10336__delegate;
    return G__10336;
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4291__auto___10338 = size;
        var i_10339 = 0;
        while (true) {
          if (i_10339 < n__4291__auto___10338) {
            if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_10339)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_10339));
            } else {
            }
            var G__10340 = i_10339 + 1;
            i_10339 = G__10340;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
      } else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if (cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r));
        } else {
          return filter.call(null, pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__10341_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__10341_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function into(to, from) {
  if (!(to == null)) {
    if (function() {
      var G__10343 = to;
      if (G__10343) {
        var bit__4086__auto__ = G__10343.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4086__auto__ || G__10343.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from));
    } else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__10344__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__10344 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__10344__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__10344.cljs$lang$maxFixedArity = 4;
    G__10344.cljs$lang$applyTo = function(arglist__10345) {
      var f = cljs.core.first(arglist__10345);
      arglist__10345 = cljs.core.next(arglist__10345);
      var c1 = cljs.core.first(arglist__10345);
      arglist__10345 = cljs.core.next(arglist__10345);
      var c2 = cljs.core.first(arglist__10345);
      arglist__10345 = cljs.core.next(arglist__10345);
      var c3 = cljs.core.first(arglist__10345);
      var colls = cljs.core.rest(arglist__10345);
      return G__10344__delegate(f, c1, c2, c3, colls);
    };
    G__10344.cljs$core$IFn$_invoke$arity$variadic = G__10344__delegate;
    return G__10344;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__10347 = m__$1;
          if (G__10347) {
            var bit__4093__auto__ = G__10347.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4093__auto__ || G__10347.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__10347.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__10347);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__10347);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__10348 = sentinel;
            var G__10349 = m__$2;
            var G__10350 = cljs.core.next.call(null, ks__$1);
            sentinel = G__10348;
            m__$1 = G__10349;
            ks__$1 = G__10350;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__10351, v) {
  var vec__10353 = p__10351;
  var k = cljs.core.nth.call(null, vec__10353, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__10353, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__10354, f) {
    var vec__10364 = p__10354;
    var k = cljs.core.nth.call(null, vec__10364, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__10364, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__10355, f, a) {
    var vec__10365 = p__10355;
    var k = cljs.core.nth.call(null, vec__10365, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__10365, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__10356, f, a, b) {
    var vec__10366 = p__10356;
    var k = cljs.core.nth.call(null, vec__10366, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__10366, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__10357, f, a, b, c) {
    var vec__10367 = p__10357;
    var k = cljs.core.nth.call(null, vec__10367, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__10367, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__10369__delegate = function(m, p__10358, f, a, b, c, args) {
      var vec__10368 = p__10358;
      var k = cljs.core.nth.call(null, vec__10368, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__10368, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__10369 = function(m, p__10358, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__10369__delegate.call(this, m, p__10358, f, a, b, c, args);
    };
    G__10369.cljs$lang$maxFixedArity = 6;
    G__10369.cljs$lang$applyTo = function(arglist__10370) {
      var m = cljs.core.first(arglist__10370);
      arglist__10370 = cljs.core.next(arglist__10370);
      var p__10358 = cljs.core.first(arglist__10370);
      arglist__10370 = cljs.core.next(arglist__10370);
      var f = cljs.core.first(arglist__10370);
      arglist__10370 = cljs.core.next(arglist__10370);
      var a = cljs.core.first(arglist__10370);
      arglist__10370 = cljs.core.next(arglist__10370);
      var b = cljs.core.first(arglist__10370);
      arglist__10370 = cljs.core.next(arglist__10370);
      var c = cljs.core.first(arglist__10370);
      var args = cljs.core.rest(arglist__10370);
      return G__10369__delegate(m, p__10358, f, a, b, c, args);
    };
    G__10369.cljs$core$IFn$_invoke$arity$variadic = G__10369__delegate;
    return G__10369;
  }();
  update_in = function(m, p__10358, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__10358, f);
      case 4:
        return update_in__4.call(this, m, p__10358, f, a);
      case 5:
        return update_in__5.call(this, m, p__10358, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__10358, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__10358, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4013__auto__, writer__4014__auto__, opts__4015__auto__) {
  return cljs.core._write.call(null, writer__4014__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__10371 = ll - 5;
      var G__10372 = r;
      ll = G__10371;
      ret = G__10372;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    if (i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail;
    } else {
      var node = pv.root;
      var level = pv.shift;
      while (true) {
        if (level > 0) {
          var G__10373 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
          var G__10374 = level - 5;
          node = G__10373;
          level = G__10374;
          continue;
        } else {
          return node.arr;
        }
        break;
      }
    }
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found);
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__10376 = null;
  var G__10376__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__10376__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__10376 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10376__2.call(this, self__, k);
      case 3:
        return G__10376__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10376;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args10375) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10375)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while (true) {
          if (j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2;
            } else {
              var G__10377 = j + 1;
              var G__10378 = init__$2;
              j = G__10377;
              init__$1 = G__10378;
              continue;
            }
          } else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1);
      } else {
        var G__10379 = i + step_init[0];
        i = G__10379;
        continue;
      }
    } else {
      return step_init[1];
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4291__auto___10380 = len;
    var i_10381 = 0;
    while (true) {
      if (i_10381 < n__4291__auto___10380) {
        new_tail[i_10381] = self__.tail[i_10381];
        var G__10382 = i_10381 + 1;
        i_10381 = G__10382;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start);
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt < 32) {
      return cljs.core.array_seq.call(null, self__.tail);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.call(null, coll__$1, 0, 0);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.array_for.call(null, coll__$1, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
          } else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__10383 = i + 1;
        var G__10384 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__10383;
        out = G__10384;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray.call(null, args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__10385) {
    var args = cljs.core.seq(arglist__10385);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if (s == null) {
    return null;
  } else {
    return s;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if (s == null) {
    return cljs.core.List.EMPTY;
  } else {
    return s;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.call = function() {
  var G__10387 = null;
  var G__10387__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__10387__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__10387 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10387__2.call(this, self__, k);
      case 3:
        return G__10387__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10387;
}();
cljs.core.Subvec.prototype.apply = function(self__, args10386) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10386)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function subvec_seq(i) {
    if (i === self__.end) {
      return null;
    } else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function() {
        return subvec_seq.call(null, i + 1);
      }, null, null));
    }
  };
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3750__auto__ = self__.end;
    var y__3751__auto__ = v_pos + 1;
    return x__3750__auto__ > y__3751__auto__ ? x__3750__auto__ : y__3751__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__10388 = meta;
      var G__10389 = v.v;
      var G__10390 = v.start + start;
      var G__10391 = v.start + end;
      var G__10392 = __hash;
      meta = G__10388;
      v = G__10389;
      start = G__10390;
      end = G__10391;
      __hash = G__10392;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || (end < 0 || (start > c || end > c))) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj10396 = {};
    return obj10396;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if (0 <= i && i < tv.cnt) {
    if (i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail;
    } else {
      var root = tv.root;
      var node = root;
      var level = tv.shift;
      while (true) {
        if (level > 0) {
          var G__10397 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
          var G__10398 = level - 5;
          node = G__10397;
          level = G__10398;
          continue;
        } else {
          return node.arr;
        }
        break;
      }
    }
  } else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__10400 = null;
  var G__10400__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10400__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10400 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10400__2.call(this, self__, k);
      case 3:
        return G__10400__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10400;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args10399) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10399)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function go(level, node) {
          var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
          if (level === 0) {
            cljs.core.pv_aset.call(null, node__$1, n & 31, val);
            return node__$1;
          } else {
            var subidx = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
            return node__$1;
          }
        }.call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        } else {
          return null;
        }
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
              if (!(nr == null)) {
                return nr;
              } else {
                return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
              }
            }();
            if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            } else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            }
          } else {
            return null;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3443__auto__ = self__.rear;
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3443__auto__ = self__.front;
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__10401 = i + incr;
        i = G__10401;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__10402 = i + 1;
      var G__10403 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__10402;
      out = G__10403;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj10407 = {};
    return obj10407;
  }();
  var l = ks.length;
  var i_10408 = 0;
  while (true) {
    if (i_10408 < l) {
      var k_10409 = ks[i_10408];
      new_obj[k_10409] = obj[k_10409];
      var G__10410 = i_10408 + 1;
      i_10408 = G__10410;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__10413 = null;
  var G__10413__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10413__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10413 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10413__2.call(this, self__, k);
      case 3:
        return G__10413__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10413;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args10412) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10412)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__10414 = cljs.core.rest.call(null, keys__$1);
        var G__10415 = init__$2;
        keys__$1 = G__10414;
        init__$1 = G__10415;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__10411_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__10411_SHARP_, self__.strobj[p1__10411_SHARP_]], null);
    }, self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj10417 = {};
  return obj10417;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__10418 = i + 2;
          i = G__10418;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__10419 = i + 2;
          i = G__10419;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__10420 = i + 2;
          i = G__10420;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__10421 = i + 2;
          i = G__10421;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__10422 = i + 2;
          i = G__10422;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_10423 = 0;
  while (true) {
    if (i_10423 < l) {
      narr[i_10423] = arr[i_10423];
      var G__10424 = i_10423 + 1;
      i_10423 = G__10424;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj10427 = {};
    return obj10427;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__10428 = cljs.core.aclone.call(null, self__.arr);
          G__10428[idx + 1] = v;
          return G__10428;
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__10429 = null;
  var G__10429__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10429__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10429 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10429__2.call(this, self__, k);
      case 3:
        return G__10429__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10429;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args10425) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10425)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__10430 = i + 2;
        var G__10431 = init__$2;
        i = G__10430;
        init__$1 = G__10431;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__10432 = s + 2;
            var G__10433 = d;
            s = G__10432;
            d = G__10433;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__10434 = s + 2;
              var G__10435 = d + 2;
              s = G__10434;
              d = G__10435;
              continue;
            } else {
              return null;
            }
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__10436 = i + 2;
        var G__10437 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__10436;
        ret = G__10437;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__10438_10440 = self__.arr;
      G__10438_10440.pop();
      G__10438_10440.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__10439 = o;
      if (G__10439) {
        var bit__4093__auto__ = G__10439.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4093__auto__ || G__10439.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__10439.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__10439);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__10439);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__10441 = cljs.core.next.call(null, es);
          var G__10442 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__10441;
          tcoll__$2 = G__10442;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__10443 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__10444 = i + 2;
      out = G__10443;
      i = G__10444;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4013__auto__, writer__4014__auto__, opts__4015__auto__) {
  return cljs.core._write.call(null, writer__4014__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.call(null, key, other);
      } else {
        return null;
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__10447 = cljs.core.aclone.call(null, arr);
    G__10447[i] = a;
    return G__10447;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__10448 = cljs.core.aclone.call(null, arr);
    G__10448[i] = a;
    G__10448[j] = b;
    return G__10448;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__10449 = i + 2;
        var G__10450 = init__$2;
        i = G__10449;
        init__$1 = G__10450;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_10451 = 0;
        var j_10452 = 0;
        while (true) {
          if (i_10451 < 32) {
            if ((self__.bitmap >>> i_10451 & 1) === 0) {
              var G__10453 = i_10451 + 1;
              var G__10454 = j_10452;
              i_10451 = G__10453;
              j_10452 = G__10454;
              continue;
            } else {
              nodes[i_10451] = !(self__.arr[j_10452] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_10452]), self__.arr[j_10452], self__.arr[j_10452 + 1], added_leaf_QMARK_) : self__.arr[j_10452 + 1];
              var G__10455 = i_10451 + 1;
              var G__10456 = j_10452 + 2;
              i_10451 = G__10455;
              j_10452 = G__10456;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable;
        } else {
          return null;
        }
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx);
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_10457 = 0;
      var j_10458 = 0;
      while (true) {
        if (i_10457 < 32) {
          if ((self__.bitmap >>> i_10457 & 1) === 0) {
            var G__10459 = i_10457 + 1;
            var G__10460 = j_10458;
            i_10457 = G__10459;
            j_10458 = G__10460;
            continue;
          } else {
            nodes[i_10457] = !(self__.arr[j_10458] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_10458]), self__.arr[j_10458], self__.arr[j_10458 + 1], added_leaf_QMARK_) : self__.arr[j_10458 + 1];
            var G__10461 = i_10457 + 1;
            var G__10462 = j_10458 + 2;
            i_10457 = G__10461;
            j_10458 = G__10462;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__10463 = i + 1;
        var G__10464 = j + 2;
        var G__10465 = bitmap | 1 << i;
        i = G__10463;
        j = G__10464;
        bitmap = G__10465;
        continue;
      } else {
        var G__10466 = i + 1;
        var G__10467 = j;
        var G__10468 = bitmap;
        i = G__10466;
        j = G__10467;
        bitmap = G__10468;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__10469 = i + 1;
          var G__10470 = init__$2;
          i = G__10469;
          init__$1 = G__10470;
          continue;
        }
      } else {
        var G__10471 = i + 1;
        var G__10472 = init__$1;
        i = G__10471;
        init__$1 = G__10472;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        } else {
          return null;
        }
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__10473 = i + 2;
        i = G__10473;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4090__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__10474 = j + 2;
                j = G__10474;
                continue;
              }
            } else {
              var G__10475 = j + 2;
              j = G__10475;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4090__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__10476 = j + 1;
              j = G__10476;
              continue;
            }
          } else {
            var G__10477 = j + 1;
            j = G__10477;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj10480 = {};
    return obj10480;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__10481 = null;
  var G__10481__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10481__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10481 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10481__2.call(this, self__, k);
      case 3:
        return G__10481__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10481;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args10478) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10478)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if (new_root === self__.root) {
          return coll__$1;
        } else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__10482 = i + 1;
      var G__10483 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__10482;
      out = G__10483;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__10484 = o;
      if (G__10484) {
        var bit__4093__auto__ = G__10484.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4093__auto__ || G__10484.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__10484.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__10484);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__10484);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__10485 = cljs.core.next.call(null, es);
          var G__10486 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__10485;
          tcoll__$1 = G__10486;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__10487 = ascending_QMARK_ ? t.left : t.right;
      var G__10488 = cljs.core.conj.call(null, stack__$1, t);
      t = G__10487;
      stack__$1 = G__10488;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__10490 = null;
  var G__10490__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10490__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10490 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10490__2.call(this, self__, k);
      case 3:
        return G__10490__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10490;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args10489) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10489)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.call = function() {
  var G__10492 = null;
  var G__10492__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10492__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10492 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10492__2.call(this, self__, k);
      case 3:
        return G__10492__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10492;
}();
cljs.core.RedNode.prototype.apply = function(self__, args10491) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10491)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if (!(ins == null)) {
            return tree.add_right(ins);
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append.call(null, left.right, right.left);
            if (app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
            } else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
            }
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if (!(del == null) || !(found[0] == null)) {
            if (tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
            } else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
            }
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__10494 = null;
  var G__10494__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10494__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10494 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10494__2.call(this, self__, k);
      case 3:
        return G__10494__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10494;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args10493) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10493)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__10495 = t.left;
          t = G__10495;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__10496 = t.right;
            t = G__10496;
            continue;
          } else {
            return null;
          }
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__10497 = cljs.core.conj.call(null, stack, t);
              var G__10498 = t.left;
              stack = G__10497;
              t = G__10498;
              continue;
            } else {
              var G__10499 = stack;
              var G__10500 = t.right;
              stack = G__10499;
              t = G__10500;
              continue;
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if (c > 0) {
                var G__10501 = cljs.core.conj.call(null, stack, t);
                var G__10502 = t.right;
                stack = G__10501;
                t = G__10502;
                continue;
              } else {
                var G__10503 = stack;
                var G__10504 = t.left;
                stack = G__10503;
                t = G__10504;
                continue;
              }
            } else {
              return null;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__10505 = cljs.core.nnext.call(null, in$);
        var G__10506 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__10505;
        out = G__10506;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__10507) {
    var keyvals = cljs.core.seq(arglist__10507);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__10508) {
    var keyvals = cljs.core.seq(arglist__10508);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj10512 = {};
      return obj10512;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__10513 = cljs.core.nnext.call(null, kvs);
        kvs = G__10513;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__10514) {
    var keyvals = cljs.core.seq(arglist__10514);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__10515 = cljs.core.nnext.call(null, in$);
        var G__10516 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__10515;
        out = G__10516;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__10517) {
    var keyvals = cljs.core.seq(arglist__10517);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__10518 = cljs.core.nnext.call(null, in$);
        var G__10519 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__10518;
        out = G__10519;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__10520) {
    var comparator = cljs.core.first(arglist__10520);
    var keyvals = cljs.core.rest(arglist__10520);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__10521 = self__.mseq;
    if (G__10521) {
      var bit__4093__auto__ = G__10521.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4093__auto__ || G__10521.cljs$core$INext$) {
        return true;
      } else {
        if (!G__10521.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10521);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10521);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__10522 = self__.mseq;
    if (G__10522) {
      var bit__4093__auto__ = G__10522.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4093__auto__ || G__10522.cljs$core$INext$) {
        return true;
      } else {
        if (!G__10522.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10522);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10522);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__10523 = self__.mseq;
    if (G__10523) {
      var bit__4093__auto__ = G__10523.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4093__auto__ || G__10523.cljs$core$INext$) {
        return true;
      } else {
        if (!G__10523.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10523);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10523);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__10524 = self__.mseq;
    if (G__10524) {
      var bit__4093__auto__ = G__10524.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4093__auto__ || G__10524.cljs$core$INext$) {
        return true;
      } else {
        if (!G__10524.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10524);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10524);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__10525_SHARP_, p2__10526_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3443__auto__ = p1__10525_SHARP_;
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__10526_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__10527) {
    var maps = cljs.core.seq(arglist__10527);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3443__auto__ = m1;
            if (cljs.core.truth_(or__3443__auto__)) {
              return or__3443__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__10528) {
    var f = cljs.core.first(arglist__10528);
    var maps = cljs.core.rest(arglist__10528);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__10529 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__10530 = cljs.core.next.call(null, keys);
      ret = G__10529;
      keys = G__10530;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__10533 = null;
  var G__10533__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10533__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10533 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10533__2.call(this, self__, k);
      case 3:
        return G__10533__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10533;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args10532) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10532)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__10531_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__10531_SHARP_);
  }, other));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__10534 = i + 1;
        var G__10535 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__10534;
        out = G__10535;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__10536 = i + 1;
        var G__10537 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__10536;
        out = G__10537;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__10539 = null;
  var G__10539__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__10539__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__10539 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10539__2.call(this, self__, k);
      case 3:
        return G__10539__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10539;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args10538) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10538)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__10542 = null;
  var G__10542__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10542__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10542 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10542__2.call(this, self__, k);
      case 3:
        return G__10542__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10542;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args10541) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10541)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__10540_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__10540_SHARP_);
  }, other));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4285__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4285__auto__.length) {
        var G__10543 = i + 1;
        var G__10544 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__10543;
        res = G__10544;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while (true) {
          if (!(in$__$1 == null)) {
            var G__10545 = cljs.core._next.call(null, in$__$1);
            var G__10546 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
            in$__$1 = G__10545;
            out = G__10546;
            continue;
          } else {
            return cljs.core._persistent_BANG_.call(null, out);
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__10547__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__10547 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__10547__delegate.call(this, keys);
    };
    G__10547.cljs$lang$maxFixedArity = 0;
    G__10547.cljs$lang$applyTo = function(arglist__10548) {
      var keys = cljs.core.seq(arglist__10548);
      return G__10547__delegate(keys);
    };
    G__10547.cljs$core$IFn$_invoke$arity$variadic = G__10547__delegate;
    return G__10547;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__10549) {
    var keys = cljs.core.seq(arglist__10549);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__10550) {
    var comparator = cljs.core.first(arglist__10550);
    var keys = cljs.core.rest(arglist__10550);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function replace(smap, coll) {
  if (cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if (cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
      } else {
        return v;
      }
    }, coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
  } else {
    return cljs.core.map.call(null, function(p1__10551_SHARP_) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, p1__10551_SHARP_);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second.call(null, e);
      } else {
        return p1__10551_SHARP_;
      }
    }, coll);
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__10558, seen__$1) {
        while (true) {
          var vec__10559 = p__10558;
          var f = cljs.core.nth.call(null, vec__10559, 0, null);
          var xs__$1 = vec__10559;
          var temp__4092__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4092__auto__) {
            var s = temp__4092__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__10560 = cljs.core.rest.call(null, s);
              var G__10561 = seen__$1;
              p__10558 = G__10560;
              seen__$1 = G__10561;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__10562 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__10563 = cljs.core.next.call(null, s__$1);
      ret = G__10562;
      s__$1 = G__10563;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__10565 = x;
    if (G__10565) {
      var bit__4086__auto__ = G__10565.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4086__auto__ || G__10565.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__10566 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__10567 = cljs.core.next.call(null, ks);
      var G__10568 = cljs.core.next.call(null, vs);
      map = G__10566;
      ks = G__10567;
      vs = G__10568;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__10571__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10569_SHARP_, p2__10570_SHARP_) {
        return max_key.call(null, k, p1__10569_SHARP_, p2__10570_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__10571 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10571__delegate.call(this, k, x, y, more);
    };
    G__10571.cljs$lang$maxFixedArity = 3;
    G__10571.cljs$lang$applyTo = function(arglist__10572) {
      var k = cljs.core.first(arglist__10572);
      arglist__10572 = cljs.core.next(arglist__10572);
      var x = cljs.core.first(arglist__10572);
      arglist__10572 = cljs.core.next(arglist__10572);
      var y = cljs.core.first(arglist__10572);
      var more = cljs.core.rest(arglist__10572);
      return G__10571__delegate(k, x, y, more);
    };
    G__10571.cljs$core$IFn$_invoke$arity$variadic = G__10571__delegate;
    return G__10571;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__10575__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10573_SHARP_, p2__10574_SHARP_) {
        return min_key.call(null, k, p1__10573_SHARP_, p2__10574_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__10575 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10575__delegate.call(this, k, x, y, more);
    };
    G__10575.cljs$lang$maxFixedArity = 3;
    G__10575.cljs$lang$applyTo = function(arglist__10576) {
      var k = cljs.core.first(arglist__10576);
      arglist__10576 = cljs.core.next(arglist__10576);
      var x = cljs.core.first(arglist__10576);
      arglist__10576 = cljs.core.next(arglist__10576);
      var y = cljs.core.first(arglist__10576);
      var more = cljs.core.rest(arglist__10576);
      return G__10575__delegate(k, x, y, more);
    };
    G__10575.cljs$core$IFn$_invoke$arity$variadic = G__10575__delegate;
    return G__10575;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__10579 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__10579, 0, null);
        var s = vec__10579;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__10580 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__10580, 0, null);
      var s = vec__10580;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__10583 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__10583, 0, null);
        var s = vec__10583;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__10584 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__10584, 0, null);
      var s = vec__10584;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, rng__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil((self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv) {
        return function(p1__10585_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__10585_SHARP_));
        };
      }(fst, fv), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__10596 = null;
      var G__10596__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__10596__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__10596__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__10596__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__10596__4 = function() {
        var G__10597__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__10597 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10597__delegate.call(this, x, y, z, args);
        };
        G__10597.cljs$lang$maxFixedArity = 3;
        G__10597.cljs$lang$applyTo = function(arglist__10598) {
          var x = cljs.core.first(arglist__10598);
          arglist__10598 = cljs.core.next(arglist__10598);
          var y = cljs.core.first(arglist__10598);
          arglist__10598 = cljs.core.next(arglist__10598);
          var z = cljs.core.first(arglist__10598);
          var args = cljs.core.rest(arglist__10598);
          return G__10597__delegate(x, y, z, args);
        };
        G__10597.cljs$core$IFn$_invoke$arity$variadic = G__10597__delegate;
        return G__10597;
      }();
      G__10596 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10596__0.call(this);
          case 1:
            return G__10596__1.call(this, x);
          case 2:
            return G__10596__2.call(this, x, y);
          case 3:
            return G__10596__3.call(this, x, y, z);
          default:
            return G__10596__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10596.cljs$lang$maxFixedArity = 3;
      G__10596.cljs$lang$applyTo = G__10596__4.cljs$lang$applyTo;
      return G__10596;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__10599 = null;
      var G__10599__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__10599__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__10599__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__10599__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__10599__4 = function() {
        var G__10600__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__10600 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10600__delegate.call(this, x, y, z, args);
        };
        G__10600.cljs$lang$maxFixedArity = 3;
        G__10600.cljs$lang$applyTo = function(arglist__10601) {
          var x = cljs.core.first(arglist__10601);
          arglist__10601 = cljs.core.next(arglist__10601);
          var y = cljs.core.first(arglist__10601);
          arglist__10601 = cljs.core.next(arglist__10601);
          var z = cljs.core.first(arglist__10601);
          var args = cljs.core.rest(arglist__10601);
          return G__10600__delegate(x, y, z, args);
        };
        G__10600.cljs$core$IFn$_invoke$arity$variadic = G__10600__delegate;
        return G__10600;
      }();
      G__10599 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10599__0.call(this);
          case 1:
            return G__10599__1.call(this, x);
          case 2:
            return G__10599__2.call(this, x, y);
          case 3:
            return G__10599__3.call(this, x, y, z);
          default:
            return G__10599__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10599.cljs$lang$maxFixedArity = 3;
      G__10599.cljs$lang$applyTo = G__10599__4.cljs$lang$applyTo;
      return G__10599;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__10602 = null;
      var G__10602__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__10602__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__10602__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__10602__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__10602__4 = function() {
        var G__10603__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__10603 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10603__delegate.call(this, x, y, z, args);
        };
        G__10603.cljs$lang$maxFixedArity = 3;
        G__10603.cljs$lang$applyTo = function(arglist__10604) {
          var x = cljs.core.first(arglist__10604);
          arglist__10604 = cljs.core.next(arglist__10604);
          var y = cljs.core.first(arglist__10604);
          arglist__10604 = cljs.core.next(arglist__10604);
          var z = cljs.core.first(arglist__10604);
          var args = cljs.core.rest(arglist__10604);
          return G__10603__delegate(x, y, z, args);
        };
        G__10603.cljs$core$IFn$_invoke$arity$variadic = G__10603__delegate;
        return G__10603;
      }();
      G__10602 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10602__0.call(this);
          case 1:
            return G__10602__1.call(this, x);
          case 2:
            return G__10602__2.call(this, x, y);
          case 3:
            return G__10602__3.call(this, x, y, z);
          default:
            return G__10602__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10602.cljs$lang$maxFixedArity = 3;
      G__10602.cljs$lang$applyTo = G__10602__4.cljs$lang$applyTo;
      return G__10602;
    }();
  };
  var juxt__4 = function() {
    var G__10605__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__10606 = null;
        var G__10606__0 = function() {
          return cljs.core.reduce.call(null, function(p1__10586_SHARP_, p2__10587_SHARP_) {
            return cljs.core.conj.call(null, p1__10586_SHARP_, p2__10587_SHARP_.call(null));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__10606__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__10588_SHARP_, p2__10589_SHARP_) {
            return cljs.core.conj.call(null, p1__10588_SHARP_, p2__10589_SHARP_.call(null, x));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__10606__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__10590_SHARP_, p2__10591_SHARP_) {
            return cljs.core.conj.call(null, p1__10590_SHARP_, p2__10591_SHARP_.call(null, x, y));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__10606__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__10592_SHARP_, p2__10593_SHARP_) {
            return cljs.core.conj.call(null, p1__10592_SHARP_, p2__10593_SHARP_.call(null, x, y, z));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__10606__4 = function() {
          var G__10607__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__10594_SHARP_, p2__10595_SHARP_) {
              return cljs.core.conj.call(null, p1__10594_SHARP_, cljs.core.apply.call(null, p2__10595_SHARP_, x, y, z, args));
            }, cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__10607 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__10607__delegate.call(this, x, y, z, args);
          };
          G__10607.cljs$lang$maxFixedArity = 3;
          G__10607.cljs$lang$applyTo = function(arglist__10608) {
            var x = cljs.core.first(arglist__10608);
            arglist__10608 = cljs.core.next(arglist__10608);
            var y = cljs.core.first(arglist__10608);
            arglist__10608 = cljs.core.next(arglist__10608);
            var z = cljs.core.first(arglist__10608);
            var args = cljs.core.rest(arglist__10608);
            return G__10607__delegate(x, y, z, args);
          };
          G__10607.cljs$core$IFn$_invoke$arity$variadic = G__10607__delegate;
          return G__10607;
        }();
        G__10606 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__10606__0.call(this);
            case 1:
              return G__10606__1.call(this, x);
            case 2:
              return G__10606__2.call(this, x, y);
            case 3:
              return G__10606__3.call(this, x, y, z);
            default:
              return G__10606__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10606.cljs$lang$maxFixedArity = 3;
        G__10606.cljs$lang$applyTo = G__10606__4.cljs$lang$applyTo;
        return G__10606;
      }();
    };
    var G__10605 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10605__delegate.call(this, f, g, h, fs);
    };
    G__10605.cljs$lang$maxFixedArity = 3;
    G__10605.cljs$lang$applyTo = function(arglist__10609) {
      var f = cljs.core.first(arglist__10609);
      arglist__10609 = cljs.core.next(arglist__10609);
      var g = cljs.core.first(arglist__10609);
      arglist__10609 = cljs.core.next(arglist__10609);
      var h = cljs.core.first(arglist__10609);
      var fs = cljs.core.rest(arglist__10609);
      return G__10605__delegate(f, g, h, fs);
    };
    G__10605.cljs$core$IFn$_invoke$arity$variadic = G__10605__delegate;
    return G__10605;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__10610 = cljs.core.next.call(null, coll);
        coll = G__10610;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__10611 = n - 1;
        var G__10612 = cljs.core.next.call(null, coll);
        n = G__10611;
        coll = G__10612;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  } else {
    return null;
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
    }, null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__10614 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__10614, 0, null);
  var flags = cljs.core.nth.call(null, vec__10614, 1, null);
  var pattern = cljs.core.nth.call(null, vec__10614, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_10616 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_10617__$1 = cljs.core.next.call(null, coll);
      var n_10618 = (new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts);
      while (true) {
        if (coll_10617__$1 && (n_10618 == null || !(n_10618 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_10617__$1), writer, opts);
          var G__10619 = cljs.core.next.call(null, coll_10617__$1);
          var G__10620 = n_10618 - 1;
          coll_10617__$1 = G__10619;
          n_10618 = G__10620;
          continue;
        } else {
        }
        break;
      }
      if (cljs.core.truth_((new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts))) {
        cljs.core._write.call(null, writer, sep);
        print_one.call(null, "...", writer, opts);
      } else {
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_10616;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__10625 = cljs.core.seq.call(null, ss);
    var chunk__10626 = null;
    var count__10627 = 0;
    var i__10628 = 0;
    while (true) {
      if (i__10628 < count__10627) {
        var s = cljs.core._nth.call(null, chunk__10626, i__10628);
        cljs.core._write.call(null, writer, s);
        var G__10629 = seq__10625;
        var G__10630 = chunk__10626;
        var G__10631 = count__10627;
        var G__10632 = i__10628 + 1;
        seq__10625 = G__10629;
        chunk__10626 = G__10630;
        count__10627 = G__10631;
        i__10628 = G__10632;
        continue;
      } else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__10625);
        if (temp__4092__auto__) {
          var seq__10625__$1 = temp__4092__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__10625__$1)) {
            var c__4191__auto__ = cljs.core.chunk_first.call(null, seq__10625__$1);
            var G__10633 = cljs.core.chunk_rest.call(null, seq__10625__$1);
            var G__10634 = c__4191__auto__;
            var G__10635 = cljs.core.count.call(null, c__4191__auto__);
            var G__10636 = 0;
            seq__10625 = G__10633;
            chunk__10626 = G__10634;
            count__10627 = G__10635;
            i__10628 = G__10636;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__10625__$1);
            cljs.core._write.call(null, writer, s);
            var G__10637 = cljs.core.next.call(null, seq__10625__$1);
            var G__10638 = null;
            var G__10639 = 0;
            var G__10640 = 0;
            seq__10625 = G__10637;
            chunk__10626 = G__10638;
            count__10627 = G__10639;
            i__10628 = G__10640;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__10641) {
    var writer = cljs.core.first(arglist__10641);
    var ss = cljs.core.rest(arglist__10641);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj10643 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj10643;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if (cljs.core.truth_(function() {
          var and__3431__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if (cljs.core.truth_(and__3431__auto__)) {
            var and__3431__auto____$1 = function() {
              var G__10649 = obj;
              if (G__10649) {
                var bit__4093__auto__ = G__10649.cljs$lang$protocol_mask$partition0$ & 131072;
                if (bit__4093__auto__ || G__10649.cljs$core$IMeta$) {
                  return true;
                } else {
                  if (!G__10649.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__10649);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__10649);
              }
            }();
            if (and__3431__auto____$1) {
              return cljs.core.meta.call(null, obj);
            } else {
              return and__3431__auto____$1;
            }
          } else {
            return and__3431__auto__;
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ");
        } else {
        }
        if (obj == null) {
          return cljs.core._write.call(null, writer, "nil");
        } else {
          if (obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
          } else {
            if (function() {
              var G__10650 = obj;
              if (G__10650) {
                var bit__4086__auto__ = G__10650.cljs$lang$protocol_mask$partition0$ & 2147483648;
                if (bit__4086__auto__ || G__10650.cljs$core$IPrintWithWriter$) {
                  return true;
                } else {
                  return false;
                }
              } else {
                return false;
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts);
            } else {
              if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""));
              } else {
                if (cljs.core.object_QMARK_.call(null, obj)) {
                  cljs.core._write.call(null, writer, "#js ");
                  return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                  }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
                } else {
                  if (obj instanceof Array) {
                    return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                  } else {
                    if (goog.isString(obj)) {
                      if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).cljs$core$IFn$_invoke$arity$1(opts))) {
                        return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                      } else {
                        return cljs.core._write.call(null, writer, obj);
                      }
                    } else {
                      if (cljs.core.fn_QMARK_.call(null, obj)) {
                        return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                      } else {
                        if (obj instanceof Date) {
                          var normalize = function(n, len) {
                            var ns = [cljs.core.str(n)].join("");
                            while (true) {
                              if (cljs.core.count.call(null, ns) < len) {
                                var G__10652 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                                ns = G__10652;
                                continue;
                              } else {
                                return ns;
                              }
                              break;
                            }
                          };
                          return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                        } else {
                          if (cljs.core.regexp_QMARK_.call(null, obj)) {
                            return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                          } else {
                            if (function() {
                              var G__10651 = obj;
                              if (G__10651) {
                                var bit__4093__auto__ = G__10651.cljs$lang$protocol_mask$partition0$ & 2147483648;
                                if (bit__4093__auto__ || G__10651.cljs$core$IPrintWithWriter$) {
                                  return true;
                                } else {
                                  if (!G__10651.cljs$lang$protocol_mask$partition0$) {
                                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__10651);
                                  } else {
                                    return false;
                                  }
                                }
                              } else {
                                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__10651);
                              }
                            }()) {
                              return cljs.core._pr_writer.call(null, obj, writer, opts);
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__10657 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__10658 = null;
  var count__10659 = 0;
  var i__10660 = 0;
  while (true) {
    if (i__10660 < count__10659) {
      var obj = cljs.core._nth.call(null, chunk__10658, i__10660);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__10661 = seq__10657;
      var G__10662 = chunk__10658;
      var G__10663 = count__10659;
      var G__10664 = i__10660 + 1;
      seq__10657 = G__10661;
      chunk__10658 = G__10662;
      count__10659 = G__10663;
      i__10660 = G__10664;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__10657);
      if (temp__4092__auto__) {
        var seq__10657__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10657__$1)) {
          var c__4191__auto__ = cljs.core.chunk_first.call(null, seq__10657__$1);
          var G__10665 = cljs.core.chunk_rest.call(null, seq__10657__$1);
          var G__10666 = c__4191__auto__;
          var G__10667 = cljs.core.count.call(null, c__4191__auto__);
          var G__10668 = 0;
          seq__10657 = G__10665;
          chunk__10658 = G__10666;
          count__10659 = G__10667;
          i__10660 = G__10668;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__10657__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__10669 = cljs.core.next.call(null, seq__10657__$1);
          var G__10670 = null;
          var G__10671 = 0;
          var G__10672 = 0;
          seq__10657 = G__10669;
          chunk__10658 = G__10670;
          count__10659 = G__10671;
          i__10660 = G__10672;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__10673) {
    var objs = cljs.core.seq(arglist__10673);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__10674) {
    var objs = cljs.core.seq(arglist__10674);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__10675) {
    var objs = cljs.core.seq(arglist__10675);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__10676) {
    var objs = cljs.core.seq(arglist__10676);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__10677) {
    var objs = cljs.core.seq(arglist__10677);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__10678) {
    var objs = cljs.core.seq(arglist__10678);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__10679) {
    var objs = cljs.core.seq(arglist__10679);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__10680) {
    var objs = cljs.core.seq(arglist__10680);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.IAtom = function() {
  var obj10682 = {};
  return obj10682;
}();
cljs.core.IReset = function() {
  var obj10684 = {};
  return obj10684;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj10686 = {};
  return obj10686;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3431__auto__ = o;
      if (and__3431__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4070__auto__ = o == null ? null : o;
      return function() {
        var or__3443__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3431__auto__ = o;
      if (and__3431__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4070__auto__ = o == null ? null : o;
      return function() {
        var or__3443__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3431__auto__ = o;
      if (and__3431__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4070__auto__ = o == null ? null : o;
      return function() {
        var or__3443__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3431__auto__ = o;
      if (and__3431__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4070__auto__ = o == null ? null : o;
      return function() {
        var or__3443__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__10687 = cljs.core.seq.call(null, self__.watches);
  var chunk__10688 = null;
  var count__10689 = 0;
  var i__10690 = 0;
  while (true) {
    if (i__10690 < count__10689) {
      var vec__10691 = cljs.core._nth.call(null, chunk__10688, i__10690);
      var key = cljs.core.nth.call(null, vec__10691, 0, null);
      var f = cljs.core.nth.call(null, vec__10691, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__10693 = seq__10687;
      var G__10694 = chunk__10688;
      var G__10695 = count__10689;
      var G__10696 = i__10690 + 1;
      seq__10687 = G__10693;
      chunk__10688 = G__10694;
      count__10689 = G__10695;
      i__10690 = G__10696;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__10687);
      if (temp__4092__auto__) {
        var seq__10687__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10687__$1)) {
          var c__4191__auto__ = cljs.core.chunk_first.call(null, seq__10687__$1);
          var G__10697 = cljs.core.chunk_rest.call(null, seq__10687__$1);
          var G__10698 = c__4191__auto__;
          var G__10699 = cljs.core.count.call(null, c__4191__auto__);
          var G__10700 = 0;
          seq__10687 = G__10697;
          chunk__10688 = G__10698;
          count__10689 = G__10699;
          i__10690 = G__10700;
          continue;
        } else {
          var vec__10692 = cljs.core.first.call(null, seq__10687__$1);
          var key = cljs.core.nth.call(null, vec__10692, 0, null);
          var f = cljs.core.nth.call(null, vec__10692, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__10701 = cljs.core.next.call(null, seq__10687__$1);
          var G__10702 = null;
          var G__10703 = 0;
          var G__10704 = 0;
          seq__10687 = G__10701;
          chunk__10688 = G__10702;
          count__10689 = G__10703;
          i__10690 = G__10704;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__10708__delegate = function(x, p__10705) {
      var map__10707 = p__10705;
      var map__10707__$1 = cljs.core.seq_QMARK_.call(null, map__10707) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10707) : map__10707;
      var validator = cljs.core.get.call(null, map__10707__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.call(null, map__10707__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__10708 = function(x, var_args) {
      var p__10705 = null;
      if (arguments.length > 1) {
        p__10705 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__10708__delegate.call(this, x, p__10705);
    };
    G__10708.cljs$lang$maxFixedArity = 1;
    G__10708.cljs$lang$applyTo = function(arglist__10709) {
      var x = cljs.core.first(arglist__10709);
      var p__10705 = cljs.core.rest(arglist__10709);
      return G__10708__delegate(x, p__10705);
    };
    G__10708.cljs$core$IFn$_invoke$arity$variadic = G__10708__delegate;
    return G__10708;
  }();
  atom = function(x, var_args) {
    var p__10705 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))))].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__10710__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__10710 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__10710__delegate.call(this, a, f, x, y, more);
    };
    G__10710.cljs$lang$maxFixedArity = 4;
    G__10710.cljs$lang$applyTo = function(arglist__10711) {
      var a = cljs.core.first(arglist__10711);
      arglist__10711 = cljs.core.next(arglist__10711);
      var f = cljs.core.first(arglist__10711);
      arglist__10711 = cljs.core.next(arglist__10711);
      var x = cljs.core.first(arglist__10711);
      arglist__10711 = cljs.core.next(arglist__10711);
      var y = cljs.core.first(arglist__10711);
      var more = cljs.core.rest(arglist__10711);
      return G__10710__delegate(a, f, x, y, more);
    };
    G__10710.cljs$core$IFn$_invoke$arity$variadic = G__10710__delegate;
    return G__10710;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__10712) {
    var iref = cljs.core.first(arglist__10712);
    arglist__10712 = cljs.core.next(arglist__10712);
    var f = cljs.core.first(arglist__10712);
    var args = cljs.core.rest(arglist__10712);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state));
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, self__.state, function(p__10713) {
    var map__10714 = p__10713;
    var map__10714__$1 = cljs.core.seq_QMARK_.call(null, map__10714) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10714) : map__10714;
    var curr_state = map__10714__$1;
    var done = cljs.core.get.call(null, map__10714__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
    if (cljs.core.truth_(done)) {
      return curr_state;
    } else {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.call(null)], null);
    }
  }));
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.IEncodeJS = function() {
  var obj10716 = {};
  return obj10716;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__10718 = k;
    if (G__10718) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto__ = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return G__10718.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__10718.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__10718);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__10718);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || (typeof k === "number" || (k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol))) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__10732 = x;
      if (G__10732) {
        var bit__4093__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3443__auto__ = bit__4093__auto__;
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return G__10732.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__10732.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__10732);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__10732);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj10734 = {};
              return obj10734;
            }();
            var seq__10735_10745 = cljs.core.seq.call(null, x);
            var chunk__10736_10746 = null;
            var count__10737_10747 = 0;
            var i__10738_10748 = 0;
            while (true) {
              if (i__10738_10748 < count__10737_10747) {
                var vec__10739_10749 = cljs.core._nth.call(null, chunk__10736_10746, i__10738_10748);
                var k_10750 = cljs.core.nth.call(null, vec__10739_10749, 0, null);
                var v_10751 = cljs.core.nth.call(null, vec__10739_10749, 1, null);
                m[cljs.core.key__GT_js.call(null, k_10750)] = clj__GT_js.call(null, v_10751);
                var G__10752 = seq__10735_10745;
                var G__10753 = chunk__10736_10746;
                var G__10754 = count__10737_10747;
                var G__10755 = i__10738_10748 + 1;
                seq__10735_10745 = G__10752;
                chunk__10736_10746 = G__10753;
                count__10737_10747 = G__10754;
                i__10738_10748 = G__10755;
                continue;
              } else {
                var temp__4092__auto___10756 = cljs.core.seq.call(null, seq__10735_10745);
                if (temp__4092__auto___10756) {
                  var seq__10735_10757__$1 = temp__4092__auto___10756;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__10735_10757__$1)) {
                    var c__4191__auto___10758 = cljs.core.chunk_first.call(null, seq__10735_10757__$1);
                    var G__10759 = cljs.core.chunk_rest.call(null, seq__10735_10757__$1);
                    var G__10760 = c__4191__auto___10758;
                    var G__10761 = cljs.core.count.call(null, c__4191__auto___10758);
                    var G__10762 = 0;
                    seq__10735_10745 = G__10759;
                    chunk__10736_10746 = G__10760;
                    count__10737_10747 = G__10761;
                    i__10738_10748 = G__10762;
                    continue;
                  } else {
                    var vec__10740_10763 = cljs.core.first.call(null, seq__10735_10757__$1);
                    var k_10764 = cljs.core.nth.call(null, vec__10740_10763, 0, null);
                    var v_10765 = cljs.core.nth.call(null, vec__10740_10763, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_10764)] = clj__GT_js.call(null, v_10765);
                    var G__10766 = cljs.core.next.call(null, seq__10735_10757__$1);
                    var G__10767 = null;
                    var G__10768 = 0;
                    var G__10769 = 0;
                    seq__10735_10745 = G__10766;
                    chunk__10736_10746 = G__10767;
                    count__10737_10747 = G__10768;
                    i__10738_10748 = G__10769;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__10741_10770 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__10742_10771 = null;
              var count__10743_10772 = 0;
              var i__10744_10773 = 0;
              while (true) {
                if (i__10744_10773 < count__10743_10772) {
                  var x_10774__$1 = cljs.core._nth.call(null, chunk__10742_10771, i__10744_10773);
                  arr.push(x_10774__$1);
                  var G__10775 = seq__10741_10770;
                  var G__10776 = chunk__10742_10771;
                  var G__10777 = count__10743_10772;
                  var G__10778 = i__10744_10773 + 1;
                  seq__10741_10770 = G__10775;
                  chunk__10742_10771 = G__10776;
                  count__10743_10772 = G__10777;
                  i__10744_10773 = G__10778;
                  continue;
                } else {
                  var temp__4092__auto___10779 = cljs.core.seq.call(null, seq__10741_10770);
                  if (temp__4092__auto___10779) {
                    var seq__10741_10780__$1 = temp__4092__auto___10779;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__10741_10780__$1)) {
                      var c__4191__auto___10781 = cljs.core.chunk_first.call(null, seq__10741_10780__$1);
                      var G__10782 = cljs.core.chunk_rest.call(null, seq__10741_10780__$1);
                      var G__10783 = c__4191__auto___10781;
                      var G__10784 = cljs.core.count.call(null, c__4191__auto___10781);
                      var G__10785 = 0;
                      seq__10741_10770 = G__10782;
                      chunk__10742_10771 = G__10783;
                      count__10743_10772 = G__10784;
                      i__10744_10773 = G__10785;
                      continue;
                    } else {
                      var x_10786__$1 = cljs.core.first.call(null, seq__10741_10780__$1);
                      arr.push(x_10786__$1);
                      var G__10787 = cljs.core.next.call(null, seq__10741_10780__$1);
                      var G__10788 = null;
                      var G__10789 = 0;
                      var G__10790 = 0;
                      seq__10741_10770 = G__10787;
                      chunk__10742_10771 = G__10788;
                      count__10743_10772 = G__10789;
                      i__10744_10773 = G__10790;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj10792 = {};
  return obj10792;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__10813__delegate = function(x, opts) {
      if (function() {
        var G__10803 = x;
        if (G__10803) {
          var bit__4093__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3443__auto__ = bit__4093__auto__;
            if (cljs.core.truth_(or__3443__auto__)) {
              return or__3443__auto__;
            } else {
              return G__10803.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__10803.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__10803);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__10803);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__10804 = opts;
          var map__10804__$1 = cljs.core.seq_QMARK_.call(null, map__10804) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10804) : map__10804;
          var keywordize_keys = cljs.core.get.call(null, map__10804__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__10804, map__10804__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4160__auto__ = function(map__10804, map__10804__$1, keywordize_keys, keyfn) {
                          return function iter__10809(s__10810) {
                            return new cljs.core.LazySeq(null, function(map__10804, map__10804__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__10810__$1 = s__10810;
                                while (true) {
                                  var temp__4092__auto__ = cljs.core.seq.call(null, s__10810__$1);
                                  if (temp__4092__auto__) {
                                    var s__10810__$2 = temp__4092__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__10810__$2)) {
                                      var c__4158__auto__ = cljs.core.chunk_first.call(null, s__10810__$2);
                                      var size__4159__auto__ = cljs.core.count.call(null, c__4158__auto__);
                                      var b__10812 = cljs.core.chunk_buffer.call(null, size__4159__auto__);
                                      if (function() {
                                        var i__10811 = 0;
                                        while (true) {
                                          if (i__10811 < size__4159__auto__) {
                                            var k = cljs.core._nth.call(null, c__4158__auto__, i__10811);
                                            cljs.core.chunk_append.call(null, b__10812, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__10814 = i__10811 + 1;
                                            i__10811 = G__10814;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10812), iter__10809.call(null, cljs.core.chunk_rest.call(null, s__10810__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10812), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__10810__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__10809.call(null, cljs.core.rest.call(null, s__10810__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__10804, map__10804__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__10804, map__10804__$1, keywordize_keys, keyfn);
                        return iter__4160__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1;
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            };
          }(map__10804, map__10804__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__10813 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__10813__delegate.call(this, x, opts);
    };
    G__10813.cljs$lang$maxFixedArity = 1;
    G__10813.cljs$lang$applyTo = function(arglist__10815) {
      var x = cljs.core.first(arglist__10815);
      var opts = cljs.core.rest(arglist__10815);
      return G__10813__delegate(x, opts);
    };
    G__10813.cljs$core$IFn$_invoke$arity$variadic = G__10813__delegate;
    return G__10813;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__10816__delegate = function(args) {
      var temp__4090__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var v = temp__4090__auto__;
        return v;
      } else {
        var ret = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
        return ret;
      }
    };
    var G__10816 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__10816__delegate.call(this, args);
    };
    G__10816.cljs$lang$maxFixedArity = 0;
    G__10816.cljs$lang$applyTo = function(arglist__10817) {
      var args = cljs.core.seq(arglist__10817);
      return G__10816__delegate(args);
    };
    G__10816.cljs$core$IFn$_invoke$arity$variadic = G__10816__delegate;
    return G__10816;
  }();
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__10818 = ret;
        f = G__10818;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__10819__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__10819 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__10819__delegate.call(this, f, args);
    };
    G__10819.cljs$lang$maxFixedArity = 1;
    G__10819.cljs$lang$applyTo = function(arglist__10820) {
      var f = cljs.core.first(arglist__10820);
      var args = cljs.core.rest(arglist__10820);
      return G__10819__delegate(f, args);
    };
    G__10819.cljs$core$IFn$_invoke$arity$variadic = G__10819__delegate;
    return G__10819;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, coll);
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__10821) {
    var f = cljs.core.first(arglist__10821);
    var args = cljs.core.rest(arglist__10821);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3443__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3443__auto__) {
      return or__3443__auto__;
    } else {
      var or__3443__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3443__auto____$1) {
        return or__3443__auto____$1;
      } else {
        var and__3431__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3431__auto__) {
          var and__3431__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3431__auto____$1) {
            var and__3431__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3431__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__10822 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__10823 = i + 1;
                  ret = G__10822;
                  i = G__10823;
                  continue;
                }
                break;
              }
            } else {
              return and__3431__auto____$2;
            }
          } else {
            return and__3431__auto____$1;
          }
        } else {
          return and__3431__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3443__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__10824_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__10824_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__10824_SHARP_), cljs.core.second.call(null, p1__10824_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__10825_SHARP_, p2__10826_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__10825_SHARP_, p2__10826_SHARP_);
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3443__auto__ = cljs.core.truth_(function() {
    var and__3431__auto__ = xprefs;
    if (cljs.core.truth_(and__3431__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3431__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3443__auto__)) {
    return or__3443__auto__;
  } else {
    var or__3443__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__10827 = cljs.core.rest.call(null, ps);
          ps = G__10827;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3443__auto____$1)) {
      return or__3443__auto____$1;
    } else {
      var or__3443__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__10828 = cljs.core.rest.call(null, ps);
            ps = G__10828;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3443__auto____$2)) {
        return or__3443__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3443__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3443__auto__)) {
    return or__3443__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__10831) {
    var vec__10832 = p__10831;
    var k = cljs.core.nth.call(null, vec__10832, 0, null);
    var _ = cljs.core.nth.call(null, vec__10832, 1, null);
    var e = vec__10832;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3443__auto__ = be == null;
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj10834 = {};
  return obj10834;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3431__auto__ = mf;
    if (and__3431__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4070__auto__ = mf == null ? null : mf;
    return function() {
      var or__3443__auto__ = cljs.core._reset[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._reset["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3431__auto__ = mf;
    if (and__3431__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4070__auto__ = mf == null ? null : mf;
    return function() {
      var or__3443__auto__ = cljs.core._add_method[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._add_method["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3431__auto__ = mf;
    if (and__3431__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4070__auto__ = mf == null ? null : mf;
    return function() {
      var or__3443__auto__ = cljs.core._remove_method[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._remove_method["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3431__auto__ = mf;
    if (and__3431__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4070__auto__ = mf == null ? null : mf;
    return function() {
      var or__3443__auto__ = cljs.core._prefer_method[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3431__auto__ = mf;
    if (and__3431__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4070__auto__ = mf == null ? null : mf;
    return function() {
      var or__3443__auto__ = cljs.core._get_method[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._get_method["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3431__auto__ = mf;
    if (and__3431__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4070__auto__ = mf == null ? null : mf;
    return function() {
      var or__3443__auto__ = cljs.core._methods[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._methods["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3431__auto__ = mf;
    if (and__3431__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4070__auto__ = mf == null ? null : mf;
    return function() {
      var or__3443__auto__ = cljs.core._prefers[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._prefers["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if (function() {
    var and__3431__auto__ = mf;
    if (and__3431__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args);
  } else {
    var x__4070__auto__ = mf == null ? null : mf;
    return function() {
      var or__3443__auto__ = cljs.core._dispatch[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._dispatch["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args);
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, name, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args);
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$2) {
    return null;
  });
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4090__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn;
  } else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
  });
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.do_dispatch.call(null, mf__$1, self__.name, self__.dispatch_fn, args);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__10835__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args);
  };
  var G__10835 = function(_, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return G__10835__delegate.call(this, _, args);
  };
  G__10835.cljs$lang$maxFixedArity = 1;
  G__10835.cljs$lang$applyTo = function(arglist__10836) {
    var _ = cljs.core.first(arglist__10836);
    var args = cljs.core.rest(arglist__10836);
    return G__10835__delegate(_, args);
  };
  G__10835.cljs$core$IFn$_invoke$arity$variadic = G__10835__delegate;
  return G__10835;
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4013__auto__, writer__4014__auto__, opts__4015__auto__) {
  return cljs.core._write.call(null, writer__4014__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0;
        } else {
          return null;
        }
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, new cljs.core.Symbol(null, 
  "recur", "recur", -1532142362, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, "js*", "js*", -1640426054, 
  null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "try", "try", -1640416396, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], null), null), x);
};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.ASSUME_ANY_VERSION = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || (goog.userAgent.ASSUME_GECKO || (goog.userAgent.ASSUME_MOBILE_WEBKIT || (goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA)));
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null;
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"];
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if (!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && (!goog.userAgent.detectedWebkit_ && navigator.product == "Gecko");
  }
};
if (!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_();
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.ASSUME_ANDROID = false;
goog.userAgent.ASSUME_IPHONE = false;
goog.userAgent.ASSUME_IPAD = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || (goog.userAgent.ASSUME_WINDOWS || (goog.userAgent.ASSUME_LINUX || (goog.userAgent.ASSUME_X11 || (goog.userAgent.ASSUME_ANDROID || (goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD)))));
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && ua.indexOf("Android") >= 0;
  goog.userAgent.detectedIPhone_ = !!ua && ua.indexOf("iPhone") >= 0;
  goog.userAgent.detectedIPad_ = !!ua && ua.indexOf("iPad") >= 0;
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion;
  } else {
    if (goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/;
      } else {
        if (goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/;
        }
      }
    }
    if (re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : "";
    }
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || (goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0));
};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", 
POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", 
MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROVER:"MSPointerOver", MSPOINTEROUT:"MSPointerOut", MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend"};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      } else {
        return null;
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll);
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll));
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__11066 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__11066;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__11070 = cljs.core._EQ_;
    var expr__11071 = limit;
    if (cljs.core.truth_(pred__11070.call(null, 1, expr__11071))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__11070.call(null, 2, expr__11071))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4090__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4090__auto__)) {
            var m = temp__4090__auto__;
            var index = s__$1.indexOf(m);
            var G__11073 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__11074 = limit__$1 - 1;
            var G__11075 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__11073;
            limit__$1 = G__11074;
            parts = G__11075;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__11076 = index - 1;
        index = G__11076;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4090__auto___11077 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4090__auto___11077)) {
        var replacement_11078 = temp__4090__auto___11077;
        buffer.append([cljs.core.str(replacement_11078)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__11079 = index + 1;
      index = G__11079;
      continue;
    }
    break;
  }
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj13907 = {};
  return obj13907;
}();
cljs.reader.read_char = function read_char(reader) {
  if (function() {
    var and__3431__auto__ = reader;
    if (and__3431__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__4070__auto__ = reader == null ? null : reader;
    return function() {
      var or__3443__auto__ = cljs.reader.read_char[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.reader.read_char["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if (function() {
    var and__3431__auto__ = reader;
    if (and__3431__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4070__auto__ = reader == null ? null : reader;
    return function() {
      var or__3443__auto__ = cljs.reader.unread[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.reader.unread["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3443__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__3443__auto__)) {
    return or__3443__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if (arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return reader_error__delegate.call(this, rdr, msg);
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__13908) {
    var rdr = cljs.core.first(arglist__13908);
    var msg = cljs.core.rest(arglist__13908);
    return reader_error__delegate(rdr, msg);
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error;
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3431__auto__ = !(ch === "#");
  if (and__3431__auto__) {
    var and__3431__auto____$1 = !(ch === "'");
    if (and__3431__auto____$1) {
      var and__3431__auto____$2 = !(ch === ":");
      if (and__3431__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__3431__auto____$2;
      }
    } else {
      return and__3431__auto____$1;
    }
  } else {
    return and__3431__auto__;
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || (cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch))) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__13909 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__13910 = cljs.reader.read_char.call(null, rdr);
      sb = G__13909;
      ch = G__13910;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || (ch === "\r" || ch == null)) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3 = groups[2];
  if (!(group3 == null || group3.length < 1)) {
    return 0;
  } else {
    var negate = "-" === groups[1] ? -1 : 1;
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[7]) ? [groups[7], parseInt(groups[7])] : new cljs.core.Keyword(null, "default", "default", 2558708147) ? [null, null] : null;
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      return negate * parseInt(n, radix);
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator) / parseInt(denominator);
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s);
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_number = function match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return null;
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__13911 = cljs.reader.read_char.call(null, rdr);
      ch = G__13911;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4090__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var macrofn = temp__4090__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__13912 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__13912;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__13913 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__13913;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4090__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4090__auto__)) {
      var obj = temp__4090__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch);
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__3443__auto__ = ch == null;
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3443__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__13914 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__13915 = cljs.reader.read_char.call(null, reader);
      buffer = G__13914;
      ch = G__13915;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__13916 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__13917 = cljs.reader.read_char.call(null, reader);
        buffer = G__13916;
        ch = G__13917;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
            var G__13918 = function() {
              buffer.append(ch);
              return buffer;
            }();
            var G__13919 = cljs.reader.read_char.call(null, reader);
            buffer = G__13918;
            ch = G__13919;
            continue;
          } else {
            return null;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(goog.string.contains(token, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || (name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1))) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return f;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__13921 = o;
    if (G__13921) {
      var bit__4093__auto__ = G__13921.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4093__auto__ || G__13921.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__13921.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__13921);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__13921);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", -1545057749, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    return null;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return null;
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__13922 = reader;
        var G__13923 = eof_is_error;
        var G__13924 = sentinel;
        var G__13925 = is_recursive;
        reader = G__13922;
        eof_is_error = G__13923;
        sentinel = G__13924;
        is_recursive = G__13925;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__13926 = cljs.reader.read_comment.call(null, reader, ch);
          var G__13927 = eof_is_error;
          var G__13928 = sentinel;
          var G__13929 = is_recursive;
          reader = G__13926;
          eof_is_error = G__13927;
          sentinel = G__13928;
          is_recursive = G__13929;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var f = cljs.reader.macros.call(null, ch);
            var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? cljs.reader.read_symbol.call(null, reader, ch) : null;
            if (res === reader) {
              var G__13930 = reader;
              var G__13931 = eof_is_error;
              var G__13932 = sentinel;
              var G__13933 = is_recursive;
              reader = G__13930;
              eof_is_error = G__13931;
              sentinel = G__13932;
              is_recursive = G__13933;
              continue;
            } else {
              return res;
            }
          } else {
            return null;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, true, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var b = new goog.string.StringBuffer(s);
        while (true) {
          if (b.getLength() < width) {
            var G__13934 = b.append("0");
            b = G__13934;
            continue;
          } else {
            return b.toString();
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div);
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(month, leap_year_QMARK_) {
    return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
  };
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__13936 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__13936, 0, null);
  var years = cljs.core.nth.call(null, vec__13936, 1, null);
  var months = cljs.core.nth.call(null, vec__13936, 2, null);
  var days = cljs.core.nth.call(null, vec__13936, 3, null);
  var hours = cljs.core.nth.call(null, vec__13936, 4, null);
  var minutes = cljs.core.nth.call(null, vec__13936, 5, null);
  var seconds = cljs.core.nth.call(null, vec__13936, 6, null);
  var fraction = cljs.core.nth.call(null, vec__13936, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__13936, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__13936, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__13936, 10, null);
  var v = vec__13936;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3443__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__3443__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__3443__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__3443__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__3443__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__3443__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3443__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3443__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4090__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4090__auto__)) {
    var vec__13938 = temp__4090__auto__;
    var years = cljs.core.nth.call(null, vec__13938, 0, null);
    var months = cljs.core.nth.call(null, vec__13938, 1, null);
    var days = cljs.core.nth.call(null, vec__13938, 2, null);
    var hours = cljs.core.nth.call(null, vec__13938, 3, null);
    var minutes = cljs.core.nth.call(null, vec__13938, 4, null);
    var seconds = cljs.core.nth.call(null, vec__13938, 5, null);
    var ms = cljs.core.nth.call(null, vec__13938, 6, null);
    var offset = cljs.core.nth.call(null, vec__13938, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""));
  }
};
cljs.reader.read_date = function read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__13951_13963 = cljs.core.seq.call(null, form);
    var chunk__13952_13964 = null;
    var count__13953_13965 = 0;
    var i__13954_13966 = 0;
    while (true) {
      if (i__13954_13966 < count__13953_13965) {
        var x_13967 = cljs.core._nth.call(null, chunk__13952_13964, i__13954_13966);
        arr.push(x_13967);
        var G__13968 = seq__13951_13963;
        var G__13969 = chunk__13952_13964;
        var G__13970 = count__13953_13965;
        var G__13971 = i__13954_13966 + 1;
        seq__13951_13963 = G__13968;
        chunk__13952_13964 = G__13969;
        count__13953_13965 = G__13970;
        i__13954_13966 = G__13971;
        continue;
      } else {
        var temp__4092__auto___13972 = cljs.core.seq.call(null, seq__13951_13963);
        if (temp__4092__auto___13972) {
          var seq__13951_13973__$1 = temp__4092__auto___13972;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__13951_13973__$1)) {
            var c__4191__auto___13974 = cljs.core.chunk_first.call(null, seq__13951_13973__$1);
            var G__13975 = cljs.core.chunk_rest.call(null, seq__13951_13973__$1);
            var G__13976 = c__4191__auto___13974;
            var G__13977 = cljs.core.count.call(null, c__4191__auto___13974);
            var G__13978 = 0;
            seq__13951_13963 = G__13975;
            chunk__13952_13964 = G__13976;
            count__13953_13965 = G__13977;
            i__13954_13966 = G__13978;
            continue;
          } else {
            var x_13979 = cljs.core.first.call(null, seq__13951_13973__$1);
            arr.push(x_13979);
            var G__13980 = cljs.core.next.call(null, seq__13951_13973__$1);
            var G__13981 = null;
            var G__13982 = 0;
            var G__13983 = 0;
            seq__13951_13963 = G__13980;
            chunk__13952_13964 = G__13981;
            count__13953_13965 = G__13982;
            i__13954_13966 = G__13983;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj13956 = {};
        return obj13956;
      }();
      var seq__13957_13984 = cljs.core.seq.call(null, form);
      var chunk__13958_13985 = null;
      var count__13959_13986 = 0;
      var i__13960_13987 = 0;
      while (true) {
        if (i__13960_13987 < count__13959_13986) {
          var vec__13961_13988 = cljs.core._nth.call(null, chunk__13958_13985, i__13960_13987);
          var k_13989 = cljs.core.nth.call(null, vec__13961_13988, 0, null);
          var v_13990 = cljs.core.nth.call(null, vec__13961_13988, 1, null);
          obj[cljs.core.name.call(null, k_13989)] = v_13990;
          var G__13991 = seq__13957_13984;
          var G__13992 = chunk__13958_13985;
          var G__13993 = count__13959_13986;
          var G__13994 = i__13960_13987 + 1;
          seq__13957_13984 = G__13991;
          chunk__13958_13985 = G__13992;
          count__13959_13986 = G__13993;
          i__13960_13987 = G__13994;
          continue;
        } else {
          var temp__4092__auto___13995 = cljs.core.seq.call(null, seq__13957_13984);
          if (temp__4092__auto___13995) {
            var seq__13957_13996__$1 = temp__4092__auto___13995;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__13957_13996__$1)) {
              var c__4191__auto___13997 = cljs.core.chunk_first.call(null, seq__13957_13996__$1);
              var G__13998 = cljs.core.chunk_rest.call(null, seq__13957_13996__$1);
              var G__13999 = c__4191__auto___13997;
              var G__14000 = cljs.core.count.call(null, c__4191__auto___13997);
              var G__14001 = 0;
              seq__13957_13984 = G__13998;
              chunk__13958_13985 = G__13999;
              count__13959_13986 = G__14000;
              i__13960_13987 = G__14001;
              continue;
            } else {
              var vec__13962_14002 = cljs.core.first.call(null, seq__13957_13996__$1);
              var k_14003 = cljs.core.nth.call(null, vec__13962_14002, 0, null);
              var v_14004 = cljs.core.nth.call(null, vec__13962_14002, 1, null);
              obj[cljs.core.name.call(null, k_14003)] = v_14004;
              var G__14005 = cljs.core.next.call(null, seq__13957_13996__$1);
              var G__14006 = null;
              var G__14007 = 0;
              var G__14008 = 0;
              seq__13957_13984 = G__14005;
              chunk__13958_13985 = G__14006;
              count__13959_13986 = G__14007;
              i__13960_13987 = G__14008;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, null, [cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join(""));
      } else {
        return null;
      }
    }
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
      } else {
        return null;
      }
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return f;
  });
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return null;
  });
  return old_parser;
};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    this.creationStack = (new Error).stack;
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.Disposable.MONITORING_MODE = 0;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.bind(callback, opt_scope));
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn;
}};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersion("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersion("1.9b") || (goog.userAgent.IE && goog.userAgent.isVersion("8") || (goog.userAgent.OPERA && 
goog.userAgent.isVersion("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersion("528"))), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersion("8") || goog.userAgent.IE && !goog.userAgent.isVersion("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || (!!(goog.global["document"] && (document.documentElement && "ontouchstart" in document.documentElement)) || !!(goog.global["navigator"] && goog.global["navigator"]["msMaxTouchPoints"]))};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target;
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.defaultPrevented = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
  delete this.propagationStopped_;
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && (goog.userAgent.MAC && this.ctrlKey));
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventLike");
goog.events.Listenable = function() {
};
goog.events.Listenable.USE_LISTENABLE_INTERFACE = false;
goog.events.Listenable.IMPLEMENTED_BY_PROP_ = "__closure_listenable";
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP_] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return!!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP_]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function() {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
};
goog.events.Listener.ENABLE_MONITORING = false;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.isFunction(listener)) {
    this.isFunctionListener_ = true;
  } else {
    if (listener && (listener.handleEvent && goog.isFunction(listener.handleEvent))) {
      this.isFunctionListener_ = false;
    } else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = goog.events.ListenableKey.reserveKey();
  this.removed = false;
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if (this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject);
  }
  return this.listener.handleEvent.call(this.listener, eventObject);
};
goog.provide("goog.events");
goog.provide("goog.events.Key");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listenable");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.Key;
goog.events.ListenableType;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  var listenableKey;
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    listenableKey = src.listen((type), goog.events.wrapListener_(listener), opt_capt, opt_handler);
  } else {
    listenableKey = goog.events.listen_((src), type, listener, false, opt_capt, opt_handler);
  }
  var key = listenableKey.key;
  goog.events.listeners_[key] = listenableKey;
  return key;
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  var map = goog.events.listenerTree_;
  if (!(type in map)) {
    map[type] = {count_:0, remaining_:0};
  }
  map = map[type];
  if (!(capture in map)) {
    map[capture] = {count_:0, remaining_:0};
    map.count_++;
  }
  map = map[capture];
  var srcUid = goog.getUid(src);
  var listenerArray, listenerObj;
  map.remaining_++;
  if (!map[srcUid]) {
    listenerArray = map[srcUid] = [];
    map.count_++;
  } else {
    listenerArray = map[srcUid];
    for (var i = 0;i < listenerArray.length;i++) {
      listenerObj = listenerArray[i];
      if (listenerObj.listener == listener && listenerObj.handler == opt_handler) {
        if (listenerObj.removed) {
          break;
        }
        if (!callOnce) {
          listenerArray[i].callOnce = false;
        }
        return listenerArray[i];
      }
    }
  }
  var proxy = goog.events.getProxy();
  listenerObj = new goog.events.Listener;
  listenerObj.init(listener, proxy, src, type, capture, opt_handler);
  listenerObj.callOnce = callOnce;
  proxy.src = src;
  proxy.listener = listenerObj;
  listenerArray.push(listenerObj);
  if (!goog.events.sources_[srcUid]) {
    goog.events.sources_[srcUid] = [];
  }
  goog.events.sources_[srcUid].push(listenerObj);
  if (src.addEventListener) {
    if (src == goog.global || !src.customEvent_) {
      src.addEventListener(type, proxy, capture);
    }
  } else {
    src.attachEvent(goog.events.getOnString_(type), proxy);
  }
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  var listenableKey;
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    listenableKey = src.listenOnce((type), goog.events.wrapListener_(listener), opt_capt, opt_handler);
  } else {
    listenableKey = goog.events.listen_((src), type, listener, true, opt_capt, opt_handler);
  }
  var key = listenableKey.key;
  goog.events.listeners_[key] = listenableKey;
  return key;
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), goog.events.wrapListener_(listener), opt_capt, opt_handler);
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if (!listenerArray) {
    return false;
  }
  for (var i = 0;i < listenerArray.length;i++) {
    if (listenerArray[i].listener == listener && (listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler)) {
      return goog.events.unlistenByKey(listenerArray[i].key);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  var listener = goog.events.listeners_[key];
  if (!listener) {
    return false;
  }
  if (listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if (src.removeEventListener) {
    if (src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture);
    }
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  var srcUid = goog.getUid(src);
  if (goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if (sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid];
    }
  }
  listener.removed = true;
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if (listenerArray) {
    listenerArray.needsCleanup_ = true;
    goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  }
  delete goog.events.listeners_[key];
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.cleanUp = function(listenableKey) {
  delete goog.events.listeners_[listenableKey.key];
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if (!listenerArray.locked_) {
    if (listenerArray.needsCleanup_) {
      for (var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if (listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue;
        }
        if (oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex];
        }
        newIndex++;
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if (newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if (goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--;
        }
        if (goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type];
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  if (!noObj) {
    if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && (opt_obj && goog.events.Listenable.isImplementedBy(opt_obj))) {
      return opt_obj.removeAllListeners(opt_type);
    }
    var srcUid = goog.getUid((opt_obj));
    if (goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for (var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if (noType || opt_type == listener.type) {
          goog.events.unlistenByKey(listener.key);
          count++;
        }
      }
    }
  } else {
    goog.object.forEach(goog.events.listeners_, function(listener, key) {
      goog.events.unlistenByKey(key);
      count++;
    });
  }
  return count;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    return goog.events.getListeners_(obj, type, capture) || [];
  }
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if (type in map) {
    map = map[type];
    if (capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if (map[objUid]) {
        return map[objUid];
      }
    }
  }
  return null;
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener((type), goog.events.wrapListener_(listener), capture, opt_handler);
  }
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;i++) {
      if (!listenerArray[i].removed && (listenerArray[i].listener == listener && (listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler))) {
        return listenerArray[i];
      }
    }
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if (listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if (hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && (!!map[opt_capture] && objUid in map[opt_capture]);
    } else {
      if (!(hasType || hasCapture)) {
        return true;
      } else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture;
        });
      }
    }
  }
  return false;
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  var map = goog.events.listenerTree_;
  if (type in map) {
    map = map[type];
    if (capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject);
    }
  }
  return true;
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if (map[objUid]) {
    var remaining = --map.remaining_;
    var listenerArray = map[objUid];
    if (!listenerArray.locked_) {
      listenerArray.locked_ = 1;
    } else {
      listenerArray.locked_++;
    }
    try {
      var length = listenerArray.length;
      for (var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if (listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false;
        }
      }
    } finally {
      map.remaining_ = Math.max(remaining, map.remaining_);
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray);
    }
  }
  return Boolean(retval);
};
goog.events.fireListener = function(listener, eventObject) {
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener.key);
  }
  return listener.handleEvent(eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_);
};
goog.events.dispatchEvent = function(src, e) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    return src.dispatchEvent(e);
  }
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if (!(type in map)) {
    return true;
  }
  if (goog.isString(e)) {
    e = new goog.events.Event(e, src);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event((type), src);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || src;
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if (hasCapture) {
    ancestors = [];
    for (var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent);
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for (var i = ancestors.length - 1;!e.propagationStopped_ && (i >= 0 && targetsMap.remaining_);i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false;
    }
  }
  var hasBubble = false in map;
  if (hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if (hasCapture) {
      for (var i = 0;!e.propagationStopped_ && (i < ancestors.length && targetsMap.remaining_);i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false;
      }
    } else {
      for (var current = src;!e.propagationStopped_ && (current && targetsMap.remaining_);current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false;
      }
    }
  }
  return Boolean(rv);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if (!(type in map)) {
    return true;
  }
  map = map[type];
  var retval, targetsMap;
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var hasCapture = true in map;
    var hasBubble = false in map;
    if (hasCapture) {
      if (goog.events.isMarkedIeEvent_(ieEvent)) {
        return true;
      }
      goog.events.markIeEvent_(ieEvent);
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, (this));
    retval = true;
    try {
      if (hasCapture) {
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && (i >= 0 && targetsMap.remaining_);i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt);
        }
        if (hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for (var i = 0;!evt.propagationStopped_ && (i < ancestors.length && targetsMap.remaining_);i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt);
          }
        }
      } else {
        retval = goog.events.fireListener(listener, evt);
      }
    } finally {
      if (ancestors) {
        ancestors.length = 0;
      }
    }
    return retval;
  }
  var be = new goog.events.BrowserEvent(opt_evt, (this));
  retval = goog.events.fireListener(listener, be);
  return retval;
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener_ = function(listener) {
  if (goog.isFunction(listener)) {
    return listener;
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_] || (listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
    return listener.handleEvent(e);
  });
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    this.eventTargetListeners_ = {};
    this.reallyDisposed_ = false;
    this.actualEventTarget_ = this;
  }
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
  goog.events.Listenable.addImplementation(goog.events.EventTarget);
}
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    if (this.reallyDisposed_) {
      return true;
    }
    var ancestorsTree, ancestor = this.getParentEventTarget();
    if (ancestor) {
      ancestorsTree = [];
      var ancestorCount = 1;
      for (;ancestor;ancestor = ancestor.getParentEventTarget()) {
        ancestorsTree.push(ancestor);
        goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
      }
    }
    return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
  } else {
    return goog.events.dispatchEvent(this, e);
  }
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    this.removeAllListeners();
    this.reallyDisposed_ = true;
  } else {
    goog.events.removeAll(this);
  }
  this.parentEventTarget_ = null;
};
if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
  goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
    return this.listenInternal_(type, listener, false, opt_useCapture, opt_listenerScope);
  };
  goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
    return this.listenInternal_(type, listener, true, opt_useCapture, opt_listenerScope);
  };
  goog.events.EventTarget.prototype.listenInternal_ = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
    goog.asserts.assert(!this.reallyDisposed_, "Can not listen on disposed object.");
    var listenerArray = this.eventTargetListeners_[type] || (this.eventTargetListeners_[type] = []);
    var listenerObj;
    var index = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
    if (index > -1) {
      listenerObj = listenerArray[index];
      if (!callOnce) {
        listenerObj.callOnce = false;
      }
      return listenerObj;
    }
    listenerObj = new goog.events.Listener;
    listenerObj.init(listener, null, this, type, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
    return listenerObj;
  };
  goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
    if (!(type in this.eventTargetListeners_)) {
      return false;
    }
    var listenerArray = this.eventTargetListeners_[type];
    var index = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
    if (index > -1) {
      var listenerObj = listenerArray[index];
      goog.events.cleanUp(listenerObj);
      listenerObj.removed = true;
      return goog.array.removeAt(listenerArray, index);
    }
    return false;
  };
  goog.events.EventTarget.prototype.unlistenByKey = function(key) {
    var type = key.type;
    if (!(type in this.eventTargetListeners_)) {
      return false;
    }
    var removed = goog.array.remove(this.eventTargetListeners_[type], key);
    if (removed) {
      goog.events.cleanUp(key);
      key.removed = true;
    }
    return removed;
  };
  goog.events.EventTarget.prototype.removeAllListeners = function(opt_type, opt_capture) {
    var count = 0;
    for (var type in this.eventTargetListeners_) {
      if (!opt_type || type == opt_type) {
        var listenerArray = this.eventTargetListeners_[type];
        for (var i = 0;i < listenerArray.length;i++) {
          ++count;
          goog.events.cleanUp(listenerArray[i]);
          listenerArray[i].removed = true;
        }
        listenerArray.length = 0;
      }
    }
    return count;
  };
  goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
    goog.asserts.assert(!this.reallyDisposed_, "Can not fire listeners after dispose() completed.");
    if (!(type in this.eventTargetListeners_)) {
      return true;
    }
    var rv = true;
    var listenerArray = goog.array.clone(this.eventTargetListeners_[type]);
    for (var i = 0;i < listenerArray.length;++i) {
      var listener = listenerArray[i];
      if (listener && (!listener.removed && listener.capture == capture)) {
        if (listener.callOnce) {
          this.unlistenByKey(listener);
        }
        rv = listener.handleEvent(eventObject) !== false && rv;
      }
    }
    return rv && eventObject.returnValue_ != false;
  };
  goog.events.EventTarget.prototype.getListeners = function(type, capture) {
    var listenerArray = this.eventTargetListeners_[type];
    var rv = [];
    if (listenerArray) {
      for (var i = 0;i < listenerArray.length;++i) {
        var listenerObj = listenerArray[i];
        if (listenerObj.capture == capture) {
          rv.push(listenerObj);
        }
      }
    }
    return rv;
  };
  goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
    var listenerArray = this.eventTargetListeners_[type];
    var i = -1;
    if (listenerArray) {
      i = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
    }
    return i > -1 ? listenerArray[i] : null;
  };
  goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    return goog.object.some(this.eventTargetListeners_, function(listenersArray, type) {
      for (var i = 0;i < listenersArray.length;++i) {
        if ((!hasType || listenersArray[i].type == opt_type) && (!hasCapture || listenersArray[i].capture == opt_capture)) {
          return true;
        }
      }
      return false;
    });
  };
  goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
    this.actualEventTarget_ = target;
  };
  goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
    var type = e.type || (e);
    if (goog.isString(e)) {
      e = new goog.events.Event(e, target);
    } else {
      if (!(e instanceof goog.events.Event)) {
        var oldEvent = e;
        e = new goog.events.Event(type, target);
        goog.object.extend(e, oldEvent);
      } else {
        e.target = e.target || target;
      }
    }
    var rv = true, currentTarget;
    if (opt_ancestorsTree) {
      for (var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
        currentTarget = e.currentTarget = opt_ancestorsTree[i];
        rv = currentTarget.fireListeners(type, true, e) && rv;
      }
    }
    if (!e.propagationStopped_) {
      currentTarget = e.currentTarget = target;
      rv = currentTarget.fireListeners(type, true, e) && rv;
      if (!e.propagationStopped_) {
        rv = currentTarget.fireListeners(type, false, e) && rv;
      }
    }
    if (opt_ancestorsTree) {
      for (i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
        currentTarget = e.currentTarget = opt_ancestorsTree[i];
        rv = currentTarget.fireListeners(type, false, e) && rv;
      }
    }
    return rv;
  };
  goog.events.EventTarget.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
    for (var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.listener == listener && (listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope)) {
        return i;
      }
    }
    return-1;
  };
}
;goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if (this.timer_ && this.enabled) {
    this.stop();
    this.start();
  } else {
    if (this.timer_) {
      this.stop();
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return;
    }
    this.dispatchTick();
    if (this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now();
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if (!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now();
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if (this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null;
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    if (opt_handler) {
      listener = goog.bind(listener, opt_handler);
    }
  } else {
    if (listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  if (opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1;
  } else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      return f.call(opt_obj, val, undefined, iterator);
    }
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if (i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      } else {
        i++;
        return this.next();
      }
    }
  };
  return newIter;
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while (true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if (val1 != val2) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    } else {
      if (b1 && !b2) {
        return false;
      }
      if (!b2) {
        try {
          val2 = iterable2.next();
          return false;
        } catch (ex1) {
          if (ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true;
        }
      }
    }
  }
  return false;
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if (opt_values) {
    this.addAll(opt_values);
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if (type == "object" && val || type == "function") {
    return "o" + goog.getUid((val));
  } else {
    return type.substr(0, 1) + val;
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount();
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element);
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.add(values[i]);
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.remove(values[i]);
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear();
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty();
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this);
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for (var i = 0;i < values.length;i++) {
    var value = values[i];
    if (this.contains(value)) {
      result.add(value);
    }
  }
  return result;
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result;
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues();
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this);
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col);
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if (this.getCount() > colCount) {
    return false;
  }
  if (!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col);
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value);
  });
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false);
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if (goog.userAgent.WEBKIT && !goog.userAgent.isVersion("535.3")) {
    retVal = !retVal;
  }
  target.onerror = function(message, url, line) {
    if (oldErrorHandler) {
      oldErrorHandler(message, url, line);
    }
    logFunc({message:message, fileName:url, line:line});
    return retVal;
  };
};
goog.debug.expose = function(obj, opt_showFn) {
  if (typeof obj == "undefined") {
    return "undefined";
  }
  if (obj == null) {
    return "NULL";
  }
  var str = [];
  for (var x in obj) {
    if (!opt_showFn && goog.isFunction(obj[x])) {
      continue;
    }
    var s = x + " \x3d ";
    try {
      s += obj[x];
    } catch (e) {
      s += "*** " + e + " ***";
    }
    str.push(s);
  }
  return str.join("\n");
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space);
    };
    try {
      if (!goog.isDef(obj)) {
        str.push("undefined");
      } else {
        if (goog.isNull(obj)) {
          str.push("NULL");
        } else {
          if (goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"');
          } else {
            if (goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)));
            } else {
              if (goog.isObject(obj)) {
                if (previous.contains(obj)) {
                  str.push("*** reference loop detected ***");
                } else {
                  previous.add(obj);
                  str.push("{");
                  for (var x in obj) {
                    if (!opt_showFn && goog.isFunction(obj[x])) {
                      continue;
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace);
                  }
                  str.push("\n" + space + "}");
                }
              } else {
                str.push(obj);
              }
            }
          }
        }
      }
    } catch (e) {
      str.push("*** " + e + " ***");
    }
  };
  helper(obj, "");
  return str.join("");
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for (var i = 0;i < arr.length;i++) {
    if (goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]));
    } else {
      str.push(arr[i]);
    }
  }
  return "[ " + str.join(", ") + " ]";
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: \x3ca href\x3d"view-source:' + e.fileName + '" target\x3d"_new"\x3e' + e.fileName + "\x3c/a\x3e\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-\x3e ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-\x3e ");
    return error;
  } catch (e2) {
    return "Exception trying to expose exception! You win, we lose. " + e2;
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if (goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"};
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || (err.line || "Not available");
  } catch (e) {
    lineNumber = "Not available";
    threwError = true;
  }
  try {
    fileName = err.fileName || (err.filename || (err.sourceURL || (goog.global["$googDebugFname"] || href)));
  } catch (e) {
    fileName = "Not available";
    threwError = true;
  }
  if (threwError || (!err.lineNumber || (!err.fileName || !err.stack))) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"};
  }
  return err;
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if (!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller);
  }
  if (opt_message) {
    var x = 0;
    while (error["message" + x]) {
      ++x;
    }
    error["message" + x] = String(opt_message);
  }
  return error;
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while (fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller;
    } catch (e) {
      sb.push("[exception trying to get caller]\n");
      break;
    }
    depth++;
    if (depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break;
    }
  }
  if (opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]");
  } else {
    sb.push("[end]");
  }
  return sb.join("");
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, []);
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if (goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]");
  } else {
    if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for (var i = 0;i < args.length;i++) {
        if (i > 0) {
          sb.push(", ");
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break;
        }
        if (argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "...";
        }
        sb.push(argDesc);
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));
      } catch (e) {
        sb.push("[exception trying to get caller]\n");
      }
    } else {
      if (fn) {
        sb.push("[...long stack...]");
      } else {
        sb.push("[end]");
      }
    }
  }
  return sb.join("");
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver;
};
goog.debug.getFunctionName = function(fn) {
  if (goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn];
  }
  if (goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if (name) {
      goog.debug.fnNameCache_[fn] = name;
      return name;
    }
  }
  var functionSource = String(fn);
  if (!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if (matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method;
    } else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]";
    }
  }
  return goog.debug.fnNameCache_[functionSource];
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]");
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if (goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++;
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_;
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_;
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_;
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception;
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_;
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text;
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName;
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level;
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_;
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg;
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_;
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time;
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_;
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear();
};
goog.debug.LogBuffer.getInstance = function() {
  if (!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer;
  }
  return goog.debug.LogBuffer.instance_;
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if (this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret;
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName);
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0;
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false;
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if (!buffer[0]) {
    return;
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func((buffer[i]));
  } while (i != curIndex);
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name;
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if (!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_;
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value;
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name;
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for (var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  if (value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value];
  }
  for (var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if (level.value <= value) {
      return level;
    }
  }
  return null;
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name);
};
goog.debug.Logger.logToProfilers = function(msg) {
  if (goog.global["console"]) {
    if (goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg);
    } else {
      if (goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg);
      }
    }
  }
  if (goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg);
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_;
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    if (!this.handlers_) {
      this.handlers_ = [];
    }
    this.handlers_.push(handler);
  } else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler);
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler);
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_;
};
goog.debug.Logger.prototype.getChildren = function() {
  if (!this.children_) {
    this.children_ = {};
  }
  return this.children_;
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level;
  } else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level;
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if (!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_;
  }
  if (this.level_) {
    return this.level_;
  }
  if (this.parent_) {
    return this.parent_.getEffectiveLevel();
  }
  goog.asserts.fail("Root logger has no level set.");
  return null;
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value;
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if (this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception));
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if (goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  } else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_);
  }
  if (opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller));
  }
  return logRecord;
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception);
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception);
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception);
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception);
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if (this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord);
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while (target) {
      target.callPublish_(logRecord);
      target = target.getParent();
    }
  } else {
    for (var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if (this.handlers_) {
    for (var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent;
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger;
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if (!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG);
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_;
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return(goog.debug.LogManager.rootLogger_);
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name);
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")");
  };
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger);
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger;
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if (/^\s*$/.test(s)) {
    return false;
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""));
};
goog.json.parse = function(s) {
  var o = String(s);
  if (goog.json.isValid_(o)) {
    try {
      return(eval("(" + o + ")"));
    } catch (ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return(eval("(" + s + ")"));
};
goog.json.Replacer;
goog.json.Reviver;
goog.json.serialize = function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object);
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer;
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("");
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_((object), sb);
      break;
    case "number":
      this.serializeNumber_((object), sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if (object == null) {
        sb.push("null");
        break;
      }
      if (goog.isArray(object)) {
        this.serializeArray((object), sb);
        break;
      }
      this.serializeObject_((object), sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);;
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if (c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c];
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if (cc < 16) {
      rv += "000";
    } else {
      if (cc < 256) {
        rv += "00";
      } else {
        if (cc < 4096) {
          rv += "0";
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16);
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null");
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for (var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serialize_(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ",";
  }
  sb.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if (typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ",";
      }
    }
  }
  sb.push("}");
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return "No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return "Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return "File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return "Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return "Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return "An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return "Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return "Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return "Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return "The resource is not available offline";
    default:
      return "Unrecognized error code";
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false;
  }
};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory;
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_();
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_();
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance();
};
goog.net.XmlHttp.ASSUME_NATIVE_XHR = false;
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions();
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory((factory), (optionsFactory)));
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory;
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this);
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if (progId) {
    return new ActiveXObject(progId);
  } else {
    return new XMLHttpRequest;
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if (progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;
  }
  return options;
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR) {
    return "";
  }
  if (!this.ieProgId_ && (typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined")) {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for (var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate;
      } catch (e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return(this.ieProgId_);
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && (pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "\x26", key, "\x3d", goog.string.urlEncode(value)]);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || (followingChar == goog.uri.utils.CharCode_.EQUAL || (followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH))) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if (opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback);
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if (opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval);
  }
  if (opt_withCredentials) {
    x.setWithCredentials(opt_withCredentials);
  }
  x.send(url, opt_method, opt_content, opt_headers);
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while (instances.length) {
    instances.pop().dispose();
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo);
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_;
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type;
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials;
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_;
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if (this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false;
  } catch (err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return;
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if (opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value);
    });
  }
  var contentIsFormData = goog.global["FormData"] && content instanceof goog.global["FormData"];
  if (method == "POST" && (!headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER) && !contentIsFormData)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value);
  }, this);
  if (this.responseType_) {
    this.xhr_.responseType = this.responseType_;
  }
  if (goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_;
  }
  try {
    if (this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null;
    }
    if (this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_);
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false;
  } catch (err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if (typeof goog == "undefined") {
  } else {
    if (this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT);
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if (this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_();
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if (!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR);
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if (this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_();
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if (this.xhr_) {
    if (this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false;
    }
    this.cleanUpXhr_(true);
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this);
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if (!this.inOpen_ && (!this.inSend_ && !this.inAbort_)) {
    this.onReadyStateChangeEntryPoint_();
  } else {
    this.onReadyStateChangeHelper_();
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_();
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if (!this.active_) {
    return;
  }
  if (typeof goog == "undefined") {
  } else {
    if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && (this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2)) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"));
    } else {
      if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return;
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if (this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if (this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS);
          } else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_();
          }
        } finally {
          this.cleanUpXhr_();
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if (this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if (this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null;
    }
    if (!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY);
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange;
    } catch (e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message);
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_;
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_();
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? (this.xhr_.readyState) : goog.net.XmlHttp.ReadyState.UNINITIALIZED;
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;
  } catch (e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1;
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : "";
  } catch (e) {
    this.logger_.fine("Can not get status: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_);
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : "";
  } catch (e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getResponseBody = function() {
  try {
    if (this.xhr_ && "responseBody" in this.xhr_) {
      return this.xhr_["responseBody"];
    }
  } catch (e) {
    this.logger_.fine("Can not get responseBody: " + e.message);
  }
  return null;
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null;
  } catch (e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if (!this.xhr_) {
    return undefined;
  }
  var responseText = this.xhr_.responseText;
  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length);
  }
  return goog.json.parse(responseText);
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if (!this.xhr_) {
      return null;
    }
    if ("response" in this.xhr_) {
      return this.xhr_.response;
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if ("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer;
        }
      ;
    }
    this.logger_.severe("Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null;
  } catch (e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined;
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_;
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_);
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]";
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
});
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj13778 = {};
  return obj13778;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3431__auto__ = port;
    if (and__3431__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4070__auto__ = port == null ? null : port;
    return function() {
      var or__3443__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj13780 = {};
  return obj13780;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if (function() {
    var and__3431__auto__ = port;
    if (and__3431__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler);
  } else {
    var x__4070__auto__ = port == null ? null : port;
    return function() {
      var or__3443__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj13782 = {};
  return obj13782;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3431__auto__ = chan;
    if (and__3431__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4070__auto__ = chan == null ? null : chan;
    return function() {
      var or__3443__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj13784 = {};
  return obj13784;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3431__auto__ = h;
    if (and__3431__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4070__auto__ = h == null ? null : h;
    return function() {
      var or__3443__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3431__auto__ = h;
    if (and__3431__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4070__auto__ = h == null ? null : h;
    return function() {
      var or__3443__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj13786 = {};
  return obj13786;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3431__auto__ = b;
    if (and__3431__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4070__auto__ = b == null ? null : b;
    return function() {
      var or__3443__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3431__auto__ = b;
    if (and__3431__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4070__auto__ = b == null ? null : b;
    return function() {
      var or__3443__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if (function() {
    var and__3431__auto__ = b;
    if (and__3431__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm);
  } else {
    var x__4070__auto__ = b == null ? null : b;
    return function() {
      var or__3443__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj13788 = {};
  return obj13788;
}();
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", 4635210724));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t13806 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t13806 = function(f, fn_handler, meta13807) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta13807 = meta13807;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t13806.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t13806.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t13806";
    cljs.core.async.impl.ioc_helpers.t13806.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async.impl.ioc-helpers/t13806");
    };
    cljs.core.async.impl.ioc_helpers.t13806.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t13806.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t13806.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t13806.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13808) {
      var self__ = this;
      var _13808__$1 = this;
      return self__.meta13807;
    };
    cljs.core.async.impl.ioc_helpers.t13806.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13808, meta13807__$1) {
      var self__ = this;
      var _13808__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t13806(self__.f, self__.fn_handler, meta13807__$1);
    };
    cljs.core.async.impl.ioc_helpers.__GT_t13806 = function __GT_t13806(f__$1, fn_handler__$1, meta13807) {
      return new cljs.core.async.impl.ioc_helpers.t13806(f__$1, fn_handler__$1, meta13807);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t13806(f, fn_handler, null);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e13810) {
    if (e13810 instanceof Object) {
      var ex = e13810;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e13810;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_13813_13815 = state;
    statearr_13813_13815[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_13813_13815[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_13814_13816 = state;
    statearr_13814_13816[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_13814_13816[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
    var statearr_13819_13821 = state;
    statearr_13819_13821[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_13819_13821[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_13820_13822 = state;
    statearr_13820_13822[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_13820_13822[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__13823) {
    var map__13828 = p__13823;
    var map__13828__$1 = cljs.core.seq_QMARK_.call(null, map__13828) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13828) : map__13828;
    var opts = map__13828__$1;
    var statearr_13829_13832 = state;
    statearr_13829_13832[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4092__auto__ = cljs.core.async.do_alts.call(null, function(val) {
      var statearr_13830_13833 = state;
      statearr_13830_13833[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
    }, ports, opts);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var cb = temp__4092__auto__;
      var statearr_13831_13834 = state;
      statearr_13831_13834[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__13823 = null;
    if (arguments.length > 3) {
      p__13823 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__13823);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__13835) {
    var state = cljs.core.first(arglist__13835);
    arglist__13835 = cljs.core.next(arglist__13835);
    var cont_block = cljs.core.first(arglist__13835);
    arglist__13835 = cljs.core.next(arglist__13835);
    var ports = cljs.core.first(arglist__13835);
    var p__13823 = cljs.core.rest(arglist__13835);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__13823);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
      return null;
    }));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4024__auto__) {
  var self__ = this;
  var this__4024__auto____$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_imap.call(null, this__4024__auto____$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4029__auto__, k__4030__auto__) {
  var self__ = this;
  var this__4029__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4029__auto____$1, k__4030__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4031__auto__, k13837, else__4032__auto__) {
  var self__ = this;
  var this__4031__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k13837, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893))) {
    return self__.catch_block;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k13837, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687))) {
      return self__.catch_exception;
    } else {
      if (cljs.core.keyword_identical_QMARK_.call(null, k13837, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429))) {
        return self__.finally_block;
      } else {
        if (cljs.core.keyword_identical_QMARK_.call(null, k13837, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097))) {
          return self__.continue_block;
        } else {
          if (cljs.core.keyword_identical_QMARK_.call(null, k13837, new cljs.core.Keyword(null, "prev", "prev", 1017353637))) {
            return self__.prev;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.get.call(null, self__.__extmap, k13837, else__4032__auto__);
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4036__auto__, k__4037__auto__, G__13836) {
  var self__ = this;
  var this__4036__auto____$1 = this;
  var pred__13839 = cljs.core.keyword_identical_QMARK_;
  var expr__13840 = k__4037__auto__;
  if (cljs.core.truth_(pred__13839.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), expr__13840))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__13836, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__13839.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), expr__13840))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__13836, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__13839.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), expr__13840))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__13836, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__13839.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), expr__13840))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__13836, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__13839.call(null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), expr__13840))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__13836, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4037__auto__, G__13836), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4043__auto__, writer__4044__auto__, opts__4045__auto__) {
  var self__ = this;
  var this__4043__auto____$1 = this;
  var pr_pair__4046__auto__ = function(keyval__4047__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4044__auto__, cljs.core.pr_writer, "", " ", "", opts__4045__auto__, keyval__4047__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4044__auto__, pr_pair__4046__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4045__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", 1017353637), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4034__auto__, entry__4035__auto__) {
  var self__ = this;
  var this__4034__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4035__auto__)) {
    return cljs.core._assoc.call(null, this__4034__auto____$1, cljs.core._nth.call(null, entry__4035__auto__, 0), cljs.core._nth.call(null, entry__4035__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4034__auto____$1, entry__4035__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4041__auto__) {
  var self__ = this;
  var this__4041__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", 1017353637), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4033__auto__) {
  var self__ = this;
  var this__4033__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4025__auto__, other__4026__auto__) {
  var self__ = this;
  var this__4025__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3431__auto__ = other__4026__auto__;
    if (cljs.core.truth_(and__3431__auto__)) {
      return this__4025__auto____$1.constructor === other__4026__auto__.constructor && cljs.core.equiv_map.call(null, this__4025__auto____$1, other__4026__auto__);
    } else {
      return and__3431__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4028__auto__, G__13836) {
  var self__ = this;
  var this__4028__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__13836, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4023__auto__) {
  var self__ = this;
  var this__4023__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4027__auto__) {
  var self__ = this;
  var this__4027__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4038__auto__, k__4039__auto__) {
  var self__ = this;
  var this__4038__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), 
  null], null), null), k__4039__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4038__auto____$1), self__.__meta), k__4039__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4039__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4063__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4063__auto__, writer__4064__auto__) {
  return cljs.core._write.call(null, writer__4064__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__13838) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).cljs$core$IFn$_invoke$arity$1(G__13838), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).cljs$core$IFn$_invoke$arity$1(G__13838), (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(G__13838), (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).cljs$core$IFn$_invoke$arity$1(G__13838), 
  (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(G__13838), null, cljs.core.dissoc.call(null, G__13838, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), new cljs.core.Keyword(null, "prev", "prev", 1017353637)));
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_13843 = state;
  statearr_13843[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_13843;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3431__auto__ = exception;
      if (cljs.core.truth_(and__3431__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3431__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3431__auto__ = exception;
        if (cljs.core.truth_(and__3431__auto__)) {
          var and__3431__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3431__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3431__auto____$1;
          }
        } else {
          return and__3431__auto__;
        }
      }())) {
        var statearr_13849 = state;
        statearr_13849[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_13849[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_13849[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_13849[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null);
        return statearr_13849;
      } else {
        if (cljs.core.truth_(function() {
          var and__3431__auto__ = exception;
          if (cljs.core.truth_(and__3431__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3431__auto__;
          }
        }())) {
          var statearr_13850_13854 = state;
          statearr_13850_13854[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__13855 = state;
          state = G__13855;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3431__auto__ = exception;
            if (cljs.core.truth_(and__3431__auto__)) {
              var and__3431__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3431__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3431__auto____$1;
              }
            } else {
              return and__3431__auto__;
            }
          }())) {
            var statearr_13851 = state;
            statearr_13851[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_13851[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
            return statearr_13851;
          } else {
            if (cljs.core.truth_(function() {
              var and__3431__auto__ = cljs.core.not.call(null, exception);
              if (and__3431__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3431__auto__;
              }
            }())) {
              var statearr_13852 = state;
              statearr_13852[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_13852[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
              return statearr_13852;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_13853 = state;
                statearr_13853[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_13853[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_13853;
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  if (false) {
                    return null;
                  } else {
                    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("No matching clause"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, false))].join(""));
                  }
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__13800 = cnt + 1;
      cnt = G__13800;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4291__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4291__auto__) {
      var v_13801 = this$.pop();
      if (keep_QMARK_.call(null, v_13801)) {
        this$.unshift(v_13801);
      } else {
      }
      var G__13802 = x + 1;
      x = G__13802;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", -1640531465, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, this$__$1))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't add to a full buffer"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -1337857039, null), new cljs.core.Symbol(null, "this", "this", -1636972457, null)))))].join(""));
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    return null;
  } else {
    return self__.buf.unshift(itm);
  }
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_13789 = 0;
  while (true) {
    var m_13790 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_13790 == null) {
    } else {
      m_13790.call(null);
      if (count_13789 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__13791 = count_13789 + 1;
        count_13789 = G__13791;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
if (typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null);
  };
} else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3431__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (and__3431__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3431__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if (typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0);
    } else {
      if (typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t13795 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t13795 = function(val, box, meta13796) {
      this.val = val;
      this.box = box;
      this.meta13796 = meta13796;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t13795.cljs$lang$type = true;
    cljs.core.async.impl.channels.t13795.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t13795";
    cljs.core.async.impl.channels.t13795.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async.impl.channels/t13795");
    };
    cljs.core.async.impl.channels.t13795.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t13795.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13797) {
      var self__ = this;
      var _13797__$1 = this;
      return self__.meta13796;
    };
    cljs.core.async.impl.channels.t13795.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13797, meta13796__$1) {
      var self__ = this;
      var _13797__$1 = this;
      return new cljs.core.async.impl.channels.t13795(self__.val, self__.box, meta13796__$1);
    };
    cljs.core.async.impl.channels.__GT_t13795 = function __GT_t13795(val__$1, box__$1, meta13796) {
      return new cljs.core.async.impl.channels.t13795(val__$1, box__$1, meta13796);
    };
  }
  return new cljs.core.async.impl.channels.t13795(val, box, null);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4013__auto__, writer__4014__auto__, opts__4015__auto__) {
  return cljs.core._write.call(null, writer__4014__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    while (true) {
      var taker_13798 = self__.takes.pop();
      if (taker_13798 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_13798)) {
          var take_cb_13799 = cljs.core.async.impl.protocols.commit.call(null, taker_13798);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_13799, taker_13798) {
            return function() {
              return take_cb_13799.call(null, null);
            };
          }(take_cb_13799, taker_13798));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      return cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
    } else {
      while (true) {
        var putter = self__.puts.pop();
        if (!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, put_cb);
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            continue;
          }
        } else {
          if (self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null);
          } else {
            if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
            } else {
              self__.dirty_takes = self__.dirty_takes + 1;
            }
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 1395928862, null), new cljs.core.Symbol(null, 
              "takes", "takes", -1530407291, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
            }
            self__.takes.unbounded_unshift(handler);
            return null;
          }
        }
        break;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "val", "val", -1640415014, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, null);
  } else {
    while (true) {
      var taker = self__.takes.pop();
      if (!(taker == null)) {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker) {
            return function() {
              return take_cb.call(null, val);
            };
          }(take_cb, _, taker));
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          continue;
        }
      } else {
        if (!(self__.buf == null || cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
          } else {
            self__.dirty_puts = self__.dirty_puts + 1;
          }
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            1395928862, null), new cljs.core.Symbol(null, "puts", "puts", -1637078787, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null;
        }
      }
      break;
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed);
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, null);
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__13753 = level + 1;
        level = G__13753;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_13754 = 0;
    while (true) {
      if (i_13754 < arr.length) {
        arr[i_13754] = null;
        var G__13755 = i_13754 + 1;
        i_13754 = G__13755;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4090__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4090__auto__)) {
              var x_SINGLEQUOTE_ = temp__4090__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__13756 = x_SINGLEQUOTE_;
                x__$1 = G__13756;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__13757 = x__$1;
        var G__13758 = k;
        var G__13759 = level - 1;
        var G__13760 = update;
        x = G__13757;
        k = G__13758;
        level = G__13759;
        update = G__13760;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function iter(node) {
    return new cljs.core.LazySeq(null, function() {
      if (node == null) {
        return null;
      } else {
        return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
      }
    }, null, null);
  };
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_13761 = self__.level + 1;
      while (true) {
        if (i_13761 <= new_level + 1) {
          update[i_13761] = self__.header;
          var G__13762 = i_13761 + 1;
          i_13761 = G__13762;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_13763 = 0;
    while (true) {
      if (i_13763 <= self__.level) {
        var links_13764 = update[i_13763].forward;
        if (links_13764[i_13763] === x__$1) {
          links_13764[i_13763] = x__$1.forward[i_13763];
          var G__13765 = i_13763 + 1;
          i_13763 = G__13765;
          continue;
        } else {
          var G__13766 = i_13763 + 1;
          i_13763 = G__13766;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__13767 = x_SINGLEQUOTE_;
              x__$1 = G__13767;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__13768 = nx;
        var G__13769 = level__$1 - 1;
        x = G__13768;
        level__$1 = G__13769;
        continue;
      } else {
        var G__13770 = x;
        var G__13771 = level__$1 - 1;
        x = G__13770;
        level__$1 = G__13771;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__13772 = x_SINGLEQUOTE_;
              x__$1 = G__13772;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__13773 = nx;
        var G__13774 = level__$1 - 1;
        x = G__13773;
        level__$1 = G__13774;
        continue;
      } else {
        var G__13775 = x;
        var G__13776 = level__$1 - 1;
        x = G__13775;
        level__$1 = G__13776;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3443__auto__ = cljs.core.truth_(function() {
    var and__3431__auto__ = me;
    if (cljs.core.truth_(and__3431__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3431__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3443__auto__)) {
    return or__3443__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function() {
      cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
      return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
    }, msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.ioc_helpers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t11202 !== "undefined") {
  } else {
    cljs.core.async.t11202 = function(f, fn_handler, meta11203) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta11203 = meta11203;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t11202.cljs$lang$type = true;
    cljs.core.async.t11202.cljs$lang$ctorStr = "cljs.core.async/t11202";
    cljs.core.async.t11202.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async/t11202");
    };
    cljs.core.async.t11202.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t11202.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t11202.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t11202.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11204) {
      var self__ = this;
      var _11204__$1 = this;
      return self__.meta11203;
    };
    cljs.core.async.t11202.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11204, meta11203__$1) {
      var self__ = this;
      var _11204__$1 = this;
      return new cljs.core.async.t11202(self__.f, self__.fn_handler, meta11203__$1);
    };
    cljs.core.async.__GT_t11202 = function __GT_t11202(f__$1, fn_handler__$1, meta11203) {
      return new cljs.core.async.t11202(f__$1, fn_handler__$1, meta11203);
    };
  }
  return new cljs.core.async.t11202(f, fn_handler, null);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__11206 = buff;
  if (G__11206) {
    var bit__4093__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3443__auto__ = bit__4093__auto__;
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return G__11206.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__11206.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__11206);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__11206);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1);
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  if (null) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3c! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_11207 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_11207);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function() {
          return fn1.call(null, val_11207);
        });
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop() {
  return null;
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  if (null) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3e! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.call(null, port, val, cljs.core.async.nop);
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.call(null, port, val, fn0, true);
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn0));
    if (cljs.core.truth_(function() {
      var and__3431__auto__ = ret;
      if (cljs.core.truth_(and__3431__auto__)) {
        return cljs.core.not_EQ_.call(null, fn0, cljs.core.async.nop);
      } else {
        return and__3431__auto__;
      }
    }())) {
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn0.call(null);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, fn0);
      }
    } else {
    }
    return null;
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4291__auto___11208 = n;
  var x_11209 = 0;
  while (true) {
    if (x_11209 < n__4291__auto___11208) {
      a[x_11209] = 0;
      var G__11210 = x_11209 + 1;
      x_11209 = G__11210;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__11211 = i + 1;
      i = G__11211;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t11215 !== "undefined") {
  } else {
    cljs.core.async.t11215 = function(flag, alt_flag, meta11216) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta11216 = meta11216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t11215.cljs$lang$type = true;
    cljs.core.async.t11215.cljs$lang$ctorStr = "cljs.core.async/t11215";
    cljs.core.async.t11215.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async/t11215");
    };
    cljs.core.async.t11215.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t11215.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.deref.call(null, self__.flag);
    };
    cljs.core.async.t11215.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.reset_BANG_.call(null, self__.flag, null);
      return true;
    };
    cljs.core.async.t11215.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11217) {
      var self__ = this;
      var _11217__$1 = this;
      return self__.meta11216;
    };
    cljs.core.async.t11215.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11217, meta11216__$1) {
      var self__ = this;
      var _11217__$1 = this;
      return new cljs.core.async.t11215(self__.flag, self__.alt_flag, meta11216__$1);
    };
    cljs.core.async.__GT_t11215 = function __GT_t11215(flag__$1, alt_flag__$1, meta11216) {
      return new cljs.core.async.t11215(flag__$1, alt_flag__$1, meta11216);
    };
  }
  return new cljs.core.async.t11215(flag, alt_flag, null);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t11221 !== "undefined") {
  } else {
    cljs.core.async.t11221 = function(cb, flag, alt_handler, meta11222) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta11222 = meta11222;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t11221.cljs$lang$type = true;
    cljs.core.async.t11221.cljs$lang$ctorStr = "cljs.core.async/t11221";
    cljs.core.async.t11221.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async/t11221");
    };
    cljs.core.async.t11221.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t11221.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t11221.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t11221.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11223) {
      var self__ = this;
      var _11223__$1 = this;
      return self__.meta11222;
    };
    cljs.core.async.t11221.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11223, meta11222__$1) {
      var self__ = this;
      var _11223__$1 = this;
      return new cljs.core.async.t11221(self__.cb, self__.flag, self__.alt_handler, meta11222__$1);
    };
    cljs.core.async.__GT_t11221 = function __GT_t11221(cb__$1, flag__$1, alt_handler__$1, meta11222) {
      return new cljs.core.async.t11221(cb__$1, flag__$1, alt_handler__$1, meta11222);
    };
  }
  return new cljs.core.async.t11221(cb, flag, alt_handler, null);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 4143410454)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__11224_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__11224_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3443__auto__ = wport;
            if (cljs.core.truth_(or__3443__auto__)) {
              return or__3443__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__11225 = i + 1;
          i = G__11225;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3443__auto__ = ret;
  if (cljs.core.truth_(or__3443__auto__)) {
    return or__3443__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
      var temp__4092__auto__ = function() {
        var and__3431__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3431__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3431__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4092__auto__)) {
        var got = temp__4092__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", 2558708147)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", 2558708147)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__11226) {
    var map__11228 = p__11226;
    var map__11228__$1 = cljs.core.seq_QMARK_.call(null, map__11228) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11228) : map__11228;
    var opts = map__11228__$1;
    if (null) {
      return null;
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("alts! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
    }
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__11226 = null;
    if (arguments.length > 1) {
      p__11226 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__11226);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__11229) {
    var ports = cljs.core.first(arglist__11229);
    var p__11226 = cljs.core.rest(arglist__11229);
    return alts_BANG___delegate(ports, p__11226);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t11237 !== "undefined") {
  } else {
    cljs.core.async.t11237 = function(ch, f, map_LT_, meta11238) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta11238 = meta11238;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t11237.cljs$lang$type = true;
    cljs.core.async.t11237.cljs$lang$ctorStr = "cljs.core.async/t11237";
    cljs.core.async.t11237.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async/t11237");
    };
    cljs.core.async.t11237.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t11237.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
    };
    cljs.core.async.t11237.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t11237.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t11240 !== "undefined") {
        } else {
          cljs.core.async.t11240 = function(fn1, _, meta11238, ch, f, map_LT_, meta11241) {
            this.fn1 = fn1;
            this._ = _;
            this.meta11238 = meta11238;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta11241 = meta11241;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t11240.cljs$lang$type = true;
          cljs.core.async.t11240.cljs$lang$ctorStr = "cljs.core.async/t11240";
          cljs.core.async.t11240.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
            return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async/t11240");
          };
          cljs.core.async.t11240.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t11240.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
          };
          cljs.core.async.t11240.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1);
          };
          cljs.core.async.t11240.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
            return function(f1, ___$4) {
              return function(p1__11230_SHARP_) {
                return f1.call(null, p1__11230_SHARP_ == null ? null : self__.f.call(null, p1__11230_SHARP_));
              };
            }(f1, ___$4);
          };
          cljs.core.async.t11240.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11242) {
            var self__ = this;
            var _11242__$1 = this;
            return self__.meta11241;
          };
          cljs.core.async.t11240.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11242, meta11241__$1) {
            var self__ = this;
            var _11242__$1 = this;
            return new cljs.core.async.t11240(self__.fn1, self__._, self__.meta11238, self__.ch, self__.f, self__.map_LT_, meta11241__$1);
          };
          cljs.core.async.__GT_t11240 = function __GT_t11240(fn1__$1, ___$2, meta11238__$1, ch__$2, f__$2, map_LT___$2, meta11241) {
            return new cljs.core.async.t11240(fn1__$1, ___$2, meta11238__$1, ch__$2, f__$2, map_LT___$2, meta11241);
          };
        }
        return new cljs.core.async.t11240(fn1, ___$1, self__.meta11238, self__.ch, self__.f, self__.map_LT_, null);
      }());
      if (cljs.core.truth_(function() {
        var and__3431__auto__ = ret;
        if (cljs.core.truth_(and__3431__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3431__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t11237.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t11237.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t11237.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11239) {
      var self__ = this;
      var _11239__$1 = this;
      return self__.meta11238;
    };
    cljs.core.async.t11237.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11239, meta11238__$1) {
      var self__ = this;
      var _11239__$1 = this;
      return new cljs.core.async.t11237(self__.ch, self__.f, self__.map_LT_, meta11238__$1);
    };
    cljs.core.async.__GT_t11237 = function __GT_t11237(ch__$1, f__$1, map_LT___$1, meta11238) {
      return new cljs.core.async.t11237(ch__$1, f__$1, map_LT___$1, meta11238);
    };
  }
  return new cljs.core.async.t11237(ch, f, map_LT_, null);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t11246 !== "undefined") {
  } else {
    cljs.core.async.t11246 = function(ch, f, map_GT_, meta11247) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta11247 = meta11247;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t11246.cljs$lang$type = true;
    cljs.core.async.t11246.cljs$lang$ctorStr = "cljs.core.async/t11246";
    cljs.core.async.t11246.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async/t11246");
    };
    cljs.core.async.t11246.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t11246.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn0);
    };
    cljs.core.async.t11246.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t11246.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t11246.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t11246.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t11246.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11248) {
      var self__ = this;
      var _11248__$1 = this;
      return self__.meta11247;
    };
    cljs.core.async.t11246.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11248, meta11247__$1) {
      var self__ = this;
      var _11248__$1 = this;
      return new cljs.core.async.t11246(self__.ch, self__.f, self__.map_GT_, meta11247__$1);
    };
    cljs.core.async.__GT_t11246 = function __GT_t11246(ch__$1, f__$1, map_GT___$1, meta11247) {
      return new cljs.core.async.t11246(ch__$1, f__$1, map_GT___$1, meta11247);
    };
  }
  return new cljs.core.async.t11246(ch, f, map_GT_, null);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t11252 !== "undefined") {
  } else {
    cljs.core.async.t11252 = function(ch, p, filter_GT_, meta11253) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta11253 = meta11253;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t11252.cljs$lang$type = true;
    cljs.core.async.t11252.cljs$lang$ctorStr = "cljs.core.async/t11252";
    cljs.core.async.t11252.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async/t11252");
    };
    cljs.core.async.t11252.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t11252.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
      } else {
        return cljs.core.async.impl.channels.box.call(null, null);
      }
    };
    cljs.core.async.t11252.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t11252.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t11252.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t11252.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t11252.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11254) {
      var self__ = this;
      var _11254__$1 = this;
      return self__.meta11253;
    };
    cljs.core.async.t11252.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11254, meta11253__$1) {
      var self__ = this;
      var _11254__$1 = this;
      return new cljs.core.async.t11252(self__.ch, self__.p, self__.filter_GT_, meta11253__$1);
    };
    cljs.core.async.__GT_t11252 = function __GT_t11252(ch__$1, p__$1, filter_GT___$1, meta11253) {
      return new cljs.core.async.t11252(ch__$1, p__$1, filter_GT___$1, meta11253);
    };
  }
  return new cljs.core.async.t11252(ch, p, filter_GT_, null);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6217__auto___11337 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6218__auto__ = function() {
        var switch__6202__auto__ = function(state_11316) {
          var state_val_11317 = state_11316[1];
          if (state_val_11317 === 1) {
            var state_11316__$1 = state_11316;
            var statearr_11318_11338 = state_11316__$1;
            statearr_11318_11338[2] = null;
            statearr_11318_11338[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_11317 === 2) {
              var state_11316__$1 = state_11316;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11316__$1, 4, ch);
            } else {
              if (state_val_11317 === 3) {
                var inst_11314 = state_11316[2];
                var state_11316__$1 = state_11316;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11316__$1, inst_11314);
              } else {
                if (state_val_11317 === 4) {
                  var inst_11298 = state_11316[7];
                  var inst_11298__$1 = state_11316[2];
                  var inst_11299 = inst_11298__$1 == null;
                  var state_11316__$1 = function() {
                    var statearr_11319 = state_11316;
                    statearr_11319[7] = inst_11298__$1;
                    return statearr_11319;
                  }();
                  if (cljs.core.truth_(inst_11299)) {
                    var statearr_11320_11339 = state_11316__$1;
                    statearr_11320_11339[1] = 5;
                  } else {
                    var statearr_11321_11340 = state_11316__$1;
                    statearr_11321_11340[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_11317 === 5) {
                    var inst_11301 = cljs.core.async.close_BANG_.call(null, out);
                    var state_11316__$1 = state_11316;
                    var statearr_11322_11341 = state_11316__$1;
                    statearr_11322_11341[2] = inst_11301;
                    statearr_11322_11341[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_11317 === 6) {
                      var inst_11298 = state_11316[7];
                      var inst_11303 = p.call(null, inst_11298);
                      var state_11316__$1 = state_11316;
                      if (cljs.core.truth_(inst_11303)) {
                        var statearr_11323_11342 = state_11316__$1;
                        statearr_11323_11342[1] = 8;
                      } else {
                        var statearr_11324_11343 = state_11316__$1;
                        statearr_11324_11343[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_11317 === 7) {
                        var inst_11312 = state_11316[2];
                        var state_11316__$1 = state_11316;
                        var statearr_11325_11344 = state_11316__$1;
                        statearr_11325_11344[2] = inst_11312;
                        statearr_11325_11344[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_11317 === 8) {
                          var inst_11298 = state_11316[7];
                          var state_11316__$1 = state_11316;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11316__$1, 11, out, inst_11298);
                        } else {
                          if (state_val_11317 === 9) {
                            var state_11316__$1 = state_11316;
                            var statearr_11326_11345 = state_11316__$1;
                            statearr_11326_11345[2] = null;
                            statearr_11326_11345[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_11317 === 10) {
                              var inst_11309 = state_11316[2];
                              var state_11316__$1 = function() {
                                var statearr_11327 = state_11316;
                                statearr_11327[8] = inst_11309;
                                return statearr_11327;
                              }();
                              var statearr_11328_11346 = state_11316__$1;
                              statearr_11328_11346[2] = null;
                              statearr_11328_11346[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_11317 === 11) {
                                var inst_11306 = state_11316[2];
                                var state_11316__$1 = state_11316;
                                var statearr_11329_11347 = state_11316__$1;
                                statearr_11329_11347[2] = inst_11306;
                                statearr_11329_11347[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6202__auto__) {
          return function() {
            var state_machine__6203__auto__ = null;
            var state_machine__6203__auto____0 = function() {
              var statearr_11333 = [null, null, null, null, null, null, null, null, null];
              statearr_11333[0] = state_machine__6203__auto__;
              statearr_11333[1] = 1;
              return statearr_11333;
            };
            var state_machine__6203__auto____1 = function(state_11316) {
              while (true) {
                var ret_value__6204__auto__ = function() {
                  try {
                    while (true) {
                      var result__6205__auto__ = switch__6202__auto__.call(null, state_11316);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6205__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6205__auto__;
                      }
                      break;
                    }
                  } catch (e11334) {
                    if (e11334 instanceof Object) {
                      var ex__6206__auto__ = e11334;
                      var statearr_11335_11348 = state_11316;
                      statearr_11335_11348[5] = ex__6206__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11316);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e11334;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6204__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__11349 = state_11316;
                  state_11316 = G__11349;
                  continue;
                } else {
                  return ret_value__6204__auto__;
                }
                break;
              }
            };
            state_machine__6203__auto__ = function(state_11316) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6203__auto____0.call(this);
                case 1:
                  return state_machine__6203__auto____1.call(this, state_11316);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6203__auto____0;
            state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6203__auto____1;
            return state_machine__6203__auto__;
          }();
        }(switch__6202__auto__);
      }();
      var state__6219__auto__ = function() {
        var statearr_11336 = f__6218__auto__.call(null);
        statearr_11336[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6217__auto___11337;
        return statearr_11336;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6219__auto__);
    });
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__6217__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__6218__auto__ = function() {
      var switch__6202__auto__ = function(state_11501) {
        var state_val_11502 = state_11501[1];
        if (state_val_11502 === 1) {
          var state_11501__$1 = state_11501;
          var statearr_11503_11540 = state_11501__$1;
          statearr_11503_11540[2] = null;
          statearr_11503_11540[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_11502 === 2) {
            var state_11501__$1 = state_11501;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11501__$1, 4, in$);
          } else {
            if (state_val_11502 === 3) {
              var inst_11499 = state_11501[2];
              var state_11501__$1 = state_11501;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11501__$1, inst_11499);
            } else {
              if (state_val_11502 === 4) {
                var inst_11447 = state_11501[7];
                var inst_11447__$1 = state_11501[2];
                var inst_11448 = inst_11447__$1 == null;
                var state_11501__$1 = function() {
                  var statearr_11504 = state_11501;
                  statearr_11504[7] = inst_11447__$1;
                  return statearr_11504;
                }();
                if (cljs.core.truth_(inst_11448)) {
                  var statearr_11505_11541 = state_11501__$1;
                  statearr_11505_11541[1] = 5;
                } else {
                  var statearr_11506_11542 = state_11501__$1;
                  statearr_11506_11542[1] = 6;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_11502 === 5) {
                  var inst_11450 = cljs.core.async.close_BANG_.call(null, out);
                  var state_11501__$1 = state_11501;
                  var statearr_11507_11543 = state_11501__$1;
                  statearr_11507_11543[2] = inst_11450;
                  statearr_11507_11543[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_11502 === 6) {
                    var inst_11447 = state_11501[7];
                    var inst_11452 = f.call(null, inst_11447);
                    var inst_11457 = cljs.core.seq.call(null, inst_11452);
                    var inst_11458 = inst_11457;
                    var inst_11459 = null;
                    var inst_11460 = 0;
                    var inst_11461 = 0;
                    var state_11501__$1 = function() {
                      var statearr_11508 = state_11501;
                      statearr_11508[8] = inst_11458;
                      statearr_11508[9] = inst_11459;
                      statearr_11508[10] = inst_11461;
                      statearr_11508[11] = inst_11460;
                      return statearr_11508;
                    }();
                    var statearr_11509_11544 = state_11501__$1;
                    statearr_11509_11544[2] = null;
                    statearr_11509_11544[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_11502 === 7) {
                      var inst_11497 = state_11501[2];
                      var state_11501__$1 = state_11501;
                      var statearr_11510_11545 = state_11501__$1;
                      statearr_11510_11545[2] = inst_11497;
                      statearr_11510_11545[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_11502 === 8) {
                        var inst_11461 = state_11501[10];
                        var inst_11460 = state_11501[11];
                        var inst_11463 = inst_11461 < inst_11460;
                        var inst_11464 = inst_11463;
                        var state_11501__$1 = state_11501;
                        if (cljs.core.truth_(inst_11464)) {
                          var statearr_11511_11546 = state_11501__$1;
                          statearr_11511_11546[1] = 10;
                        } else {
                          var statearr_11512_11547 = state_11501__$1;
                          statearr_11512_11547[1] = 11;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_11502 === 9) {
                          var inst_11494 = state_11501[2];
                          var state_11501__$1 = function() {
                            var statearr_11513 = state_11501;
                            statearr_11513[12] = inst_11494;
                            return statearr_11513;
                          }();
                          var statearr_11514_11548 = state_11501__$1;
                          statearr_11514_11548[2] = null;
                          statearr_11514_11548[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_11502 === 10) {
                            var inst_11459 = state_11501[9];
                            var inst_11461 = state_11501[10];
                            var inst_11466 = cljs.core._nth.call(null, inst_11459, inst_11461);
                            var state_11501__$1 = state_11501;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11501__$1, 13, out, inst_11466);
                          } else {
                            if (state_val_11502 === 11) {
                              var inst_11458 = state_11501[8];
                              var inst_11472 = state_11501[13];
                              var inst_11472__$1 = cljs.core.seq.call(null, inst_11458);
                              var state_11501__$1 = function() {
                                var statearr_11518 = state_11501;
                                statearr_11518[13] = inst_11472__$1;
                                return statearr_11518;
                              }();
                              if (inst_11472__$1) {
                                var statearr_11519_11549 = state_11501__$1;
                                statearr_11519_11549[1] = 14;
                              } else {
                                var statearr_11520_11550 = state_11501__$1;
                                statearr_11520_11550[1] = 15;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_11502 === 12) {
                                var inst_11492 = state_11501[2];
                                var state_11501__$1 = state_11501;
                                var statearr_11521_11551 = state_11501__$1;
                                statearr_11521_11551[2] = inst_11492;
                                statearr_11521_11551[1] = 9;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_11502 === 13) {
                                  var inst_11458 = state_11501[8];
                                  var inst_11459 = state_11501[9];
                                  var inst_11461 = state_11501[10];
                                  var inst_11460 = state_11501[11];
                                  var inst_11468 = state_11501[2];
                                  var inst_11469 = inst_11461 + 1;
                                  var tmp11515 = inst_11458;
                                  var tmp11516 = inst_11459;
                                  var tmp11517 = inst_11460;
                                  var inst_11458__$1 = tmp11515;
                                  var inst_11459__$1 = tmp11516;
                                  var inst_11460__$1 = tmp11517;
                                  var inst_11461__$1 = inst_11469;
                                  var state_11501__$1 = function() {
                                    var statearr_11522 = state_11501;
                                    statearr_11522[8] = inst_11458__$1;
                                    statearr_11522[9] = inst_11459__$1;
                                    statearr_11522[10] = inst_11461__$1;
                                    statearr_11522[11] = inst_11460__$1;
                                    statearr_11522[14] = inst_11468;
                                    return statearr_11522;
                                  }();
                                  var statearr_11523_11552 = state_11501__$1;
                                  statearr_11523_11552[2] = null;
                                  statearr_11523_11552[1] = 8;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_11502 === 14) {
                                    var inst_11472 = state_11501[13];
                                    var inst_11474 = cljs.core.chunked_seq_QMARK_.call(null, inst_11472);
                                    var state_11501__$1 = state_11501;
                                    if (inst_11474) {
                                      var statearr_11524_11553 = state_11501__$1;
                                      statearr_11524_11553[1] = 17;
                                    } else {
                                      var statearr_11525_11554 = state_11501__$1;
                                      statearr_11525_11554[1] = 18;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_11502 === 15) {
                                      var state_11501__$1 = state_11501;
                                      var statearr_11526_11555 = state_11501__$1;
                                      statearr_11526_11555[2] = null;
                                      statearr_11526_11555[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_11502 === 16) {
                                        var inst_11490 = state_11501[2];
                                        var state_11501__$1 = state_11501;
                                        var statearr_11527_11556 = state_11501__$1;
                                        statearr_11527_11556[2] = inst_11490;
                                        statearr_11527_11556[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_11502 === 17) {
                                          var inst_11472 = state_11501[13];
                                          var inst_11476 = cljs.core.chunk_first.call(null, inst_11472);
                                          var inst_11477 = cljs.core.chunk_rest.call(null, inst_11472);
                                          var inst_11478 = cljs.core.count.call(null, inst_11476);
                                          var inst_11458 = inst_11477;
                                          var inst_11459 = inst_11476;
                                          var inst_11460 = inst_11478;
                                          var inst_11461 = 0;
                                          var state_11501__$1 = function() {
                                            var statearr_11528 = state_11501;
                                            statearr_11528[8] = inst_11458;
                                            statearr_11528[9] = inst_11459;
                                            statearr_11528[10] = inst_11461;
                                            statearr_11528[11] = inst_11460;
                                            return statearr_11528;
                                          }();
                                          var statearr_11529_11557 = state_11501__$1;
                                          statearr_11529_11557[2] = null;
                                          statearr_11529_11557[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_11502 === 18) {
                                            var inst_11472 = state_11501[13];
                                            var inst_11481 = cljs.core.first.call(null, inst_11472);
                                            var state_11501__$1 = state_11501;
                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11501__$1, 20, out, inst_11481);
                                          } else {
                                            if (state_val_11502 === 19) {
                                              var inst_11487 = state_11501[2];
                                              var state_11501__$1 = state_11501;
                                              var statearr_11530_11558 = state_11501__$1;
                                              statearr_11530_11558[2] = inst_11487;
                                              statearr_11530_11558[1] = 16;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_11502 === 20) {
                                                var inst_11472 = state_11501[13];
                                                var inst_11483 = state_11501[2];
                                                var inst_11484 = cljs.core.next.call(null, inst_11472);
                                                var inst_11458 = inst_11484;
                                                var inst_11459 = null;
                                                var inst_11460 = 0;
                                                var inst_11461 = 0;
                                                var state_11501__$1 = function() {
                                                  var statearr_11531 = state_11501;
                                                  statearr_11531[8] = inst_11458;
                                                  statearr_11531[9] = inst_11459;
                                                  statearr_11531[10] = inst_11461;
                                                  statearr_11531[11] = inst_11460;
                                                  statearr_11531[15] = inst_11483;
                                                  return statearr_11531;
                                                }();
                                                var statearr_11532_11559 = state_11501__$1;
                                                statearr_11532_11559[2] = null;
                                                statearr_11532_11559[1] = 8;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__6202__auto__) {
        return function() {
          var state_machine__6203__auto__ = null;
          var state_machine__6203__auto____0 = function() {
            var statearr_11536 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            statearr_11536[0] = state_machine__6203__auto__;
            statearr_11536[1] = 1;
            return statearr_11536;
          };
          var state_machine__6203__auto____1 = function(state_11501) {
            while (true) {
              var ret_value__6204__auto__ = function() {
                try {
                  while (true) {
                    var result__6205__auto__ = switch__6202__auto__.call(null, state_11501);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6205__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__6205__auto__;
                    }
                    break;
                  }
                } catch (e11537) {
                  if (e11537 instanceof Object) {
                    var ex__6206__auto__ = e11537;
                    var statearr_11538_11560 = state_11501;
                    statearr_11538_11560[5] = ex__6206__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11501);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e11537;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6204__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__11561 = state_11501;
                state_11501 = G__11561;
                continue;
              } else {
                return ret_value__6204__auto__;
              }
              break;
            }
          };
          state_machine__6203__auto__ = function(state_11501) {
            switch(arguments.length) {
              case 0:
                return state_machine__6203__auto____0.call(this);
              case 1:
                return state_machine__6203__auto____1.call(this, state_11501);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6203__auto____0;
          state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6203__auto____1;
          return state_machine__6203__auto__;
        }();
      }(switch__6202__auto__);
    }();
    var state__6219__auto__ = function() {
      var statearr_11539 = f__6218__auto__.call(null);
      statearr_11539[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6217__auto__;
      return statearr_11539;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6219__auto__);
  });
  return c__6217__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__6217__auto___11642 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6218__auto__ = function() {
        var switch__6202__auto__ = function(state_11621) {
          var state_val_11622 = state_11621[1];
          if (state_val_11622 === 1) {
            var state_11621__$1 = state_11621;
            var statearr_11623_11643 = state_11621__$1;
            statearr_11623_11643[2] = null;
            statearr_11623_11643[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_11622 === 2) {
              var state_11621__$1 = state_11621;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11621__$1, 4, from);
            } else {
              if (state_val_11622 === 3) {
                var inst_11619 = state_11621[2];
                var state_11621__$1 = state_11621;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11621__$1, inst_11619);
              } else {
                if (state_val_11622 === 4) {
                  var inst_11604 = state_11621[7];
                  var inst_11604__$1 = state_11621[2];
                  var inst_11605 = inst_11604__$1 == null;
                  var state_11621__$1 = function() {
                    var statearr_11624 = state_11621;
                    statearr_11624[7] = inst_11604__$1;
                    return statearr_11624;
                  }();
                  if (cljs.core.truth_(inst_11605)) {
                    var statearr_11625_11644 = state_11621__$1;
                    statearr_11625_11644[1] = 5;
                  } else {
                    var statearr_11626_11645 = state_11621__$1;
                    statearr_11626_11645[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_11622 === 5) {
                    var state_11621__$1 = state_11621;
                    if (cljs.core.truth_(close_QMARK_)) {
                      var statearr_11627_11646 = state_11621__$1;
                      statearr_11627_11646[1] = 8;
                    } else {
                      var statearr_11628_11647 = state_11621__$1;
                      statearr_11628_11647[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_11622 === 6) {
                      var inst_11604 = state_11621[7];
                      var state_11621__$1 = state_11621;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11621__$1, 11, to, inst_11604);
                    } else {
                      if (state_val_11622 === 7) {
                        var inst_11617 = state_11621[2];
                        var state_11621__$1 = state_11621;
                        var statearr_11629_11648 = state_11621__$1;
                        statearr_11629_11648[2] = inst_11617;
                        statearr_11629_11648[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_11622 === 8) {
                          var inst_11608 = cljs.core.async.close_BANG_.call(null, to);
                          var state_11621__$1 = state_11621;
                          var statearr_11630_11649 = state_11621__$1;
                          statearr_11630_11649[2] = inst_11608;
                          statearr_11630_11649[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_11622 === 9) {
                            var state_11621__$1 = state_11621;
                            var statearr_11631_11650 = state_11621__$1;
                            statearr_11631_11650[2] = null;
                            statearr_11631_11650[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_11622 === 10) {
                              var inst_11611 = state_11621[2];
                              var state_11621__$1 = state_11621;
                              var statearr_11632_11651 = state_11621__$1;
                              statearr_11632_11651[2] = inst_11611;
                              statearr_11632_11651[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_11622 === 11) {
                                var inst_11614 = state_11621[2];
                                var state_11621__$1 = function() {
                                  var statearr_11633 = state_11621;
                                  statearr_11633[8] = inst_11614;
                                  return statearr_11633;
                                }();
                                var statearr_11634_11652 = state_11621__$1;
                                statearr_11634_11652[2] = null;
                                statearr_11634_11652[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6202__auto__) {
          return function() {
            var state_machine__6203__auto__ = null;
            var state_machine__6203__auto____0 = function() {
              var statearr_11638 = [null, null, null, null, null, null, null, null, null];
              statearr_11638[0] = state_machine__6203__auto__;
              statearr_11638[1] = 1;
              return statearr_11638;
            };
            var state_machine__6203__auto____1 = function(state_11621) {
              while (true) {
                var ret_value__6204__auto__ = function() {
                  try {
                    while (true) {
                      var result__6205__auto__ = switch__6202__auto__.call(null, state_11621);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6205__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6205__auto__;
                      }
                      break;
                    }
                  } catch (e11639) {
                    if (e11639 instanceof Object) {
                      var ex__6206__auto__ = e11639;
                      var statearr_11640_11653 = state_11621;
                      statearr_11640_11653[5] = ex__6206__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11621);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e11639;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6204__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__11654 = state_11621;
                  state_11621 = G__11654;
                  continue;
                } else {
                  return ret_value__6204__auto__;
                }
                break;
              }
            };
            state_machine__6203__auto__ = function(state_11621) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6203__auto____0.call(this);
                case 1:
                  return state_machine__6203__auto____1.call(this, state_11621);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6203__auto____0;
            state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6203__auto____1;
            return state_machine__6203__auto__;
          }();
        }(switch__6202__auto__);
      }();
      var state__6219__auto__ = function() {
        var statearr_11641 = f__6218__auto__.call(null);
        statearr_11641[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6217__auto___11642;
        return statearr_11641;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6219__auto__);
    });
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__6217__auto___11741 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6218__auto__ = function() {
        var switch__6202__auto__ = function(state_11719) {
          var state_val_11720 = state_11719[1];
          if (state_val_11720 === 1) {
            var state_11719__$1 = state_11719;
            var statearr_11721_11742 = state_11719__$1;
            statearr_11721_11742[2] = null;
            statearr_11721_11742[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_11720 === 2) {
              var state_11719__$1 = state_11719;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11719__$1, 4, ch);
            } else {
              if (state_val_11720 === 3) {
                var inst_11717 = state_11719[2];
                var state_11719__$1 = state_11719;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11719__$1, inst_11717);
              } else {
                if (state_val_11720 === 4) {
                  var inst_11700 = state_11719[7];
                  var inst_11700__$1 = state_11719[2];
                  var inst_11701 = inst_11700__$1 == null;
                  var state_11719__$1 = function() {
                    var statearr_11722 = state_11719;
                    statearr_11722[7] = inst_11700__$1;
                    return statearr_11722;
                  }();
                  if (cljs.core.truth_(inst_11701)) {
                    var statearr_11723_11743 = state_11719__$1;
                    statearr_11723_11743[1] = 5;
                  } else {
                    var statearr_11724_11744 = state_11719__$1;
                    statearr_11724_11744[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_11720 === 5) {
                    var inst_11703 = cljs.core.async.close_BANG_.call(null, tc);
                    var inst_11704 = cljs.core.async.close_BANG_.call(null, fc);
                    var state_11719__$1 = function() {
                      var statearr_11725 = state_11719;
                      statearr_11725[8] = inst_11703;
                      return statearr_11725;
                    }();
                    var statearr_11726_11745 = state_11719__$1;
                    statearr_11726_11745[2] = inst_11704;
                    statearr_11726_11745[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_11720 === 6) {
                      var inst_11700 = state_11719[7];
                      var inst_11706 = p.call(null, inst_11700);
                      var state_11719__$1 = state_11719;
                      if (cljs.core.truth_(inst_11706)) {
                        var statearr_11727_11746 = state_11719__$1;
                        statearr_11727_11746[1] = 9;
                      } else {
                        var statearr_11728_11747 = state_11719__$1;
                        statearr_11728_11747[1] = 10;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_11720 === 7) {
                        var inst_11715 = state_11719[2];
                        var state_11719__$1 = state_11719;
                        var statearr_11729_11748 = state_11719__$1;
                        statearr_11729_11748[2] = inst_11715;
                        statearr_11729_11748[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_11720 === 8) {
                          var inst_11712 = state_11719[2];
                          var state_11719__$1 = function() {
                            var statearr_11730 = state_11719;
                            statearr_11730[9] = inst_11712;
                            return statearr_11730;
                          }();
                          var statearr_11731_11749 = state_11719__$1;
                          statearr_11731_11749[2] = null;
                          statearr_11731_11749[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_11720 === 9) {
                            var state_11719__$1 = state_11719;
                            var statearr_11732_11750 = state_11719__$1;
                            statearr_11732_11750[2] = tc;
                            statearr_11732_11750[1] = 11;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_11720 === 10) {
                              var state_11719__$1 = state_11719;
                              var statearr_11733_11751 = state_11719__$1;
                              statearr_11733_11751[2] = fc;
                              statearr_11733_11751[1] = 11;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_11720 === 11) {
                                var inst_11700 = state_11719[7];
                                var inst_11710 = state_11719[2];
                                var state_11719__$1 = state_11719;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11719__$1, 8, inst_11710, inst_11700);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6202__auto__) {
          return function() {
            var state_machine__6203__auto__ = null;
            var state_machine__6203__auto____0 = function() {
              var statearr_11737 = [null, null, null, null, null, null, null, null, null, null];
              statearr_11737[0] = state_machine__6203__auto__;
              statearr_11737[1] = 1;
              return statearr_11737;
            };
            var state_machine__6203__auto____1 = function(state_11719) {
              while (true) {
                var ret_value__6204__auto__ = function() {
                  try {
                    while (true) {
                      var result__6205__auto__ = switch__6202__auto__.call(null, state_11719);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6205__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6205__auto__;
                      }
                      break;
                    }
                  } catch (e11738) {
                    if (e11738 instanceof Object) {
                      var ex__6206__auto__ = e11738;
                      var statearr_11739_11752 = state_11719;
                      statearr_11739_11752[5] = ex__6206__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11719);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e11738;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6204__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__11753 = state_11719;
                  state_11719 = G__11753;
                  continue;
                } else {
                  return ret_value__6204__auto__;
                }
                break;
              }
            };
            state_machine__6203__auto__ = function(state_11719) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6203__auto____0.call(this);
                case 1:
                  return state_machine__6203__auto____1.call(this, state_11719);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6203__auto____0;
            state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6203__auto____1;
            return state_machine__6203__auto__;
          }();
        }(switch__6202__auto__);
      }();
      var state__6219__auto__ = function() {
        var statearr_11740 = f__6218__auto__.call(null);
        statearr_11740[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6217__auto___11741;
        return statearr_11740;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6219__auto__);
    });
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__6217__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__6218__auto__ = function() {
      var switch__6202__auto__ = function(state_11800) {
        var state_val_11801 = state_11800[1];
        if (state_val_11801 === 7) {
          var inst_11796 = state_11800[2];
          var state_11800__$1 = state_11800;
          var statearr_11802_11818 = state_11800__$1;
          statearr_11802_11818[2] = inst_11796;
          statearr_11802_11818[1] = 3;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_11801 === 6) {
            var inst_11786 = state_11800[7];
            var inst_11789 = state_11800[8];
            var inst_11793 = f.call(null, inst_11786, inst_11789);
            var inst_11786__$1 = inst_11793;
            var state_11800__$1 = function() {
              var statearr_11803 = state_11800;
              statearr_11803[7] = inst_11786__$1;
              return statearr_11803;
            }();
            var statearr_11804_11819 = state_11800__$1;
            statearr_11804_11819[2] = null;
            statearr_11804_11819[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_11801 === 5) {
              var inst_11786 = state_11800[7];
              var state_11800__$1 = state_11800;
              var statearr_11805_11820 = state_11800__$1;
              statearr_11805_11820[2] = inst_11786;
              statearr_11805_11820[1] = 7;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_11801 === 4) {
                var inst_11789 = state_11800[8];
                var inst_11789__$1 = state_11800[2];
                var inst_11790 = inst_11789__$1 == null;
                var state_11800__$1 = function() {
                  var statearr_11806 = state_11800;
                  statearr_11806[8] = inst_11789__$1;
                  return statearr_11806;
                }();
                if (cljs.core.truth_(inst_11790)) {
                  var statearr_11807_11821 = state_11800__$1;
                  statearr_11807_11821[1] = 5;
                } else {
                  var statearr_11808_11822 = state_11800__$1;
                  statearr_11808_11822[1] = 6;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_11801 === 3) {
                  var inst_11798 = state_11800[2];
                  var state_11800__$1 = state_11800;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11800__$1, inst_11798);
                } else {
                  if (state_val_11801 === 2) {
                    var state_11800__$1 = state_11800;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11800__$1, 4, ch);
                  } else {
                    if (state_val_11801 === 1) {
                      var inst_11786 = init;
                      var state_11800__$1 = function() {
                        var statearr_11809 = state_11800;
                        statearr_11809[7] = inst_11786;
                        return statearr_11809;
                      }();
                      var statearr_11810_11823 = state_11800__$1;
                      statearr_11810_11823[2] = null;
                      statearr_11810_11823[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      return null;
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__6202__auto__) {
        return function() {
          var state_machine__6203__auto__ = null;
          var state_machine__6203__auto____0 = function() {
            var statearr_11814 = [null, null, null, null, null, null, null, null, null];
            statearr_11814[0] = state_machine__6203__auto__;
            statearr_11814[1] = 1;
            return statearr_11814;
          };
          var state_machine__6203__auto____1 = function(state_11800) {
            while (true) {
              var ret_value__6204__auto__ = function() {
                try {
                  while (true) {
                    var result__6205__auto__ = switch__6202__auto__.call(null, state_11800);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6205__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__6205__auto__;
                    }
                    break;
                  }
                } catch (e11815) {
                  if (e11815 instanceof Object) {
                    var ex__6206__auto__ = e11815;
                    var statearr_11816_11824 = state_11800;
                    statearr_11816_11824[5] = ex__6206__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11800);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e11815;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6204__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__11825 = state_11800;
                state_11800 = G__11825;
                continue;
              } else {
                return ret_value__6204__auto__;
              }
              break;
            }
          };
          state_machine__6203__auto__ = function(state_11800) {
            switch(arguments.length) {
              case 0:
                return state_machine__6203__auto____0.call(this);
              case 1:
                return state_machine__6203__auto____1.call(this, state_11800);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6203__auto____0;
          state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6203__auto____1;
          return state_machine__6203__auto__;
        }();
      }(switch__6202__auto__);
    }();
    var state__6219__auto__ = function() {
      var statearr_11817 = f__6218__auto__.call(null);
      statearr_11817[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6217__auto__;
      return statearr_11817;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6219__auto__);
  });
  return c__6217__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__6217__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6218__auto__ = function() {
        var switch__6202__auto__ = function(state_11887) {
          var state_val_11888 = state_11887[1];
          if (state_val_11888 === 1) {
            var inst_11867 = cljs.core.seq.call(null, coll);
            var inst_11868 = inst_11867;
            var state_11887__$1 = function() {
              var statearr_11889 = state_11887;
              statearr_11889[7] = inst_11868;
              return statearr_11889;
            }();
            var statearr_11890_11908 = state_11887__$1;
            statearr_11890_11908[2] = null;
            statearr_11890_11908[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_11888 === 2) {
              var inst_11868 = state_11887[7];
              var state_11887__$1 = state_11887;
              if (cljs.core.truth_(inst_11868)) {
                var statearr_11891_11909 = state_11887__$1;
                statearr_11891_11909[1] = 4;
              } else {
                var statearr_11892_11910 = state_11887__$1;
                statearr_11892_11910[1] = 5;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_11888 === 3) {
                var inst_11885 = state_11887[2];
                var state_11887__$1 = state_11887;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11887__$1, inst_11885);
              } else {
                if (state_val_11888 === 4) {
                  var inst_11868 = state_11887[7];
                  var inst_11871 = cljs.core.first.call(null, inst_11868);
                  var state_11887__$1 = state_11887;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11887__$1, 7, ch, inst_11871);
                } else {
                  if (state_val_11888 === 5) {
                    var state_11887__$1 = state_11887;
                    if (cljs.core.truth_(close_QMARK_)) {
                      var statearr_11893_11911 = state_11887__$1;
                      statearr_11893_11911[1] = 8;
                    } else {
                      var statearr_11894_11912 = state_11887__$1;
                      statearr_11894_11912[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_11888 === 6) {
                      var inst_11883 = state_11887[2];
                      var state_11887__$1 = state_11887;
                      var statearr_11895_11913 = state_11887__$1;
                      statearr_11895_11913[2] = inst_11883;
                      statearr_11895_11913[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_11888 === 7) {
                        var inst_11868 = state_11887[7];
                        var inst_11873 = state_11887[2];
                        var inst_11874 = cljs.core.next.call(null, inst_11868);
                        var inst_11868__$1 = inst_11874;
                        var state_11887__$1 = function() {
                          var statearr_11896 = state_11887;
                          statearr_11896[7] = inst_11868__$1;
                          statearr_11896[8] = inst_11873;
                          return statearr_11896;
                        }();
                        var statearr_11897_11914 = state_11887__$1;
                        statearr_11897_11914[2] = null;
                        statearr_11897_11914[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_11888 === 8) {
                          var inst_11878 = cljs.core.async.close_BANG_.call(null, ch);
                          var state_11887__$1 = state_11887;
                          var statearr_11898_11915 = state_11887__$1;
                          statearr_11898_11915[2] = inst_11878;
                          statearr_11898_11915[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_11888 === 9) {
                            var state_11887__$1 = state_11887;
                            var statearr_11899_11916 = state_11887__$1;
                            statearr_11899_11916[2] = null;
                            statearr_11899_11916[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_11888 === 10) {
                              var inst_11881 = state_11887[2];
                              var state_11887__$1 = state_11887;
                              var statearr_11900_11917 = state_11887__$1;
                              statearr_11900_11917[2] = inst_11881;
                              statearr_11900_11917[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6202__auto__) {
          return function() {
            var state_machine__6203__auto__ = null;
            var state_machine__6203__auto____0 = function() {
              var statearr_11904 = [null, null, null, null, null, null, null, null, null];
              statearr_11904[0] = state_machine__6203__auto__;
              statearr_11904[1] = 1;
              return statearr_11904;
            };
            var state_machine__6203__auto____1 = function(state_11887) {
              while (true) {
                var ret_value__6204__auto__ = function() {
                  try {
                    while (true) {
                      var result__6205__auto__ = switch__6202__auto__.call(null, state_11887);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6205__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6205__auto__;
                      }
                      break;
                    }
                  } catch (e11905) {
                    if (e11905 instanceof Object) {
                      var ex__6206__auto__ = e11905;
                      var statearr_11906_11918 = state_11887;
                      statearr_11906_11918[5] = ex__6206__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11887);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e11905;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6204__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__11919 = state_11887;
                  state_11887 = G__11919;
                  continue;
                } else {
                  return ret_value__6204__auto__;
                }
                break;
              }
            };
            state_machine__6203__auto__ = function(state_11887) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6203__auto____0.call(this);
                case 1:
                  return state_machine__6203__auto____1.call(this, state_11887);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6203__auto____0;
            state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6203__auto____1;
            return state_machine__6203__auto__;
          }();
        }(switch__6202__auto__);
      }();
      var state__6219__auto__ = function() {
        var statearr_11907 = f__6218__auto__.call(null);
        statearr_11907[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6217__auto__;
        return statearr_11907;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6219__auto__);
    });
    return c__6217__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj11921 = {};
  return obj11921;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3431__auto__ = _;
    if (and__3431__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4070__auto__ = _ == null ? null : _;
    return function() {
      var or__3443__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj11923 = {};
  return obj11923;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3431__auto__ = m;
    if (and__3431__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4070__auto__ = m == null ? null : m;
    return function() {
      var or__3443__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3431__auto__ = m;
    if (and__3431__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4070__auto__ = m == null ? null : m;
    return function() {
      var or__3443__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3431__auto__ = m;
    if (and__3431__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4070__auto__ = m == null ? null : m;
    return function() {
      var or__3443__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t12147 !== "undefined") {
    } else {
      cljs.core.async.t12147 = function(cs, ch, mult, meta12148) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta12148 = meta12148;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t12147.cljs$lang$type = true;
      cljs.core.async.t12147.cljs$lang$ctorStr = "cljs.core.async/t12147";
      cljs.core.async.t12147.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
          return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async/t12147");
        };
      }(cs);
      cljs.core.async.t12147.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t12147.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t12147.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null;
        };
      }(cs);
      cljs.core.async.t12147.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t12147.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t12147.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t12147.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_12149) {
          var self__ = this;
          var _12149__$1 = this;
          return self__.meta12148;
        };
      }(cs);
      cljs.core.async.t12147.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_12149, meta12148__$1) {
          var self__ = this;
          var _12149__$1 = this;
          return new cljs.core.async.t12147(self__.cs, self__.ch, self__.mult, meta12148__$1);
        };
      }(cs);
      cljs.core.async.__GT_t12147 = function(cs) {
        return function __GT_t12147(cs__$1, ch__$1, mult__$1, meta12148) {
          return new cljs.core.async.t12147(cs__$1, ch__$1, mult__$1, meta12148);
        };
      }(cs);
    }
    return new cljs.core.async.t12147(cs, ch, mult, null);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function() {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__6217__auto___12370 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__6218__auto__ = function() {
      var switch__6202__auto__ = function(state_12284) {
        var state_val_12285 = state_12284[1];
        if (state_val_12285 === 32) {
          var inst_12228 = state_12284[7];
          var inst_12152 = state_12284[8];
          var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_12284, 31, Object, null, 30);
          var inst_12235 = cljs.core.async.put_BANG_.call(null, inst_12228, inst_12152, done);
          var state_12284__$1 = state_12284;
          var statearr_12286_12371 = state_12284__$1;
          statearr_12286_12371[2] = inst_12235;
          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12284__$1);
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_12285 === 1) {
            var state_12284__$1 = state_12284;
            var statearr_12287_12372 = state_12284__$1;
            statearr_12287_12372[2] = null;
            statearr_12287_12372[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_12285 === 33) {
              var inst_12241 = state_12284[9];
              var inst_12243 = cljs.core.chunked_seq_QMARK_.call(null, inst_12241);
              var state_12284__$1 = state_12284;
              if (inst_12243) {
                var statearr_12288_12373 = state_12284__$1;
                statearr_12288_12373[1] = 36;
              } else {
                var statearr_12289_12374 = state_12284__$1;
                statearr_12289_12374[1] = 37;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_12285 === 2) {
                var state_12284__$1 = state_12284;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12284__$1, 4, ch);
              } else {
                if (state_val_12285 === 34) {
                  var state_12284__$1 = state_12284;
                  var statearr_12290_12375 = state_12284__$1;
                  statearr_12290_12375[2] = null;
                  statearr_12290_12375[1] = 35;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_12285 === 3) {
                    var inst_12282 = state_12284[2];
                    var state_12284__$1 = state_12284;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12284__$1, inst_12282);
                  } else {
                    if (state_val_12285 === 35) {
                      var inst_12266 = state_12284[2];
                      var state_12284__$1 = state_12284;
                      var statearr_12291_12376 = state_12284__$1;
                      statearr_12291_12376[2] = inst_12266;
                      statearr_12291_12376[1] = 29;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_12285 === 4) {
                        var inst_12152 = state_12284[8];
                        var inst_12152__$1 = state_12284[2];
                        var inst_12153 = inst_12152__$1 == null;
                        var state_12284__$1 = function() {
                          var statearr_12292 = state_12284;
                          statearr_12292[8] = inst_12152__$1;
                          return statearr_12292;
                        }();
                        if (cljs.core.truth_(inst_12153)) {
                          var statearr_12293_12377 = state_12284__$1;
                          statearr_12293_12377[1] = 5;
                        } else {
                          var statearr_12294_12378 = state_12284__$1;
                          statearr_12294_12378[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_12285 === 36) {
                          var inst_12241 = state_12284[9];
                          var inst_12245 = cljs.core.chunk_first.call(null, inst_12241);
                          var inst_12246 = cljs.core.chunk_rest.call(null, inst_12241);
                          var inst_12247 = cljs.core.count.call(null, inst_12245);
                          var inst_12220 = inst_12246;
                          var inst_12221 = inst_12245;
                          var inst_12222 = inst_12247;
                          var inst_12223 = 0;
                          var state_12284__$1 = function() {
                            var statearr_12295 = state_12284;
                            statearr_12295[10] = inst_12220;
                            statearr_12295[11] = inst_12221;
                            statearr_12295[12] = inst_12223;
                            statearr_12295[13] = inst_12222;
                            return statearr_12295;
                          }();
                          var statearr_12296_12379 = state_12284__$1;
                          statearr_12296_12379[2] = null;
                          statearr_12296_12379[1] = 25;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_12285 === 5) {
                            var inst_12159 = cljs.core.deref.call(null, cs);
                            var inst_12160 = cljs.core.seq.call(null, inst_12159);
                            var inst_12161 = inst_12160;
                            var inst_12162 = null;
                            var inst_12163 = 0;
                            var inst_12164 = 0;
                            var state_12284__$1 = function() {
                              var statearr_12297 = state_12284;
                              statearr_12297[14] = inst_12163;
                              statearr_12297[15] = inst_12164;
                              statearr_12297[16] = inst_12162;
                              statearr_12297[17] = inst_12161;
                              return statearr_12297;
                            }();
                            var statearr_12298_12380 = state_12284__$1;
                            statearr_12298_12380[2] = null;
                            statearr_12298_12380[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_12285 === 37) {
                              var inst_12241 = state_12284[9];
                              var inst_12250 = cljs.core.first.call(null, inst_12241);
                              var state_12284__$1 = function() {
                                var statearr_12299 = state_12284;
                                statearr_12299[18] = inst_12250;
                                return statearr_12299;
                              }();
                              var statearr_12300_12381 = state_12284__$1;
                              statearr_12300_12381[2] = null;
                              statearr_12300_12381[1] = 41;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_12285 === 6) {
                                var inst_12212 = state_12284[19];
                                var inst_12211 = cljs.core.deref.call(null, cs);
                                var inst_12212__$1 = cljs.core.keys.call(null, inst_12211);
                                var inst_12213 = cljs.core.count.call(null, inst_12212__$1);
                                var inst_12214 = cljs.core.reset_BANG_.call(null, dctr, inst_12213);
                                var inst_12219 = cljs.core.seq.call(null, inst_12212__$1);
                                var inst_12220 = inst_12219;
                                var inst_12221 = null;
                                var inst_12222 = 0;
                                var inst_12223 = 0;
                                var state_12284__$1 = function() {
                                  var statearr_12301 = state_12284;
                                  statearr_12301[10] = inst_12220;
                                  statearr_12301[11] = inst_12221;
                                  statearr_12301[12] = inst_12223;
                                  statearr_12301[13] = inst_12222;
                                  statearr_12301[20] = inst_12214;
                                  statearr_12301[19] = inst_12212__$1;
                                  return statearr_12301;
                                }();
                                var statearr_12302_12382 = state_12284__$1;
                                statearr_12302_12382[2] = null;
                                statearr_12302_12382[1] = 25;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_12285 === 38) {
                                  var inst_12263 = state_12284[2];
                                  var state_12284__$1 = state_12284;
                                  var statearr_12303_12383 = state_12284__$1;
                                  statearr_12303_12383[2] = inst_12263;
                                  statearr_12303_12383[1] = 35;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_12285 === 7) {
                                    var inst_12280 = state_12284[2];
                                    var state_12284__$1 = state_12284;
                                    var statearr_12304_12384 = state_12284__$1;
                                    statearr_12304_12384[2] = inst_12280;
                                    statearr_12304_12384[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_12285 === 39) {
                                      var inst_12241 = state_12284[9];
                                      var inst_12259 = state_12284[2];
                                      var inst_12260 = cljs.core.next.call(null, inst_12241);
                                      var inst_12220 = inst_12260;
                                      var inst_12221 = null;
                                      var inst_12222 = 0;
                                      var inst_12223 = 0;
                                      var state_12284__$1 = function() {
                                        var statearr_12305 = state_12284;
                                        statearr_12305[10] = inst_12220;
                                        statearr_12305[11] = inst_12221;
                                        statearr_12305[21] = inst_12259;
                                        statearr_12305[12] = inst_12223;
                                        statearr_12305[13] = inst_12222;
                                        return statearr_12305;
                                      }();
                                      var statearr_12306_12385 = state_12284__$1;
                                      statearr_12306_12385[2] = null;
                                      statearr_12306_12385[1] = 25;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_12285 === 8) {
                                        var inst_12163 = state_12284[14];
                                        var inst_12164 = state_12284[15];
                                        var inst_12166 = inst_12164 < inst_12163;
                                        var inst_12167 = inst_12166;
                                        var state_12284__$1 = state_12284;
                                        if (cljs.core.truth_(inst_12167)) {
                                          var statearr_12307_12386 = state_12284__$1;
                                          statearr_12307_12386[1] = 10;
                                        } else {
                                          var statearr_12308_12387 = state_12284__$1;
                                          statearr_12308_12387[1] = 11;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_12285 === 40) {
                                          var inst_12250 = state_12284[18];
                                          var inst_12251 = state_12284[2];
                                          var inst_12252 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                          var inst_12253 = cljs.core.async.untap_STAR_.call(null, m, inst_12250);
                                          var state_12284__$1 = function() {
                                            var statearr_12309 = state_12284;
                                            statearr_12309[22] = inst_12251;
                                            statearr_12309[23] = inst_12252;
                                            return statearr_12309;
                                          }();
                                          var statearr_12310_12388 = state_12284__$1;
                                          statearr_12310_12388[2] = inst_12253;
                                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12284__$1);
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_12285 === 9) {
                                            var inst_12209 = state_12284[2];
                                            var state_12284__$1 = state_12284;
                                            var statearr_12311_12389 = state_12284__$1;
                                            statearr_12311_12389[2] = inst_12209;
                                            statearr_12311_12389[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_12285 === 41) {
                                              var inst_12152 = state_12284[8];
                                              var inst_12250 = state_12284[18];
                                              var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_12284, 40, Object, null, 39);
                                              var inst_12257 = cljs.core.async.put_BANG_.call(null, inst_12250, inst_12152, done);
                                              var state_12284__$1 = state_12284;
                                              var statearr_12312_12390 = state_12284__$1;
                                              statearr_12312_12390[2] = inst_12257;
                                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12284__$1);
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_12285 === 10) {
                                                var inst_12164 = state_12284[15];
                                                var inst_12162 = state_12284[16];
                                                var inst_12170 = cljs.core._nth.call(null, inst_12162, inst_12164);
                                                var inst_12171 = cljs.core.nth.call(null, inst_12170, 0, null);
                                                var inst_12172 = cljs.core.nth.call(null, inst_12170, 1, null);
                                                var state_12284__$1 = function() {
                                                  var statearr_12313 = state_12284;
                                                  statearr_12313[24] = inst_12171;
                                                  return statearr_12313;
                                                }();
                                                if (cljs.core.truth_(inst_12172)) {
                                                  var statearr_12314_12391 = state_12284__$1;
                                                  statearr_12314_12391[1] = 13;
                                                } else {
                                                  var statearr_12315_12392 = state_12284__$1;
                                                  statearr_12315_12392[1] = 14;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_12285 === 42) {
                                                  var state_12284__$1 = state_12284;
                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12284__$1, 45, dchan);
                                                } else {
                                                  if (state_val_12285 === 11) {
                                                    var inst_12181 = state_12284[25];
                                                    var inst_12161 = state_12284[17];
                                                    var inst_12181__$1 = cljs.core.seq.call(null, inst_12161);
                                                    var state_12284__$1 = function() {
                                                      var statearr_12316 = state_12284;
                                                      statearr_12316[25] = inst_12181__$1;
                                                      return statearr_12316;
                                                    }();
                                                    if (inst_12181__$1) {
                                                      var statearr_12317_12393 = state_12284__$1;
                                                      statearr_12317_12393[1] = 16;
                                                    } else {
                                                      var statearr_12318_12394 = state_12284__$1;
                                                      statearr_12318_12394[1] = 17;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_12285 === 43) {
                                                      var state_12284__$1 = state_12284;
                                                      var statearr_12319_12395 = state_12284__$1;
                                                      statearr_12319_12395[2] = null;
                                                      statearr_12319_12395[1] = 44;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_12285 === 12) {
                                                        var inst_12207 = state_12284[2];
                                                        var state_12284__$1 = state_12284;
                                                        var statearr_12320_12396 = state_12284__$1;
                                                        statearr_12320_12396[2] = inst_12207;
                                                        statearr_12320_12396[1] = 9;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_12285 === 44) {
                                                          var inst_12277 = state_12284[2];
                                                          var state_12284__$1 = function() {
                                                            var statearr_12321 = state_12284;
                                                            statearr_12321[26] = inst_12277;
                                                            return statearr_12321;
                                                          }();
                                                          var statearr_12322_12397 = state_12284__$1;
                                                          statearr_12322_12397[2] = null;
                                                          statearr_12322_12397[1] = 2;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          if (state_val_12285 === 13) {
                                                            var inst_12171 = state_12284[24];
                                                            var inst_12174 = cljs.core.async.close_BANG_.call(null, inst_12171);
                                                            var state_12284__$1 = state_12284;
                                                            var statearr_12323_12398 = state_12284__$1;
                                                            statearr_12323_12398[2] = inst_12174;
                                                            statearr_12323_12398[1] = 15;
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                          } else {
                                                            if (state_val_12285 === 45) {
                                                              var inst_12274 = state_12284[2];
                                                              var state_12284__$1 = state_12284;
                                                              var statearr_12327_12399 = state_12284__$1;
                                                              statearr_12327_12399[2] = inst_12274;
                                                              statearr_12327_12399[1] = 44;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                            } else {
                                                              if (state_val_12285 === 14) {
                                                                var state_12284__$1 = state_12284;
                                                                var statearr_12328_12400 = state_12284__$1;
                                                                statearr_12328_12400[2] = null;
                                                                statearr_12328_12400[1] = 15;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                              } else {
                                                                if (state_val_12285 === 15) {
                                                                  var inst_12163 = state_12284[14];
                                                                  var inst_12164 = state_12284[15];
                                                                  var inst_12162 = state_12284[16];
                                                                  var inst_12161 = state_12284[17];
                                                                  var inst_12177 = state_12284[2];
                                                                  var inst_12178 = inst_12164 + 1;
                                                                  var tmp12324 = inst_12163;
                                                                  var tmp12325 = inst_12162;
                                                                  var tmp12326 = inst_12161;
                                                                  var inst_12161__$1 = tmp12326;
                                                                  var inst_12162__$1 = tmp12325;
                                                                  var inst_12163__$1 = tmp12324;
                                                                  var inst_12164__$1 = inst_12178;
                                                                  var state_12284__$1 = function() {
                                                                    var statearr_12329 = state_12284;
                                                                    statearr_12329[14] = inst_12163__$1;
                                                                    statearr_12329[15] = inst_12164__$1;
                                                                    statearr_12329[16] = inst_12162__$1;
                                                                    statearr_12329[17] = inst_12161__$1;
                                                                    statearr_12329[27] = inst_12177;
                                                                    return statearr_12329;
                                                                  }();
                                                                  var statearr_12330_12401 = state_12284__$1;
                                                                  statearr_12330_12401[2] = null;
                                                                  statearr_12330_12401[1] = 8;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                } else {
                                                                  if (state_val_12285 === 16) {
                                                                    var inst_12181 = state_12284[25];
                                                                    var inst_12183 = cljs.core.chunked_seq_QMARK_.call(null, inst_12181);
                                                                    var state_12284__$1 = state_12284;
                                                                    if (inst_12183) {
                                                                      var statearr_12331_12402 = state_12284__$1;
                                                                      statearr_12331_12402[1] = 19;
                                                                    } else {
                                                                      var statearr_12332_12403 = state_12284__$1;
                                                                      statearr_12332_12403[1] = 20;
                                                                    }
                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                  } else {
                                                                    if (state_val_12285 === 17) {
                                                                      var state_12284__$1 = state_12284;
                                                                      var statearr_12333_12404 = state_12284__$1;
                                                                      statearr_12333_12404[2] = null;
                                                                      statearr_12333_12404[1] = 18;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                    } else {
                                                                      if (state_val_12285 === 18) {
                                                                        var inst_12205 = state_12284[2];
                                                                        var state_12284__$1 = state_12284;
                                                                        var statearr_12334_12405 = state_12284__$1;
                                                                        statearr_12334_12405[2] = inst_12205;
                                                                        statearr_12334_12405[1] = 12;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                      } else {
                                                                        if (state_val_12285 === 19) {
                                                                          var inst_12181 = state_12284[25];
                                                                          var inst_12185 = cljs.core.chunk_first.call(null, inst_12181);
                                                                          var inst_12186 = cljs.core.chunk_rest.call(null, inst_12181);
                                                                          var inst_12187 = cljs.core.count.call(null, inst_12185);
                                                                          var inst_12161 = inst_12186;
                                                                          var inst_12162 = inst_12185;
                                                                          var inst_12163 = inst_12187;
                                                                          var inst_12164 = 0;
                                                                          var state_12284__$1 = function() {
                                                                            var statearr_12335 = state_12284;
                                                                            statearr_12335[14] = inst_12163;
                                                                            statearr_12335[15] = inst_12164;
                                                                            statearr_12335[16] = inst_12162;
                                                                            statearr_12335[17] = inst_12161;
                                                                            return statearr_12335;
                                                                          }();
                                                                          var statearr_12336_12406 = state_12284__$1;
                                                                          statearr_12336_12406[2] = null;
                                                                          statearr_12336_12406[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                        } else {
                                                                          if (state_val_12285 === 20) {
                                                                            var inst_12181 = state_12284[25];
                                                                            var inst_12191 = cljs.core.first.call(null, inst_12181);
                                                                            var inst_12192 = cljs.core.nth.call(null, inst_12191, 0, null);
                                                                            var inst_12193 = cljs.core.nth.call(null, inst_12191, 1, null);
                                                                            var state_12284__$1 = function() {
                                                                              var statearr_12337 = state_12284;
                                                                              statearr_12337[28] = inst_12192;
                                                                              return statearr_12337;
                                                                            }();
                                                                            if (cljs.core.truth_(inst_12193)) {
                                                                              var statearr_12338_12407 = state_12284__$1;
                                                                              statearr_12338_12407[1] = 22;
                                                                            } else {
                                                                              var statearr_12339_12408 = state_12284__$1;
                                                                              statearr_12339_12408[1] = 23;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                          } else {
                                                                            if (state_val_12285 === 21) {
                                                                              var inst_12202 = state_12284[2];
                                                                              var state_12284__$1 = state_12284;
                                                                              var statearr_12340_12409 = state_12284__$1;
                                                                              statearr_12340_12409[2] = inst_12202;
                                                                              statearr_12340_12409[1] = 18;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                            } else {
                                                                              if (state_val_12285 === 22) {
                                                                                var inst_12192 = state_12284[28];
                                                                                var inst_12195 = cljs.core.async.close_BANG_.call(null, inst_12192);
                                                                                var state_12284__$1 = state_12284;
                                                                                var statearr_12341_12410 = state_12284__$1;
                                                                                statearr_12341_12410[2] = inst_12195;
                                                                                statearr_12341_12410[1] = 24;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                              } else {
                                                                                if (state_val_12285 === 23) {
                                                                                  var state_12284__$1 = state_12284;
                                                                                  var statearr_12342_12411 = state_12284__$1;
                                                                                  statearr_12342_12411[2] = null;
                                                                                  statearr_12342_12411[1] = 24;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                } else {
                                                                                  if (state_val_12285 === 24) {
                                                                                    var inst_12181 = state_12284[25];
                                                                                    var inst_12198 = state_12284[2];
                                                                                    var inst_12199 = cljs.core.next.call(null, inst_12181);
                                                                                    var inst_12161 = inst_12199;
                                                                                    var inst_12162 = null;
                                                                                    var inst_12163 = 0;
                                                                                    var inst_12164 = 0;
                                                                                    var state_12284__$1 = function() {
                                                                                      var statearr_12343 = state_12284;
                                                                                      statearr_12343[29] = inst_12198;
                                                                                      statearr_12343[14] = inst_12163;
                                                                                      statearr_12343[15] = inst_12164;
                                                                                      statearr_12343[16] = inst_12162;
                                                                                      statearr_12343[17] = inst_12161;
                                                                                      return statearr_12343;
                                                                                    }();
                                                                                    var statearr_12344_12412 = state_12284__$1;
                                                                                    statearr_12344_12412[2] = null;
                                                                                    statearr_12344_12412[1] = 8;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                  } else {
                                                                                    if (state_val_12285 === 25) {
                                                                                      var inst_12223 = state_12284[12];
                                                                                      var inst_12222 = state_12284[13];
                                                                                      var inst_12225 = inst_12223 < inst_12222;
                                                                                      var inst_12226 = inst_12225;
                                                                                      var state_12284__$1 = state_12284;
                                                                                      if (cljs.core.truth_(inst_12226)) {
                                                                                        var statearr_12345_12413 = state_12284__$1;
                                                                                        statearr_12345_12413[1] = 27;
                                                                                      } else {
                                                                                        var statearr_12346_12414 = state_12284__$1;
                                                                                        statearr_12346_12414[1] = 28;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                    } else {
                                                                                      if (state_val_12285 === 26) {
                                                                                        var inst_12212 = state_12284[19];
                                                                                        var inst_12270 = state_12284[2];
                                                                                        var inst_12271 = cljs.core.seq.call(null, inst_12212);
                                                                                        var state_12284__$1 = function() {
                                                                                          var statearr_12347 = state_12284;
                                                                                          statearr_12347[30] = inst_12270;
                                                                                          return statearr_12347;
                                                                                        }();
                                                                                        if (inst_12271) {
                                                                                          var statearr_12348_12415 = state_12284__$1;
                                                                                          statearr_12348_12415[1] = 42;
                                                                                        } else {
                                                                                          var statearr_12349_12416 = state_12284__$1;
                                                                                          statearr_12349_12416[1] = 43;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                      } else {
                                                                                        if (state_val_12285 === 27) {
                                                                                          var inst_12221 = state_12284[11];
                                                                                          var inst_12223 = state_12284[12];
                                                                                          var inst_12228 = cljs.core._nth.call(null, inst_12221, inst_12223);
                                                                                          var state_12284__$1 = function() {
                                                                                            var statearr_12350 = state_12284;
                                                                                            statearr_12350[7] = inst_12228;
                                                                                            return statearr_12350;
                                                                                          }();
                                                                                          var statearr_12351_12417 = state_12284__$1;
                                                                                          statearr_12351_12417[2] = null;
                                                                                          statearr_12351_12417[1] = 32;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                        } else {
                                                                                          if (state_val_12285 === 28) {
                                                                                            var inst_12220 = state_12284[10];
                                                                                            var inst_12241 = state_12284[9];
                                                                                            var inst_12241__$1 = cljs.core.seq.call(null, inst_12220);
                                                                                            var state_12284__$1 = function() {
                                                                                              var statearr_12355 = state_12284;
                                                                                              statearr_12355[9] = inst_12241__$1;
                                                                                              return statearr_12355;
                                                                                            }();
                                                                                            if (inst_12241__$1) {
                                                                                              var statearr_12356_12418 = state_12284__$1;
                                                                                              statearr_12356_12418[1] = 33;
                                                                                            } else {
                                                                                              var statearr_12357_12419 = state_12284__$1;
                                                                                              statearr_12357_12419[1] = 34;
                                                                                            }
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                          } else {
                                                                                            if (state_val_12285 === 29) {
                                                                                              var inst_12268 = state_12284[2];
                                                                                              var state_12284__$1 = state_12284;
                                                                                              var statearr_12358_12420 = state_12284__$1;
                                                                                              statearr_12358_12420[2] = inst_12268;
                                                                                              statearr_12358_12420[1] = 26;
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                            } else {
                                                                                              if (state_val_12285 === 30) {
                                                                                                var inst_12220 = state_12284[10];
                                                                                                var inst_12221 = state_12284[11];
                                                                                                var inst_12223 = state_12284[12];
                                                                                                var inst_12222 = state_12284[13];
                                                                                                var inst_12237 = state_12284[2];
                                                                                                var inst_12238 = inst_12223 + 1;
                                                                                                var tmp12352 = inst_12220;
                                                                                                var tmp12353 = inst_12221;
                                                                                                var tmp12354 = inst_12222;
                                                                                                var inst_12220__$1 = tmp12352;
                                                                                                var inst_12221__$1 = tmp12353;
                                                                                                var inst_12222__$1 = tmp12354;
                                                                                                var inst_12223__$1 = inst_12238;
                                                                                                var state_12284__$1 = function() {
                                                                                                  var statearr_12359 = state_12284;
                                                                                                  statearr_12359[10] = inst_12220__$1;
                                                                                                  statearr_12359[11] = inst_12221__$1;
                                                                                                  statearr_12359[12] = inst_12223__$1;
                                                                                                  statearr_12359[13] = inst_12222__$1;
                                                                                                  statearr_12359[31] = inst_12237;
                                                                                                  return statearr_12359;
                                                                                                }();
                                                                                                var statearr_12360_12421 = state_12284__$1;
                                                                                                statearr_12360_12421[2] = null;
                                                                                                statearr_12360_12421[1] = 25;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                              } else {
                                                                                                if (state_val_12285 === 31) {
                                                                                                  var inst_12228 = state_12284[7];
                                                                                                  var inst_12229 = state_12284[2];
                                                                                                  var inst_12230 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                                                                                  var inst_12231 = cljs.core.async.untap_STAR_.call(null, m, inst_12228);
                                                                                                  var state_12284__$1 = function() {
                                                                                                    var statearr_12361 = state_12284;
                                                                                                    statearr_12361[32] = inst_12229;
                                                                                                    statearr_12361[33] = inst_12230;
                                                                                                    return statearr_12361;
                                                                                                  }();
                                                                                                  var statearr_12362_12422 = state_12284__$1;
                                                                                                  statearr_12362_12422[2] = inst_12231;
                                                                                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12284__$1);
                                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                                } else {
                                                                                                  return null;
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__6202__auto__) {
        return function() {
          var state_machine__6203__auto__ = null;
          var state_machine__6203__auto____0 = function() {
            var statearr_12366 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            statearr_12366[0] = state_machine__6203__auto__;
            statearr_12366[1] = 1;
            return statearr_12366;
          };
          var state_machine__6203__auto____1 = function(state_12284) {
            while (true) {
              var ret_value__6204__auto__ = function() {
                try {
                  while (true) {
                    var result__6205__auto__ = switch__6202__auto__.call(null, state_12284);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6205__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__6205__auto__;
                    }
                    break;
                  }
                } catch (e12367) {
                  if (e12367 instanceof Object) {
                    var ex__6206__auto__ = e12367;
                    var statearr_12368_12423 = state_12284;
                    statearr_12368_12423[5] = ex__6206__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12284);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e12367;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6204__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__12424 = state_12284;
                state_12284 = G__12424;
                continue;
              } else {
                return ret_value__6204__auto__;
              }
              break;
            }
          };
          state_machine__6203__auto__ = function(state_12284) {
            switch(arguments.length) {
              case 0:
                return state_machine__6203__auto____0.call(this);
              case 1:
                return state_machine__6203__auto____1.call(this, state_12284);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6203__auto____0;
          state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6203__auto____1;
          return state_machine__6203__auto__;
        }();
      }(switch__6202__auto__);
    }();
    var state__6219__auto__ = function() {
      var statearr_12369 = f__6218__auto__.call(null);
      statearr_12369[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6217__auto___12370;
      return statearr_12369;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6219__auto__);
  });
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj12426 = {};
  return obj12426;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3431__auto__ = m;
    if (and__3431__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4070__auto__ = m == null ? null : m;
    return function() {
      var or__3443__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3431__auto__ = m;
    if (and__3431__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4070__auto__ = m == null ? null : m;
    return function() {
      var or__3443__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3431__auto__ = m;
    if (and__3431__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4070__auto__ = m == null ? null : m;
    return function() {
      var or__3443__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3431__auto__ = m;
    if (and__3431__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4070__auto__ = m == null ? null : m;
    return function() {
      var or__3443__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3431__auto__ = m;
    if (and__3431__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4070__auto__ = m == null ? null : m;
    return function() {
      var or__3443__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", 1120344424), null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", 1017440337));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", 1017440337), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", 1120344424), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1123523302), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), chs), new cljs.core.Keyword(null, "reads", "reads", 1122290959), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", 1120344424)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t12536 !== "undefined") {
    } else {
      cljs.core.async.t12536 = function(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, meta12537) {
        this.pick = pick;
        this.out = out;
        this.attrs = attrs;
        this.cs = cs;
        this.calc_state = calc_state;
        this.solo_modes = solo_modes;
        this.mix = mix;
        this.changed = changed;
        this.change = change;
        this.solo_mode = solo_mode;
        this.meta12537 = meta12537;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t12536.cljs$lang$type = true;
      cljs.core.async.t12536.cljs$lang$ctorStr = "cljs.core.async/t12536";
      cljs.core.async.t12536.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
          return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async/t12536");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12536.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t12536.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12536.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12536.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12536.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12536.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", -1162732933, null), new cljs.core.Symbol(null, "mode", "mode", -1637174436, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12536.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t12536.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12536.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_12538) {
          var self__ = this;
          var _12538__$1 = this;
          return self__.meta12537;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12536.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_12538, meta12537__$1) {
          var self__ = this;
          var _12538__$1 = this;
          return new cljs.core.async.t12536(self__.pick, self__.out, self__.attrs, self__.cs, self__.calc_state, self__.solo_modes, self__.mix, self__.changed, self__.change, self__.solo_mode, meta12537__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t12536 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t12536(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta12537) {
          return new cljs.core.async.t12536(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta12537);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t12536(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, null);
  }();
  var c__6217__auto___12645 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__6218__auto__ = function() {
      var switch__6202__auto__ = function(state_12603) {
        var state_val_12604 = state_12603[1];
        if (state_val_12604 === 1) {
          var inst_12542 = state_12603[7];
          var inst_12542__$1 = calc_state.call(null);
          var inst_12543 = cljs.core.seq_QMARK_.call(null, inst_12542__$1);
          var state_12603__$1 = function() {
            var statearr_12605 = state_12603;
            statearr_12605[7] = inst_12542__$1;
            return statearr_12605;
          }();
          if (inst_12543) {
            var statearr_12606_12646 = state_12603__$1;
            statearr_12606_12646[1] = 2;
          } else {
            var statearr_12607_12647 = state_12603__$1;
            statearr_12607_12647[1] = 3;
          }
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_12604 === 2) {
            var inst_12542 = state_12603[7];
            var inst_12545 = cljs.core.apply.call(null, cljs.core.hash_map, inst_12542);
            var state_12603__$1 = state_12603;
            var statearr_12608_12648 = state_12603__$1;
            statearr_12608_12648[2] = inst_12545;
            statearr_12608_12648[1] = 4;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_12604 === 3) {
              var inst_12542 = state_12603[7];
              var state_12603__$1 = state_12603;
              var statearr_12609_12649 = state_12603__$1;
              statearr_12609_12649[2] = inst_12542;
              statearr_12609_12649[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_12604 === 4) {
                var inst_12542 = state_12603[7];
                var inst_12548 = state_12603[2];
                var inst_12549 = cljs.core.get.call(null, inst_12548, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                var inst_12550 = cljs.core.get.call(null, inst_12548, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                var inst_12551 = cljs.core.get.call(null, inst_12548, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                var inst_12552 = inst_12542;
                var state_12603__$1 = function() {
                  var statearr_12610 = state_12603;
                  statearr_12610[8] = inst_12552;
                  statearr_12610[9] = inst_12550;
                  statearr_12610[10] = inst_12551;
                  statearr_12610[11] = inst_12549;
                  return statearr_12610;
                }();
                var statearr_12611_12650 = state_12603__$1;
                statearr_12611_12650[2] = null;
                statearr_12611_12650[1] = 5;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_12604 === 5) {
                  var inst_12552 = state_12603[8];
                  var inst_12555 = cljs.core.seq_QMARK_.call(null, inst_12552);
                  var state_12603__$1 = state_12603;
                  if (inst_12555) {
                    var statearr_12612_12651 = state_12603__$1;
                    statearr_12612_12651[1] = 7;
                  } else {
                    var statearr_12613_12652 = state_12603__$1;
                    statearr_12613_12652[1] = 8;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_12604 === 6) {
                    var inst_12601 = state_12603[2];
                    var state_12603__$1 = state_12603;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12603__$1, inst_12601);
                  } else {
                    if (state_val_12604 === 7) {
                      var inst_12552 = state_12603[8];
                      var inst_12557 = cljs.core.apply.call(null, cljs.core.hash_map, inst_12552);
                      var state_12603__$1 = state_12603;
                      var statearr_12614_12653 = state_12603__$1;
                      statearr_12614_12653[2] = inst_12557;
                      statearr_12614_12653[1] = 9;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_12604 === 8) {
                        var inst_12552 = state_12603[8];
                        var state_12603__$1 = state_12603;
                        var statearr_12615_12654 = state_12603__$1;
                        statearr_12615_12654[2] = inst_12552;
                        statearr_12615_12654[1] = 9;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_12604 === 9) {
                          var inst_12560 = state_12603[12];
                          var inst_12560__$1 = state_12603[2];
                          var inst_12561 = cljs.core.get.call(null, inst_12560__$1, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                          var inst_12562 = cljs.core.get.call(null, inst_12560__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                          var inst_12563 = cljs.core.get.call(null, inst_12560__$1, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                          var state_12603__$1 = function() {
                            var statearr_12616 = state_12603;
                            statearr_12616[13] = inst_12562;
                            statearr_12616[12] = inst_12560__$1;
                            statearr_12616[14] = inst_12563;
                            return statearr_12616;
                          }();
                          return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_12603__$1, 10, inst_12561);
                        } else {
                          if (state_val_12604 === 10) {
                            var inst_12567 = state_12603[15];
                            var inst_12568 = state_12603[16];
                            var inst_12566 = state_12603[2];
                            var inst_12567__$1 = cljs.core.nth.call(null, inst_12566, 0, null);
                            var inst_12568__$1 = cljs.core.nth.call(null, inst_12566, 1, null);
                            var inst_12569 = inst_12567__$1 == null;
                            var inst_12570 = cljs.core._EQ_.call(null, inst_12568__$1, change);
                            var inst_12571 = inst_12569 || inst_12570;
                            var state_12603__$1 = function() {
                              var statearr_12617 = state_12603;
                              statearr_12617[15] = inst_12567__$1;
                              statearr_12617[16] = inst_12568__$1;
                              return statearr_12617;
                            }();
                            if (cljs.core.truth_(inst_12571)) {
                              var statearr_12618_12655 = state_12603__$1;
                              statearr_12618_12655[1] = 11;
                            } else {
                              var statearr_12619_12656 = state_12603__$1;
                              statearr_12619_12656[1] = 12;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_12604 === 11) {
                              var inst_12567 = state_12603[15];
                              var inst_12573 = inst_12567 == null;
                              var state_12603__$1 = state_12603;
                              if (cljs.core.truth_(inst_12573)) {
                                var statearr_12620_12657 = state_12603__$1;
                                statearr_12620_12657[1] = 14;
                              } else {
                                var statearr_12621_12658 = state_12603__$1;
                                statearr_12621_12658[1] = 15;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_12604 === 12) {
                                var inst_12582 = state_12603[17];
                                var inst_12568 = state_12603[16];
                                var inst_12563 = state_12603[14];
                                var inst_12582__$1 = inst_12563.call(null, inst_12568);
                                var state_12603__$1 = function() {
                                  var statearr_12622 = state_12603;
                                  statearr_12622[17] = inst_12582__$1;
                                  return statearr_12622;
                                }();
                                if (cljs.core.truth_(inst_12582__$1)) {
                                  var statearr_12623_12659 = state_12603__$1;
                                  statearr_12623_12659[1] = 17;
                                } else {
                                  var statearr_12624_12660 = state_12603__$1;
                                  statearr_12624_12660[1] = 18;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_12604 === 13) {
                                  var inst_12599 = state_12603[2];
                                  var state_12603__$1 = state_12603;
                                  var statearr_12625_12661 = state_12603__$1;
                                  statearr_12625_12661[2] = inst_12599;
                                  statearr_12625_12661[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_12604 === 14) {
                                    var inst_12568 = state_12603[16];
                                    var inst_12575 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_12568);
                                    var state_12603__$1 = state_12603;
                                    var statearr_12626_12662 = state_12603__$1;
                                    statearr_12626_12662[2] = inst_12575;
                                    statearr_12626_12662[1] = 16;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_12604 === 15) {
                                      var state_12603__$1 = state_12603;
                                      var statearr_12627_12663 = state_12603__$1;
                                      statearr_12627_12663[2] = null;
                                      statearr_12627_12663[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_12604 === 16) {
                                        var inst_12578 = state_12603[2];
                                        var inst_12579 = calc_state.call(null);
                                        var inst_12552 = inst_12579;
                                        var state_12603__$1 = function() {
                                          var statearr_12628 = state_12603;
                                          statearr_12628[8] = inst_12552;
                                          statearr_12628[18] = inst_12578;
                                          return statearr_12628;
                                        }();
                                        var statearr_12629_12664 = state_12603__$1;
                                        statearr_12629_12664[2] = null;
                                        statearr_12629_12664[1] = 5;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_12604 === 17) {
                                          var inst_12582 = state_12603[17];
                                          var state_12603__$1 = state_12603;
                                          var statearr_12630_12665 = state_12603__$1;
                                          statearr_12630_12665[2] = inst_12582;
                                          statearr_12630_12665[1] = 19;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_12604 === 18) {
                                            var inst_12562 = state_12603[13];
                                            var inst_12568 = state_12603[16];
                                            var inst_12563 = state_12603[14];
                                            var inst_12585 = cljs.core.empty_QMARK_.call(null, inst_12563);
                                            var inst_12586 = inst_12562.call(null, inst_12568);
                                            var inst_12587 = cljs.core.not.call(null, inst_12586);
                                            var inst_12588 = inst_12585 && inst_12587;
                                            var state_12603__$1 = state_12603;
                                            var statearr_12631_12666 = state_12603__$1;
                                            statearr_12631_12666[2] = inst_12588;
                                            statearr_12631_12666[1] = 19;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_12604 === 19) {
                                              var inst_12590 = state_12603[2];
                                              var state_12603__$1 = state_12603;
                                              if (cljs.core.truth_(inst_12590)) {
                                                var statearr_12632_12667 = state_12603__$1;
                                                statearr_12632_12667[1] = 20;
                                              } else {
                                                var statearr_12633_12668 = state_12603__$1;
                                                statearr_12633_12668[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_12604 === 20) {
                                                var inst_12567 = state_12603[15];
                                                var state_12603__$1 = state_12603;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12603__$1, 23, out, inst_12567);
                                              } else {
                                                if (state_val_12604 === 21) {
                                                  var state_12603__$1 = state_12603;
                                                  var statearr_12634_12669 = state_12603__$1;
                                                  statearr_12634_12669[2] = null;
                                                  statearr_12634_12669[1] = 22;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_12604 === 22) {
                                                    var inst_12560 = state_12603[12];
                                                    var inst_12596 = state_12603[2];
                                                    var inst_12552 = inst_12560;
                                                    var state_12603__$1 = function() {
                                                      var statearr_12635 = state_12603;
                                                      statearr_12635[8] = inst_12552;
                                                      statearr_12635[19] = inst_12596;
                                                      return statearr_12635;
                                                    }();
                                                    var statearr_12636_12670 = state_12603__$1;
                                                    statearr_12636_12670[2] = null;
                                                    statearr_12636_12670[1] = 5;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_12604 === 23) {
                                                      var inst_12593 = state_12603[2];
                                                      var state_12603__$1 = state_12603;
                                                      var statearr_12637_12671 = state_12603__$1;
                                                      statearr_12637_12671[2] = inst_12593;
                                                      statearr_12637_12671[1] = 22;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__6202__auto__) {
        return function() {
          var state_machine__6203__auto__ = null;
          var state_machine__6203__auto____0 = function() {
            var statearr_12641 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            statearr_12641[0] = state_machine__6203__auto__;
            statearr_12641[1] = 1;
            return statearr_12641;
          };
          var state_machine__6203__auto____1 = function(state_12603) {
            while (true) {
              var ret_value__6204__auto__ = function() {
                try {
                  while (true) {
                    var result__6205__auto__ = switch__6202__auto__.call(null, state_12603);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6205__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__6205__auto__;
                    }
                    break;
                  }
                } catch (e12642) {
                  if (e12642 instanceof Object) {
                    var ex__6206__auto__ = e12642;
                    var statearr_12643_12672 = state_12603;
                    statearr_12643_12672[5] = ex__6206__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12603);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e12642;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6204__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__12673 = state_12603;
                state_12603 = G__12673;
                continue;
              } else {
                return ret_value__6204__auto__;
              }
              break;
            }
          };
          state_machine__6203__auto__ = function(state_12603) {
            switch(arguments.length) {
              case 0:
                return state_machine__6203__auto____0.call(this);
              case 1:
                return state_machine__6203__auto____1.call(this, state_12603);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6203__auto____0;
          state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6203__auto____1;
          return state_machine__6203__auto__;
        }();
      }(switch__6202__auto__);
    }();
    var state__6219__auto__ = function() {
      var statearr_12644 = f__6218__auto__.call(null);
      statearr_12644[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6217__auto___12645;
      return statearr_12644;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6219__auto__);
  });
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj12675 = {};
  return obj12675;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3431__auto__ = p;
    if (and__3431__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4070__auto__ = p == null ? null : p;
    return function() {
      var or__3443__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3431__auto__ = p;
    if (and__3431__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4070__auto__ = p == null ? null : p;
    return function() {
      var or__3443__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3431__auto__ = p;
      if (and__3431__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4070__auto__ = p == null ? null : p;
      return function() {
        var or__3443__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3431__auto__ = p;
      if (and__3431__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4070__auto__ = p == null ? null : p;
      return function() {
        var or__3443__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3443__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3443__auto__, mults) {
            return function(p1__12676_SHARP_) {
              if (cljs.core.truth_(p1__12676_SHARP_.call(null, topic))) {
                return p1__12676_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__12676_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3443__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t12801 !== "undefined") {
      } else {
        cljs.core.async.t12801 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta12802) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta12802 = meta12802;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t12801.cljs$lang$type = true;
        cljs.core.async.t12801.cljs$lang$ctorStr = "cljs.core.async/t12801";
        cljs.core.async.t12801.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
            return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async/t12801");
          };
        }(mults, ensure_mult);
        cljs.core.async.t12801.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t12801.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t12801.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var p__$1 = this;
            var temp__4092__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4092__auto__)) {
              var m = temp__4092__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t12801.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t12801.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t12801.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t12801.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t12801.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_12803) {
            var self__ = this;
            var _12803__$1 = this;
            return self__.meta12802;
          };
        }(mults, ensure_mult);
        cljs.core.async.t12801.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_12803, meta12802__$1) {
            var self__ = this;
            var _12803__$1 = this;
            return new cljs.core.async.t12801(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta12802__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t12801 = function(mults, ensure_mult) {
          return function __GT_t12801(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta12802) {
            return new cljs.core.async.t12801(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta12802);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t12801(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null);
    }();
    var c__6217__auto___12925 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6218__auto__ = function() {
        var switch__6202__auto__ = function(state_12877) {
          var state_val_12878 = state_12877[1];
          if (state_val_12878 === 1) {
            var state_12877__$1 = state_12877;
            var statearr_12879_12926 = state_12877__$1;
            statearr_12879_12926[2] = null;
            statearr_12879_12926[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_12878 === 2) {
              var state_12877__$1 = state_12877;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12877__$1, 4, ch);
            } else {
              if (state_val_12878 === 3) {
                var inst_12875 = state_12877[2];
                var state_12877__$1 = state_12877;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12877__$1, inst_12875);
              } else {
                if (state_val_12878 === 4) {
                  var inst_12806 = state_12877[7];
                  var inst_12806__$1 = state_12877[2];
                  var inst_12807 = inst_12806__$1 == null;
                  var state_12877__$1 = function() {
                    var statearr_12880 = state_12877;
                    statearr_12880[7] = inst_12806__$1;
                    return statearr_12880;
                  }();
                  if (cljs.core.truth_(inst_12807)) {
                    var statearr_12881_12927 = state_12877__$1;
                    statearr_12881_12927[1] = 5;
                  } else {
                    var statearr_12882_12928 = state_12877__$1;
                    statearr_12882_12928[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_12878 === 5) {
                    var inst_12813 = cljs.core.deref.call(null, mults);
                    var inst_12814 = cljs.core.vals.call(null, inst_12813);
                    var inst_12815 = cljs.core.seq.call(null, inst_12814);
                    var inst_12816 = inst_12815;
                    var inst_12817 = null;
                    var inst_12818 = 0;
                    var inst_12819 = 0;
                    var state_12877__$1 = function() {
                      var statearr_12883 = state_12877;
                      statearr_12883[8] = inst_12816;
                      statearr_12883[9] = inst_12819;
                      statearr_12883[10] = inst_12817;
                      statearr_12883[11] = inst_12818;
                      return statearr_12883;
                    }();
                    var statearr_12884_12929 = state_12877__$1;
                    statearr_12884_12929[2] = null;
                    statearr_12884_12929[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_12878 === 6) {
                      var inst_12854 = state_12877[12];
                      var inst_12806 = state_12877[7];
                      var inst_12856 = state_12877[13];
                      var inst_12854__$1 = topic_fn.call(null, inst_12806);
                      var inst_12855 = cljs.core.deref.call(null, mults);
                      var inst_12856__$1 = cljs.core.get.call(null, inst_12855, inst_12854__$1);
                      var state_12877__$1 = function() {
                        var statearr_12885 = state_12877;
                        statearr_12885[12] = inst_12854__$1;
                        statearr_12885[13] = inst_12856__$1;
                        return statearr_12885;
                      }();
                      if (cljs.core.truth_(inst_12856__$1)) {
                        var statearr_12886_12930 = state_12877__$1;
                        statearr_12886_12930[1] = 19;
                      } else {
                        var statearr_12887_12931 = state_12877__$1;
                        statearr_12887_12931[1] = 20;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_12878 === 7) {
                        var inst_12873 = state_12877[2];
                        var state_12877__$1 = state_12877;
                        var statearr_12888_12932 = state_12877__$1;
                        statearr_12888_12932[2] = inst_12873;
                        statearr_12888_12932[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_12878 === 8) {
                          var inst_12819 = state_12877[9];
                          var inst_12818 = state_12877[11];
                          var inst_12821 = inst_12819 < inst_12818;
                          var inst_12822 = inst_12821;
                          var state_12877__$1 = state_12877;
                          if (cljs.core.truth_(inst_12822)) {
                            var statearr_12892_12933 = state_12877__$1;
                            statearr_12892_12933[1] = 10;
                          } else {
                            var statearr_12893_12934 = state_12877__$1;
                            statearr_12893_12934[1] = 11;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_12878 === 9) {
                            var inst_12852 = state_12877[2];
                            var state_12877__$1 = state_12877;
                            var statearr_12894_12935 = state_12877__$1;
                            statearr_12894_12935[2] = inst_12852;
                            statearr_12894_12935[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_12878 === 10) {
                              var inst_12816 = state_12877[8];
                              var inst_12819 = state_12877[9];
                              var inst_12817 = state_12877[10];
                              var inst_12818 = state_12877[11];
                              var inst_12824 = cljs.core._nth.call(null, inst_12817, inst_12819);
                              var inst_12825 = cljs.core.async.muxch_STAR_.call(null, inst_12824);
                              var inst_12826 = cljs.core.async.close_BANG_.call(null, inst_12825);
                              var inst_12827 = inst_12819 + 1;
                              var tmp12889 = inst_12816;
                              var tmp12890 = inst_12817;
                              var tmp12891 = inst_12818;
                              var inst_12816__$1 = tmp12889;
                              var inst_12817__$1 = tmp12890;
                              var inst_12818__$1 = tmp12891;
                              var inst_12819__$1 = inst_12827;
                              var state_12877__$1 = function() {
                                var statearr_12895 = state_12877;
                                statearr_12895[8] = inst_12816__$1;
                                statearr_12895[9] = inst_12819__$1;
                                statearr_12895[10] = inst_12817__$1;
                                statearr_12895[11] = inst_12818__$1;
                                statearr_12895[14] = inst_12826;
                                return statearr_12895;
                              }();
                              var statearr_12896_12936 = state_12877__$1;
                              statearr_12896_12936[2] = null;
                              statearr_12896_12936[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_12878 === 11) {
                                var inst_12830 = state_12877[15];
                                var inst_12816 = state_12877[8];
                                var inst_12830__$1 = cljs.core.seq.call(null, inst_12816);
                                var state_12877__$1 = function() {
                                  var statearr_12897 = state_12877;
                                  statearr_12897[15] = inst_12830__$1;
                                  return statearr_12897;
                                }();
                                if (inst_12830__$1) {
                                  var statearr_12898_12937 = state_12877__$1;
                                  statearr_12898_12937[1] = 13;
                                } else {
                                  var statearr_12899_12938 = state_12877__$1;
                                  statearr_12899_12938[1] = 14;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_12878 === 12) {
                                  var inst_12850 = state_12877[2];
                                  var state_12877__$1 = state_12877;
                                  var statearr_12900_12939 = state_12877__$1;
                                  statearr_12900_12939[2] = inst_12850;
                                  statearr_12900_12939[1] = 9;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_12878 === 13) {
                                    var inst_12830 = state_12877[15];
                                    var inst_12832 = cljs.core.chunked_seq_QMARK_.call(null, inst_12830);
                                    var state_12877__$1 = state_12877;
                                    if (inst_12832) {
                                      var statearr_12901_12940 = state_12877__$1;
                                      statearr_12901_12940[1] = 16;
                                    } else {
                                      var statearr_12902_12941 = state_12877__$1;
                                      statearr_12902_12941[1] = 17;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_12878 === 14) {
                                      var state_12877__$1 = state_12877;
                                      var statearr_12903_12942 = state_12877__$1;
                                      statearr_12903_12942[2] = null;
                                      statearr_12903_12942[1] = 15;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_12878 === 15) {
                                        var inst_12848 = state_12877[2];
                                        var state_12877__$1 = state_12877;
                                        var statearr_12904_12943 = state_12877__$1;
                                        statearr_12904_12943[2] = inst_12848;
                                        statearr_12904_12943[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_12878 === 16) {
                                          var inst_12830 = state_12877[15];
                                          var inst_12834 = cljs.core.chunk_first.call(null, inst_12830);
                                          var inst_12835 = cljs.core.chunk_rest.call(null, inst_12830);
                                          var inst_12836 = cljs.core.count.call(null, inst_12834);
                                          var inst_12816 = inst_12835;
                                          var inst_12817 = inst_12834;
                                          var inst_12818 = inst_12836;
                                          var inst_12819 = 0;
                                          var state_12877__$1 = function() {
                                            var statearr_12905 = state_12877;
                                            statearr_12905[8] = inst_12816;
                                            statearr_12905[9] = inst_12819;
                                            statearr_12905[10] = inst_12817;
                                            statearr_12905[11] = inst_12818;
                                            return statearr_12905;
                                          }();
                                          var statearr_12906_12944 = state_12877__$1;
                                          statearr_12906_12944[2] = null;
                                          statearr_12906_12944[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_12878 === 17) {
                                            var inst_12830 = state_12877[15];
                                            var inst_12839 = cljs.core.first.call(null, inst_12830);
                                            var inst_12840 = cljs.core.async.muxch_STAR_.call(null, inst_12839);
                                            var inst_12841 = cljs.core.async.close_BANG_.call(null, inst_12840);
                                            var inst_12842 = cljs.core.next.call(null, inst_12830);
                                            var inst_12816 = inst_12842;
                                            var inst_12817 = null;
                                            var inst_12818 = 0;
                                            var inst_12819 = 0;
                                            var state_12877__$1 = function() {
                                              var statearr_12907 = state_12877;
                                              statearr_12907[8] = inst_12816;
                                              statearr_12907[9] = inst_12819;
                                              statearr_12907[10] = inst_12817;
                                              statearr_12907[11] = inst_12818;
                                              statearr_12907[16] = inst_12841;
                                              return statearr_12907;
                                            }();
                                            var statearr_12908_12945 = state_12877__$1;
                                            statearr_12908_12945[2] = null;
                                            statearr_12908_12945[1] = 8;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_12878 === 18) {
                                              var inst_12845 = state_12877[2];
                                              var state_12877__$1 = state_12877;
                                              var statearr_12909_12946 = state_12877__$1;
                                              statearr_12909_12946[2] = inst_12845;
                                              statearr_12909_12946[1] = 15;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_12878 === 19) {
                                                var state_12877__$1 = state_12877;
                                                var statearr_12910_12947 = state_12877__$1;
                                                statearr_12910_12947[2] = null;
                                                statearr_12910_12947[1] = 24;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_12878 === 20) {
                                                  var state_12877__$1 = state_12877;
                                                  var statearr_12911_12948 = state_12877__$1;
                                                  statearr_12911_12948[2] = null;
                                                  statearr_12911_12948[1] = 21;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_12878 === 21) {
                                                    var inst_12870 = state_12877[2];
                                                    var state_12877__$1 = function() {
                                                      var statearr_12912 = state_12877;
                                                      statearr_12912[17] = inst_12870;
                                                      return statearr_12912;
                                                    }();
                                                    var statearr_12913_12949 = state_12877__$1;
                                                    statearr_12913_12949[2] = null;
                                                    statearr_12913_12949[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_12878 === 22) {
                                                      var inst_12867 = state_12877[2];
                                                      var state_12877__$1 = state_12877;
                                                      var statearr_12914_12950 = state_12877__$1;
                                                      statearr_12914_12950[2] = inst_12867;
                                                      statearr_12914_12950[1] = 21;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_12878 === 23) {
                                                        var inst_12854 = state_12877[12];
                                                        var inst_12858 = state_12877[2];
                                                        var inst_12859 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_12854);
                                                        var state_12877__$1 = function() {
                                                          var statearr_12915 = state_12877;
                                                          statearr_12915[18] = inst_12858;
                                                          return statearr_12915;
                                                        }();
                                                        var statearr_12916_12951 = state_12877__$1;
                                                        statearr_12916_12951[2] = inst_12859;
                                                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12877__$1);
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_12878 === 24) {
                                                          var inst_12806 = state_12877[7];
                                                          var inst_12856 = state_12877[13];
                                                          var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_12877, 23, Object, null, 22);
                                                          var inst_12863 = cljs.core.async.muxch_STAR_.call(null, inst_12856);
                                                          var state_12877__$1 = state_12877;
                                                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12877__$1, 25, inst_12863, inst_12806);
                                                        } else {
                                                          if (state_val_12878 === 25) {
                                                            var inst_12865 = state_12877[2];
                                                            var state_12877__$1 = state_12877;
                                                            var statearr_12917_12952 = state_12877__$1;
                                                            statearr_12917_12952[2] = inst_12865;
                                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12877__$1);
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                          } else {
                                                            return null;
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6202__auto__) {
          return function() {
            var state_machine__6203__auto__ = null;
            var state_machine__6203__auto____0 = function() {
              var statearr_12921 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_12921[0] = state_machine__6203__auto__;
              statearr_12921[1] = 1;
              return statearr_12921;
            };
            var state_machine__6203__auto____1 = function(state_12877) {
              while (true) {
                var ret_value__6204__auto__ = function() {
                  try {
                    while (true) {
                      var result__6205__auto__ = switch__6202__auto__.call(null, state_12877);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6205__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6205__auto__;
                      }
                      break;
                    }
                  } catch (e12922) {
                    if (e12922 instanceof Object) {
                      var ex__6206__auto__ = e12922;
                      var statearr_12923_12953 = state_12877;
                      statearr_12923_12953[5] = ex__6206__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12877);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e12922;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6204__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__12954 = state_12877;
                  state_12877 = G__12954;
                  continue;
                } else {
                  return ret_value__6204__auto__;
                }
                break;
              }
            };
            state_machine__6203__auto__ = function(state_12877) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6203__auto____0.call(this);
                case 1:
                  return state_machine__6203__auto____1.call(this, state_12877);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6203__auto____0;
            state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6203__auto____1;
            return state_machine__6203__auto__;
          }();
        }(switch__6202__auto__);
      }();
      var state__6219__auto__ = function() {
        var statearr_12924 = f__6218__auto__.call(null);
        statearr_12924[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6217__auto___12925;
        return statearr_12924;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6219__auto__);
    });
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__6217__auto___13091 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6218__auto__ = function() {
        var switch__6202__auto__ = function(state_13061) {
          var state_val_13062 = state_13061[1];
          if (state_val_13062 === 1) {
            var state_13061__$1 = state_13061;
            var statearr_13063_13092 = state_13061__$1;
            statearr_13063_13092[2] = null;
            statearr_13063_13092[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_13062 === 2) {
              var inst_13024 = cljs.core.reset_BANG_.call(null, dctr, cnt);
              var inst_13025 = 0;
              var state_13061__$1 = function() {
                var statearr_13064 = state_13061;
                statearr_13064[7] = inst_13025;
                statearr_13064[8] = inst_13024;
                return statearr_13064;
              }();
              var statearr_13065_13093 = state_13061__$1;
              statearr_13065_13093[2] = null;
              statearr_13065_13093[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_13062 === 3) {
                var inst_13059 = state_13061[2];
                var state_13061__$1 = state_13061;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13061__$1, inst_13059);
              } else {
                if (state_val_13062 === 4) {
                  var inst_13025 = state_13061[7];
                  var inst_13027 = inst_13025 < cnt;
                  var state_13061__$1 = state_13061;
                  if (cljs.core.truth_(inst_13027)) {
                    var statearr_13066_13094 = state_13061__$1;
                    statearr_13066_13094[1] = 6;
                  } else {
                    var statearr_13067_13095 = state_13061__$1;
                    statearr_13067_13095[1] = 7;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_13062 === 5) {
                    var inst_13045 = state_13061[2];
                    var state_13061__$1 = function() {
                      var statearr_13068 = state_13061;
                      statearr_13068[9] = inst_13045;
                      return statearr_13068;
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13061__$1, 12, dchan);
                  } else {
                    if (state_val_13062 === 6) {
                      var state_13061__$1 = state_13061;
                      var statearr_13069_13096 = state_13061__$1;
                      statearr_13069_13096[2] = null;
                      statearr_13069_13096[1] = 11;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_13062 === 7) {
                        var state_13061__$1 = state_13061;
                        var statearr_13070_13097 = state_13061__$1;
                        statearr_13070_13097[2] = null;
                        statearr_13070_13097[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_13062 === 8) {
                          var inst_13043 = state_13061[2];
                          var state_13061__$1 = state_13061;
                          var statearr_13071_13098 = state_13061__$1;
                          statearr_13071_13098[2] = inst_13043;
                          statearr_13071_13098[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_13062 === 9) {
                            var inst_13025 = state_13061[7];
                            var inst_13038 = state_13061[2];
                            var inst_13039 = inst_13025 + 1;
                            var inst_13025__$1 = inst_13039;
                            var state_13061__$1 = function() {
                              var statearr_13072 = state_13061;
                              statearr_13072[10] = inst_13038;
                              statearr_13072[7] = inst_13025__$1;
                              return statearr_13072;
                            }();
                            var statearr_13073_13099 = state_13061__$1;
                            statearr_13073_13099[2] = null;
                            statearr_13073_13099[1] = 4;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_13062 === 10) {
                              var inst_13029 = state_13061[2];
                              var inst_13030 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                              var state_13061__$1 = function() {
                                var statearr_13074 = state_13061;
                                statearr_13074[11] = inst_13029;
                                return statearr_13074;
                              }();
                              var statearr_13075_13100 = state_13061__$1;
                              statearr_13075_13100[2] = inst_13030;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13061__$1);
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_13062 === 11) {
                                var inst_13025 = state_13061[7];
                                var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_13061, 10, Object, null, 9);
                                var inst_13034 = chs__$1.call(null, inst_13025);
                                var inst_13035 = done.call(null, inst_13025);
                                var inst_13036 = cljs.core.async.take_BANG_.call(null, inst_13034, inst_13035);
                                var state_13061__$1 = state_13061;
                                var statearr_13076_13101 = state_13061__$1;
                                statearr_13076_13101[2] = inst_13036;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13061__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_13062 === 12) {
                                  var inst_13047 = state_13061[12];
                                  var inst_13047__$1 = state_13061[2];
                                  var inst_13048 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_13047__$1);
                                  var state_13061__$1 = function() {
                                    var statearr_13077 = state_13061;
                                    statearr_13077[12] = inst_13047__$1;
                                    return statearr_13077;
                                  }();
                                  if (cljs.core.truth_(inst_13048)) {
                                    var statearr_13078_13102 = state_13061__$1;
                                    statearr_13078_13102[1] = 13;
                                  } else {
                                    var statearr_13079_13103 = state_13061__$1;
                                    statearr_13079_13103[1] = 14;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_13062 === 13) {
                                    var inst_13050 = cljs.core.async.close_BANG_.call(null, out);
                                    var state_13061__$1 = state_13061;
                                    var statearr_13080_13104 = state_13061__$1;
                                    statearr_13080_13104[2] = inst_13050;
                                    statearr_13080_13104[1] = 15;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_13062 === 14) {
                                      var inst_13047 = state_13061[12];
                                      var inst_13052 = cljs.core.apply.call(null, f, inst_13047);
                                      var state_13061__$1 = state_13061;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13061__$1, 16, out, inst_13052);
                                    } else {
                                      if (state_val_13062 === 15) {
                                        var inst_13057 = state_13061[2];
                                        var state_13061__$1 = state_13061;
                                        var statearr_13081_13105 = state_13061__$1;
                                        statearr_13081_13105[2] = inst_13057;
                                        statearr_13081_13105[1] = 3;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_13062 === 16) {
                                          var inst_13054 = state_13061[2];
                                          var state_13061__$1 = function() {
                                            var statearr_13082 = state_13061;
                                            statearr_13082[13] = inst_13054;
                                            return statearr_13082;
                                          }();
                                          var statearr_13083_13106 = state_13061__$1;
                                          statearr_13083_13106[2] = null;
                                          statearr_13083_13106[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6202__auto__) {
          return function() {
            var state_machine__6203__auto__ = null;
            var state_machine__6203__auto____0 = function() {
              var statearr_13087 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_13087[0] = state_machine__6203__auto__;
              statearr_13087[1] = 1;
              return statearr_13087;
            };
            var state_machine__6203__auto____1 = function(state_13061) {
              while (true) {
                var ret_value__6204__auto__ = function() {
                  try {
                    while (true) {
                      var result__6205__auto__ = switch__6202__auto__.call(null, state_13061);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6205__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6205__auto__;
                      }
                      break;
                    }
                  } catch (e13088) {
                    if (e13088 instanceof Object) {
                      var ex__6206__auto__ = e13088;
                      var statearr_13089_13107 = state_13061;
                      statearr_13089_13107[5] = ex__6206__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13061);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e13088;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6204__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__13108 = state_13061;
                  state_13061 = G__13108;
                  continue;
                } else {
                  return ret_value__6204__auto__;
                }
                break;
              }
            };
            state_machine__6203__auto__ = function(state_13061) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6203__auto____0.call(this);
                case 1:
                  return state_machine__6203__auto____1.call(this, state_13061);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6203__auto____0;
            state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6203__auto____1;
            return state_machine__6203__auto__;
          }();
        }(switch__6202__auto__);
      }();
      var state__6219__auto__ = function() {
        var statearr_13090 = f__6218__auto__.call(null);
        statearr_13090[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6217__auto___13091;
        return statearr_13090;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6219__auto__);
    });
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6217__auto___13216 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6218__auto__ = function() {
        var switch__6202__auto__ = function(state_13192) {
          var state_val_13193 = state_13192[1];
          if (state_val_13193 === 1) {
            var inst_13163 = cljs.core.vec.call(null, chs);
            var inst_13164 = inst_13163;
            var state_13192__$1 = function() {
              var statearr_13194 = state_13192;
              statearr_13194[7] = inst_13164;
              return statearr_13194;
            }();
            var statearr_13195_13217 = state_13192__$1;
            statearr_13195_13217[2] = null;
            statearr_13195_13217[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_13193 === 2) {
              var inst_13164 = state_13192[7];
              var inst_13166 = cljs.core.count.call(null, inst_13164);
              var inst_13167 = inst_13166 > 0;
              var state_13192__$1 = state_13192;
              if (cljs.core.truth_(inst_13167)) {
                var statearr_13196_13218 = state_13192__$1;
                statearr_13196_13218[1] = 4;
              } else {
                var statearr_13197_13219 = state_13192__$1;
                statearr_13197_13219[1] = 5;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_13193 === 3) {
                var inst_13190 = state_13192[2];
                var state_13192__$1 = state_13192;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13192__$1, inst_13190);
              } else {
                if (state_val_13193 === 4) {
                  var inst_13164 = state_13192[7];
                  var state_13192__$1 = state_13192;
                  return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_13192__$1, 7, inst_13164);
                } else {
                  if (state_val_13193 === 5) {
                    var inst_13186 = cljs.core.async.close_BANG_.call(null, out);
                    var state_13192__$1 = state_13192;
                    var statearr_13198_13220 = state_13192__$1;
                    statearr_13198_13220[2] = inst_13186;
                    statearr_13198_13220[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_13193 === 6) {
                      var inst_13188 = state_13192[2];
                      var state_13192__$1 = state_13192;
                      var statearr_13199_13221 = state_13192__$1;
                      statearr_13199_13221[2] = inst_13188;
                      statearr_13199_13221[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_13193 === 7) {
                        var inst_13172 = state_13192[8];
                        var inst_13171 = state_13192[9];
                        var inst_13171__$1 = state_13192[2];
                        var inst_13172__$1 = cljs.core.nth.call(null, inst_13171__$1, 0, null);
                        var inst_13173 = cljs.core.nth.call(null, inst_13171__$1, 1, null);
                        var inst_13174 = inst_13172__$1 == null;
                        var state_13192__$1 = function() {
                          var statearr_13200 = state_13192;
                          statearr_13200[8] = inst_13172__$1;
                          statearr_13200[9] = inst_13171__$1;
                          statearr_13200[10] = inst_13173;
                          return statearr_13200;
                        }();
                        if (cljs.core.truth_(inst_13174)) {
                          var statearr_13201_13222 = state_13192__$1;
                          statearr_13201_13222[1] = 8;
                        } else {
                          var statearr_13202_13223 = state_13192__$1;
                          statearr_13202_13223[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_13193 === 8) {
                          var inst_13164 = state_13192[7];
                          var inst_13172 = state_13192[8];
                          var inst_13171 = state_13192[9];
                          var inst_13173 = state_13192[10];
                          var inst_13176 = function() {
                            var c = inst_13173;
                            var v = inst_13172;
                            var vec__13169 = inst_13171;
                            var cs = inst_13164;
                            return function(c, v, vec__13169, cs, inst_13164, inst_13172, inst_13171, inst_13173, state_val_13193) {
                              return function(p1__13109_SHARP_) {
                                return cljs.core.not_EQ_.call(null, c, p1__13109_SHARP_);
                              };
                            }(c, v, vec__13169, cs, inst_13164, inst_13172, inst_13171, inst_13173, state_val_13193);
                          }();
                          var inst_13177 = cljs.core.filterv.call(null, inst_13176, inst_13164);
                          var inst_13164__$1 = inst_13177;
                          var state_13192__$1 = function() {
                            var statearr_13203 = state_13192;
                            statearr_13203[7] = inst_13164__$1;
                            return statearr_13203;
                          }();
                          var statearr_13204_13224 = state_13192__$1;
                          statearr_13204_13224[2] = null;
                          statearr_13204_13224[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_13193 === 9) {
                            var inst_13172 = state_13192[8];
                            var state_13192__$1 = state_13192;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13192__$1, 11, out, inst_13172);
                          } else {
                            if (state_val_13193 === 10) {
                              var inst_13184 = state_13192[2];
                              var state_13192__$1 = state_13192;
                              var statearr_13206_13225 = state_13192__$1;
                              statearr_13206_13225[2] = inst_13184;
                              statearr_13206_13225[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_13193 === 11) {
                                var inst_13164 = state_13192[7];
                                var inst_13181 = state_13192[2];
                                var tmp13205 = inst_13164;
                                var inst_13164__$1 = tmp13205;
                                var state_13192__$1 = function() {
                                  var statearr_13207 = state_13192;
                                  statearr_13207[11] = inst_13181;
                                  statearr_13207[7] = inst_13164__$1;
                                  return statearr_13207;
                                }();
                                var statearr_13208_13226 = state_13192__$1;
                                statearr_13208_13226[2] = null;
                                statearr_13208_13226[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6202__auto__) {
          return function() {
            var state_machine__6203__auto__ = null;
            var state_machine__6203__auto____0 = function() {
              var statearr_13212 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_13212[0] = state_machine__6203__auto__;
              statearr_13212[1] = 1;
              return statearr_13212;
            };
            var state_machine__6203__auto____1 = function(state_13192) {
              while (true) {
                var ret_value__6204__auto__ = function() {
                  try {
                    while (true) {
                      var result__6205__auto__ = switch__6202__auto__.call(null, state_13192);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6205__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6205__auto__;
                      }
                      break;
                    }
                  } catch (e13213) {
                    if (e13213 instanceof Object) {
                      var ex__6206__auto__ = e13213;
                      var statearr_13214_13227 = state_13192;
                      statearr_13214_13227[5] = ex__6206__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13192);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e13213;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6204__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__13228 = state_13192;
                  state_13192 = G__13228;
                  continue;
                } else {
                  return ret_value__6204__auto__;
                }
                break;
              }
            };
            state_machine__6203__auto__ = function(state_13192) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6203__auto____0.call(this);
                case 1:
                  return state_machine__6203__auto____1.call(this, state_13192);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6203__auto____0;
            state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6203__auto____1;
            return state_machine__6203__auto__;
          }();
        }(switch__6202__auto__);
      }();
      var state__6219__auto__ = function() {
        var statearr_13215 = f__6218__auto__.call(null);
        statearr_13215[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6217__auto___13216;
        return statearr_13215;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6219__auto__);
    });
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6217__auto___13321 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6218__auto__ = function() {
        var switch__6202__auto__ = function(state_13298) {
          var state_val_13299 = state_13298[1];
          if (state_val_13299 === 1) {
            var inst_13275 = 0;
            var state_13298__$1 = function() {
              var statearr_13300 = state_13298;
              statearr_13300[7] = inst_13275;
              return statearr_13300;
            }();
            var statearr_13301_13322 = state_13298__$1;
            statearr_13301_13322[2] = null;
            statearr_13301_13322[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_13299 === 2) {
              var inst_13275 = state_13298[7];
              var inst_13277 = inst_13275 < n;
              var state_13298__$1 = state_13298;
              if (cljs.core.truth_(inst_13277)) {
                var statearr_13302_13323 = state_13298__$1;
                statearr_13302_13323[1] = 4;
              } else {
                var statearr_13303_13324 = state_13298__$1;
                statearr_13303_13324[1] = 5;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_13299 === 3) {
                var inst_13295 = state_13298[2];
                var inst_13296 = cljs.core.async.close_BANG_.call(null, out);
                var state_13298__$1 = function() {
                  var statearr_13304 = state_13298;
                  statearr_13304[8] = inst_13295;
                  return statearr_13304;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13298__$1, inst_13296);
              } else {
                if (state_val_13299 === 4) {
                  var state_13298__$1 = state_13298;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13298__$1, 7, ch);
                } else {
                  if (state_val_13299 === 5) {
                    var state_13298__$1 = state_13298;
                    var statearr_13305_13325 = state_13298__$1;
                    statearr_13305_13325[2] = null;
                    statearr_13305_13325[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_13299 === 6) {
                      var inst_13293 = state_13298[2];
                      var state_13298__$1 = state_13298;
                      var statearr_13306_13326 = state_13298__$1;
                      statearr_13306_13326[2] = inst_13293;
                      statearr_13306_13326[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_13299 === 7) {
                        var inst_13280 = state_13298[9];
                        var inst_13280__$1 = state_13298[2];
                        var inst_13281 = inst_13280__$1 == null;
                        var inst_13282 = cljs.core.not.call(null, inst_13281);
                        var state_13298__$1 = function() {
                          var statearr_13307 = state_13298;
                          statearr_13307[9] = inst_13280__$1;
                          return statearr_13307;
                        }();
                        if (inst_13282) {
                          var statearr_13308_13327 = state_13298__$1;
                          statearr_13308_13327[1] = 8;
                        } else {
                          var statearr_13309_13328 = state_13298__$1;
                          statearr_13309_13328[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_13299 === 8) {
                          var inst_13280 = state_13298[9];
                          var state_13298__$1 = state_13298;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13298__$1, 11, out, inst_13280);
                        } else {
                          if (state_val_13299 === 9) {
                            var state_13298__$1 = state_13298;
                            var statearr_13310_13329 = state_13298__$1;
                            statearr_13310_13329[2] = null;
                            statearr_13310_13329[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_13299 === 10) {
                              var inst_13290 = state_13298[2];
                              var state_13298__$1 = state_13298;
                              var statearr_13311_13330 = state_13298__$1;
                              statearr_13311_13330[2] = inst_13290;
                              statearr_13311_13330[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_13299 === 11) {
                                var inst_13275 = state_13298[7];
                                var inst_13285 = state_13298[2];
                                var inst_13286 = inst_13275 + 1;
                                var inst_13275__$1 = inst_13286;
                                var state_13298__$1 = function() {
                                  var statearr_13312 = state_13298;
                                  statearr_13312[7] = inst_13275__$1;
                                  statearr_13312[10] = inst_13285;
                                  return statearr_13312;
                                }();
                                var statearr_13313_13331 = state_13298__$1;
                                statearr_13313_13331[2] = null;
                                statearr_13313_13331[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6202__auto__) {
          return function() {
            var state_machine__6203__auto__ = null;
            var state_machine__6203__auto____0 = function() {
              var statearr_13317 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_13317[0] = state_machine__6203__auto__;
              statearr_13317[1] = 1;
              return statearr_13317;
            };
            var state_machine__6203__auto____1 = function(state_13298) {
              while (true) {
                var ret_value__6204__auto__ = function() {
                  try {
                    while (true) {
                      var result__6205__auto__ = switch__6202__auto__.call(null, state_13298);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6205__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6205__auto__;
                      }
                      break;
                    }
                  } catch (e13318) {
                    if (e13318 instanceof Object) {
                      var ex__6206__auto__ = e13318;
                      var statearr_13319_13332 = state_13298;
                      statearr_13319_13332[5] = ex__6206__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13298);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e13318;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6204__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__13333 = state_13298;
                  state_13298 = G__13333;
                  continue;
                } else {
                  return ret_value__6204__auto__;
                }
                break;
              }
            };
            state_machine__6203__auto__ = function(state_13298) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6203__auto____0.call(this);
                case 1:
                  return state_machine__6203__auto____1.call(this, state_13298);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6203__auto____0;
            state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6203__auto____1;
            return state_machine__6203__auto__;
          }();
        }(switch__6202__auto__);
      }();
      var state__6219__auto__ = function() {
        var statearr_13320 = f__6218__auto__.call(null);
        statearr_13320[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6217__auto___13321;
        return statearr_13320;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6219__auto__);
    });
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6217__auto___13430 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6218__auto__ = function() {
        var switch__6202__auto__ = function(state_13405) {
          var state_val_13406 = state_13405[1];
          if (state_val_13406 === 1) {
            var inst_13382 = null;
            var state_13405__$1 = function() {
              var statearr_13407 = state_13405;
              statearr_13407[7] = inst_13382;
              return statearr_13407;
            }();
            var statearr_13408_13431 = state_13405__$1;
            statearr_13408_13431[2] = null;
            statearr_13408_13431[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_13406 === 2) {
              var state_13405__$1 = state_13405;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13405__$1, 4, ch);
            } else {
              if (state_val_13406 === 3) {
                var inst_13402 = state_13405[2];
                var inst_13403 = cljs.core.async.close_BANG_.call(null, out);
                var state_13405__$1 = function() {
                  var statearr_13409 = state_13405;
                  statearr_13409[8] = inst_13402;
                  return statearr_13409;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13405__$1, inst_13403);
              } else {
                if (state_val_13406 === 4) {
                  var inst_13385 = state_13405[9];
                  var inst_13385__$1 = state_13405[2];
                  var inst_13386 = inst_13385__$1 == null;
                  var inst_13387 = cljs.core.not.call(null, inst_13386);
                  var state_13405__$1 = function() {
                    var statearr_13410 = state_13405;
                    statearr_13410[9] = inst_13385__$1;
                    return statearr_13410;
                  }();
                  if (inst_13387) {
                    var statearr_13411_13432 = state_13405__$1;
                    statearr_13411_13432[1] = 5;
                  } else {
                    var statearr_13412_13433 = state_13405__$1;
                    statearr_13412_13433[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_13406 === 5) {
                    var inst_13385 = state_13405[9];
                    var inst_13382 = state_13405[7];
                    var inst_13389 = cljs.core._EQ_.call(null, inst_13385, inst_13382);
                    var state_13405__$1 = state_13405;
                    if (inst_13389) {
                      var statearr_13413_13434 = state_13405__$1;
                      statearr_13413_13434[1] = 8;
                    } else {
                      var statearr_13414_13435 = state_13405__$1;
                      statearr_13414_13435[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_13406 === 6) {
                      var state_13405__$1 = state_13405;
                      var statearr_13416_13436 = state_13405__$1;
                      statearr_13416_13436[2] = null;
                      statearr_13416_13436[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_13406 === 7) {
                        var inst_13400 = state_13405[2];
                        var state_13405__$1 = state_13405;
                        var statearr_13417_13437 = state_13405__$1;
                        statearr_13417_13437[2] = inst_13400;
                        statearr_13417_13437[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_13406 === 8) {
                          var inst_13382 = state_13405[7];
                          var tmp13415 = inst_13382;
                          var inst_13382__$1 = tmp13415;
                          var state_13405__$1 = function() {
                            var statearr_13418 = state_13405;
                            statearr_13418[7] = inst_13382__$1;
                            return statearr_13418;
                          }();
                          var statearr_13419_13438 = state_13405__$1;
                          statearr_13419_13438[2] = null;
                          statearr_13419_13438[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_13406 === 9) {
                            var inst_13385 = state_13405[9];
                            var state_13405__$1 = state_13405;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13405__$1, 11, out, inst_13385);
                          } else {
                            if (state_val_13406 === 10) {
                              var inst_13397 = state_13405[2];
                              var state_13405__$1 = state_13405;
                              var statearr_13420_13439 = state_13405__$1;
                              statearr_13420_13439[2] = inst_13397;
                              statearr_13420_13439[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_13406 === 11) {
                                var inst_13385 = state_13405[9];
                                var inst_13394 = state_13405[2];
                                var inst_13382 = inst_13385;
                                var state_13405__$1 = function() {
                                  var statearr_13421 = state_13405;
                                  statearr_13421[10] = inst_13394;
                                  statearr_13421[7] = inst_13382;
                                  return statearr_13421;
                                }();
                                var statearr_13422_13440 = state_13405__$1;
                                statearr_13422_13440[2] = null;
                                statearr_13422_13440[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6202__auto__) {
          return function() {
            var state_machine__6203__auto__ = null;
            var state_machine__6203__auto____0 = function() {
              var statearr_13426 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_13426[0] = state_machine__6203__auto__;
              statearr_13426[1] = 1;
              return statearr_13426;
            };
            var state_machine__6203__auto____1 = function(state_13405) {
              while (true) {
                var ret_value__6204__auto__ = function() {
                  try {
                    while (true) {
                      var result__6205__auto__ = switch__6202__auto__.call(null, state_13405);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6205__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6205__auto__;
                      }
                      break;
                    }
                  } catch (e13427) {
                    if (e13427 instanceof Object) {
                      var ex__6206__auto__ = e13427;
                      var statearr_13428_13441 = state_13405;
                      statearr_13428_13441[5] = ex__6206__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13405);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e13427;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6204__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__13442 = state_13405;
                  state_13405 = G__13442;
                  continue;
                } else {
                  return ret_value__6204__auto__;
                }
                break;
              }
            };
            state_machine__6203__auto__ = function(state_13405) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6203__auto____0.call(this);
                case 1:
                  return state_machine__6203__auto____1.call(this, state_13405);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6203__auto____0;
            state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6203__auto____1;
            return state_machine__6203__auto__;
          }();
        }(switch__6202__auto__);
      }();
      var state__6219__auto__ = function() {
        var statearr_13429 = f__6218__auto__.call(null);
        statearr_13429[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6217__auto___13430;
        return statearr_13429;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6219__auto__);
    });
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6217__auto___13577 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6218__auto__ = function() {
        var switch__6202__auto__ = function(state_13547) {
          var state_val_13548 = state_13547[1];
          if (state_val_13548 === 1) {
            var inst_13510 = new Array(n);
            var inst_13511 = inst_13510;
            var inst_13512 = 0;
            var state_13547__$1 = function() {
              var statearr_13549 = state_13547;
              statearr_13549[7] = inst_13512;
              statearr_13549[8] = inst_13511;
              return statearr_13549;
            }();
            var statearr_13550_13578 = state_13547__$1;
            statearr_13550_13578[2] = null;
            statearr_13550_13578[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_13548 === 2) {
              var state_13547__$1 = state_13547;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13547__$1, 4, ch);
            } else {
              if (state_val_13548 === 3) {
                var inst_13545 = state_13547[2];
                var state_13547__$1 = state_13547;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13547__$1, inst_13545);
              } else {
                if (state_val_13548 === 4) {
                  var inst_13515 = state_13547[9];
                  var inst_13515__$1 = state_13547[2];
                  var inst_13516 = inst_13515__$1 == null;
                  var inst_13517 = cljs.core.not.call(null, inst_13516);
                  var state_13547__$1 = function() {
                    var statearr_13551 = state_13547;
                    statearr_13551[9] = inst_13515__$1;
                    return statearr_13551;
                  }();
                  if (inst_13517) {
                    var statearr_13552_13579 = state_13547__$1;
                    statearr_13552_13579[1] = 5;
                  } else {
                    var statearr_13553_13580 = state_13547__$1;
                    statearr_13553_13580[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_13548 === 5) {
                    var inst_13515 = state_13547[9];
                    var inst_13520 = state_13547[10];
                    var inst_13512 = state_13547[7];
                    var inst_13511 = state_13547[8];
                    var inst_13519 = inst_13511[inst_13512] = inst_13515;
                    var inst_13520__$1 = inst_13512 + 1;
                    var inst_13521 = inst_13520__$1 < n;
                    var state_13547__$1 = function() {
                      var statearr_13554 = state_13547;
                      statearr_13554[10] = inst_13520__$1;
                      statearr_13554[11] = inst_13519;
                      return statearr_13554;
                    }();
                    if (cljs.core.truth_(inst_13521)) {
                      var statearr_13555_13581 = state_13547__$1;
                      statearr_13555_13581[1] = 8;
                    } else {
                      var statearr_13556_13582 = state_13547__$1;
                      statearr_13556_13582[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_13548 === 6) {
                      var inst_13512 = state_13547[7];
                      var inst_13533 = inst_13512 > 0;
                      var state_13547__$1 = state_13547;
                      if (cljs.core.truth_(inst_13533)) {
                        var statearr_13558_13583 = state_13547__$1;
                        statearr_13558_13583[1] = 12;
                      } else {
                        var statearr_13559_13584 = state_13547__$1;
                        statearr_13559_13584[1] = 13;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_13548 === 7) {
                        var inst_13543 = state_13547[2];
                        var state_13547__$1 = state_13547;
                        var statearr_13560_13585 = state_13547__$1;
                        statearr_13560_13585[2] = inst_13543;
                        statearr_13560_13585[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_13548 === 8) {
                          var inst_13520 = state_13547[10];
                          var inst_13511 = state_13547[8];
                          var tmp13557 = inst_13511;
                          var inst_13511__$1 = tmp13557;
                          var inst_13512 = inst_13520;
                          var state_13547__$1 = function() {
                            var statearr_13561 = state_13547;
                            statearr_13561[7] = inst_13512;
                            statearr_13561[8] = inst_13511__$1;
                            return statearr_13561;
                          }();
                          var statearr_13562_13586 = state_13547__$1;
                          statearr_13562_13586[2] = null;
                          statearr_13562_13586[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_13548 === 9) {
                            var inst_13511 = state_13547[8];
                            var inst_13525 = cljs.core.vec.call(null, inst_13511);
                            var state_13547__$1 = state_13547;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13547__$1, 11, out, inst_13525);
                          } else {
                            if (state_val_13548 === 10) {
                              var inst_13531 = state_13547[2];
                              var state_13547__$1 = state_13547;
                              var statearr_13563_13587 = state_13547__$1;
                              statearr_13563_13587[2] = inst_13531;
                              statearr_13563_13587[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_13548 === 11) {
                                var inst_13527 = state_13547[2];
                                var inst_13528 = new Array(n);
                                var inst_13511 = inst_13528;
                                var inst_13512 = 0;
                                var state_13547__$1 = function() {
                                  var statearr_13564 = state_13547;
                                  statearr_13564[7] = inst_13512;
                                  statearr_13564[8] = inst_13511;
                                  statearr_13564[12] = inst_13527;
                                  return statearr_13564;
                                }();
                                var statearr_13565_13588 = state_13547__$1;
                                statearr_13565_13588[2] = null;
                                statearr_13565_13588[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_13548 === 12) {
                                  var inst_13511 = state_13547[8];
                                  var inst_13535 = cljs.core.vec.call(null, inst_13511);
                                  var state_13547__$1 = state_13547;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13547__$1, 15, out, inst_13535);
                                } else {
                                  if (state_val_13548 === 13) {
                                    var state_13547__$1 = state_13547;
                                    var statearr_13566_13589 = state_13547__$1;
                                    statearr_13566_13589[2] = null;
                                    statearr_13566_13589[1] = 14;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_13548 === 14) {
                                      var inst_13540 = state_13547[2];
                                      var inst_13541 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_13547__$1 = function() {
                                        var statearr_13567 = state_13547;
                                        statearr_13567[13] = inst_13540;
                                        return statearr_13567;
                                      }();
                                      var statearr_13568_13590 = state_13547__$1;
                                      statearr_13568_13590[2] = inst_13541;
                                      statearr_13568_13590[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_13548 === 15) {
                                        var inst_13537 = state_13547[2];
                                        var state_13547__$1 = state_13547;
                                        var statearr_13569_13591 = state_13547__$1;
                                        statearr_13569_13591[2] = inst_13537;
                                        statearr_13569_13591[1] = 14;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6202__auto__) {
          return function() {
            var state_machine__6203__auto__ = null;
            var state_machine__6203__auto____0 = function() {
              var statearr_13573 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_13573[0] = state_machine__6203__auto__;
              statearr_13573[1] = 1;
              return statearr_13573;
            };
            var state_machine__6203__auto____1 = function(state_13547) {
              while (true) {
                var ret_value__6204__auto__ = function() {
                  try {
                    while (true) {
                      var result__6205__auto__ = switch__6202__auto__.call(null, state_13547);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6205__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6205__auto__;
                      }
                      break;
                    }
                  } catch (e13574) {
                    if (e13574 instanceof Object) {
                      var ex__6206__auto__ = e13574;
                      var statearr_13575_13592 = state_13547;
                      statearr_13575_13592[5] = ex__6206__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13547);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e13574;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6204__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__13593 = state_13547;
                  state_13547 = G__13593;
                  continue;
                } else {
                  return ret_value__6204__auto__;
                }
                break;
              }
            };
            state_machine__6203__auto__ = function(state_13547) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6203__auto____0.call(this);
                case 1:
                  return state_machine__6203__auto____1.call(this, state_13547);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6203__auto____0;
            state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6203__auto____1;
            return state_machine__6203__auto__;
          }();
        }(switch__6202__auto__);
      }();
      var state__6219__auto__ = function() {
        var statearr_13576 = f__6218__auto__.call(null);
        statearr_13576[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6217__auto___13577;
        return statearr_13576;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6219__auto__);
    });
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6217__auto___13736 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6218__auto__ = function() {
        var switch__6202__auto__ = function(state_13706) {
          var state_val_13707 = state_13706[1];
          if (state_val_13707 === 1) {
            var inst_13665 = [];
            var inst_13666 = inst_13665;
            var inst_13667 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538);
            var state_13706__$1 = function() {
              var statearr_13708 = state_13706;
              statearr_13708[7] = inst_13667;
              statearr_13708[8] = inst_13666;
              return statearr_13708;
            }();
            var statearr_13709_13737 = state_13706__$1;
            statearr_13709_13737[2] = null;
            statearr_13709_13737[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_13707 === 2) {
              var state_13706__$1 = state_13706;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13706__$1, 4, ch);
            } else {
              if (state_val_13707 === 3) {
                var inst_13704 = state_13706[2];
                var state_13706__$1 = state_13706;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13706__$1, inst_13704);
              } else {
                if (state_val_13707 === 4) {
                  var inst_13670 = state_13706[9];
                  var inst_13670__$1 = state_13706[2];
                  var inst_13671 = inst_13670__$1 == null;
                  var inst_13672 = cljs.core.not.call(null, inst_13671);
                  var state_13706__$1 = function() {
                    var statearr_13710 = state_13706;
                    statearr_13710[9] = inst_13670__$1;
                    return statearr_13710;
                  }();
                  if (inst_13672) {
                    var statearr_13711_13738 = state_13706__$1;
                    statearr_13711_13738[1] = 5;
                  } else {
                    var statearr_13712_13739 = state_13706__$1;
                    statearr_13712_13739[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_13707 === 5) {
                    var inst_13670 = state_13706[9];
                    var inst_13667 = state_13706[7];
                    var inst_13674 = state_13706[10];
                    var inst_13674__$1 = f.call(null, inst_13670);
                    var inst_13675 = cljs.core._EQ_.call(null, inst_13674__$1, inst_13667);
                    var inst_13676 = cljs.core.keyword_identical_QMARK_.call(null, inst_13667, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538));
                    var inst_13677 = inst_13675 || inst_13676;
                    var state_13706__$1 = function() {
                      var statearr_13713 = state_13706;
                      statearr_13713[10] = inst_13674__$1;
                      return statearr_13713;
                    }();
                    if (cljs.core.truth_(inst_13677)) {
                      var statearr_13714_13740 = state_13706__$1;
                      statearr_13714_13740[1] = 8;
                    } else {
                      var statearr_13715_13741 = state_13706__$1;
                      statearr_13715_13741[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_13707 === 6) {
                      var inst_13666 = state_13706[8];
                      var inst_13691 = inst_13666.length;
                      var inst_13692 = inst_13691 > 0;
                      var state_13706__$1 = state_13706;
                      if (cljs.core.truth_(inst_13692)) {
                        var statearr_13717_13742 = state_13706__$1;
                        statearr_13717_13742[1] = 12;
                      } else {
                        var statearr_13718_13743 = state_13706__$1;
                        statearr_13718_13743[1] = 13;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_13707 === 7) {
                        var inst_13702 = state_13706[2];
                        var state_13706__$1 = state_13706;
                        var statearr_13719_13744 = state_13706__$1;
                        statearr_13719_13744[2] = inst_13702;
                        statearr_13719_13744[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_13707 === 8) {
                          var inst_13670 = state_13706[9];
                          var inst_13674 = state_13706[10];
                          var inst_13666 = state_13706[8];
                          var inst_13679 = inst_13666.push(inst_13670);
                          var tmp13716 = inst_13666;
                          var inst_13666__$1 = tmp13716;
                          var inst_13667 = inst_13674;
                          var state_13706__$1 = function() {
                            var statearr_13720 = state_13706;
                            statearr_13720[11] = inst_13679;
                            statearr_13720[7] = inst_13667;
                            statearr_13720[8] = inst_13666__$1;
                            return statearr_13720;
                          }();
                          var statearr_13721_13745 = state_13706__$1;
                          statearr_13721_13745[2] = null;
                          statearr_13721_13745[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_13707 === 9) {
                            var inst_13666 = state_13706[8];
                            var inst_13682 = cljs.core.vec.call(null, inst_13666);
                            var state_13706__$1 = state_13706;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13706__$1, 11, out, inst_13682);
                          } else {
                            if (state_val_13707 === 10) {
                              var inst_13689 = state_13706[2];
                              var state_13706__$1 = state_13706;
                              var statearr_13722_13746 = state_13706__$1;
                              statearr_13722_13746[2] = inst_13689;
                              statearr_13722_13746[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_13707 === 11) {
                                var inst_13670 = state_13706[9];
                                var inst_13674 = state_13706[10];
                                var inst_13684 = state_13706[2];
                                var inst_13685 = [];
                                var inst_13686 = inst_13685.push(inst_13670);
                                var inst_13666 = inst_13685;
                                var inst_13667 = inst_13674;
                                var state_13706__$1 = function() {
                                  var statearr_13723 = state_13706;
                                  statearr_13723[12] = inst_13686;
                                  statearr_13723[13] = inst_13684;
                                  statearr_13723[7] = inst_13667;
                                  statearr_13723[8] = inst_13666;
                                  return statearr_13723;
                                }();
                                var statearr_13724_13747 = state_13706__$1;
                                statearr_13724_13747[2] = null;
                                statearr_13724_13747[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_13707 === 12) {
                                  var inst_13666 = state_13706[8];
                                  var inst_13694 = cljs.core.vec.call(null, inst_13666);
                                  var state_13706__$1 = state_13706;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13706__$1, 15, out, inst_13694);
                                } else {
                                  if (state_val_13707 === 13) {
                                    var state_13706__$1 = state_13706;
                                    var statearr_13725_13748 = state_13706__$1;
                                    statearr_13725_13748[2] = null;
                                    statearr_13725_13748[1] = 14;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_13707 === 14) {
                                      var inst_13699 = state_13706[2];
                                      var inst_13700 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_13706__$1 = function() {
                                        var statearr_13726 = state_13706;
                                        statearr_13726[14] = inst_13699;
                                        return statearr_13726;
                                      }();
                                      var statearr_13727_13749 = state_13706__$1;
                                      statearr_13727_13749[2] = inst_13700;
                                      statearr_13727_13749[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_13707 === 15) {
                                        var inst_13696 = state_13706[2];
                                        var state_13706__$1 = state_13706;
                                        var statearr_13728_13750 = state_13706__$1;
                                        statearr_13728_13750[2] = inst_13696;
                                        statearr_13728_13750[1] = 14;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6202__auto__) {
          return function() {
            var state_machine__6203__auto__ = null;
            var state_machine__6203__auto____0 = function() {
              var statearr_13732 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_13732[0] = state_machine__6203__auto__;
              statearr_13732[1] = 1;
              return statearr_13732;
            };
            var state_machine__6203__auto____1 = function(state_13706) {
              while (true) {
                var ret_value__6204__auto__ = function() {
                  try {
                    while (true) {
                      var result__6205__auto__ = switch__6202__auto__.call(null, state_13706);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6205__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6205__auto__;
                      }
                      break;
                    }
                  } catch (e13733) {
                    if (e13733 instanceof Object) {
                      var ex__6206__auto__ = e13733;
                      var statearr_13734_13751 = state_13706;
                      statearr_13734_13751[5] = ex__6206__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13706);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e13733;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6204__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__13752 = state_13706;
                  state_13706 = G__13752;
                  continue;
                } else {
                  return ret_value__6204__auto__;
                }
                break;
              }
            };
            state_machine__6203__auto__ = function(state_13706) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6203__auto____0.call(this);
                case 1:
                  return state_machine__6203__auto____1.call(this, state_13706);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6203__auto____0;
            state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6203__auto____1;
            return state_machine__6203__auto__;
          }();
        }(switch__6202__auto__);
      }();
      var state__6219__auto__ = function() {
        var statearr_13735 = f__6218__auto__.call(null);
        statearr_13735[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6217__auto___13736;
        return statearr_13735;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6219__auto__);
    });
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("floor16.xhr");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("goog.events.EventType");
goog.require("goog.net.XhrIo");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("cljs.core.async");
goog.require("goog.events");
goog.require("goog.events");
goog.require("cljs.reader");
goog.require("cljs.reader");
floor16.xhr.edn__GT_map = function edn__GT_map(t) {
  if (cljs.core.truth_(function() {
    var and__3431__auto__ = t;
    if (cljs.core.truth_(and__3431__auto__)) {
      return!cljs.core.empty_QMARK_.call(null, t);
    } else {
      return and__3431__auto__;
    }
  }())) {
    return cljs.reader.read_string.call(null, t);
  } else {
    return null;
  }
};
floor16.xhr.map__GT_edn = function map__GT_edn(m) {
  if (cljs.core.truth_(m)) {
    return cljs.core.pr_str.call(null, m);
  } else {
    return null;
  }
};
floor16.xhr.url_encode = function url_encode(string) {
  var G__72346 = string;
  var G__72346__$1 = G__72346 == null ? null : [cljs.core.str(G__72346)].join("");
  var G__72346__$2 = G__72346__$1 == null ? null : encodeURIComponent(G__72346__$1);
  var G__72346__$3 = G__72346__$2 == null ? null : G__72346__$2.replace("+", "%20");
  return G__72346__$3;
};
floor16.xhr.url_decode = function url_decode(string) {
  var G__72348 = string;
  var G__72348__$1 = G__72348 == null ? null : [cljs.core.str(G__72348)].join("");
  var G__72348__$2 = G__72348__$1 == null ? null : decodeURIComponent(G__72348__$1);
  return G__72348__$2;
};
floor16.xhr.map__GT_query = function map__GT_query(m) {
  var G__72352 = cljs.core.seq.call(null, m);
  var G__72352__$1 = G__72352 == null ? null : cljs.core.sort.call(null, G__72352);
  var G__72352__$2 = G__72352__$1 == null ? null : cljs.core.map.call(null, function(G__72352, G__72352__$1) {
    return function(p__72353) {
      var vec__72354 = p__72353;
      var k = cljs.core.nth.call(null, vec__72354, 0, null);
      var v = cljs.core.nth.call(null, vec__72354, 1, null);
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [floor16.xhr.url_encode.call(null, cljs.core.name.call(null, k)), "\x3d", floor16.xhr.url_encode.call(null, [cljs.core.str(v)].join(""))], null);
    };
  }(G__72352, G__72352__$1), G__72352__$1);
  var G__72352__$3 = G__72352__$2 == null ? null : cljs.core.interpose.call(null, "\x26", G__72352__$2);
  var G__72352__$4 = G__72352__$3 == null ? null : cljs.core.flatten.call(null, G__72352__$3);
  var G__72352__$5 = G__72352__$4 == null ? null : cljs.core.apply.call(null, cljs.core.str, G__72352__$4);
  return G__72352__$5;
};
floor16.xhr.split_param = function split_param(param) {
  return cljs.core.take.call(null, 2, cljs.core.concat.call(null, clojure.string.split.call(null, param, /=/), cljs.core.repeat.call(null, "")));
};
floor16.xhr.query__GT_map = function query__GT_map(qstr) {
  if (cljs.core.truth_(qstr)) {
    var G__72356 = clojure.string.split.call(null, qstr, /&/);
    var G__72356__$1 = G__72356 == null ? null : cljs.core.seq.call(null, G__72356);
    var G__72356__$2 = G__72356__$1 == null ? null : cljs.core.mapcat.call(null, floor16.xhr.split_param, G__72356__$1);
    var G__72356__$3 = G__72356__$2 == null ? null : cljs.core.map.call(null, floor16.xhr.url_decode, G__72356__$2);
    var G__72356__$4 = G__72356__$3 == null ? null : cljs.core.apply.call(null, cljs.core.hash_map, G__72356__$3);
    return G__72356__$4;
  } else {
    return null;
  }
};
floor16.xhr.meths = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "get", "get", 1014006472), "GET", new cljs.core.Keyword(null, "put", "put", 1014015617), "PUT", new cljs.core.Keyword(null, "post", "post", 1017351186), "POST", new cljs.core.Keyword(null, "delete", "delete", 3973413149), "DELETE"], null);
floor16.xhr.med_types = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "edn", "edn", 1014004513), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 1125876963), "application/edn", new cljs.core.Keyword(null, "to-map-encoder", "to-map-encoder", 4561511627), floor16.xhr.edn__GT_map, new cljs.core.Keyword(null, "from-map-encoder", "from-map-encoder", 2908479354), floor16.xhr.map__GT_edn], null), new cljs.core.Keyword(null, "url-encode", 
"url-encode", 3129387942), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 1125876963), "application/x-www-form-urlencoded", new cljs.core.Keyword(null, "to-map-encoder", "to-map-encoder", 4561511627), floor16.xhr.query__GT_map, new cljs.core.Keyword(null, "from-map-encoder", "from-map-encoder", 2908479354), floor16.xhr.map__GT_query], null)], null);
floor16.xhr.heads = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "accept", "accept", 3885410426), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 1125876963), "Accept", new cljs.core.Keyword(null, "decoder", "decoder", 2556338102), function(p1__72357_SHARP_) {
  return cljs.core.get_in.call(null, floor16.xhr.med_types, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__72357_SHARP_, new cljs.core.Keyword(null, "value", "value", 1125876963)], null));
}], null), new cljs.core.Keyword(null, "content-type", "content-type", 1799574400), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 1125876963), "Content-Type", new cljs.core.Keyword(null, "decoder", "decoder", 2556338102), function(p1__72358_SHARP_) {
  return cljs.core.get_in.call(null, floor16.xhr.med_types, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__72358_SHARP_, new cljs.core.Keyword(null, "value", "value", 1125876963)], null));
}], null), new cljs.core.Keyword(null, "authorization", "authorization", 3923301355), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 1125876963), "Authorization", new cljs.core.Keyword(null, "decoder", "decoder", 2556338102), cljs.core.identity], null)], null);
floor16.xhr.format_headers = function format_headers(headers) {
  return cljs.core.clj__GT_js.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__72361) {
    var vec__72362 = p__72361;
    var k = cljs.core.nth.call(null, vec__72362, 0, null);
    var v = cljs.core.nth.call(null, vec__72362, 1, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.get_in.call(null, floor16.xhr.heads, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.Keyword(null, "value", "value", 1125876963)], null)), cljs.core.get_in.call(null, floor16.xhr.heads, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.Keyword(null, "decoder", "decoder", 2556338102)], null)).call(null, 
    v)], null);
  }, headers)));
};
floor16.xhr.pre_process = function pre_process(p__72363) {
  var map__72366 = p__72363;
  var map__72366__$1 = cljs.core.seq_QMARK_.call(null, map__72366) ? cljs.core.apply.call(null, cljs.core.hash_map, map__72366) : map__72366;
  var request = map__72366__$1;
  var headers = cljs.core.get.call(null, map__72366__$1, new cljs.core.Keyword(null, "headers", "headers", 1809212152));
  var body = cljs.core.get.call(null, map__72366__$1, new cljs.core.Keyword(null, "body", "body", 1016933652));
  var method = cljs.core.get.call(null, map__72366__$1, new cljs.core.Keyword(null, "method", "method", 4231316563));
  var url = cljs.core.get.call(null, map__72366__$1, new cljs.core.Keyword(null, "url", "url", 1014020321));
  var content_type = cljs.core.get.call(null, headers, new cljs.core.Keyword(null, "content-type", "content-type", 1799574400), new cljs.core.Keyword(null, "edn", "edn", 1014004513));
  var map__72367 = content_type.call(null, floor16.xhr.med_types);
  var map__72367__$1 = cljs.core.seq_QMARK_.call(null, map__72367) ? cljs.core.apply.call(null, cljs.core.hash_map, map__72367) : map__72367;
  var body_encoder = cljs.core.get.call(null, map__72367__$1, new cljs.core.Keyword(null, "from-map-encoder", "from-map-encoder", 2908479354));
  var accept = cljs.core.get.call(null, headers, new cljs.core.Keyword(null, "accept", "accept", 3885410426), new cljs.core.Keyword(null, "edn", "edn", 1014004513));
  var headers__$1 = floor16.xhr.format_headers.call(null, cljs.core.assoc.call(null, cljs.core.assoc.call(null, headers, new cljs.core.Keyword(null, "content-type", "content-type", 1799574400), content_type), new cljs.core.Keyword(null, "accept", "accept", 3885410426), accept));
  return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "method", "method", 4231316563), floor16.xhr.meths.call(null, method), new cljs.core.Keyword(null, "url", "url", 1014020321), url, new cljs.core.Keyword(null, "body", "body", 1016933652), cljs.core.truth_(body) ? body_encoder.call(null, body) : null, new cljs.core.Keyword(null, "headers", "headers", 1809212152), headers__$1], null);
};
floor16.xhr.create_response = function create_response(xhr) {
  var raw_body = xhr.getResponseText();
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", 4416389988), xhr.getStatus(), new cljs.core.Keyword(null, "headers", "headers", 1809212152), xhr.getAllResponseHeaders(), new cljs.core.Keyword(null, "body", "body", 1016933652), cljs.core.truth_(function() {
    var and__3431__auto__ = raw_body;
    if (cljs.core.truth_(and__3431__auto__)) {
      return!cljs.core.empty_QMARK_.call(null, raw_body);
    } else {
      return and__3431__auto__;
    }
  }()) ? cljs.reader.read_string.call(null, raw_body) : null], null);
};
floor16.xhr.cb_request = function cb_request(request, on_complete) {
  var xhr = new goog.net.XhrIo;
  var map__72369 = floor16.xhr.pre_process.call(null, request);
  var map__72369__$1 = cljs.core.seq_QMARK_.call(null, map__72369) ? cljs.core.apply.call(null, cljs.core.hash_map, map__72369) : map__72369;
  var headers = cljs.core.get.call(null, map__72369__$1, new cljs.core.Keyword(null, "headers", "headers", 1809212152));
  var body = cljs.core.get.call(null, map__72369__$1, new cljs.core.Keyword(null, "body", "body", 1016933652));
  var method = cljs.core.get.call(null, map__72369__$1, new cljs.core.Keyword(null, "method", "method", 4231316563));
  var url = cljs.core.get.call(null, map__72369__$1, new cljs.core.Keyword(null, "url", "url", 1014020321));
  goog.events.listen(xhr, goog.net.EventType.COMPLETE, function(e) {
    return on_complete.call(null, floor16.xhr.create_response.call(null, xhr));
  });
  return xhr.send(url, method, body, headers);
};
floor16.xhr.chan_request = function chan_request(request, ch) {
  var xhr = new goog.net.XhrIo;
  var map__72371 = floor16.xhr.pre_process.call(null, request);
  var map__72371__$1 = cljs.core.seq_QMARK_.call(null, map__72371) ? cljs.core.apply.call(null, cljs.core.hash_map, map__72371) : map__72371;
  var headers = cljs.core.get.call(null, map__72371__$1, new cljs.core.Keyword(null, "headers", "headers", 1809212152));
  var body = cljs.core.get.call(null, map__72371__$1, new cljs.core.Keyword(null, "body", "body", 1016933652));
  var method = cljs.core.get.call(null, map__72371__$1, new cljs.core.Keyword(null, "method", "method", 4231316563));
  var url = cljs.core.get.call(null, map__72371__$1, new cljs.core.Keyword(null, "url", "url", 1014020321));
  goog.events.listen(xhr, goog.net.EventType.COMPLETE, function(e) {
    return cljs.core.async.put_BANG_.call(null, ch, floor16.xhr.create_response.call(null, xhr));
  });
  return xhr.send(url, method, body, headers);
};
floor16.xhr.accept = function accept(request, t) {
  return cljs.core.assoc_in.call(null, request, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", 1809212152), new cljs.core.Keyword(null, "accept", "accept", 3885410426)], null), t);
};
floor16.xhr.content_type = function content_type(request, t) {
  return cljs.core.assoc_in.call(null, request, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", 1809212152), new cljs.core.Keyword(null, "content-type", "content-type", 1799574400)], null), t);
};
floor16.xhr.bearer_authorization = function bearer_authorization(request, token) {
  return cljs.core.assoc_in.call(null, request, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "headers", "headers", 1809212152), new cljs.core.Keyword(null, "authorization", "authorization", 3923301355)], null), [cljs.core.str("Bearer "), cljs.core.str(token)].join(""));
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || (goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1")), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || (goog.userAgent.OPERA || goog.userAgent.WEBKIT), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className;
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || [];
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var expectedCount = classes.length + args.length;
  goog.dom.classes.add_(classes, args);
  goog.dom.classes.set(element, classes.join(" "));
  return classes.length == expectedCount;
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var newClasses = goog.dom.classes.getDifference_(classes, args);
  goog.dom.classes.set(element, newClasses.join(" "));
  return newClasses.length == classes.length - args.length;
};
goog.dom.classes.add_ = function(classes, args) {
  for (var i = 0;i < args.length;i++) {
    if (!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
    }
  }
};
goog.dom.classes.getDifference_ = function(arr1, arr2) {
  return goog.array.filter(arr1, function(item) {
    return!goog.array.contains(arr2, item);
  });
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for (var i = 0;i < classes.length;i++) {
    if (classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true;
    }
  }
  if (removed) {
    classes.push(toClass);
    goog.dom.classes.set(element, classes.join(" "));
  }
  return removed;
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if (goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove);
  } else {
    if (goog.isArray(classesToRemove)) {
      classes = goog.dom.classes.getDifference_(classes, classesToRemove);
    }
  }
  if (goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd);
  } else {
    if (goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd);
    }
  }
  goog.dom.classes.set(element, classes.join(" "));
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className);
};
goog.dom.classes.enable = function(element, className, enabled) {
  if (enabled) {
    goog.dom.classes.add(element, className);
  } else {
    goog.dom.classes.remove(element, className);
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add;
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length1;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.standardDeviation = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return Math.sqrt(variance);
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  } else {
    if (parent.getElementsByClassName) {
      return parent.getElementsByClassName(className);
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || (goog.global || window);
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && (attributes && (attributes.name || attributes.type))) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes));
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat";
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    return element.parentElement;
  }
  var parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentMode(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(element, text) {
  if ("textContent" in element) {
    element.textContent = text;
  } else {
    if (element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while (element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild);
      }
      element.firstChild.data = text;
    } else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(String(text)));
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if (attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && (index >= 0 && index < 32768);
  }
  return false;
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || (goog.global.document || document);
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if (goog.isString(element)) {
    return this.document_.getElementById(element);
  } else {
    return element;
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat";
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("floor16.global");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("goog.dom");
goog.require("clojure.string");
goog.require("clojure.string");
floor16.global.server_side_QMARK_ = false;
floor16.global.ENTER = 13;
floor16.global.UP_ARROW = 38;
floor16.global.DOWN_ARROW = 40;
floor16.global.TAB = 9;
floor16.global.ESC = 27;
floor16.global.KEYS = cljs.core.PersistentHashSet.fromArray([floor16.global.TAB, floor16.global.UP_ARROW, floor16.global.DOWN_ARROW, floor16.global.ESC, floor16.global.ENTER], true);
floor16.global.key_event__GT_keycode = function key_event__GT_keycode(e) {
  return e.keyCode;
};
floor16.global.key__GT_keyword = function key__GT_keyword(code) {
  var pred__173242 = cljs.core._EQ_;
  var expr__173243 = code;
  if (cljs.core.truth_(pred__173242.call(null, floor16.global.UP_ARROW, expr__173243))) {
    return new cljs.core.Keyword(null, "prev", "prev", 1017353637);
  } else {
    if (cljs.core.truth_(pred__173242.call(null, floor16.global.DOWN_ARROW, expr__173243))) {
      return new cljs.core.Keyword(null, "next", "next", 1017282149);
    } else {
      if (cljs.core.truth_(pred__173242.call(null, floor16.global.ENTER, expr__173243))) {
        return new cljs.core.Keyword(null, "select", "select", 4402849902);
      } else {
        if (cljs.core.truth_(pred__173242.call(null, floor16.global.TAB, expr__173243))) {
          return new cljs.core.Keyword(null, "exit", "exit", 1017031824);
        } else {
          if (cljs.core.truth_(pred__173242.call(null, floor16.global.ESC, expr__173243))) {
            return new cljs.core.Keyword(null, "exit", "exit", 1017031824);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__173243)].join(""));
          }
        }
      }
    }
  }
};
floor16.global.el_matcher = function el_matcher(el) {
  return function(other) {
    return other === el;
  };
};
floor16.global.in_QMARK_ = function in_QMARK_(e, el) {
  var target = e.target;
  return target === el || !(goog.dom.getAncestor(target, floor16.global.el_matcher.call(null, el)) == null);
};
floor16.global.price_to_str = function price_to_str(price) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.reverse.call(null, clojure.string.join.call(null, " ", cljs.core.map.call(null, function(p1__173245_SHARP_) {
    return cljs.core.apply.call(null, cljs.core.str, p1__173245_SHARP_);
  }, cljs.core.partition_all.call(null, 3, cljs.core.reverse.call(null, [cljs.core.str(price)].join("")))))));
};
goog.provide("goog.dom.vendor");
goog.require("goog.userAgent");
goog.dom.vendor.getVendorJsPrefix = function() {
  if (goog.userAgent.WEBKIT) {
    return "Webkit";
  } else {
    if (goog.userAgent.GECKO) {
      return "Moz";
    } else {
      if (goog.userAgent.IE) {
        return "ms";
      } else {
        if (goog.userAgent.OPERA) {
          return "O";
        }
      }
    }
  }
  return null;
};
goog.dom.vendor.getVendorPrefix = function() {
  if (goog.userAgent.WEBKIT) {
    return "-webkit";
  } else {
    if (goog.userAgent.GECKO) {
      return "-moz";
    } else {
      if (goog.userAgent.IE) {
        return "-ms";
      } else {
        if (goog.userAgent.OPERA) {
          return "-o";
        }
      }
    }
  }
  return null;
};
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left;
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for (var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x);
  }
  return box;
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left);
};
if (goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return "(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)";
  };
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other);
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if (goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left;
  } else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left;
  }
  return this;
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom);
};
goog.math.Box.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.top == b.top && (a.right == b.right && (a.bottom == b.bottom && a.left == b.left));
};
goog.math.Box.contains = function(box, other) {
  if (!box || !other) {
    return false;
  }
  if (other instanceof goog.math.Box) {
    return other.left >= box.left && (other.right <= box.right && (other.top >= box.top && other.bottom <= box.bottom));
  }
  return other.x >= box.left && (other.x <= box.right && (other.y >= box.top && other.y <= box.bottom));
};
goog.math.Box.relativePositionX = function(box, coord) {
  if (coord.x < box.left) {
    return coord.x - box.left;
  } else {
    if (coord.x > box.right) {
      return coord.x - box.right;
    }
  }
  return 0;
};
goog.math.Box.relativePositionY = function(box, coord) {
  if (coord.y < box.top) {
    return coord.y - box.top;
  } else {
    if (coord.y > box.bottom) {
      return coord.y - box.bottom;
    }
  }
  return 0;
};
goog.math.Box.distance = function(box, coord) {
  var x = goog.math.Box.relativePositionX(box, coord);
  var y = goog.math.Box.relativePositionY(box, coord);
  return Math.sqrt(x * x + y * y);
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && (b.left <= a.right && (a.top <= b.bottom && b.top <= a.bottom));
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && (b.left <= a.right + padding && (a.top <= b.bottom + padding && b.top <= a.bottom + padding));
};
goog.math.Box.prototype.ceil = function() {
  this.top = Math.ceil(this.top);
  this.right = Math.ceil(this.right);
  this.bottom = Math.ceil(this.bottom);
  this.left = Math.ceil(this.left);
  return this;
};
goog.math.Box.prototype.floor = function() {
  this.top = Math.floor(this.top);
  this.right = Math.floor(this.right);
  this.bottom = Math.floor(this.bottom);
  this.left = Math.floor(this.left);
  return this;
};
goog.math.Box.prototype.round = function() {
  this.top = Math.round(this.top);
  this.right = Math.round(this.right);
  this.bottom = Math.round(this.bottom);
  this.left = Math.round(this.left);
  return this;
};
goog.math.Box.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.right += tx.x;
    this.top += tx.y;
    this.bottom += tx.y;
  } else {
    this.left += tx;
    this.right += tx;
    if (goog.isNumber(opt_ty)) {
      this.top += opt_ty;
      this.bottom += opt_ty;
    }
  }
  return this;
};
goog.math.Box.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.right *= sx;
  this.top *= sy;
  this.bottom *= sy;
  return this;
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h;
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height);
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left);
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top);
};
if (goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return "(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)";
  };
}
goog.math.Rect.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.left == b.left && (a.width == b.width && (a.top == b.top && a.height == b.height));
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if (x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if (y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true;
    }
  }
  return false;
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if (x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if (y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0);
    }
  }
  return null;
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && (b.left <= a.left + a.width && (a.top <= b.top + b.height && b.top <= a.top + a.height));
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect);
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if (!intersection || (!intersection.height || !intersection.width)) {
    return[a.clone()];
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if (b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top;
  }
  if (bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top;
  }
  if (b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height));
  }
  if (br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height));
  }
  return result;
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect);
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top;
};
goog.math.Rect.boundingRect = function(a, b) {
  if (!a || !b) {
    return null;
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone;
};
goog.math.Rect.prototype.contains = function(another) {
  if (another instanceof goog.math.Rect) {
    return this.left <= another.left && (this.left + this.width >= another.left + another.width && (this.top <= another.top && this.top + this.height >= another.top + another.height));
  } else {
    return another.x >= this.left && (another.x <= this.left + this.width && (another.y >= this.top && another.y <= this.top + this.height));
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height);
};
goog.math.Rect.prototype.ceil = function() {
  this.left = Math.ceil(this.left);
  this.top = Math.ceil(this.top);
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Rect.prototype.floor = function() {
  this.left = Math.floor(this.left);
  this.top = Math.floor(this.top);
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Rect.prototype.round = function() {
  this.left = Math.round(this.left);
  this.top = Math.round(this.top);
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Rect.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.top += tx.y;
  } else {
    this.left += tx;
    if (goog.isNumber(opt_ty)) {
      this.top += opt_ty;
    }
  }
  return this;
};
goog.math.Rect.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.width *= sx;
  this.top *= sy;
  this.height *= sy;
  return this;
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.dom.vendor");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if (goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style);
  } else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element));
  }
};
goog.style.setStyle_ = function(element, value, style) {
  var propertyName = goog.style.getVendorJsStyleName_(element, style);
  if (propertyName) {
    element.style[propertyName] = value;
  }
};
goog.style.getVendorJsStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if (element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(style);
    if (element.style[prefixedStyle] !== undefined) {
      return prefixedStyle;
    }
  }
  return camelStyle;
};
goog.style.getVendorStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if (element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(style);
    if (element.style[prefixedStyle] !== undefined) {
      return goog.dom.vendor.getVendorPrefix() + "-" + style;
    }
  }
  return style;
};
goog.style.getStyle = function(element, property) {
  var styleValue = element.style[goog.string.toCamelCase(property)];
  if (typeof styleValue !== "undefined") {
    return styleValue;
  }
  return element.style[goog.style.getVendorJsStyleName_(element, property)] || "";
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if (doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if (styles) {
      return styles[property] || (styles.getPropertyValue(property) || "");
    }
  }
  return "";
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null;
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || (goog.style.getCascadedStyle(element, style) || element.style && element.style[style]);
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position");
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor");
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX");
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY");
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex");
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign");
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor");
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && ((goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9"));
  if (arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y;
  } else {
    x = arg1;
    y = opt_arg2;
  }
  el.style.left = goog.style.getPixelStyleValue_((x), buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_((y), buggyGeckoSubPixelPos);
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop);
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if (opt_node) {
    doc = goog.dom.getOwnerDocument(opt_node);
  } else {
    doc = goog.dom.getDocument();
  }
  if (goog.userAgent.IE && (!goog.userAgent.isDocumentMode(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode())) {
    return doc.body;
  }
  return doc.documentElement;
};
goog.style.getViewportPageOffset = function(doc) {
  var body = doc.body;
  var documentElement = doc.documentElement;
  var scrollLeft = body.scrollLeft || documentElement.scrollLeft;
  var scrollTop = body.scrollTop || documentElement.scrollTop;
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if (goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop;
  }
  return(rect);
};
goog.style.getOffsetParent = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isDocumentMode(8)) {
    return element.offsetParent;
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for (var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_((parent), "position");
    skipStatic = skipStatic && (positionStyle == "static" && (parent != doc.documentElement && parent != doc.body));
    if (!skipStatic && (parent.scrollWidth > parent.clientWidth || (parent.scrollHeight > parent.clientHeight || (positionStyle == "fixed" || (positionStyle == "absolute" || positionStyle == "relative"))))) {
      return(parent);
    }
  }
  return null;
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for (var el = element;el = goog.style.getOffsetParent(el);) {
    if ((!goog.userAgent.IE || el.clientWidth != 0) && ((!goog.userAgent.WEBKIT || (el.clientHeight != 0 || el != body)) && (el != body && (el != documentElement && goog.style.getStyle_(el, "overflow") != "visible")))) {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && (visibleRect.left >= 0 && (visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left)) ? visibleRect : null;
};
goog.style.getContainerOffsetToScrollInto = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  var scrollLeft = container.scrollLeft;
  var scrollTop = container.scrollTop;
  if (opt_center) {
    scrollLeft += relX - spaceX / 2;
    scrollTop += relY - spaceY / 2;
  } else {
    scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    scrollTop += Math.min(relY, Math.max(relY - spaceY, 0));
  }
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var offset = goog.style.getContainerOffsetToScrollInto(element, container, opt_center);
  container.scrollLeft = offset.x;
  container.scrollTop = offset.y;
};
goog.style.getClientLeftTop = function(el) {
  if (goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if (goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth;
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")));
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop);
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  goog.asserts.assertObject(el, "Parameter is required");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && (doc.getBoxObjectFor && (!el.getBoundingClientRect && (positionStyle == "absolute" && ((box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0)))));
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if (el == viewportElement) {
    return pos;
  }
  if (el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y;
  } else {
    if (doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY;
    } else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if (parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0;
        }
        if (goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break;
        }
        parent = parent.offsetParent;
      } while (parent && parent != el);
      if (goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop;
      }
      for (parent = el;(parent = goog.style.getOffsetParent(parent)) && (parent != doc.body && parent != viewportElement);) {
        pos.x -= parent.scrollLeft;
        if (!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop;
        }
      }
    }
  }
  return pos;
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x;
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y;
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y;
  } while (currentWin && (currentWin != relativeWin && ((currentEl = currentWin.frameElement) && (currentWin = currentWin.parent))));
  return position;
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if (origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if (goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll());
    }
    rect.left += pos.x;
    rect.top += pos.y;
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y);
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if (el.nodeType == goog.dom.NodeType.ELEMENT) {
    el = (el);
    if (el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top;
    } else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y;
    }
    if (goog.userAgent.GECKO && !goog.userAgent.isVersion(12)) {
      pos = goog.math.Coordinate.sum(pos, goog.style.getCssTranslation(el));
    }
  } else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if (el.targetTouches) {
      targetEvent = el.targetTouches[0];
    } else {
      if (isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0];
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY;
  }
  return pos;
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if (x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x;
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy);
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if (w instanceof goog.math.Size) {
    h = w.height;
    w = w.width;
  } else {
    if (opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h;
  }
  goog.style.setWidth(element, (w));
  goog.style.setHeight(element, (h));
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if (typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px";
  }
  return value;
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true);
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true);
};
goog.style.getSize = function(element) {
  if (goog.style.getStyle_(element, "display") != "none") {
    return goog.style.getSizeWithDisplay_(element);
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var size = goog.style.getSizeWithDisplay_(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return size;
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && (!offsetWidth && !offsetHeight);
  if ((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);
  }
  return new goog.math.Size(offsetWidth, offsetHeight);
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height);
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector));
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector);
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if ("opacity" in style) {
    result = style.opacity;
  } else {
    if ("MozOpacity" in style) {
      result = style.MozOpacity;
    } else {
      if ("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if (match) {
          result = String(match[1] / 100);
        }
      }
    }
  }
  return result == "" ? result : Number(result);
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if ("opacity" in style) {
    style.opacity = alpha;
  } else {
    if ("MozOpacity" in style) {
      style.MozOpacity = alpha;
    } else {
      if ("filter" in style) {
        if (alpha === "") {
          style.filter = "";
        } else {
          style.filter = "alpha(opacity\x3d" + alpha * 100 + ")";
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src\x3d"' + src + '", sizingMethod\x3d"crop")';
  } else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat";
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if ("filter" in style) {
    style.filter = "";
  } else {
    style.backgroundImage = "none";
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none";
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none";
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if (goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString);
  } else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if (!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body);
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet);
  }
  return styleSheet;
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || (styleSheet.owningElement || (styleSheet));
  goog.dom.removeNode(node);
};
goog.style.setStyles = function(element, stylesString) {
  if (goog.userAgent.IE) {
    element.cssText = stylesString;
  } else {
    element.innerHTML = stylesString;
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word";
  } else {
    if (goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap";
    } else {
      style.whiteSpace = "pre-wrap";
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if (goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline";
  } else {
    if (goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box";
    } else {
      style.display = "inline-block";
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return "rtl" == goog.style.getStyle_(el, "direction");
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if (goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none";
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on";
    }
  }
  return false;
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if (name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if (descendants) {
      for (var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value;
      }
    }
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if (descendants) {
        for (var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value);
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight);
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom;
    } else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "border-box");
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if (ieCurrentStyle && (goog.dom.getDomHelper(doc).isCss1CompatMode() && (ieCurrentStyle.width != "auto" && (ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing)))) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height);
  } else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom);
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    } else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "content-box");
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if (goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing;
  } else {
    if (goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing;
    } else {
      style.boxSizing = boxSizing;
    }
  }
  style.width = Math.max(size.width, 0) + "px";
  style.height = Math.max(size.height, 0) + "px";
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if (/^\d+px?$/.test(value)) {
    return parseInt(value, 10);
  } else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue;
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  var value = goog.style.getCascadedStyle(element, propName);
  return value ? goog.style.getIePixelValue_(element, value, "left", "pixelLeft") : 0;
};
goog.style.getBox_ = function(element, stylePrefix) {
  if (goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = (goog.style.getComputedStyle(element, stylePrefix + "Left"));
    var right = (goog.style.getComputedStyle(element, stylePrefix + "Right"));
    var top = (goog.style.getComputedStyle(element, stylePrefix + "Top"));
    var bottom = (goog.style.getComputedStyle(element, stylePrefix + "Bottom"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding");
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin");
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if (goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0;
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if (width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width];
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft");
};
goog.style.getBorderBox = function(element) {
  if (goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = (goog.style.getComputedStyle(element, "borderLeftWidth"));
    var right = (goog.style.getComputedStyle(element, "borderRightWidth"));
    var top = (goog.style.getComputedStyle(element, "borderTopWidth"));
    var bottom = (goog.style.getComputedStyle(element, "borderBottomWidth"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if (doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName");
    } catch (e) {
      font = "";
    }
  }
  if (!font) {
    font = goog.style.getStyle_(el, "fontFamily");
  }
  var fontsArray = font.split(",");
  if (fontsArray.length > 1) {
    font = fontsArray[0];
  }
  return goog.string.stripQuotes(font, "\"'");
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null;
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if (fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10);
  }
  if (goog.userAgent.IE) {
    if (sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft");
    } else {
      if (el.parentNode && (el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_)) {
        var parentElement = (el.parentNode);
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft");
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize;
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if (keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1];
    }
  });
  return result;
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";");
  });
  return buffer.join("");
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value;
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || "";
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if (opt_className) {
    outerDiv.className = opt_className;
  }
  outerDiv.style.cssText = "overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width;
};
goog.style.MATRIX_TRANSLATION_REGEX_ = new RegExp("matrix\\([0-9\\.\\-]+, [0-9\\.\\-]+, " + "[0-9\\.\\-]+, [0-9\\.\\-]+, " + "([0-9\\.\\-]+)p?x?, ([0-9\\.\\-]+)p?x?\\)");
goog.style.getCssTranslation = function(element) {
  var property;
  if (goog.userAgent.IE) {
    property = "-ms-transform";
  } else {
    if (goog.userAgent.WEBKIT) {
      property = "-webkit-transform";
    } else {
      if (goog.userAgent.OPERA) {
        property = "-o-transform";
      } else {
        if (goog.userAgent.GECKO) {
          property = "-moz-transform";
        }
      }
    }
  }
  var transform;
  if (property) {
    transform = goog.style.getStyle_(element, property);
  }
  if (!transform) {
    transform = goog.style.getStyle_(element, "transform");
  }
  if (!transform) {
    return new goog.math.Coordinate(0, 0);
  }
  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);
  if (!matches) {
    return new goog.math.Coordinate(0, 0);
  }
  return new goog.math.Coordinate(parseFloat(matches[1]), parseFloat(matches[2]));
};
goog.provide("goog.history.EventType");
goog.history.EventType = {NAVIGATE:"navigate"};
goog.provide("goog.history.Event");
goog.require("goog.events.Event");
goog.require("goog.history.EventType");
goog.history.Event = function(token, isNavigation) {
  goog.events.Event.call(this, goog.history.EventType.NAVIGATE);
  this.token = token;
  this.isNavigation = isNavigation;
};
goog.inherits(goog.history.Event, goog.events.Event);
goog.provide("goog.history.Html5History");
goog.provide("goog.history.Html5History.TokenTransformer");
goog.require("goog.asserts");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.history.Event");
goog.require("goog.history.EventType");
goog.history.Html5History = function(opt_win, opt_transformer) {
  goog.events.EventTarget.call(this);
  goog.asserts.assert(goog.history.Html5History.isSupported(opt_win), "HTML5 history is not supported.");
  this.window_ = opt_win || window;
  this.transformer_ = opt_transformer || null;
  goog.events.listen(this.window_, goog.events.EventType.POPSTATE, this.onHistoryEvent_, false, this);
  goog.events.listen(this.window_, goog.events.EventType.HASHCHANGE, this.onHistoryEvent_, false, this);
};
goog.inherits(goog.history.Html5History, goog.events.EventTarget);
goog.history.Html5History.isSupported = function(opt_win) {
  var win = opt_win || window;
  return!!(win.history && win.history.pushState);
};
goog.history.Html5History.prototype.enabled_ = false;
goog.history.Html5History.prototype.useFragment_ = true;
goog.history.Html5History.prototype.pathPrefix_ = "/";
goog.history.Html5History.prototype.setEnabled = function(enable) {
  if (enable == this.enabled_) {
    return;
  }
  this.enabled_ = enable;
  if (enable) {
    this.dispatchEvent(new goog.history.Event(this.getToken(), false));
  }
};
goog.history.Html5History.prototype.getToken = function() {
  if (this.useFragment_) {
    var loc = this.window_.location.href;
    var index = loc.indexOf("#");
    return index < 0 ? "" : loc.substring(index + 1);
  } else {
    return this.transformer_ ? this.transformer_.retrieveToken(this.pathPrefix_, this.window_.location) : this.window_.location.pathname.substr(this.pathPrefix_.length);
  }
};
goog.history.Html5History.prototype.setToken = function(token, opt_title) {
  if (token == this.getToken()) {
    return;
  }
  this.window_.history.pushState(null, opt_title || (this.window_.document.title || ""), this.getUrl_(token));
  this.dispatchEvent(new goog.history.Event(token, false));
};
goog.history.Html5History.prototype.replaceToken = function(token, opt_title) {
  this.window_.history.replaceState(null, opt_title || (this.window_.document.title || ""), this.getUrl_(token));
  this.dispatchEvent(new goog.history.Event(token, false));
};
goog.history.Html5History.prototype.disposeInternal = function() {
  goog.events.unlisten(this.window_, goog.events.EventType.POPSTATE, this.onHistoryEvent_, false, this);
  if (this.useFragment_) {
    goog.events.unlisten(this.window_, goog.events.EventType.HASHCHANGE, this.onHistoryEvent_, false, this);
  }
};
goog.history.Html5History.prototype.setUseFragment = function(useFragment) {
  if (this.useFragment_ != useFragment) {
    if (useFragment) {
      goog.events.listen(this.window_, goog.events.EventType.HASHCHANGE, this.onHistoryEvent_, false, this);
    } else {
      goog.events.unlisten(this.window_, goog.events.EventType.HASHCHANGE, this.onHistoryEvent_, false, this);
    }
    this.useFragment_ = useFragment;
  }
};
goog.history.Html5History.prototype.setPathPrefix = function(pathPrefix) {
  this.pathPrefix_ = pathPrefix;
};
goog.history.Html5History.prototype.getPathPrefix = function() {
  return this.pathPrefix_;
};
goog.history.Html5History.prototype.getUrl_ = function(token) {
  if (this.useFragment_) {
    return "#" + token;
  } else {
    return this.transformer_ ? this.transformer_.createUrl(token, this.pathPrefix_, this.window_.location) : this.pathPrefix_ + token + this.window_.location.search;
  }
};
goog.history.Html5History.prototype.onHistoryEvent_ = function(e) {
  if (this.enabled_) {
    this.dispatchEvent(new goog.history.Event(this.getToken(), true));
  }
};
goog.history.Html5History.TokenTransformer = function() {
};
goog.history.Html5History.TokenTransformer.prototype.retrieveToken = function(pathPrefix, location) {
};
goog.history.Html5History.TokenTransformer.prototype.createUrl = function(token, pathPrefix, location) {
};
goog.provide("om.dom");
goog.require("cljs.core");
om.dom.a = function() {
  var a__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var a = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return a__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  a.cljs$lang$maxFixedArity = 1;
  a.cljs$lang$applyTo = function(arglist__11080) {
    var opts__4969__auto__ = cljs.core.first(arglist__11080);
    var children__4970__auto__ = cljs.core.rest(arglist__11080);
    return a__delegate(opts__4969__auto__, children__4970__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
om.dom.abbr = function() {
  var abbr__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var abbr = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return abbr__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 1;
  abbr.cljs$lang$applyTo = function(arglist__11081) {
    var opts__4969__auto__ = cljs.core.first(arglist__11081);
    var children__4970__auto__ = cljs.core.rest(arglist__11081);
    return abbr__delegate(opts__4969__auto__, children__4970__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
om.dom.address = function() {
  var address__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var address = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return address__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  address.cljs$lang$maxFixedArity = 1;
  address.cljs$lang$applyTo = function(arglist__11082) {
    var opts__4969__auto__ = cljs.core.first(arglist__11082);
    var children__4970__auto__ = cljs.core.rest(arglist__11082);
    return address__delegate(opts__4969__auto__, children__4970__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
om.dom.area = function() {
  var area__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var area = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return area__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  area.cljs$lang$maxFixedArity = 1;
  area.cljs$lang$applyTo = function(arglist__11083) {
    var opts__4969__auto__ = cljs.core.first(arglist__11083);
    var children__4970__auto__ = cljs.core.rest(arglist__11083);
    return area__delegate(opts__4969__auto__, children__4970__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
om.dom.article = function() {
  var article__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var article = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return article__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  article.cljs$lang$maxFixedArity = 1;
  article.cljs$lang$applyTo = function(arglist__11084) {
    var opts__4969__auto__ = cljs.core.first(arglist__11084);
    var children__4970__auto__ = cljs.core.rest(arglist__11084);
    return article__delegate(opts__4969__auto__, children__4970__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
om.dom.aside = function() {
  var aside__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var aside = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return aside__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  aside.cljs$lang$maxFixedArity = 1;
  aside.cljs$lang$applyTo = function(arglist__11085) {
    var opts__4969__auto__ = cljs.core.first(arglist__11085);
    var children__4970__auto__ = cljs.core.rest(arglist__11085);
    return aside__delegate(opts__4969__auto__, children__4970__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
om.dom.audio = function() {
  var audio__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var audio = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return audio__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  audio.cljs$lang$maxFixedArity = 1;
  audio.cljs$lang$applyTo = function(arglist__11086) {
    var opts__4969__auto__ = cljs.core.first(arglist__11086);
    var children__4970__auto__ = cljs.core.rest(arglist__11086);
    return audio__delegate(opts__4969__auto__, children__4970__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
om.dom.b = function() {
  var b__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var b = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return b__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(arglist__11087) {
    var opts__4969__auto__ = cljs.core.first(arglist__11087);
    var children__4970__auto__ = cljs.core.rest(arglist__11087);
    return b__delegate(opts__4969__auto__, children__4970__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
om.dom.base = function() {
  var base__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var base = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return base__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  base.cljs$lang$maxFixedArity = 1;
  base.cljs$lang$applyTo = function(arglist__11088) {
    var opts__4969__auto__ = cljs.core.first(arglist__11088);
    var children__4970__auto__ = cljs.core.rest(arglist__11088);
    return base__delegate(opts__4969__auto__, children__4970__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
om.dom.bdi = function() {
  var bdi__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var bdi = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdi__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 1;
  bdi.cljs$lang$applyTo = function(arglist__11089) {
    var opts__4969__auto__ = cljs.core.first(arglist__11089);
    var children__4970__auto__ = cljs.core.rest(arglist__11089);
    return bdi__delegate(opts__4969__auto__, children__4970__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
om.dom.bdo = function() {
  var bdo__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var bdo = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdo__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 1;
  bdo.cljs$lang$applyTo = function(arglist__11090) {
    var opts__4969__auto__ = cljs.core.first(arglist__11090);
    var children__4970__auto__ = cljs.core.rest(arglist__11090);
    return bdo__delegate(opts__4969__auto__, children__4970__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
om.dom.big = function() {
  var big__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var big = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return big__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  big.cljs$lang$maxFixedArity = 1;
  big.cljs$lang$applyTo = function(arglist__11091) {
    var opts__4969__auto__ = cljs.core.first(arglist__11091);
    var children__4970__auto__ = cljs.core.rest(arglist__11091);
    return big__delegate(opts__4969__auto__, children__4970__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
om.dom.blockquote = function() {
  var blockquote__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var blockquote = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return blockquote__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 1;
  blockquote.cljs$lang$applyTo = function(arglist__11092) {
    var opts__4969__auto__ = cljs.core.first(arglist__11092);
    var children__4970__auto__ = cljs.core.rest(arglist__11092);
    return blockquote__delegate(opts__4969__auto__, children__4970__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
om.dom.body = function() {
  var body__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var body = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return body__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  body.cljs$lang$maxFixedArity = 1;
  body.cljs$lang$applyTo = function(arglist__11093) {
    var opts__4969__auto__ = cljs.core.first(arglist__11093);
    var children__4970__auto__ = cljs.core.rest(arglist__11093);
    return body__delegate(opts__4969__auto__, children__4970__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
om.dom.br = function() {
  var br__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var br = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return br__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  br.cljs$lang$maxFixedArity = 1;
  br.cljs$lang$applyTo = function(arglist__11094) {
    var opts__4969__auto__ = cljs.core.first(arglist__11094);
    var children__4970__auto__ = cljs.core.rest(arglist__11094);
    return br__delegate(opts__4969__auto__, children__4970__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
om.dom.button = function() {
  var button__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var button = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return button__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  button.cljs$lang$maxFixedArity = 1;
  button.cljs$lang$applyTo = function(arglist__11095) {
    var opts__4969__auto__ = cljs.core.first(arglist__11095);
    var children__4970__auto__ = cljs.core.rest(arglist__11095);
    return button__delegate(opts__4969__auto__, children__4970__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
om.dom.canvas = function() {
  var canvas__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var canvas = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return canvas__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 1;
  canvas.cljs$lang$applyTo = function(arglist__11096) {
    var opts__4969__auto__ = cljs.core.first(arglist__11096);
    var children__4970__auto__ = cljs.core.rest(arglist__11096);
    return canvas__delegate(opts__4969__auto__, children__4970__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
om.dom.caption = function() {
  var caption__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var caption = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return caption__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  caption.cljs$lang$maxFixedArity = 1;
  caption.cljs$lang$applyTo = function(arglist__11097) {
    var opts__4969__auto__ = cljs.core.first(arglist__11097);
    var children__4970__auto__ = cljs.core.rest(arglist__11097);
    return caption__delegate(opts__4969__auto__, children__4970__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
om.dom.cite = function() {
  var cite__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var cite = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return cite__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  cite.cljs$lang$maxFixedArity = 1;
  cite.cljs$lang$applyTo = function(arglist__11098) {
    var opts__4969__auto__ = cljs.core.first(arglist__11098);
    var children__4970__auto__ = cljs.core.rest(arglist__11098);
    return cite__delegate(opts__4969__auto__, children__4970__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
om.dom.code = function() {
  var code__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var code = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return code__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  code.cljs$lang$maxFixedArity = 1;
  code.cljs$lang$applyTo = function(arglist__11099) {
    var opts__4969__auto__ = cljs.core.first(arglist__11099);
    var children__4970__auto__ = cljs.core.rest(arglist__11099);
    return code__delegate(opts__4969__auto__, children__4970__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
om.dom.col = function() {
  var col__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var col = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return col__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  col.cljs$lang$maxFixedArity = 1;
  col.cljs$lang$applyTo = function(arglist__11100) {
    var opts__4969__auto__ = cljs.core.first(arglist__11100);
    var children__4970__auto__ = cljs.core.rest(arglist__11100);
    return col__delegate(opts__4969__auto__, children__4970__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
om.dom.colgroup = function() {
  var colgroup__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var colgroup = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return colgroup__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 1;
  colgroup.cljs$lang$applyTo = function(arglist__11101) {
    var opts__4969__auto__ = cljs.core.first(arglist__11101);
    var children__4970__auto__ = cljs.core.rest(arglist__11101);
    return colgroup__delegate(opts__4969__auto__, children__4970__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
om.dom.data = function() {
  var data__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var data = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return data__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  data.cljs$lang$maxFixedArity = 1;
  data.cljs$lang$applyTo = function(arglist__11102) {
    var opts__4969__auto__ = cljs.core.first(arglist__11102);
    var children__4970__auto__ = cljs.core.rest(arglist__11102);
    return data__delegate(opts__4969__auto__, children__4970__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
om.dom.datalist = function() {
  var datalist__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var datalist = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return datalist__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 1;
  datalist.cljs$lang$applyTo = function(arglist__11103) {
    var opts__4969__auto__ = cljs.core.first(arglist__11103);
    var children__4970__auto__ = cljs.core.rest(arglist__11103);
    return datalist__delegate(opts__4969__auto__, children__4970__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
om.dom.dd = function() {
  var dd__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var dd = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dd__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  dd.cljs$lang$maxFixedArity = 1;
  dd.cljs$lang$applyTo = function(arglist__11104) {
    var opts__4969__auto__ = cljs.core.first(arglist__11104);
    var children__4970__auto__ = cljs.core.rest(arglist__11104);
    return dd__delegate(opts__4969__auto__, children__4970__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
om.dom.del = function() {
  var del__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var del = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return del__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  del.cljs$lang$maxFixedArity = 1;
  del.cljs$lang$applyTo = function(arglist__11105) {
    var opts__4969__auto__ = cljs.core.first(arglist__11105);
    var children__4970__auto__ = cljs.core.rest(arglist__11105);
    return del__delegate(opts__4969__auto__, children__4970__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
om.dom.dfn = function() {
  var dfn__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var dfn = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dfn__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 1;
  dfn.cljs$lang$applyTo = function(arglist__11106) {
    var opts__4969__auto__ = cljs.core.first(arglist__11106);
    var children__4970__auto__ = cljs.core.rest(arglist__11106);
    return dfn__delegate(opts__4969__auto__, children__4970__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
om.dom.div = function() {
  var div__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var div = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return div__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  div.cljs$lang$maxFixedArity = 1;
  div.cljs$lang$applyTo = function(arglist__11107) {
    var opts__4969__auto__ = cljs.core.first(arglist__11107);
    var children__4970__auto__ = cljs.core.rest(arglist__11107);
    return div__delegate(opts__4969__auto__, children__4970__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
om.dom.dl = function() {
  var dl__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var dl = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dl__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  dl.cljs$lang$maxFixedArity = 1;
  dl.cljs$lang$applyTo = function(arglist__11108) {
    var opts__4969__auto__ = cljs.core.first(arglist__11108);
    var children__4970__auto__ = cljs.core.rest(arglist__11108);
    return dl__delegate(opts__4969__auto__, children__4970__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
om.dom.dt = function() {
  var dt__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var dt = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dt__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  dt.cljs$lang$maxFixedArity = 1;
  dt.cljs$lang$applyTo = function(arglist__11109) {
    var opts__4969__auto__ = cljs.core.first(arglist__11109);
    var children__4970__auto__ = cljs.core.rest(arglist__11109);
    return dt__delegate(opts__4969__auto__, children__4970__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
om.dom.em = function() {
  var em__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var em = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return em__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  em.cljs$lang$maxFixedArity = 1;
  em.cljs$lang$applyTo = function(arglist__11110) {
    var opts__4969__auto__ = cljs.core.first(arglist__11110);
    var children__4970__auto__ = cljs.core.rest(arglist__11110);
    return em__delegate(opts__4969__auto__, children__4970__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
om.dom.embed = function() {
  var embed__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var embed = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return embed__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  embed.cljs$lang$maxFixedArity = 1;
  embed.cljs$lang$applyTo = function(arglist__11111) {
    var opts__4969__auto__ = cljs.core.first(arglist__11111);
    var children__4970__auto__ = cljs.core.rest(arglist__11111);
    return embed__delegate(opts__4969__auto__, children__4970__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
om.dom.fieldset = function() {
  var fieldset__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var fieldset = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fieldset__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 1;
  fieldset.cljs$lang$applyTo = function(arglist__11112) {
    var opts__4969__auto__ = cljs.core.first(arglist__11112);
    var children__4970__auto__ = cljs.core.rest(arglist__11112);
    return fieldset__delegate(opts__4969__auto__, children__4970__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
om.dom.figcaption = function() {
  var figcaption__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var figcaption = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figcaption__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 1;
  figcaption.cljs$lang$applyTo = function(arglist__11113) {
    var opts__4969__auto__ = cljs.core.first(arglist__11113);
    var children__4970__auto__ = cljs.core.rest(arglist__11113);
    return figcaption__delegate(opts__4969__auto__, children__4970__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
om.dom.figure = function() {
  var figure__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var figure = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figure__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  figure.cljs$lang$maxFixedArity = 1;
  figure.cljs$lang$applyTo = function(arglist__11114) {
    var opts__4969__auto__ = cljs.core.first(arglist__11114);
    var children__4970__auto__ = cljs.core.rest(arglist__11114);
    return figure__delegate(opts__4969__auto__, children__4970__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
om.dom.footer = function() {
  var footer__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var footer = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return footer__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  footer.cljs$lang$maxFixedArity = 1;
  footer.cljs$lang$applyTo = function(arglist__11115) {
    var opts__4969__auto__ = cljs.core.first(arglist__11115);
    var children__4970__auto__ = cljs.core.rest(arglist__11115);
    return footer__delegate(opts__4969__auto__, children__4970__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
om.dom.form = function() {
  var form__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var form = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  form.cljs$lang$maxFixedArity = 1;
  form.cljs$lang$applyTo = function(arglist__11116) {
    var opts__4969__auto__ = cljs.core.first(arglist__11116);
    var children__4970__auto__ = cljs.core.rest(arglist__11116);
    return form__delegate(opts__4969__auto__, children__4970__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
om.dom.h1 = function() {
  var h1__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var h1 = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h1__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  h1.cljs$lang$maxFixedArity = 1;
  h1.cljs$lang$applyTo = function(arglist__11117) {
    var opts__4969__auto__ = cljs.core.first(arglist__11117);
    var children__4970__auto__ = cljs.core.rest(arglist__11117);
    return h1__delegate(opts__4969__auto__, children__4970__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
om.dom.h2 = function() {
  var h2__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var h2 = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h2__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  h2.cljs$lang$maxFixedArity = 1;
  h2.cljs$lang$applyTo = function(arglist__11118) {
    var opts__4969__auto__ = cljs.core.first(arglist__11118);
    var children__4970__auto__ = cljs.core.rest(arglist__11118);
    return h2__delegate(opts__4969__auto__, children__4970__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
om.dom.h3 = function() {
  var h3__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var h3 = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h3__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  h3.cljs$lang$maxFixedArity = 1;
  h3.cljs$lang$applyTo = function(arglist__11119) {
    var opts__4969__auto__ = cljs.core.first(arglist__11119);
    var children__4970__auto__ = cljs.core.rest(arglist__11119);
    return h3__delegate(opts__4969__auto__, children__4970__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
om.dom.h4 = function() {
  var h4__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var h4 = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h4__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  h4.cljs$lang$maxFixedArity = 1;
  h4.cljs$lang$applyTo = function(arglist__11120) {
    var opts__4969__auto__ = cljs.core.first(arglist__11120);
    var children__4970__auto__ = cljs.core.rest(arglist__11120);
    return h4__delegate(opts__4969__auto__, children__4970__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
om.dom.h5 = function() {
  var h5__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var h5 = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h5__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  h5.cljs$lang$maxFixedArity = 1;
  h5.cljs$lang$applyTo = function(arglist__11121) {
    var opts__4969__auto__ = cljs.core.first(arglist__11121);
    var children__4970__auto__ = cljs.core.rest(arglist__11121);
    return h5__delegate(opts__4969__auto__, children__4970__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
om.dom.h6 = function() {
  var h6__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var h6 = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h6__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  h6.cljs$lang$maxFixedArity = 1;
  h6.cljs$lang$applyTo = function(arglist__11122) {
    var opts__4969__auto__ = cljs.core.first(arglist__11122);
    var children__4970__auto__ = cljs.core.rest(arglist__11122);
    return h6__delegate(opts__4969__auto__, children__4970__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
om.dom.head = function() {
  var head__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var head = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return head__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__11123) {
    var opts__4969__auto__ = cljs.core.first(arglist__11123);
    var children__4970__auto__ = cljs.core.rest(arglist__11123);
    return head__delegate(opts__4969__auto__, children__4970__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
om.dom.header = function() {
  var header__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var header = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return header__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  header.cljs$lang$maxFixedArity = 1;
  header.cljs$lang$applyTo = function(arglist__11124) {
    var opts__4969__auto__ = cljs.core.first(arglist__11124);
    var children__4970__auto__ = cljs.core.rest(arglist__11124);
    return header__delegate(opts__4969__auto__, children__4970__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
om.dom.hr = function() {
  var hr__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var hr = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hr__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  hr.cljs$lang$maxFixedArity = 1;
  hr.cljs$lang$applyTo = function(arglist__11125) {
    var opts__4969__auto__ = cljs.core.first(arglist__11125);
    var children__4970__auto__ = cljs.core.rest(arglist__11125);
    return hr__delegate(opts__4969__auto__, children__4970__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
om.dom.html = function() {
  var html__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var html = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return html__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__11126) {
    var opts__4969__auto__ = cljs.core.first(arglist__11126);
    var children__4970__auto__ = cljs.core.rest(arglist__11126);
    return html__delegate(opts__4969__auto__, children__4970__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
om.dom.i = function() {
  var i__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var i = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return i__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  i.cljs$lang$maxFixedArity = 1;
  i.cljs$lang$applyTo = function(arglist__11127) {
    var opts__4969__auto__ = cljs.core.first(arglist__11127);
    var children__4970__auto__ = cljs.core.rest(arglist__11127);
    return i__delegate(opts__4969__auto__, children__4970__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
om.dom.iframe = function() {
  var iframe__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var iframe = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return iframe__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 1;
  iframe.cljs$lang$applyTo = function(arglist__11128) {
    var opts__4969__auto__ = cljs.core.first(arglist__11128);
    var children__4970__auto__ = cljs.core.rest(arglist__11128);
    return iframe__delegate(opts__4969__auto__, children__4970__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
om.dom.img = function() {
  var img__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var img = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return img__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  img.cljs$lang$maxFixedArity = 1;
  img.cljs$lang$applyTo = function(arglist__11129) {
    var opts__4969__auto__ = cljs.core.first(arglist__11129);
    var children__4970__auto__ = cljs.core.rest(arglist__11129);
    return img__delegate(opts__4969__auto__, children__4970__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
om.dom.ins = function() {
  var ins__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var ins = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ins__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  ins.cljs$lang$maxFixedArity = 1;
  ins.cljs$lang$applyTo = function(arglist__11130) {
    var opts__4969__auto__ = cljs.core.first(arglist__11130);
    var children__4970__auto__ = cljs.core.rest(arglist__11130);
    return ins__delegate(opts__4969__auto__, children__4970__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
om.dom.kbd = function() {
  var kbd__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var kbd = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return kbd__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 1;
  kbd.cljs$lang$applyTo = function(arglist__11131) {
    var opts__4969__auto__ = cljs.core.first(arglist__11131);
    var children__4970__auto__ = cljs.core.rest(arglist__11131);
    return kbd__delegate(opts__4969__auto__, children__4970__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
om.dom.keygen = function() {
  var keygen__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var keygen = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return keygen__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 1;
  keygen.cljs$lang$applyTo = function(arglist__11132) {
    var opts__4969__auto__ = cljs.core.first(arglist__11132);
    var children__4970__auto__ = cljs.core.rest(arglist__11132);
    return keygen__delegate(opts__4969__auto__, children__4970__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
om.dom.label = function() {
  var label__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var label = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return label__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  label.cljs$lang$maxFixedArity = 1;
  label.cljs$lang$applyTo = function(arglist__11133) {
    var opts__4969__auto__ = cljs.core.first(arglist__11133);
    var children__4970__auto__ = cljs.core.rest(arglist__11133);
    return label__delegate(opts__4969__auto__, children__4970__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
om.dom.legend = function() {
  var legend__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var legend = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return legend__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  legend.cljs$lang$maxFixedArity = 1;
  legend.cljs$lang$applyTo = function(arglist__11134) {
    var opts__4969__auto__ = cljs.core.first(arglist__11134);
    var children__4970__auto__ = cljs.core.rest(arglist__11134);
    return legend__delegate(opts__4969__auto__, children__4970__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
om.dom.li = function() {
  var li__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var li = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return li__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  li.cljs$lang$maxFixedArity = 1;
  li.cljs$lang$applyTo = function(arglist__11135) {
    var opts__4969__auto__ = cljs.core.first(arglist__11135);
    var children__4970__auto__ = cljs.core.rest(arglist__11135);
    return li__delegate(opts__4969__auto__, children__4970__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
om.dom.link = function() {
  var link__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var link = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  link.cljs$lang$maxFixedArity = 1;
  link.cljs$lang$applyTo = function(arglist__11136) {
    var opts__4969__auto__ = cljs.core.first(arglist__11136);
    var children__4970__auto__ = cljs.core.rest(arglist__11136);
    return link__delegate(opts__4969__auto__, children__4970__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
om.dom.main = function() {
  var main__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var main = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return main__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  main.cljs$lang$maxFixedArity = 1;
  main.cljs$lang$applyTo = function(arglist__11137) {
    var opts__4969__auto__ = cljs.core.first(arglist__11137);
    var children__4970__auto__ = cljs.core.rest(arglist__11137);
    return main__delegate(opts__4969__auto__, children__4970__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
om.dom.map = function() {
  var map__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var map = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  map.cljs$lang$maxFixedArity = 1;
  map.cljs$lang$applyTo = function(arglist__11138) {
    var opts__4969__auto__ = cljs.core.first(arglist__11138);
    var children__4970__auto__ = cljs.core.rest(arglist__11138);
    return map__delegate(opts__4969__auto__, children__4970__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
om.dom.mark = function() {
  var mark__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var mark = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mark__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  mark.cljs$lang$maxFixedArity = 1;
  mark.cljs$lang$applyTo = function(arglist__11139) {
    var opts__4969__auto__ = cljs.core.first(arglist__11139);
    var children__4970__auto__ = cljs.core.rest(arglist__11139);
    return mark__delegate(opts__4969__auto__, children__4970__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
om.dom.menu = function() {
  var menu__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var menu = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menu__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  menu.cljs$lang$maxFixedArity = 1;
  menu.cljs$lang$applyTo = function(arglist__11140) {
    var opts__4969__auto__ = cljs.core.first(arglist__11140);
    var children__4970__auto__ = cljs.core.rest(arglist__11140);
    return menu__delegate(opts__4969__auto__, children__4970__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
om.dom.menuitem = function() {
  var menuitem__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var menuitem = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menuitem__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 1;
  menuitem.cljs$lang$applyTo = function(arglist__11141) {
    var opts__4969__auto__ = cljs.core.first(arglist__11141);
    var children__4970__auto__ = cljs.core.rest(arglist__11141);
    return menuitem__delegate(opts__4969__auto__, children__4970__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
om.dom.meta = function() {
  var meta__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var meta = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meta__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  meta.cljs$lang$maxFixedArity = 1;
  meta.cljs$lang$applyTo = function(arglist__11142) {
    var opts__4969__auto__ = cljs.core.first(arglist__11142);
    var children__4970__auto__ = cljs.core.rest(arglist__11142);
    return meta__delegate(opts__4969__auto__, children__4970__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
om.dom.meter = function() {
  var meter__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var meter = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meter__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  meter.cljs$lang$maxFixedArity = 1;
  meter.cljs$lang$applyTo = function(arglist__11143) {
    var opts__4969__auto__ = cljs.core.first(arglist__11143);
    var children__4970__auto__ = cljs.core.rest(arglist__11143);
    return meter__delegate(opts__4969__auto__, children__4970__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
om.dom.nav = function() {
  var nav__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var nav = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return nav__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  nav.cljs$lang$maxFixedArity = 1;
  nav.cljs$lang$applyTo = function(arglist__11144) {
    var opts__4969__auto__ = cljs.core.first(arglist__11144);
    var children__4970__auto__ = cljs.core.rest(arglist__11144);
    return nav__delegate(opts__4969__auto__, children__4970__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
om.dom.noscript = function() {
  var noscript__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var noscript = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return noscript__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 1;
  noscript.cljs$lang$applyTo = function(arglist__11145) {
    var opts__4969__auto__ = cljs.core.first(arglist__11145);
    var children__4970__auto__ = cljs.core.rest(arglist__11145);
    return noscript__delegate(opts__4969__auto__, children__4970__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
om.dom.object = function() {
  var object__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var object = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return object__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  object.cljs$lang$maxFixedArity = 1;
  object.cljs$lang$applyTo = function(arglist__11146) {
    var opts__4969__auto__ = cljs.core.first(arglist__11146);
    var children__4970__auto__ = cljs.core.rest(arglist__11146);
    return object__delegate(opts__4969__auto__, children__4970__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
om.dom.ol = function() {
  var ol__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var ol = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ol__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  ol.cljs$lang$maxFixedArity = 1;
  ol.cljs$lang$applyTo = function(arglist__11147) {
    var opts__4969__auto__ = cljs.core.first(arglist__11147);
    var children__4970__auto__ = cljs.core.rest(arglist__11147);
    return ol__delegate(opts__4969__auto__, children__4970__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
om.dom.optgroup = function() {
  var optgroup__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var optgroup = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return optgroup__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 1;
  optgroup.cljs$lang$applyTo = function(arglist__11148) {
    var opts__4969__auto__ = cljs.core.first(arglist__11148);
    var children__4970__auto__ = cljs.core.rest(arglist__11148);
    return optgroup__delegate(opts__4969__auto__, children__4970__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
om.dom.output = function() {
  var output__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var output = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return output__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  output.cljs$lang$maxFixedArity = 1;
  output.cljs$lang$applyTo = function(arglist__11149) {
    var opts__4969__auto__ = cljs.core.first(arglist__11149);
    var children__4970__auto__ = cljs.core.rest(arglist__11149);
    return output__delegate(opts__4969__auto__, children__4970__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
om.dom.p = function() {
  var p__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var p = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return p__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  p.cljs$lang$maxFixedArity = 1;
  p.cljs$lang$applyTo = function(arglist__11150) {
    var opts__4969__auto__ = cljs.core.first(arglist__11150);
    var children__4970__auto__ = cljs.core.rest(arglist__11150);
    return p__delegate(opts__4969__auto__, children__4970__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
om.dom.param = function() {
  var param__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var param = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return param__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  param.cljs$lang$maxFixedArity = 1;
  param.cljs$lang$applyTo = function(arglist__11151) {
    var opts__4969__auto__ = cljs.core.first(arglist__11151);
    var children__4970__auto__ = cljs.core.rest(arglist__11151);
    return param__delegate(opts__4969__auto__, children__4970__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
om.dom.pre = function() {
  var pre__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var pre = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pre__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  pre.cljs$lang$maxFixedArity = 1;
  pre.cljs$lang$applyTo = function(arglist__11152) {
    var opts__4969__auto__ = cljs.core.first(arglist__11152);
    var children__4970__auto__ = cljs.core.rest(arglist__11152);
    return pre__delegate(opts__4969__auto__, children__4970__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
om.dom.progress = function() {
  var progress__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var progress = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return progress__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  progress.cljs$lang$maxFixedArity = 1;
  progress.cljs$lang$applyTo = function(arglist__11153) {
    var opts__4969__auto__ = cljs.core.first(arglist__11153);
    var children__4970__auto__ = cljs.core.rest(arglist__11153);
    return progress__delegate(opts__4969__auto__, children__4970__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
om.dom.q = function() {
  var q__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var q = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return q__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__11154) {
    var opts__4969__auto__ = cljs.core.first(arglist__11154);
    var children__4970__auto__ = cljs.core.rest(arglist__11154);
    return q__delegate(opts__4969__auto__, children__4970__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
om.dom.rp = function() {
  var rp__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var rp = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rp__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  rp.cljs$lang$maxFixedArity = 1;
  rp.cljs$lang$applyTo = function(arglist__11155) {
    var opts__4969__auto__ = cljs.core.first(arglist__11155);
    var children__4970__auto__ = cljs.core.rest(arglist__11155);
    return rp__delegate(opts__4969__auto__, children__4970__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
om.dom.rt = function() {
  var rt__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var rt = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rt__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  rt.cljs$lang$maxFixedArity = 1;
  rt.cljs$lang$applyTo = function(arglist__11156) {
    var opts__4969__auto__ = cljs.core.first(arglist__11156);
    var children__4970__auto__ = cljs.core.rest(arglist__11156);
    return rt__delegate(opts__4969__auto__, children__4970__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
om.dom.ruby = function() {
  var ruby__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var ruby = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ruby__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 1;
  ruby.cljs$lang$applyTo = function(arglist__11157) {
    var opts__4969__auto__ = cljs.core.first(arglist__11157);
    var children__4970__auto__ = cljs.core.rest(arglist__11157);
    return ruby__delegate(opts__4969__auto__, children__4970__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
om.dom.s = function() {
  var s__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var s = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return s__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  s.cljs$lang$maxFixedArity = 1;
  s.cljs$lang$applyTo = function(arglist__11158) {
    var opts__4969__auto__ = cljs.core.first(arglist__11158);
    var children__4970__auto__ = cljs.core.rest(arglist__11158);
    return s__delegate(opts__4969__auto__, children__4970__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
om.dom.samp = function() {
  var samp__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var samp = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return samp__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  samp.cljs$lang$maxFixedArity = 1;
  samp.cljs$lang$applyTo = function(arglist__11159) {
    var opts__4969__auto__ = cljs.core.first(arglist__11159);
    var children__4970__auto__ = cljs.core.rest(arglist__11159);
    return samp__delegate(opts__4969__auto__, children__4970__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
om.dom.script = function() {
  var script__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var script = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return script__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  script.cljs$lang$maxFixedArity = 1;
  script.cljs$lang$applyTo = function(arglist__11160) {
    var opts__4969__auto__ = cljs.core.first(arglist__11160);
    var children__4970__auto__ = cljs.core.rest(arglist__11160);
    return script__delegate(opts__4969__auto__, children__4970__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
om.dom.section = function() {
  var section__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var section = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return section__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  section.cljs$lang$maxFixedArity = 1;
  section.cljs$lang$applyTo = function(arglist__11161) {
    var opts__4969__auto__ = cljs.core.first(arglist__11161);
    var children__4970__auto__ = cljs.core.rest(arglist__11161);
    return section__delegate(opts__4969__auto__, children__4970__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
om.dom.select = function() {
  var select__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var select = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return select__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  select.cljs$lang$maxFixedArity = 1;
  select.cljs$lang$applyTo = function(arglist__11162) {
    var opts__4969__auto__ = cljs.core.first(arglist__11162);
    var children__4970__auto__ = cljs.core.rest(arglist__11162);
    return select__delegate(opts__4969__auto__, children__4970__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
om.dom.small = function() {
  var small__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var small = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return small__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  small.cljs$lang$maxFixedArity = 1;
  small.cljs$lang$applyTo = function(arglist__11163) {
    var opts__4969__auto__ = cljs.core.first(arglist__11163);
    var children__4970__auto__ = cljs.core.rest(arglist__11163);
    return small__delegate(opts__4969__auto__, children__4970__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
om.dom.source = function() {
  var source__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var source = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return source__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  source.cljs$lang$maxFixedArity = 1;
  source.cljs$lang$applyTo = function(arglist__11164) {
    var opts__4969__auto__ = cljs.core.first(arglist__11164);
    var children__4970__auto__ = cljs.core.rest(arglist__11164);
    return source__delegate(opts__4969__auto__, children__4970__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
om.dom.span = function() {
  var span__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var span = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return span__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  span.cljs$lang$maxFixedArity = 1;
  span.cljs$lang$applyTo = function(arglist__11165) {
    var opts__4969__auto__ = cljs.core.first(arglist__11165);
    var children__4970__auto__ = cljs.core.rest(arglist__11165);
    return span__delegate(opts__4969__auto__, children__4970__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
om.dom.strong = function() {
  var strong__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var strong = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return strong__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  strong.cljs$lang$maxFixedArity = 1;
  strong.cljs$lang$applyTo = function(arglist__11166) {
    var opts__4969__auto__ = cljs.core.first(arglist__11166);
    var children__4970__auto__ = cljs.core.rest(arglist__11166);
    return strong__delegate(opts__4969__auto__, children__4970__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
om.dom.style = function() {
  var style__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var style = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return style__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  style.cljs$lang$maxFixedArity = 1;
  style.cljs$lang$applyTo = function(arglist__11167) {
    var opts__4969__auto__ = cljs.core.first(arglist__11167);
    var children__4970__auto__ = cljs.core.rest(arglist__11167);
    return style__delegate(opts__4969__auto__, children__4970__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
om.dom.sub = function() {
  var sub__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var sub = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sub__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  sub.cljs$lang$maxFixedArity = 1;
  sub.cljs$lang$applyTo = function(arglist__11168) {
    var opts__4969__auto__ = cljs.core.first(arglist__11168);
    var children__4970__auto__ = cljs.core.rest(arglist__11168);
    return sub__delegate(opts__4969__auto__, children__4970__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
om.dom.summary = function() {
  var summary__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var summary = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return summary__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  summary.cljs$lang$maxFixedArity = 1;
  summary.cljs$lang$applyTo = function(arglist__11169) {
    var opts__4969__auto__ = cljs.core.first(arglist__11169);
    var children__4970__auto__ = cljs.core.rest(arglist__11169);
    return summary__delegate(opts__4969__auto__, children__4970__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
om.dom.sup = function() {
  var sup__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var sup = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sup__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  sup.cljs$lang$maxFixedArity = 1;
  sup.cljs$lang$applyTo = function(arglist__11170) {
    var opts__4969__auto__ = cljs.core.first(arglist__11170);
    var children__4970__auto__ = cljs.core.rest(arglist__11170);
    return sup__delegate(opts__4969__auto__, children__4970__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
om.dom.table = function() {
  var table__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var table = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return table__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  table.cljs$lang$maxFixedArity = 1;
  table.cljs$lang$applyTo = function(arglist__11171) {
    var opts__4969__auto__ = cljs.core.first(arglist__11171);
    var children__4970__auto__ = cljs.core.rest(arglist__11171);
    return table__delegate(opts__4969__auto__, children__4970__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
om.dom.tbody = function() {
  var tbody__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var tbody = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tbody__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 1;
  tbody.cljs$lang$applyTo = function(arglist__11172) {
    var opts__4969__auto__ = cljs.core.first(arglist__11172);
    var children__4970__auto__ = cljs.core.rest(arglist__11172);
    return tbody__delegate(opts__4969__auto__, children__4970__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
om.dom.td = function() {
  var td__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var td = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return td__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  td.cljs$lang$maxFixedArity = 1;
  td.cljs$lang$applyTo = function(arglist__11173) {
    var opts__4969__auto__ = cljs.core.first(arglist__11173);
    var children__4970__auto__ = cljs.core.rest(arglist__11173);
    return td__delegate(opts__4969__auto__, children__4970__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
om.dom.tfoot = function() {
  var tfoot__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var tfoot = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tfoot__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 1;
  tfoot.cljs$lang$applyTo = function(arglist__11174) {
    var opts__4969__auto__ = cljs.core.first(arglist__11174);
    var children__4970__auto__ = cljs.core.rest(arglist__11174);
    return tfoot__delegate(opts__4969__auto__, children__4970__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
om.dom.th = function() {
  var th__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var th = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return th__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  th.cljs$lang$maxFixedArity = 1;
  th.cljs$lang$applyTo = function(arglist__11175) {
    var opts__4969__auto__ = cljs.core.first(arglist__11175);
    var children__4970__auto__ = cljs.core.rest(arglist__11175);
    return th__delegate(opts__4969__auto__, children__4970__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
om.dom.thead = function() {
  var thead__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var thead = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return thead__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  thead.cljs$lang$maxFixedArity = 1;
  thead.cljs$lang$applyTo = function(arglist__11176) {
    var opts__4969__auto__ = cljs.core.first(arglist__11176);
    var children__4970__auto__ = cljs.core.rest(arglist__11176);
    return thead__delegate(opts__4969__auto__, children__4970__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
om.dom.time = function() {
  var time__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var time = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return time__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  time.cljs$lang$maxFixedArity = 1;
  time.cljs$lang$applyTo = function(arglist__11177) {
    var opts__4969__auto__ = cljs.core.first(arglist__11177);
    var children__4970__auto__ = cljs.core.rest(arglist__11177);
    return time__delegate(opts__4969__auto__, children__4970__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
om.dom.title = function() {
  var title__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var title = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return title__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  title.cljs$lang$maxFixedArity = 1;
  title.cljs$lang$applyTo = function(arglist__11178) {
    var opts__4969__auto__ = cljs.core.first(arglist__11178);
    var children__4970__auto__ = cljs.core.rest(arglist__11178);
    return title__delegate(opts__4969__auto__, children__4970__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
om.dom.tr = function() {
  var tr__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var tr = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tr__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  tr.cljs$lang$maxFixedArity = 1;
  tr.cljs$lang$applyTo = function(arglist__11179) {
    var opts__4969__auto__ = cljs.core.first(arglist__11179);
    var children__4970__auto__ = cljs.core.rest(arglist__11179);
    return tr__delegate(opts__4969__auto__, children__4970__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
om.dom.track = function() {
  var track__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var track = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return track__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  track.cljs$lang$maxFixedArity = 1;
  track.cljs$lang$applyTo = function(arglist__11180) {
    var opts__4969__auto__ = cljs.core.first(arglist__11180);
    var children__4970__auto__ = cljs.core.rest(arglist__11180);
    return track__delegate(opts__4969__auto__, children__4970__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
om.dom.u = function() {
  var u__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var u = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return u__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  u.cljs$lang$maxFixedArity = 1;
  u.cljs$lang$applyTo = function(arglist__11181) {
    var opts__4969__auto__ = cljs.core.first(arglist__11181);
    var children__4970__auto__ = cljs.core.rest(arglist__11181);
    return u__delegate(opts__4969__auto__, children__4970__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
om.dom.ul = function() {
  var ul__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var ul = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ul__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  ul.cljs$lang$maxFixedArity = 1;
  ul.cljs$lang$applyTo = function(arglist__11182) {
    var opts__4969__auto__ = cljs.core.first(arglist__11182);
    var children__4970__auto__ = cljs.core.rest(arglist__11182);
    return ul__delegate(opts__4969__auto__, children__4970__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
om.dom.var$ = function() {
  var var$__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var var$ = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return var$__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  var$.cljs$lang$maxFixedArity = 1;
  var$.cljs$lang$applyTo = function(arglist__11183) {
    var opts__4969__auto__ = cljs.core.first(arglist__11183);
    var children__4970__auto__ = cljs.core.rest(arglist__11183);
    return var$__delegate(opts__4969__auto__, children__4970__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
om.dom.video = function() {
  var video__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var video = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return video__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  video.cljs$lang$maxFixedArity = 1;
  video.cljs$lang$applyTo = function(arglist__11184) {
    var opts__4969__auto__ = cljs.core.first(arglist__11184);
    var children__4970__auto__ = cljs.core.rest(arglist__11184);
    return video__delegate(opts__4969__auto__, children__4970__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
om.dom.wbr = function() {
  var wbr__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var wbr = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wbr__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 1;
  wbr.cljs$lang$applyTo = function(arglist__11185) {
    var opts__4969__auto__ = cljs.core.first(arglist__11185);
    var children__4970__auto__ = cljs.core.rest(arglist__11185);
    return wbr__delegate(opts__4969__auto__, children__4970__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
om.dom.circle = function() {
  var circle__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var circle = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return circle__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  circle.cljs$lang$maxFixedArity = 1;
  circle.cljs$lang$applyTo = function(arglist__11186) {
    var opts__4969__auto__ = cljs.core.first(arglist__11186);
    var children__4970__auto__ = cljs.core.rest(arglist__11186);
    return circle__delegate(opts__4969__auto__, children__4970__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
om.dom.g = function() {
  var g__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var g = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return g__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  g.cljs$lang$maxFixedArity = 1;
  g.cljs$lang$applyTo = function(arglist__11187) {
    var opts__4969__auto__ = cljs.core.first(arglist__11187);
    var children__4970__auto__ = cljs.core.rest(arglist__11187);
    return g__delegate(opts__4969__auto__, children__4970__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
om.dom.line = function() {
  var line__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var line = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return line__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  line.cljs$lang$maxFixedArity = 1;
  line.cljs$lang$applyTo = function(arglist__11188) {
    var opts__4969__auto__ = cljs.core.first(arglist__11188);
    var children__4970__auto__ = cljs.core.rest(arglist__11188);
    return line__delegate(opts__4969__auto__, children__4970__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
om.dom.path = function() {
  var path__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var path = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return path__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  path.cljs$lang$maxFixedArity = 1;
  path.cljs$lang$applyTo = function(arglist__11189) {
    var opts__4969__auto__ = cljs.core.first(arglist__11189);
    var children__4970__auto__ = cljs.core.rest(arglist__11189);
    return path__delegate(opts__4969__auto__, children__4970__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
om.dom.polyline = function() {
  var polyline__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var polyline = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polyline__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 1;
  polyline.cljs$lang$applyTo = function(arglist__11190) {
    var opts__4969__auto__ = cljs.core.first(arglist__11190);
    var children__4970__auto__ = cljs.core.rest(arglist__11190);
    return polyline__delegate(opts__4969__auto__, children__4970__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
om.dom.rect = function() {
  var rect__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var rect = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rect__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  rect.cljs$lang$maxFixedArity = 1;
  rect.cljs$lang$applyTo = function(arglist__11191) {
    var opts__4969__auto__ = cljs.core.first(arglist__11191);
    var children__4970__auto__ = cljs.core.rest(arglist__11191);
    return rect__delegate(opts__4969__auto__, children__4970__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
om.dom.svg = function() {
  var svg__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var svg = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return svg__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  svg.cljs$lang$maxFixedArity = 1;
  svg.cljs$lang$applyTo = function(arglist__11192) {
    var opts__4969__auto__ = cljs.core.first(arglist__11192);
    var children__4970__auto__ = cljs.core.rest(arglist__11192);
    return svg__delegate(opts__4969__auto__, children__4970__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
om.dom.text = function() {
  var text__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var text = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return text__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  text.cljs$lang$maxFixedArity = 1;
  text.cljs$lang$applyTo = function(arglist__11193) {
    var opts__4969__auto__ = cljs.core.first(arglist__11193);
    var children__4970__auto__ = cljs.core.rest(arglist__11193);
    return text__delegate(opts__4969__auto__, children__4970__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
om.dom.defs = function() {
  var defs__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.defs.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var defs = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return defs__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  defs.cljs$lang$maxFixedArity = 1;
  defs.cljs$lang$applyTo = function(arglist__11194) {
    var opts__4969__auto__ = cljs.core.first(arglist__11194);
    var children__4970__auto__ = cljs.core.rest(arglist__11194);
    return defs__delegate(opts__4969__auto__, children__4970__auto__);
  };
  defs.cljs$core$IFn$_invoke$arity$variadic = defs__delegate;
  return defs;
}();
om.dom.linearGradient = function() {
  var linearGradient__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.linearGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var linearGradient = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return linearGradient__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  linearGradient.cljs$lang$maxFixedArity = 1;
  linearGradient.cljs$lang$applyTo = function(arglist__11195) {
    var opts__4969__auto__ = cljs.core.first(arglist__11195);
    var children__4970__auto__ = cljs.core.rest(arglist__11195);
    return linearGradient__delegate(opts__4969__auto__, children__4970__auto__);
  };
  linearGradient.cljs$core$IFn$_invoke$arity$variadic = linearGradient__delegate;
  return linearGradient;
}();
om.dom.polygon = function() {
  var polygon__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.polygon.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var polygon = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polygon__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  polygon.cljs$lang$maxFixedArity = 1;
  polygon.cljs$lang$applyTo = function(arglist__11196) {
    var opts__4969__auto__ = cljs.core.first(arglist__11196);
    var children__4970__auto__ = cljs.core.rest(arglist__11196);
    return polygon__delegate(opts__4969__auto__, children__4970__auto__);
  };
  polygon.cljs$core$IFn$_invoke$arity$variadic = polygon__delegate;
  return polygon;
}();
om.dom.radialGradient = function() {
  var radialGradient__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.radialGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var radialGradient = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return radialGradient__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  radialGradient.cljs$lang$maxFixedArity = 1;
  radialGradient.cljs$lang$applyTo = function(arglist__11197) {
    var opts__4969__auto__ = cljs.core.first(arglist__11197);
    var children__4970__auto__ = cljs.core.rest(arglist__11197);
    return radialGradient__delegate(opts__4969__auto__, children__4970__auto__);
  };
  radialGradient.cljs$core$IFn$_invoke$arity$variadic = radialGradient__delegate;
  return radialGradient;
}();
om.dom.stop = function() {
  var stop__delegate = function(opts__4969__auto__, children__4970__auto__) {
    return React.DOM.stop.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4969__auto__, children__4970__auto__)));
  };
  var stop = function(opts__4969__auto__, var_args) {
    var children__4970__auto__ = null;
    if (arguments.length > 1) {
      children__4970__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return stop__delegate.call(this, opts__4969__auto__, children__4970__auto__);
  };
  stop.cljs$lang$maxFixedArity = 1;
  stop.cljs$lang$applyTo = function(arglist__11198) {
    var opts__4969__auto__ = cljs.core.first(arglist__11198);
    var children__4970__auto__ = cljs.core.rest(arglist__11198);
    return stop__delegate(opts__4969__auto__, children__4970__auto__);
  };
  stop.cljs$core$IFn$_invoke$arity$variadic = stop__delegate;
  return stop;
}();
om.dom.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }});
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input, "input");
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea, "textarea");
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option, "option");
om.dom.render = function render(component, el) {
  return React.renderComponent(component, el);
};
om.dom.render_to_str = function render_to_str(c) {
  return React.renderComponentToString(c);
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return ":" + (this.nextId_++).toString(36);
};
goog.ui.IdGenerator.instance = goog.ui.IdGenerator.getInstance();
goog.provide("om.core");
goog.require("cljs.core");
goog.require("goog.ui.IdGenerator");
goog.require("om.dom");
goog.require("om.dom");
om.core._STAR_read_enabled_STAR_ = false;
om.core._STAR_parent_STAR_ = null;
om.core._STAR_instrument_STAR_ = null;
om.core._STAR_state_STAR_ = null;
om.core.IDisplayName = function() {
  var obj10838 = {};
  return obj10838;
}();
om.core.display_name = function display_name(this$) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IDisplayName$display_name$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IDisplayName$display_name$arity$1(this$);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core.display_name[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core.display_name["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisplayName.display-name", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IInitState = function() {
  var obj10840 = {};
  return obj10840;
}();
om.core.init_state = function init_state(this$) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core.init_state[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core.init_state["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj10842 = {};
  return obj10842;
}();
om.core.should_update = function should_update(this$, next_props, next_state) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core.should_update[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core.should_update["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj10844 = {};
  return obj10844;
}();
om.core.will_mount = function will_mount(this$) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core.will_mount[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core.will_mount["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj10846 = {};
  return obj10846;
}();
om.core.did_mount = function did_mount(this$) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core.did_mount[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core.did_mount["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUnmount = function() {
  var obj10848 = {};
  return obj10848;
}();
om.core.will_unmount = function will_unmount(this$) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core.will_unmount[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core.will_unmount["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj10850 = {};
  return obj10850;
}();
om.core.will_update = function will_update(this$, next_props, next_state) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core.will_update[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core.will_update["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj10852 = {};
  return obj10852;
}();
om.core.did_update = function did_update(this$, prev_props, prev_state) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core.did_update[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core.did_update["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state);
  }
};
om.core.IWillReceiveProps = function() {
  var obj10854 = {};
  return obj10854;
}();
om.core.will_receive_props = function will_receive_props(this$, next_props) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IWillReceiveProps$will_receive_props$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IWillReceiveProps$will_receive_props$arity$2(this$, next_props);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core.will_receive_props[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core.will_receive_props["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillReceiveProps.will-receive-props", this$);
        }
      }
    }().call(null, this$, next_props);
  }
};
om.core.IRender = function() {
  var obj10856 = {};
  return obj10856;
}();
om.core.render = function render(this$) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core.render[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core.render["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderState = function() {
  var obj10858 = {};
  return obj10858;
}();
om.core.render_state = function render_state(this$, state) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core.render_state[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core.render_state["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.IOmSwap = function() {
  var obj10860 = {};
  return obj10860;
}();
om.core._om_swap_BANG_ = function _om_swap_BANG_(this$, cursor, korks, f, tag) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5(this$, cursor, korks, f, tag);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core._om_swap_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core._om_swap_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmSwap.-om-swap!", this$);
        }
      }
    }().call(null, this$, cursor, korks, f, tag);
  }
};
om.core.IGetState = function() {
  var obj10862 = {};
  return obj10862;
}();
om.core._get_state = function() {
  var _get_state = null;
  var _get_state__1 = function(this$) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.om$core$IGetState$_get_state$arity$1;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$1(this$);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = om.core._get_state[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = om.core._get_state["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_state__2 = function(this$, ks) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.om$core$IGetState$_get_state$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$2(this$, ks);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = om.core._get_state[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = om.core._get_state["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_state__1.call(this, this$);
      case 2:
        return _get_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_state.cljs$core$IFn$_invoke$arity$1 = _get_state__1;
  _get_state.cljs$core$IFn$_invoke$arity$2 = _get_state__2;
  return _get_state;
}();
om.core.IGetRenderState = function() {
  var obj10864 = {};
  return obj10864;
}();
om.core._get_render_state = function() {
  var _get_render_state = null;
  var _get_render_state__1 = function(this$) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$1;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$1(this$);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = om.core._get_render_state[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = om.core._get_render_state["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_render_state__2 = function(this$, ks) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$2(this$, ks);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = om.core._get_render_state[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = om.core._get_render_state["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_render_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_render_state__1.call(this, this$);
      case 2:
        return _get_render_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_render_state.cljs$core$IFn$_invoke$arity$1 = _get_render_state__1;
  _get_render_state.cljs$core$IFn$_invoke$arity$2 = _get_render_state__2;
  return _get_render_state;
}();
om.core.ISetState = function() {
  var obj10866 = {};
  return obj10866;
}();
om.core._set_state_BANG_ = function() {
  var _set_state_BANG_ = null;
  var _set_state_BANG___2 = function(this$, val) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$2(this$, val);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, val);
    }
  };
  var _set_state_BANG___3 = function(this$, ks, val) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$3;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$3(this$, ks, val);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, ks, val);
    }
  };
  _set_state_BANG_ = function(this$, ks, val) {
    switch(arguments.length) {
      case 2:
        return _set_state_BANG___2.call(this, this$, ks);
      case 3:
        return _set_state_BANG___3.call(this, this$, ks, val);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = _set_state_BANG___2;
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = _set_state_BANG___3;
  return _set_state_BANG_;
}();
om.core.IRenderQueue = function() {
  var obj10868 = {};
  return obj10868;
}();
om.core._get_queue = function _get_queue(this$) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IRenderQueue$_get_queue$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_get_queue$arity$1(this$);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core._get_queue[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core._get_queue["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-get-queue", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._queue_render_BANG_ = function _queue_render_BANG_(this$, c) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2(this$, c);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core._queue_render_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core._queue_render_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-queue-render!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._empty_queue_BANG_ = function _empty_queue_BANG_(this$) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1(this$);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core._empty_queue_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core._empty_queue_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-empty-queue!", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IValue = function() {
  var obj10870 = {};
  return obj10870;
}();
om.core._value = function _value(x) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = om.core._value[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core._value["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj10872 = {};
  return obj10872;
}();
om.core._path = function _path(cursor) {
  if (function() {
    var and__3431__auto__ = cursor;
    if (and__3431__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4070__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3443__auto__ = om.core._path[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core._path["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function _state(cursor) {
  if (function() {
    var and__3431__auto__ = cursor;
    if (and__3431__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4070__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3443__auto__ = om.core._state[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core._state["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj10874 = {};
  return obj10874;
}();
om.core._to_cursor = function() {
  var _to_cursor = null;
  var _to_cursor__2 = function(value, state) {
    if (function() {
      var and__3431__auto__ = value;
      if (and__3431__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
    } else {
      var x__4070__auto__ = value == null ? null : value;
      return function() {
        var or__3443__auto__ = om.core._to_cursor[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = om.core._to_cursor["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state);
    }
  };
  var _to_cursor__3 = function(value, state, path) {
    if (function() {
      var and__3431__auto__ = value;
      if (and__3431__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$3;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
    } else {
      var x__4070__auto__ = value == null ? null : value;
      return function() {
        var or__3443__auto__ = om.core._to_cursor[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = om.core._to_cursor["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path);
    }
  };
  _to_cursor = function(value, state, path) {
    switch(arguments.length) {
      case 2:
        return _to_cursor__2.call(this, value, state);
      case 3:
        return _to_cursor__3.call(this, value, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _to_cursor.cljs$core$IFn$_invoke$arity$2 = _to_cursor__2;
  _to_cursor.cljs$core$IFn$_invoke$arity$3 = _to_cursor__3;
  return _to_cursor;
}();
om.core.ICursorDerive = function() {
  var obj10876 = {};
  return obj10876;
}();
om.core._derive = function _derive(cursor, derived, state, path) {
  if (function() {
    var and__3431__auto__ = cursor;
    if (and__3431__auto__) {
      return cursor.om$core$ICursorDerive$_derive$arity$4;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return cursor.om$core$ICursorDerive$_derive$arity$4(cursor, derived, state, path);
  } else {
    var x__4070__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3443__auto__ = om.core._derive[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core._derive["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursorDerive.-derive", cursor);
        }
      }
    }().call(null, cursor, derived, state, path);
  }
};
om.core.ICursorDerive["_"] = true;
om.core._derive["_"] = function(this$, derived, state, path) {
  return om.core.to_cursor.call(null, derived, state, path);
};
om.core.path = function path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.state = function state(cursor) {
  return om.core._state.call(null, cursor);
};
om.core.ITransact = function() {
  var obj10878 = {};
  return obj10878;
}();
om.core._transact_BANG_ = function _transact_BANG_(cursor, korks, f, tag) {
  if (function() {
    var and__3431__auto__ = cursor;
    if (and__3431__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$4;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$4(cursor, korks, f, tag);
  } else {
    var x__4070__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3443__auto__ = om.core._transact_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core._transact_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, korks, f, tag);
  }
};
om.core.INotify = function() {
  var obj10880 = {};
  return obj10880;
}();
om.core._listen_BANG_ = function _listen_BANG_(x, key, tx_listen) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.om$core$INotify$_listen_BANG_$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.om$core$INotify$_listen_BANG_$arity$3(x, key, tx_listen);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = om.core._listen_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core._listen_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-listen!", x);
        }
      }
    }().call(null, x, key, tx_listen);
  }
};
om.core._unlisten_BANG_ = function _unlisten_BANG_(x, key) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.om$core$INotify$_unlisten_BANG_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.om$core$INotify$_unlisten_BANG_$arity$2(x, key);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = om.core._unlisten_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core._unlisten_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-unlisten!", x);
        }
      }
    }().call(null, x, key);
  }
};
om.core._notify_BANG_ = function _notify_BANG_(x, tx_data, root_cursor) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.om$core$INotify$_notify_BANG_$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.om$core$INotify$_notify_BANG_$arity$3(x, tx_data, root_cursor);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = om.core._notify_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core._notify_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-notify!", x);
        }
      }
    }().call(null, x, tx_data, root_cursor);
  }
};
om.core.transact_STAR_ = function transact_STAR_(state, cursor, korks, f, tag) {
  var old_state = cljs.core.deref.call(null, state);
  var path = cljs.core.into.call(null, om.core.path.call(null, cursor), korks);
  var ret = function() {
    var G__10882 = state;
    if (G__10882) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto__ = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return G__10882.om$core$IOmSwap$;
        }
      }())) {
        return true;
      } else {
        if (!G__10882.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__10882);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__10882);
    }
  }() ? om.core._om_swap_BANG_.call(null, state, cursor, korks, f, tag) : cljs.core.empty_QMARK_.call(null, path) ? cljs.core.swap_BANG_.call(null, state, f) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f) : null;
  if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "defer", "om.core/defer", 3145885106))) {
    return null;
  } else {
    var tx_data = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", 1017337751), path, new cljs.core.Keyword(null, "old-value", "old-value", 1451216317), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 3626601078), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1449001181), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 
    3624385942), cljs.core.deref.call(null, state)], null);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", 1014018828), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  }
};
om.core.cursor_QMARK_ = function cursor_QMARK_(x) {
  var G__10884 = x;
  if (G__10884) {
    var bit__4093__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3443__auto__ = bit__4093__auto__;
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return G__10884.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__10884.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__10884);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__10884);
  }
};
om.core.children = function children(node) {
  var c = node.props.children;
  if (cljs.core.fn_QMARK_.call(null, c)) {
    return node.props.children = function() {
      var _STAR_read_enabled_STAR_10886 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        return c.call(null, node);
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10886;
      }
    }();
  } else {
    return c;
  }
};
om.core.get_props = function get_props(x) {
  return x.props["__om_cursor"];
};
om.core.get_state = function() {
  var get_state = null;
  var get_state__1 = function(owner) {
    return om.core._get_state.call(null, owner);
  };
  var get_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_state.call(null, owner, ks);
  };
  get_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_state__1.call(this, owner);
      case 2:
        return get_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_state.cljs$core$IFn$_invoke$arity$1 = get_state__1;
  get_state.cljs$core$IFn$_invoke$arity$2 = get_state__2;
  return get_state;
}();
om.core.get_shared = function() {
  var get_shared = null;
  var get_shared__1 = function(owner) {
    if (owner == null) {
      return null;
    } else {
      return owner.props["__om_shared"];
    }
  };
  var get_shared__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_shared.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_shared.call(null, owner);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get_in.call(null, get_shared.call(null, owner), korks);
        } else {
          return null;
        }
      }
    }
  };
  get_shared = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_shared__1.call(this, owner);
      case 2:
        return get_shared__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_shared.cljs$core$IFn$_invoke$arity$1 = get_shared__1;
  get_shared.cljs$core$IFn$_invoke$arity$2 = get_shared__2;
  return get_shared;
}();
om.core.merge_pending_state = function merge_pending_state(owner) {
  var state = owner.state;
  var temp__4092__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4092__auto__)) {
    var pending_state = temp__4092__auto__;
    var G__10888 = state;
    G__10888["__om_prev_state"] = state["__om_state"];
    G__10888["__om_state"] = pending_state;
    G__10888["__om_pending_state"] = null;
    return G__10888;
  } else {
    return null;
  }
};
om.core.merge_props_state = function() {
  var merge_props_state = null;
  var merge_props_state__1 = function(owner) {
    return merge_props_state.call(null, owner, null);
  };
  var merge_props_state__2 = function(owner, props) {
    var props__$1 = function() {
      var or__3443__auto__ = props;
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return owner.props;
      }
    }();
    var temp__4092__auto__ = props__$1["__om_state"];
    if (cljs.core.truth_(temp__4092__auto__)) {
      var props_state = temp__4092__auto__;
      var state = owner.state;
      state["__om_pending_state"] = cljs.core.merge.call(null, function() {
        var or__3443__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return state["__om_state"];
        }
      }(), props_state);
      return props__$1["__om_state"] = null;
    } else {
      return null;
    }
  };
  merge_props_state = function(owner, props) {
    switch(arguments.length) {
      case 1:
        return merge_props_state__1.call(this, owner);
      case 2:
        return merge_props_state__2.call(this, owner, props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge_props_state.cljs$core$IFn$_invoke$arity$1 = merge_props_state__1;
  merge_props_state.cljs$core$IFn$_invoke$arity$2 = merge_props_state__2;
  return merge_props_state;
}();
om.core.pure_methods = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "componentWillUpdate", "componentWillUpdate", 2086388618), new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", 4103164189), new cljs.core.Keyword(null, "render", "render", 4374279432), new cljs.core.Keyword(null, "componentWillReceiveProps", "componentWillReceiveProps", 2122862542), new cljs.core.Keyword(null, "getDisplayName", "getDisplayName", 2087784617), new cljs.core.Keyword(null, "componentWillUnmount", 
"componentWillUnmount", 4147620643), new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", 3257856604), new cljs.core.Keyword(null, "componentDidMount", "componentDidMount", 3877103209), new cljs.core.Keyword(null, "getInitialState", "getInitialState", 2219830677), new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 3193956709)], [function(next_props, next_state) {
  var this$ = this;
  var c_10916 = om.core.children.call(null, this$);
  if (function() {
    var G__10889 = c_10916;
    if (G__10889) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto__ = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return G__10889.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__10889.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__10889);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__10889);
    }
  }()) {
    var state_10917 = this$.state;
    var _STAR_read_enabled_STAR_10890_10918 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_update.call(null, c_10916, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10890_10918;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__10891 = c;
    if (G__10891) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto__ = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return G__10891.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__10891.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__10891);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__10891);
    }
  }()) {
    var state_10919 = this$.state;
    var _STAR_read_enabled_STAR_10892_10920 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.did_update.call(null, c, om.core.get_props.call(null, {"props":prev_props}), function() {
        var or__3443__auto__ = state_10919["__om_prev_state"];
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return state_10919["__om_state"];
        }
      }());
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10892_10920;
    }
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var _STAR_read_enabled_STAR_10893 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    if (function() {
      var G__10894 = c;
      if (G__10894) {
        var bit__4093__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3443__auto__ = bit__4093__auto__;
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return G__10894.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__10894.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__10894);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__10894);
      }
    }()) {
      var _STAR_parent_STAR_10895 = om.core._STAR_parent_STAR_;
      var _STAR_state_STAR_10896 = om.core._STAR_state_STAR_;
      var _STAR_instrument_STAR_10897 = om.core._STAR_instrument_STAR_;
      try {
        om.core._STAR_parent_STAR_ = this$;
        om.core._STAR_state_STAR_ = props["__om_app_state"];
        om.core._STAR_instrument_STAR_ = props["__om_instrument"];
        return om.core.render.call(null, c);
      } finally {
        om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_10897;
        om.core._STAR_state_STAR_ = _STAR_state_STAR_10896;
        om.core._STAR_parent_STAR_ = _STAR_parent_STAR_10895;
      }
    } else {
      if (function() {
        var G__10898 = c;
        if (G__10898) {
          var bit__4093__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3443__auto__ = bit__4093__auto__;
            if (cljs.core.truth_(or__3443__auto__)) {
              return or__3443__auto__;
            } else {
              return G__10898.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__10898.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__10898);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__10898);
        }
      }()) {
        var _STAR_parent_STAR_10899 = om.core._STAR_parent_STAR_;
        var _STAR_state_STAR_10900 = om.core._STAR_state_STAR_;
        var _STAR_instrument_STAR_10901 = om.core._STAR_instrument_STAR_;
        try {
          om.core._STAR_parent_STAR_ = this$;
          om.core._STAR_state_STAR_ = props["__om_app_state"];
          om.core._STAR_instrument_STAR_ = props["__om_instrument"];
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } finally {
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_10901;
          om.core._STAR_state_STAR_ = _STAR_state_STAR_10900;
          om.core._STAR_parent_STAR_ = _STAR_parent_STAR_10899;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return c;
        } else {
          return null;
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10893;
  }
}, function(next_props) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__10902 = c;
    if (G__10902) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto__ = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return G__10902.om$core$IWillReceiveProps$;
        }
      }())) {
        return true;
      } else {
        if (!G__10902.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__10902);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__10902);
    }
  }()) {
    var _STAR_read_enabled_STAR_10903 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_receive_props.call(null, c, om.core.get_props.call(null, {"props":next_props}));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10903;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__10904 = c;
    if (G__10904) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto__ = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return G__10904.om$core$IDisplayName$;
        }
      }())) {
        return true;
      } else {
        if (!G__10904.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__10904);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__10904);
    }
  }()) {
    var _STAR_read_enabled_STAR_10905 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.display_name.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10905;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__10906 = c;
    if (G__10906) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto__ = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return G__10906.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__10906.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__10906);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__10906);
    }
  }()) {
    var _STAR_read_enabled_STAR_10907 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_unmount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10907;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_10921 = om.core.children.call(null, this$);
  if (function() {
    var G__10908 = c_10921;
    if (G__10908) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto__ = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return G__10908.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__10908.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__10908);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__10908);
    }
  }()) {
    var _STAR_read_enabled_STAR_10909_10922 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_mount.call(null, c_10921);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10909_10922;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__10910 = c;
    if (G__10910) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto__ = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return G__10910.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__10910.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__10910);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__10910);
    }
  }()) {
    var _STAR_read_enabled_STAR_10911 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.did_mount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10911;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3443__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var id = (new cljs.core.Keyword("om.core", "id", "om.core/id", 2663181321)).cljs$core$IFn$_invoke$arity$1(istate);
  var ret = {"__om_state":cljs.core.merge.call(null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 2663181321)), function() {
    var G__10912 = c;
    if (G__10912) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto__ = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return G__10912.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__10912.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__10912);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__10912);
    }
  }() ? function() {
    var _STAR_read_enabled_STAR_10913 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.init_state.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10913;
    }
  }() : null), "__om_id":function() {
    var or__3443__auto__ = id;
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }()};
  props["__om_init_state"] = null;
  return ret;
}, function(next_props, next_state) {
  var this$ = this;
  var _STAR_read_enabled_STAR_10914 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    var props = this$.props;
    var state = this$.state;
    var c = om.core.children.call(null, this$);
    om.core.merge_props_state.call(null, this$, next_props);
    if (function() {
      var G__10915 = c;
      if (G__10915) {
        var bit__4093__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3443__auto__ = bit__4093__auto__;
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return G__10915.om$core$IShouldUpdate$;
          }
        }())) {
          return true;
        } else {
          if (!G__10915.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__10915);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__10915);
      }
    }()) {
      return om.core.should_update.call(null, c, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } else {
      if (cljs.core.not_EQ_.call(null, om.core._value.call(null, props["__om_cursor"]), om.core._value.call(null, next_props["__om_cursor"]))) {
        return true;
      } else {
        if (!(state["__om_pending_state"] == null)) {
          return true;
        } else {
          if (!(props["__om_index"] === next_props["__om_index"])) {
            return true;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10914;
  }
}]);
om.core.specify_state_methods_BANG_ = function specify_state_methods_BANG_(obj) {
  var x10926 = obj;
  x10926.om$core$IGetState$ = true;
  x10926.om$core$IGetState$_get_state$arity$1 = function(this$) {
    var this$__$1 = this;
    var state = this$__$1.state;
    var or__3443__auto__ = state["__om_pending_state"];
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return state["__om_state"];
    }
  };
  x10926.om$core$IGetState$_get_state$arity$2 = function(this$, ks) {
    var this$__$1 = this;
    return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
  };
  x10926.om$core$IGetRenderState$ = true;
  x10926.om$core$IGetRenderState$_get_render_state$arity$1 = function(this$) {
    var this$__$1 = this;
    return this$__$1.state["__om_state"];
  };
  x10926.om$core$IGetRenderState$_get_render_state$arity$2 = function(this$, ks) {
    var this$__$1 = this;
    return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
  };
  x10926.om$core$ISetState$ = true;
  x10926.om$core$ISetState$_set_state_BANG_$arity$2 = function(this$, val) {
    var this$__$1 = this;
    var _STAR_read_enabled_STAR_10927 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      var props = this$__$1.props;
      this$__$1.state["__om_pending_state"] = val;
      return om.core._queue_render_BANG_.call(null, props["__om_app_state"], this$__$1);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10927;
    }
  };
  x10926.om$core$ISetState$_set_state_BANG_$arity$3 = function(this$, ks, val) {
    var this$__$1 = this;
    var _STAR_read_enabled_STAR_10928 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      var props = this$__$1.props;
      var state = this$__$1.state;
      var pstate = om.core._get_state.call(null, this$__$1);
      state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, ks, val);
      return om.core._queue_render_BANG_.call(null, props["__om_app_state"], this$__$1);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10928;
    }
  };
  return x10926;
};
om.core.Pure = React.createClass(om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods)));
om.core.pure = function pure(obj) {
  return new om.core.Pure(obj);
};
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2158397195;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "om.core/MapCursor");
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    var v = cljs.core._lookup.call(null, self__.value, k, not_found);
    if (!cljs.core._EQ_.call(null, v, not_found)) {
      return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k));
    } else {
      return not_found;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.call = function() {
  var G__10932 = null;
  var G__10932__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10932__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10932 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10932__2.call(this, self__, k);
      case 3:
        return G__10932__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10932;
}();
om.core.MapCursor.prototype.apply = function(self__, args10929) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10929)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(p__10930) {
        var vec__10931 = p__10930;
        var k = cljs.core.nth.call(null, vec__10931, 0, null);
        var v = cljs.core.nth.call(null, vec__10931, 1, null);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
      }, self__.value);
    } else {
      return null;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.__GT_MapCursor = function __GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2175181595;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "om.core/IndexedCursor");
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, null);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, not_found);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, n, v) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.call = function() {
  var G__10934 = null;
  var G__10934__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10934__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10934 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10934__2.call(this, self__, k);
      case 3:
        return G__10934__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10934;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args10933) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10933)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(v, i) {
        return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, i));
      }, self__.value, cljs.core.range.call(null));
    } else {
      return null;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (n < cljs.core._count.call(null, self__.value)) {
      return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
    } else {
      return not_found;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.__GT_IndexedCursor = function __GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function to_cursor_STAR_(val, state, path) {
  var x10936 = cljs.core.clone.call(null, val);
  x10936.cljs$core$IEquiv$ = true;
  x10936.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
    var ___$1 = this;
    if (om.core._STAR_read_enabled_STAR_) {
      if (om.core.cursor_QMARK_.call(null, other)) {
        return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
      } else {
        return cljs.core._EQ_.call(null, val, other);
      }
    } else {
      throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
    }
  };
  x10936.om$core$ITransact$ = true;
  x10936.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
    var this$__$1 = this;
    return om.core.transact_STAR_.call(null, state, this$__$1, korks, f, tag);
  };
  x10936.om$core$ICursor$ = true;
  x10936.om$core$ICursor$_path$arity$1 = function(_) {
    var ___$1 = this;
    return path;
  };
  x10936.om$core$ICursor$_state$arity$1 = function(_) {
    var ___$1 = this;
    return state;
  };
  x10936.cljs$core$IDeref$ = true;
  x10936.cljs$core$IDeref$_deref$arity$1 = function(this$) {
    var this$__$1 = this;
    if (!om.core._STAR_read_enabled_STAR_) {
      return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path);
    } else {
      throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
    }
  };
  return x10936;
};
om.core.to_cursor = function() {
  var to_cursor = null;
  var to_cursor__1 = function(val) {
    return to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__2 = function(val, state) {
    return to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__3 = function(val, state, path) {
    if (om.core.cursor_QMARK_.call(null, val)) {
      return val;
    } else {
      if (function() {
        var G__10939 = val;
        if (G__10939) {
          var bit__4093__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3443__auto__ = bit__4093__auto__;
            if (cljs.core.truth_(or__3443__auto__)) {
              return or__3443__auto__;
            } else {
              return G__10939.om$core$IToCursor$;
            }
          }())) {
            return true;
          } else {
            if (!G__10939.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__10939);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__10939);
        }
      }()) {
        return om.core._to_cursor.call(null, val, state, path);
      } else {
        if (cljs.core.indexed_QMARK_.call(null, val)) {
          return new om.core.IndexedCursor(val, state, path);
        } else {
          if (cljs.core.map_QMARK_.call(null, val)) {
            return new om.core.MapCursor(val, state, path);
          } else {
            if (function() {
              var G__10940 = val;
              if (G__10940) {
                var bit__4093__auto__ = G__10940.cljs$lang$protocol_mask$partition1$ & 8192;
                if (bit__4093__auto__ || G__10940.cljs$core$ICloneable$) {
                  return true;
                } else {
                  if (!G__10940.cljs$lang$protocol_mask$partition1$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__10940);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__10940);
              }
            }()) {
              return om.core.to_cursor_STAR_.call(null, val, state, path);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return val;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  to_cursor = function(val, state, path) {
    switch(arguments.length) {
      case 1:
        return to_cursor__1.call(this, val);
      case 2:
        return to_cursor__2.call(this, val, state);
      case 3:
        return to_cursor__3.call(this, val, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  to_cursor.cljs$core$IFn$_invoke$arity$1 = to_cursor__1;
  to_cursor.cljs$core$IFn$_invoke$arity$2 = to_cursor__2;
  to_cursor.cljs$core$IFn$_invoke$arity$3 = to_cursor__3;
  return to_cursor;
}();
om.core.notify_STAR_ = function notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify_BANG_.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.render_all = function render_all() {
  om.core.refresh_queued = false;
  var seq__10945 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
  var chunk__10946 = null;
  var count__10947 = 0;
  var i__10948 = 0;
  while (true) {
    if (i__10948 < count__10947) {
      var f = cljs.core._nth.call(null, chunk__10946, i__10948);
      f.call(null);
      var G__10949 = seq__10945;
      var G__10950 = chunk__10946;
      var G__10951 = count__10947;
      var G__10952 = i__10948 + 1;
      seq__10945 = G__10949;
      chunk__10946 = G__10950;
      count__10947 = G__10951;
      i__10948 = G__10952;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__10945);
      if (temp__4092__auto__) {
        var seq__10945__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10945__$1)) {
          var c__4191__auto__ = cljs.core.chunk_first.call(null, seq__10945__$1);
          var G__10953 = cljs.core.chunk_rest.call(null, seq__10945__$1);
          var G__10954 = c__4191__auto__;
          var G__10955 = cljs.core.count.call(null, c__4191__auto__);
          var G__10956 = 0;
          seq__10945 = G__10953;
          chunk__10946 = G__10954;
          count__10947 = G__10955;
          i__10948 = G__10956;
          continue;
        } else {
          var f = cljs.core.first.call(null, seq__10945__$1);
          f.call(null);
          var G__10957 = cljs.core.next.call(null, seq__10945__$1);
          var G__10958 = null;
          var G__10959 = 0;
          var G__10960 = 0;
          seq__10945 = G__10957;
          chunk__10946 = G__10958;
          count__10947 = G__10959;
          i__10948 = G__10960;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_QMARK_ = function valid_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "init-state", "init-state", 4479067398), null, new cljs.core.Keyword(null, "ctor", "ctor", 1016968582), null, new cljs.core.Keyword(null, "state", "state", 1123661827), null, new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), null, new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514), null, new cljs.core.Keyword(null, 
  "key", "key", 1014010321), null, new cljs.core.Keyword(null, "instrument", "instrument", 2409387865), null, new cljs.core.Keyword(null, "shared", "shared", 4405305303), null, new cljs.core.Keyword(null, "opts", "opts", 1017322386), null, new cljs.core.Keyword(null, "fn", "fn", 1013907514), null], null), null), cljs.core.keys.call(null, m));
};
om.core.id = function id(owner) {
  return owner.state["__om_id"];
};
om.core.build_STAR_ = function() {
  var build_STAR_ = null;
  var build_STAR___2 = function(f, cursor) {
    return build_STAR_.call(null, f, cursor, null);
  };
  var build_STAR___3 = function(f, cursor, m) {
    if (om.core.valid_QMARK_.call(null, m)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid?", "valid?", 1830611324, null), new cljs.core.Symbol(null, "m", "m", -1640531418, null))))].join(""));
    }
    if (m == null) {
      var shared = function() {
        var or__3443__auto__ = (new cljs.core.Keyword(null, "shared", "shared", 4405305303)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = function() {
        var or__3443__auto__ = (new cljs.core.Keyword(null, "ctor", "ctor", 1016968582)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return om.core.pure;
        }
      }();
      var pure__5003__auto__ = ctor.call(null, {"children":function(this$) {
        var _STAR_read_enabled_STAR_10965 = om.core._STAR_read_enabled_STAR_;
        try {
          om.core._STAR_read_enabled_STAR_ = true;
          return f.call(null, cursor, this$);
        } finally {
          om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10965;
        }
      }, "__om_instrument":om.core._STAR_instrument_STAR_, "__om_app_state":om.core._STAR_state_STAR_, "__om_shared":shared, "__om_cursor":cursor});
      pure__5003__auto__.constructor = goog.getUid(f);
      return pure__5003__auto__;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var map__10966 = m;
        var map__10966__$1 = cljs.core.seq_QMARK_.call(null, map__10966) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10966) : map__10966;
        var opts = cljs.core.get.call(null, map__10966__$1, new cljs.core.Keyword(null, "opts", "opts", 1017322386));
        var init_state = cljs.core.get.call(null, map__10966__$1, new cljs.core.Keyword(null, "init-state", "init-state", 4479067398));
        var state = cljs.core.get.call(null, map__10966__$1, new cljs.core.Keyword(null, "state", "state", 1123661827));
        var key = cljs.core.get.call(null, map__10966__$1, new cljs.core.Keyword(null, "key", "key", 1014010321));
        var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", 1013907514));
        var cursor_SINGLEQUOTE_ = !(dataf == null) ? function() {
          var temp__4090__auto__ = (new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514)).cljs$core$IFn$_invoke$arity$1(m);
          if (cljs.core.truth_(temp__4090__auto__)) {
            var i = temp__4090__auto__;
            return dataf.call(null, cursor, i);
          } else {
            return dataf.call(null, cursor);
          }
        }() : cursor;
        var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 4184082563));
        var shared = function() {
          var or__3443__auto__ = (new cljs.core.Keyword(null, "shared", "shared", 4405305303)).cljs$core$IFn$_invoke$arity$1(m);
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
          }
        }();
        var ctor = function() {
          var or__3443__auto__ = (new cljs.core.Keyword(null, "ctor", "ctor", 1016968582)).cljs$core$IFn$_invoke$arity$1(m);
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return om.core.pure;
          }
        }();
        var pure__5003__auto__ = ctor.call(null, {"__om_cursor":cursor_SINGLEQUOTE_, "__om_state":state, "__om_shared":shared, "__om_app_state":om.core._STAR_state_STAR_, "__om_instrument":om.core._STAR_instrument_STAR_, "key":rkey, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514)).cljs$core$IFn$_invoke$arity$1(m), "__om_init_state":init_state, "children":opts == null ? function(this$) {
          var _STAR_read_enabled_STAR_10967 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            return f.call(null, cursor_SINGLEQUOTE_, this$);
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10967;
          }
        } : function(this$) {
          var _STAR_read_enabled_STAR_10968 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            return f.call(null, cursor_SINGLEQUOTE_, this$, opts);
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10968;
          }
        }});
        pure__5003__auto__.constructor = goog.getUid(f);
        return pure__5003__auto__;
      } else {
        return null;
      }
    }
  };
  build_STAR_ = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build_STAR___2.call(this, f, cursor);
      case 3:
        return build_STAR___3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_STAR_.cljs$core$IFn$_invoke$arity$2 = build_STAR___2;
  build_STAR_.cljs$core$IFn$_invoke$arity$3 = build_STAR___3;
  return build_STAR_;
}();
om.core.build = function() {
  var build = null;
  var build__2 = function(f, cursor) {
    return build.call(null, f, cursor, null);
  };
  var build__3 = function(f, cursor, m) {
    if (!(om.core._STAR_instrument_STAR_ == null)) {
      var ret = function() {
        var _STAR_read_enabled_STAR_10970 = om.core._STAR_read_enabled_STAR_;
        try {
          om.core._STAR_read_enabled_STAR_ = true;
          return om.core._STAR_instrument_STAR_.call(null, f, cursor, m);
        } finally {
          om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10970;
        }
      }();
      if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "pass", "om.core/pass", 2667619603))) {
        return om.core.build_STAR_.call(null, f, cursor, m);
      } else {
        return ret;
      }
    } else {
      return om.core.build_STAR_.call(null, f, cursor, m);
    }
  };
  build = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build__2.call(this, f, cursor);
      case 3:
        return build__3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build.cljs$core$IFn$_invoke$arity$2 = build__2;
  build.cljs$core$IFn$_invoke$arity$3 = build__3;
  return build;
}();
om.core.build_all = function() {
  var build_all = null;
  var build_all__2 = function(f, xs) {
    return build_all.call(null, f, xs, null);
  };
  var build_all__3 = function(f, xs, m) {
    return cljs.core.map.call(null, function(x, i) {
      return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514), i));
    }, xs, cljs.core.range.call(null));
  };
  build_all = function(f, xs, m) {
    switch(arguments.length) {
      case 2:
        return build_all__2.call(this, f, xs);
      case 3:
        return build_all__3.call(this, f, xs, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_all.cljs$core$IFn$_invoke$arity$2 = build_all__2;
  build_all.cljs$core$IFn$_invoke$arity$3 = build_all__3;
  return build_all;
}();
om.core.setup = function setup(state, key, tx_listen) {
  if (function() {
    var G__10979 = state;
    if (G__10979) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto__ = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return G__10979.om$core$INotify$;
        }
      }())) {
        return true;
      } else {
        if (!G__10979.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__10979);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__10979);
    }
  }()) {
  } else {
    var listeners_10987 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var render_queue_10988 = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
    var x10980_10989 = state;
    x10980_10989.om$core$IRenderQueue$ = true;
    x10980_10989.om$core$IRenderQueue$_get_queue$arity$1 = function(this$) {
      var this$__$1 = this;
      return cljs.core.deref.call(null, render_queue_10988);
    };
    x10980_10989.om$core$IRenderQueue$_queue_render_BANG_$arity$2 = function(this$, c) {
      var this$__$1 = this;
      if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, render_queue_10988), c)) {
        return null;
      } else {
        cljs.core.swap_BANG_.call(null, render_queue_10988, cljs.core.conj, c);
        return cljs.core.swap_BANG_.call(null, this$__$1, cljs.core.identity);
      }
    };
    x10980_10989.om$core$IRenderQueue$_empty_queue_BANG_$arity$1 = function(this$) {
      var this$__$1 = this;
      return cljs.core.swap_BANG_.call(null, render_queue_10988, cljs.core.empty);
    };
    x10980_10989.om$core$INotify$ = true;
    x10980_10989.om$core$INotify$_listen_BANG_$arity$3 = function(this$, key__$1, tx_listen__$1) {
      var this$__$1 = this;
      if (tx_listen__$1 == null) {
      } else {
        cljs.core.swap_BANG_.call(null, listeners_10987, cljs.core.assoc, key__$1, tx_listen__$1);
      }
      return this$__$1;
    };
    x10980_10989.om$core$INotify$_unlisten_BANG_$arity$2 = function(this$, key__$1) {
      var this$__$1 = this;
      cljs.core.swap_BANG_.call(null, listeners_10987, cljs.core.dissoc, key__$1);
      return this$__$1;
    };
    x10980_10989.om$core$INotify$_notify_BANG_$arity$3 = function(this$, tx_data, root_cursor) {
      var this$__$1 = this;
      if (tx_listen == null) {
      } else {
        var seq__10981_10990 = cljs.core.seq.call(null, cljs.core.deref.call(null, listeners_10987));
        var chunk__10982_10991 = null;
        var count__10983_10992 = 0;
        var i__10984_10993 = 0;
        while (true) {
          if (i__10984_10993 < count__10983_10992) {
            var vec__10985_10994 = cljs.core._nth.call(null, chunk__10982_10991, i__10984_10993);
            var __10995 = cljs.core.nth.call(null, vec__10985_10994, 0, null);
            var f_10996 = cljs.core.nth.call(null, vec__10985_10994, 1, null);
            f_10996.call(null, tx_data, root_cursor);
            var G__10997 = seq__10981_10990;
            var G__10998 = chunk__10982_10991;
            var G__10999 = count__10983_10992;
            var G__11000 = i__10984_10993 + 1;
            seq__10981_10990 = G__10997;
            chunk__10982_10991 = G__10998;
            count__10983_10992 = G__10999;
            i__10984_10993 = G__11000;
            continue;
          } else {
            var temp__4092__auto___11001 = cljs.core.seq.call(null, seq__10981_10990);
            if (temp__4092__auto___11001) {
              var seq__10981_11002__$1 = temp__4092__auto___11001;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__10981_11002__$1)) {
                var c__4191__auto___11003 = cljs.core.chunk_first.call(null, seq__10981_11002__$1);
                var G__11004 = cljs.core.chunk_rest.call(null, seq__10981_11002__$1);
                var G__11005 = c__4191__auto___11003;
                var G__11006 = cljs.core.count.call(null, c__4191__auto___11003);
                var G__11007 = 0;
                seq__10981_10990 = G__11004;
                chunk__10982_10991 = G__11005;
                count__10983_10992 = G__11006;
                i__10984_10993 = G__11007;
                continue;
              } else {
                var vec__10986_11008 = cljs.core.first.call(null, seq__10981_11002__$1);
                var __11009 = cljs.core.nth.call(null, vec__10986_11008, 0, null);
                var f_11010 = cljs.core.nth.call(null, vec__10986_11008, 1, null);
                f_11010.call(null, tx_data, root_cursor);
                var G__11011 = cljs.core.next.call(null, seq__10981_11002__$1);
                var G__11012 = null;
                var G__11013 = 0;
                var G__11014 = 0;
                seq__10981_10990 = G__11011;
                chunk__10982_10991 = G__11012;
                count__10983_10992 = G__11013;
                i__10984_10993 = G__11014;
                continue;
              }
            } else {
            }
          }
          break;
        }
      }
      return this$__$1;
    };
  }
  return om.core._listen_BANG_.call(null, state, key, tx_listen);
};
om.core.tear_down = function tear_down(state, key) {
  return om.core._unlisten_BANG_.call(null, state, key);
};
om.core.root = function root(f, value, p__11015) {
  var map__11030 = p__11015;
  var map__11030__$1 = cljs.core.seq_QMARK_.call(null, map__11030) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11030) : map__11030;
  var options = map__11030__$1;
  var instrument = cljs.core.get.call(null, map__11030__$1, new cljs.core.Keyword(null, "instrument", "instrument", 2409387865));
  var path = cljs.core.get.call(null, map__11030__$1, new cljs.core.Keyword(null, "path", "path", 1017337751));
  var tx_listen = cljs.core.get.call(null, map__11030__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 666878114));
  var target = cljs.core.get.call(null, map__11030__$1, new cljs.core.Keyword(null, "target", "target", 4427965699));
  if (!(target == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("No target specified to om.core/root"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "target", "target", 1773529930, null)))))].join(""));
  }
  var roots_SINGLEQUOTE__11044 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__11044, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__11044, target).call(null);
  } else {
  }
  var watch_key = cljs.core.gensym.call(null);
  var state = function() {
    var G__11031 = value;
    if (G__11031) {
      var bit__4093__auto__ = G__11031.cljs$lang$protocol_mask$partition1$ & 16384;
      if (bit__4093__auto__ || G__11031.cljs$core$IAtom$) {
        return true;
      } else {
        if (!G__11031.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__11031);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__11031);
    }
  }() ? value : cljs.core.atom.call(null, value);
  var state__$1 = om.core.setup.call(null, state, watch_key, tx_listen);
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 4427965699), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 666878114), new cljs.core.Keyword(null, "path", "path", 1017337751));
  var rootf = function(watch_key, state, state__$1, m) {
    return function rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path);
      om.dom.render.call(null, function() {
        var _STAR_instrument_STAR_11038 = om.core._STAR_instrument_STAR_;
        var _STAR_state_STAR_11039 = om.core._STAR_state_STAR_;
        try {
          om.core._STAR_instrument_STAR_ = instrument;
          om.core._STAR_state_STAR_ = state__$1;
          return om.core.build.call(null, f, cursor, m);
        } finally {
          om.core._STAR_state_STAR_ = _STAR_state_STAR_11039;
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_11038;
        }
      }(), target);
      var queue = om.core._get_queue.call(null, state__$1);
      if (cljs.core.empty_QMARK_.call(null, queue)) {
        return null;
      } else {
        var seq__11040_11045 = cljs.core.seq.call(null, queue);
        var chunk__11041_11046 = null;
        var count__11042_11047 = 0;
        var i__11043_11048 = 0;
        while (true) {
          if (i__11043_11048 < count__11042_11047) {
            var c_11049 = cljs.core._nth.call(null, chunk__11041_11046, i__11043_11048);
            c_11049.forceUpdate();
            var G__11050 = seq__11040_11045;
            var G__11051 = chunk__11041_11046;
            var G__11052 = count__11042_11047;
            var G__11053 = i__11043_11048 + 1;
            seq__11040_11045 = G__11050;
            chunk__11041_11046 = G__11051;
            count__11042_11047 = G__11052;
            i__11043_11048 = G__11053;
            continue;
          } else {
            var temp__4092__auto___11054 = cljs.core.seq.call(null, seq__11040_11045);
            if (temp__4092__auto___11054) {
              var seq__11040_11055__$1 = temp__4092__auto___11054;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__11040_11055__$1)) {
                var c__4191__auto___11056 = cljs.core.chunk_first.call(null, seq__11040_11055__$1);
                var G__11057 = cljs.core.chunk_rest.call(null, seq__11040_11055__$1);
                var G__11058 = c__4191__auto___11056;
                var G__11059 = cljs.core.count.call(null, c__4191__auto___11056);
                var G__11060 = 0;
                seq__11040_11045 = G__11057;
                chunk__11041_11046 = G__11058;
                count__11042_11047 = G__11059;
                i__11043_11048 = G__11060;
                continue;
              } else {
                var c_11061 = cljs.core.first.call(null, seq__11040_11055__$1);
                c_11061.forceUpdate();
                var G__11062 = cljs.core.next.call(null, seq__11040_11055__$1);
                var G__11063 = null;
                var G__11064 = 0;
                var G__11065 = 0;
                seq__11040_11045 = G__11062;
                chunk__11041_11046 = G__11063;
                count__11042_11047 = G__11064;
                i__11043_11048 = G__11065;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return om.core._empty_queue_BANG_.call(null, state__$1);
      }
    };
  }(watch_key, state, state__$1, m);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(_, ___$1, ___$2, ___$3) {
    if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
    } else {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
    }
    if (cljs.core.truth_(om.core.refresh_queued)) {
      return null;
    } else {
      om.core.refresh_queued = true;
      if (typeof requestAnimationFrame !== "undefined") {
        return requestAnimationFrame(om.core.render_all);
      } else {
        return setTimeout(om.core.render_all, 16);
      }
    }
  });
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function() {
    cljs.core.remove_watch.call(null, state__$1, watch_key);
    om.core.tear_down.call(null, state__$1, watch_key);
    cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
    return React.unmountComponentAtNode(target);
  });
  return rootf.call(null);
};
om.core.transact_BANG_ = function() {
  var transact_BANG_ = null;
  var transact_BANG___2 = function(cursor, f) {
    return transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
  };
  var transact_BANG___3 = function(cursor, korks, f) {
    return transact_BANG_.call(null, cursor, korks, f, null);
  };
  var transact_BANG___4 = function(cursor, korks, f, tag) {
    var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.Keyword(null, "else", "else", 1017020587) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null) : null;
    return om.core._transact_BANG_.call(null, cursor, korks__$1, f, tag);
  };
  transact_BANG_ = function(cursor, korks, f, tag) {
    switch(arguments.length) {
      case 2:
        return transact_BANG___2.call(this, cursor, korks);
      case 3:
        return transact_BANG___3.call(this, cursor, korks, f);
      case 4:
        return transact_BANG___4.call(this, cursor, korks, f, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transact_BANG_.cljs$core$IFn$_invoke$arity$2 = transact_BANG___2;
  transact_BANG_.cljs$core$IFn$_invoke$arity$3 = transact_BANG___3;
  transact_BANG_.cljs$core$IFn$_invoke$arity$4 = transact_BANG___4;
  return transact_BANG_;
}();
om.core.update_BANG_ = function() {
  var update_BANG_ = null;
  var update_BANG___2 = function(cursor, v) {
    return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
      return v;
    }, null);
  };
  var update_BANG___3 = function(cursor, korks, v) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, null);
  };
  var update_BANG___4 = function(cursor, korks, v, tag) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, tag);
  };
  update_BANG_ = function(cursor, korks, v, tag) {
    switch(arguments.length) {
      case 2:
        return update_BANG___2.call(this, cursor, korks);
      case 3:
        return update_BANG___3.call(this, cursor, korks, v);
      case 4:
        return update_BANG___4.call(this, cursor, korks, v, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_BANG_.cljs$core$IFn$_invoke$arity$2 = update_BANG___2;
  update_BANG_.cljs$core$IFn$_invoke$arity$3 = update_BANG___3;
  update_BANG_.cljs$core$IFn$_invoke$arity$4 = update_BANG___4;
  return update_BANG_;
}();
om.core.get_node = function() {
  var get_node = null;
  var get_node__1 = function(owner) {
    return owner.getDOMNode();
  };
  var get_node__2 = function(owner, name) {
    var temp__4092__auto__ = owner.refs;
    if (cljs.core.truth_(temp__4092__auto__)) {
      var refs = temp__4092__auto__;
      return refs[name].getDOMNode();
    } else {
      return null;
    }
  };
  get_node = function(owner, name) {
    switch(arguments.length) {
      case 1:
        return get_node__1.call(this, owner);
      case 2:
        return get_node__2.call(this, owner, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_node.cljs$core$IFn$_invoke$arity$1 = get_node__1;
  get_node.cljs$core$IFn$_invoke$arity$2 = get_node__2;
  return get_node;
}();
om.core.set_state_BANG_ = function() {
  var set_state_BANG_ = null;
  var set_state_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v);
  };
  var set_state_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v);
  };
  set_state_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_BANG___2;
  set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_BANG___3;
  return set_state_BANG_;
}();
om.core.update_state_BANG_ = function() {
  var update_state_BANG_ = null;
  var update_state_BANG___2 = function(owner, f) {
    return om.core.set_state_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_BANG___2;
  update_state_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_BANG___3;
  return update_state_BANG_;
}();
om.core.refresh_BANG_ = function refresh_BANG_(owner) {
  return om.core.update_state_BANG_.call(null, owner, cljs.core.identity);
};
om.core.get_render_state = function() {
  var get_render_state = null;
  var get_render_state__1 = function(owner) {
    return om.core._get_render_state.call(null, owner);
  };
  var get_render_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_render_state.call(null, owner, ks);
  };
  get_render_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_render_state__1.call(this, owner);
      case 2:
        return get_render_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_render_state.cljs$core$IFn$_invoke$arity$1 = get_render_state__1;
  get_render_state.cljs$core$IFn$_invoke$arity$2 = get_render_state__2;
  return get_render_state;
}();
om.core.rendering_QMARK_ = function rendering_QMARK_() {
  return om.core._STAR_read_enabled_STAR_ === true;
};
goog.provide("floor16.datum");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("om.core");
goog.require("om.core");
goog.require("floor16.xhr");
goog.require("floor16.xhr");
goog.require("cljs.core.async");
floor16.datum.system = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "app", "app", 1014001043), null], null));
floor16.datum.init_data = function init_data(p__78813) {
  var map__78815 = p__78813;
  var map__78815__$1 = cljs.core.seq_QMARK_.call(null, map__78815) ? cljs.core.apply.call(null, cljs.core.hash_map, map__78815) : map__78815;
  var conf = map__78815__$1;
  var local_QMARK_ = cljs.core.get.call(null, map__78815__$1, new cljs.core.Keyword(null, "local?", "local?", 4211409318));
  var dict_path = cljs.core.get.call(null, map__78815__$1, new cljs.core.Keyword(null, "dict-path", "dict-path", 4298067790));
  var app_state = cljs.core.get.call(null, map__78815__$1, new cljs.core.Keyword(null, "app-state", "app-state", 1424976215));
  return cljs.core.swap_BANG_.call(null, floor16.datum.system, cljs.core.merge, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "app", "app", 1014001043), app_state, new cljs.core.Keyword(null, "dict-path", "dict-path", 4298067790), function() {
    var or__3443__auto__ = dict_path;
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "dicts", "dicts", 1109483247)], null);
    }
  }(), new cljs.core.Keyword(null, "local?", "local?", 4211409318), local_QMARK_], null));
};
floor16.datum.app = function app() {
  return(new cljs.core.Keyword(null, "app", "app", 1014001043)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.datum.system));
};
floor16.datum.dict_path = function dict_path() {
  return(new cljs.core.Keyword(null, "dict-path", "dict-path", 4298067790)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.datum.system));
};
floor16.datum.path_to = function() {
  var path_to__delegate = function(k, p__78816) {
    var vec__78819 = p__78816;
    var parent = cljs.core.nth.call(null, vec__78819, 0, null);
    var temp__4090__auto__ = parent;
    if (cljs.core.truth_(temp__4090__auto__)) {
      var vec__78820 = temp__4090__auto__;
      var pk = cljs.core.nth.call(null, vec__78820, 0, null);
      var pv = cljs.core.nth.call(null, vec__78820, 1, null);
      return cljs.core.conj.call(null, floor16.datum.dict_path.call(null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [pk, pv, k], null));
    } else {
      return cljs.core.conj.call(null, floor16.datum.dict_path.call(null), k);
    }
  };
  var path_to = function(k, var_args) {
    var p__78816 = null;
    if (arguments.length > 1) {
      p__78816 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return path_to__delegate.call(this, k, p__78816);
  };
  path_to.cljs$lang$maxFixedArity = 1;
  path_to.cljs$lang$applyTo = function(arglist__78821) {
    var k = cljs.core.first(arglist__78821);
    var p__78816 = cljs.core.rest(arglist__78821);
    return path_to__delegate(k, p__78816);
  };
  path_to.cljs$core$IFn$_invoke$arity$variadic = path_to__delegate;
  return path_to;
}();
floor16.datum.IIdentity = function() {
  var obj78823 = {};
  return obj78823;
}();
floor16.datum.dkey = function dkey(this$) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.floor16$datum$IIdentity$dkey$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.floor16$datum$IIdentity$dkey$arity$1(this$);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = floor16.datum.dkey[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = floor16.datum.dkey["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IIdentity.dkey", this$);
        }
      }
    }().call(null, this$);
  }
};
floor16.datum.get_by_key = function get_by_key(this$, k) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.floor16$datum$IIdentity$get_by_key$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.floor16$datum$IIdentity$get_by_key$arity$2(this$, k);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = floor16.datum.get_by_key[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = floor16.datum.get_by_key["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IIdentity.get-by-key", this$);
        }
      }
    }().call(null, this$, k);
  }
};
floor16.datum.IHasName = function() {
  var obj78825 = {};
  return obj78825;
}();
floor16.datum.dname = function dname(this$) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.floor16$datum$IHasName$dname$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.floor16$datum$IHasName$dname$arity$1(this$);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = floor16.datum.dname[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = floor16.datum.dname["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHasName.dname", this$);
        }
      }
    }().call(null, this$);
  }
};
floor16.datum.name_by_key = function name_by_key(this$, k) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.floor16$datum$IHasName$name_by_key$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.floor16$datum$IHasName$name_by_key$arity$2(this$, k);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = floor16.datum.name_by_key[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = floor16.datum.name_by_key["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHasName.name-by-key", this$);
        }
      }
    }().call(null, this$, k);
  }
};
floor16.datum.IDictionary = function() {
  var obj78827 = {};
  return obj78827;
}();
floor16.datum.load_all = function() {
  var load_all = null;
  var load_all__2 = function(this$, cb) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.floor16$datum$IDictionary$load_all$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.floor16$datum$IDictionary$load_all$arity$2(this$, cb);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = floor16.datum.load_all[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = floor16.datum.load_all["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IDictionary.load-all", this$);
          }
        }
      }().call(null, this$, cb);
    }
  };
  var load_all__3 = function(this$, owner, k) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.floor16$datum$IDictionary$load_all$arity$3;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.floor16$datum$IDictionary$load_all$arity$3(this$, owner, k);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = floor16.datum.load_all[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = floor16.datum.load_all["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IDictionary.load-all", this$);
          }
        }
      }().call(null, this$, owner, k);
    }
  };
  load_all = function(this$, owner, k) {
    switch(arguments.length) {
      case 2:
        return load_all__2.call(this, this$, owner);
      case 3:
        return load_all__3.call(this, this$, owner, k);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  load_all.cljs$core$IFn$_invoke$arity$2 = load_all__2;
  load_all.cljs$core$IFn$_invoke$arity$3 = load_all__3;
  return load_all;
}();
floor16.datum.IResource = function() {
  var obj78829 = {};
  return obj78829;
}();
floor16.datum.load_by_query = function() {
  var load_by_query = null;
  var load_by_query__2 = function(this$, context) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.floor16$datum$IResource$load_by_query$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.floor16$datum$IResource$load_by_query$arity$2(this$, context);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = floor16.datum.load_by_query[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = floor16.datum.load_by_query["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IResource.load-by-query", this$);
          }
        }
      }().call(null, this$, context);
    }
  };
  var load_by_query__3 = function(this$, q, cursor) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.floor16$datum$IResource$load_by_query$arity$3;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.floor16$datum$IResource$load_by_query$arity$3(this$, q, cursor);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = floor16.datum.load_by_query[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = floor16.datum.load_by_query["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IResource.load-by-query", this$);
          }
        }
      }().call(null, this$, q, cursor);
    }
  };
  var load_by_query__4 = function(this$, q, cursor, korks) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.floor16$datum$IResource$load_by_query$arity$4;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.floor16$datum$IResource$load_by_query$arity$4(this$, q, cursor, korks);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = floor16.datum.load_by_query[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = floor16.datum.load_by_query["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IResource.load-by-query", this$);
          }
        }
      }().call(null, this$, q, cursor, korks);
    }
  };
  load_by_query = function(this$, q, cursor, korks) {
    switch(arguments.length) {
      case 2:
        return load_by_query__2.call(this, this$, q);
      case 3:
        return load_by_query__3.call(this, this$, q, cursor);
      case 4:
        return load_by_query__4.call(this, this$, q, cursor, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  load_by_query.cljs$core$IFn$_invoke$arity$2 = load_by_query__2;
  load_by_query.cljs$core$IFn$_invoke$arity$3 = load_by_query__3;
  load_by_query.cljs$core$IFn$_invoke$arity$4 = load_by_query__4;
  return load_by_query;
}();
floor16.datum.load_by_key = function load_by_key(this$, k, context) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.floor16$datum$IResource$load_by_key$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.floor16$datum$IResource$load_by_key$arity$3(this$, k, context);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = floor16.datum.load_by_key[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = floor16.datum.load_by_key["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IResource.load-by-key", this$);
        }
      }
    }().call(null, this$, k, context);
  }
};
floor16.datum.api_url = function api_url(path) {
  return[cljs.core.str("/api"), cljs.core.str(path)].join("");
};
floor16.datum.api_get = function() {
  var api_get__delegate = function(res_key, cb, p__78831) {
    var vec__78833 = p__78831;
    var param = cljs.core.nth.call(null, vec__78833, 0, null);
    var url = floor16.datum.api_url.call(null, [cljs.core.str("/"), cljs.core.str(cljs.core.name.call(null, res_key)), cljs.core.str(cljs.core.truth_(param) ? [cljs.core.str("/"), cljs.core.str(typeof param === "string" ? param : cljs.core.pr_str.call(null, param))].join("") : null)].join(""));
    if (cljs.core.truth_((new cljs.core.Keyword(null, "local?", "local?", 4211409318)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.datum.system)))) {
      return cb.call(null, cljs.core.PersistentArrayMap.EMPTY);
    } else {
      return floor16.xhr.cb_request.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 4231316563), new cljs.core.Keyword(null, "get", "get", 1014006472), new cljs.core.Keyword(null, "url", "url", 1014020321), url], null), function(p1__78830_SHARP_) {
        return cb.call(null, (new cljs.core.Keyword(null, "body", "body", 1016933652)).cljs$core$IFn$_invoke$arity$1(p1__78830_SHARP_));
      });
    }
  };
  var api_get = function(res_key, cb, var_args) {
    var p__78831 = null;
    if (arguments.length > 2) {
      p__78831 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return api_get__delegate.call(this, res_key, cb, p__78831);
  };
  api_get.cljs$lang$maxFixedArity = 2;
  api_get.cljs$lang$applyTo = function(arglist__78834) {
    var res_key = cljs.core.first(arglist__78834);
    arglist__78834 = cljs.core.next(arglist__78834);
    var cb = cljs.core.first(arglist__78834);
    var p__78831 = cljs.core.rest(arglist__78834);
    return api_get__delegate(res_key, cb, p__78831);
  };
  api_get.cljs$core$IFn$_invoke$arity$variadic = api_get__delegate;
  return api_get;
}();
floor16.datum.get_dict_url = function() {
  var get_dict_url__delegate = function(dict_key, p__78835) {
    var vec__78838 = p__78835;
    var vec__78839 = cljs.core.nth.call(null, vec__78838, 0, null);
    var pk = cljs.core.nth.call(null, vec__78839, 0, null);
    var pv = cljs.core.nth.call(null, vec__78839, 1, null);
    return floor16.datum.api_url.call(null, [cljs.core.str(cljs.core.truth_(pk) ? [cljs.core.str("/"), cljs.core.str(cljs.core.name.call(null, pk)), cljs.core.str("/"), cljs.core.str(pv)].join("") : null), cljs.core.str("/"), cljs.core.str(cljs.core.name.call(null, dict_key))].join(""));
  };
  var get_dict_url = function(dict_key, var_args) {
    var p__78835 = null;
    if (arguments.length > 1) {
      p__78835 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return get_dict_url__delegate.call(this, dict_key, p__78835);
  };
  get_dict_url.cljs$lang$maxFixedArity = 1;
  get_dict_url.cljs$lang$applyTo = function(arglist__78840) {
    var dict_key = cljs.core.first(arglist__78840);
    var p__78835 = cljs.core.rest(arglist__78840);
    return get_dict_url__delegate(dict_key, p__78835);
  };
  get_dict_url.cljs$core$IFn$_invoke$arity$variadic = get_dict_url__delegate;
  return get_dict_url;
}();
floor16.datum.request_dict = function() {
  var request_dict__delegate = function(dict_key, parent, cb, p__78842) {
    var vec__78844 = p__78842;
    var no_cache_QMARK_ = cljs.core.nth.call(null, vec__78844, 0, null);
    var abs_path = floor16.datum.path_to.call(null, dict_key, parent);
    var url = floor16.datum.get_dict_url.call(null, dict_key, parent);
    if (cljs.core.truth_(function() {
      var and__3431__auto__ = parent;
      if (cljs.core.truth_(and__3431__auto__)) {
        return cljs.core.last.call(null, parent) == null;
      } else {
        return and__3431__auto__;
      }
    }())) {
      return cljs.core.PersistentVector.EMPTY;
    } else {
      if (cljs.core.truth_(no_cache_QMARK_)) {
        return floor16.xhr.cb_request.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 4231316563), new cljs.core.Keyword(null, "get", "get", 1014006472), new cljs.core.Keyword(null, "url", "url", 1014020321), url], null), function(p1__78841_SHARP_) {
          return cb.call(null, (new cljs.core.Keyword(null, "body", "body", 1016933652)).cljs$core$IFn$_invoke$arity$1(p1__78841_SHARP_));
        });
      } else {
        var data = cljs.core.get_in.call(null, cljs.core.deref.call(null, floor16.datum.app.call(null)), abs_path);
        if (cljs.core.empty_QMARK_.call(null, data)) {
          return floor16.xhr.cb_request.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 4231316563), new cljs.core.Keyword(null, "get", "get", 1014006472), new cljs.core.Keyword(null, "url", "url", 1014020321), url], null), function(resp) {
            return cb.call(null, cljs.core.get_in.call(null, cljs.core.swap_BANG_.call(null, floor16.datum.app.call(null), cljs.core.assoc_in, abs_path, (new cljs.core.Keyword(null, "body", "body", 1016933652)).cljs$core$IFn$_invoke$arity$1(resp)), abs_path));
          });
        } else {
          return cb.call(null, data);
        }
      }
    }
  };
  var request_dict = function(dict_key, parent, cb, var_args) {
    var p__78842 = null;
    if (arguments.length > 3) {
      p__78842 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return request_dict__delegate.call(this, dict_key, parent, cb, p__78842);
  };
  request_dict.cljs$lang$maxFixedArity = 3;
  request_dict.cljs$lang$applyTo = function(arglist__78845) {
    var dict_key = cljs.core.first(arglist__78845);
    arglist__78845 = cljs.core.next(arglist__78845);
    var parent = cljs.core.first(arglist__78845);
    arglist__78845 = cljs.core.next(arglist__78845);
    var cb = cljs.core.first(arglist__78845);
    var p__78842 = cljs.core.rest(arglist__78845);
    return request_dict__delegate(dict_key, parent, cb, p__78842);
  };
  request_dict.cljs$core$IFn$_invoke$arity$variadic = request_dict__delegate;
  return request_dict;
}();
floor16.datum.first_for = function first_for(kw, v, items) {
  return cljs.core.first.call(null, cljs.core.filter.call(null, function(p1__78846_SHARP_) {
    return cljs.core._EQ_.call(null, kw.call(null, p1__78846_SHARP_), v);
  }, items));
};
floor16.datum.dict_cache = function dict_cache(abs_path) {
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, floor16.datum.app.call(null)), abs_path);
};
floor16.datum.dict = function() {
  var dict__delegate = function(dict_key, p__78849) {
    var vec__78855 = p__78849;
    var map__78856 = cljs.core.nth.call(null, vec__78855, 0, null);
    var map__78856__$1 = cljs.core.seq_QMARK_.call(null, map__78856) ? cljs.core.apply.call(null, cljs.core.hash_map, map__78856) : map__78856;
    var parent = cljs.core.get.call(null, map__78856__$1, new cljs.core.Keyword(null, "parent", "parent", 4313447452));
    var no_cache_QMARK_ = cljs.core.get.call(null, map__78856__$1, new cljs.core.Keyword(null, "no-cache?", "no-cache?", 4150707707));
    var dc = cljs.core.get.call(null, map__78856__$1, new cljs.core.Keyword(null, "dc", "dc", 1013907441));
    var dn = cljs.core.get.call(null, map__78856__$1, new cljs.core.Keyword(null, "dn", "dn", 1013907452));
    var dk = cljs.core.get.call(null, map__78856__$1, new cljs.core.Keyword(null, "dk", "dk", 1013907449));
    var abs_path = floor16.datum.path_to.call(null, dict_key, parent);
    var ch = cljs.core.async.chan.call(null);
    var dk__$1 = function() {
      var or__3443__auto__ = dk;
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return new cljs.core.Keyword(null, "id", "id", 1013907597);
      }
    }();
    var dn__$1 = function() {
      var or__3443__auto__ = dn;
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return new cljs.core.Keyword(null, "name", "name", 1017277949);
      }
    }();
    var dc__$1 = function() {
      var or__3443__auto__ = dc;
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return new cljs.core.Keyword(null, "mnemo", "mnemo", 1117945592);
      }
    }();
    if (typeof floor16.datum.t78857 !== "undefined") {
    } else {
      floor16.datum.t78857 = function(abs_path, dict_key, dc, parent, dict, dn, no_cache_QMARK_, vec__78855, ch, p__78849, map__78856, dk, meta78858) {
        this.abs_path = abs_path;
        this.dict_key = dict_key;
        this.dc = dc;
        this.parent = parent;
        this.dict = dict;
        this.dn = dn;
        this.no_cache_QMARK_ = no_cache_QMARK_;
        this.vec__78855 = vec__78855;
        this.ch = ch;
        this.p__78849 = p__78849;
        this.map__78856 = map__78856;
        this.dk = dk;
        this.meta78858 = meta78858;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      floor16.datum.t78857.cljs$lang$type = true;
      floor16.datum.t78857.cljs$lang$ctorStr = "floor16.datum/t78857";
      floor16.datum.t78857.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
        return cljs.core._write.call(null, writer__4011__auto__, "floor16.datum/t78857");
      };
      floor16.datum.t78857.prototype.floor16$datum$IDictionary$ = true;
      floor16.datum.t78857.prototype.floor16$datum$IDictionary$load_all$arity$2 = function(this$, cb) {
        var self__ = this;
        var this$__$1 = this;
        return floor16.datum.request_dict.call(null, self__.dict_key, self__.parent, function(p1__78847_SHARP_) {
          return cb.call(null, p1__78847_SHARP_);
        }, self__.no_cache_QMARK_);
      };
      floor16.datum.t78857.prototype.floor16$datum$IDictionary$load_all$arity$3 = function(this$, owner, ok) {
        var self__ = this;
        var this$__$1 = this;
        return floor16.datum.request_dict.call(null, self__.dict_key, self__.parent, function(p1__78848_SHARP_) {
          return om.core.set_state_BANG_.call(null, owner, ok, p1__78848_SHARP_);
        }, self__.no_cache_QMARK_);
      };
      floor16.datum.t78857.prototype.floor16$datum$IHasName$ = true;
      floor16.datum.t78857.prototype.floor16$datum$IHasName$dname$arity$1 = function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return self__.dn;
      };
      floor16.datum.t78857.prototype.floor16$datum$IHasName$name_by_key$arity$2 = function(this$, k) {
        var self__ = this;
        var this$__$1 = this;
        return self__.dn.call(null, floor16.datum.get_by_key.call(null, this$__$1, k));
      };
      floor16.datum.t78857.prototype.floor16$datum$IIdentity$ = true;
      floor16.datum.t78857.prototype.floor16$datum$IIdentity$dkey$arity$1 = function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return self__.dk;
      };
      floor16.datum.t78857.prototype.floor16$datum$IIdentity$get_by_key$arity$2 = function(this$, k) {
        var self__ = this;
        var this$__$1 = this;
        return floor16.datum.first_for.call(null, self__.dk, k, floor16.datum.dict_cache.call(null, self__.abs_path));
      };
      floor16.datum.t78857.prototype.cljs$core$IMeta$_meta$arity$1 = function(_78859) {
        var self__ = this;
        var _78859__$1 = this;
        return self__.meta78858;
      };
      floor16.datum.t78857.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_78859, meta78858__$1) {
        var self__ = this;
        var _78859__$1 = this;
        return new floor16.datum.t78857(self__.abs_path, self__.dict_key, self__.dc, self__.parent, self__.dict, self__.dn, self__.no_cache_QMARK_, self__.vec__78855, self__.ch, self__.p__78849, self__.map__78856, self__.dk, meta78858__$1);
      };
      floor16.datum.__GT_t78857 = function __GT_t78857(abs_path__$1, dict_key__$1, dc__$2, parent__$1, dict__$1, dn__$2, no_cache_QMARK___$1, vec__78855__$1, ch__$1, p__78849__$1, map__78856__$2, dk__$2, meta78858) {
        return new floor16.datum.t78857(abs_path__$1, dict_key__$1, dc__$2, parent__$1, dict__$1, dn__$2, no_cache_QMARK___$1, vec__78855__$1, ch__$1, p__78849__$1, map__78856__$2, dk__$2, meta78858);
      };
    }
    return new floor16.datum.t78857(abs_path, dict_key, dc__$1, parent, dict, dn__$1, no_cache_QMARK_, vec__78855, ch, p__78849, map__78856__$1, dk__$1, null);
  };
  var dict = function(dict_key, var_args) {
    var p__78849 = null;
    if (arguments.length > 1) {
      p__78849 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dict__delegate.call(this, dict_key, p__78849);
  };
  dict.cljs$lang$maxFixedArity = 1;
  dict.cljs$lang$applyTo = function(arglist__78860) {
    var dict_key = cljs.core.first(arglist__78860);
    var p__78849 = cljs.core.rest(arglist__78860);
    return dict__delegate(dict_key, p__78849);
  };
  dict.cljs$core$IFn$_invoke$arity$variadic = dict__delegate;
  return dict;
}();
floor16.datum.get_res_url = function() {
  var get_res_url__delegate = function(res_key, p__78861) {
    var vec__78865 = p__78861;
    var map__78866 = cljs.core.nth.call(null, vec__78865, 0, null);
    var map__78866__$1 = cljs.core.seq_QMARK_.call(null, map__78866) ? cljs.core.apply.call(null, cljs.core.hash_map, map__78866) : map__78866;
    var id = cljs.core.get.call(null, map__78866__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
    var q = cljs.core.get.call(null, map__78866__$1, new cljs.core.Keyword(null, "q", "q", 1013904355));
    var map__78867 = q;
    var map__78867__$1 = cljs.core.seq_QMARK_.call(null, map__78867) ? cljs.core.apply.call(null, cljs.core.hash_map, map__78867) : map__78867;
    var o_page = cljs.core.get.call(null, map__78867__$1, new cljs.core.Keyword(null, "o-page", "o-page", 4236731551));
    var q__$1 = cljs.core.dissoc.call(null, q, new cljs.core.Keyword(null, "o-page", "o-page", 4236731551));
    return floor16.datum.api_url.call(null, [cljs.core.str("/"), cljs.core.str(cljs.core.name.call(null, res_key)), cljs.core.str("/"), cljs.core.str(cljs.core.truth_(id) ? id : null), cljs.core.str(cljs.core.truth_(function() {
      var or__3443__auto__ = o_page;
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return q__$1;
      }
    }()) ? "?" : null), cljs.core.str(cljs.core.truth_(o_page) ? [cljs.core.str("page\x3d"), cljs.core.str(o_page)].join("") : null), cljs.core.str(cljs.core.truth_(q__$1) ? [cljs.core.str(cljs.core.truth_(o_page) ? "\x26" : null), cljs.core.str("q\x3d"), cljs.core.str(encodeURIComponent(cljs.core.pr_str.call(null, q__$1)))].join("") : null)].join(""));
  };
  var get_res_url = function(res_key, var_args) {
    var p__78861 = null;
    if (arguments.length > 1) {
      p__78861 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return get_res_url__delegate.call(this, res_key, p__78861);
  };
  get_res_url.cljs$lang$maxFixedArity = 1;
  get_res_url.cljs$lang$applyTo = function(arglist__78868) {
    var res_key = cljs.core.first(arglist__78868);
    var p__78861 = cljs.core.rest(arglist__78868);
    return get_res_url__delegate(res_key, p__78861);
  };
  get_res_url.cljs$core$IFn$_invoke$arity$variadic = get_res_url__delegate;
  return get_res_url;
}();
floor16.datum.request_res = function() {
  var request_res__delegate = function(res_key, cb, p__78870) {
    var vec__78873 = p__78870;
    var map__78874 = cljs.core.nth.call(null, vec__78873, 0, null);
    var map__78874__$1 = cljs.core.seq_QMARK_.call(null, map__78874) ? cljs.core.apply.call(null, cljs.core.hash_map, map__78874) : map__78874;
    var context = map__78874__$1;
    var id = cljs.core.get.call(null, map__78874__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
    var q = cljs.core.get.call(null, map__78874__$1, new cljs.core.Keyword(null, "q", "q", 1013904355));
    if (cljs.core.truth_((new cljs.core.Keyword(null, "local?", "local?", 4211409318)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.datum.system)))) {
      return cb.call(null, cljs.core.PersistentArrayMap.EMPTY);
    } else {
      var url = floor16.datum.get_res_url.call(null, res_key, context);
      return floor16.xhr.cb_request.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 4231316563), new cljs.core.Keyword(null, "get", "get", 1014006472), new cljs.core.Keyword(null, "url", "url", 1014020321), url], null), function(p1__78869_SHARP_) {
        return cb.call(null, (new cljs.core.Keyword(null, "body", "body", 1016933652)).cljs$core$IFn$_invoke$arity$1(p1__78869_SHARP_));
      });
    }
  };
  var request_res = function(res_key, cb, var_args) {
    var p__78870 = null;
    if (arguments.length > 2) {
      p__78870 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return request_res__delegate.call(this, res_key, cb, p__78870);
  };
  request_res.cljs$lang$maxFixedArity = 2;
  request_res.cljs$lang$applyTo = function(arglist__78875) {
    var res_key = cljs.core.first(arglist__78875);
    arglist__78875 = cljs.core.next(arglist__78875);
    var cb = cljs.core.first(arglist__78875);
    var p__78870 = cljs.core.rest(arglist__78875);
    return request_res__delegate(res_key, cb, p__78870);
  };
  request_res.cljs$core$IFn$_invoke$arity$variadic = request_res__delegate;
  return request_res;
}();
floor16.datum.kconj = function kconj(korks, k) {
  if (korks == null) {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [k], null);
  } else {
    if (korks instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks, k], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.conj.call(null, korks, k);
      } else {
        return null;
      }
    }
  }
};
floor16.datum.res = function() {
  var res__delegate = function(res_key, p__78879) {
    var vec__78889 = p__78879;
    var map__78890 = cljs.core.nth.call(null, vec__78889, 0, null);
    var map__78890__$1 = cljs.core.seq_QMARK_.call(null, map__78890) ? cljs.core.apply.call(null, cljs.core.hash_map, map__78890) : map__78890;
    var dk = cljs.core.get.call(null, map__78890__$1, new cljs.core.Keyword(null, "dk", "dk", 1013907449));
    var dk__$1 = function() {
      var or__3443__auto__ = dk;
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return new cljs.core.Keyword(null, "id", "id", 1013907597);
      }
    }();
    if (typeof floor16.datum.t78891 !== "undefined") {
    } else {
      floor16.datum.t78891 = function(dk, map__78890, vec__78889, p__78879, res_key, res, meta78892) {
        this.dk = dk;
        this.map__78890 = map__78890;
        this.vec__78889 = vec__78889;
        this.p__78879 = p__78879;
        this.res_key = res_key;
        this.res = res;
        this.meta78892 = meta78892;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      floor16.datum.t78891.cljs$lang$type = true;
      floor16.datum.t78891.cljs$lang$ctorStr = "floor16.datum/t78891";
      floor16.datum.t78891.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
        return cljs.core._write.call(null, writer__4011__auto__, "floor16.datum/t78891");
      };
      floor16.datum.t78891.prototype.floor16$datum$IResource$ = true;
      floor16.datum.t78891.prototype.floor16$datum$IResource$load_by_query$arity$3 = function(this$, q, cursor) {
        var self__ = this;
        var this$__$1 = this;
        return floor16.datum.load_by_query.call(null, this$__$1, q, cursor, null);
      };
      floor16.datum.t78891.prototype.floor16$datum$IResource$load_by_query$arity$4 = function(this$, q, cursor, korks) {
        var self__ = this;
        var this$__$1 = this;
        cljs.core.println.call(null, "(kconj korks :loading): ", floor16.datum.kconj.call(null, korks, new cljs.core.Keyword(null, "loading", "loading", 1350554798)));
        om.core.update_BANG_.call(null, cursor, floor16.datum.kconj.call(null, korks, new cljs.core.Keyword(null, "loading", "loading", 1350554798)), true);
        return floor16.datum.request_res.call(null, self__.res_key, function(p1__78876_SHARP_) {
          if (cljs.core.truth_(korks)) {
            return om.core.update_BANG_.call(null, cursor, korks, p1__78876_SHARP_);
          } else {
            return om.core.update_BANG_.call(null, cursor, p1__78876_SHARP_);
          }
        }, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "q", "q", 1013904355), q], null));
      };
      floor16.datum.t78891.prototype.floor16$datum$IResource$load_by_query$arity$2 = function(this$, p__78894) {
        var self__ = this;
        var map__78895 = p__78894;
        var map__78895__$1 = cljs.core.seq_QMARK_.call(null, map__78895) ? cljs.core.apply.call(null, cljs.core.hash_map, map__78895) : map__78895;
        var cntx = map__78895__$1;
        var data_path = cljs.core.get.call(null, map__78895__$1, new cljs.core.Keyword(null, "data-path", "data-path", 604226522));
        var query_path = cljs.core.get.call(null, map__78895__$1, new cljs.core.Keyword(null, "query-path", "query-path", 799448444));
        var query = cljs.core.get.call(null, map__78895__$1, new cljs.core.Keyword(null, "query", "query", 1121848378));
        var this$__$1 = this;
        cljs.core.swap_BANG_.call(null, floor16.datum.app.call(null), cljs.core.assoc_in, floor16.datum.kconj.call(null, data_path, new cljs.core.Keyword(null, "loading", "loading", 1350554798)), true);
        return floor16.datum.request_res.call(null, self__.res_key, function(p1__78877_SHARP_) {
          return cljs.core.swap_BANG_.call(null, floor16.datum.app.call(null), cljs.core.assoc_in, data_path, p1__78877_SHARP_);
        }, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "q", "q", 1013904355), function() {
          var or__3443__auto__ = query;
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return cljs.core.get_in.call(null, cljs.core.deref.call(null, floor16.datum.app.call(null)), query_path);
          }
        }()], null));
      };
      floor16.datum.t78891.prototype.floor16$datum$IResource$load_by_key$arity$3 = function(this$, k, p__78896) {
        var self__ = this;
        var map__78897 = p__78896;
        var map__78897__$1 = cljs.core.seq_QMARK_.call(null, map__78897) ? cljs.core.apply.call(null, cljs.core.hash_map, map__78897) : map__78897;
        var cntx = map__78897__$1;
        var current_path = cljs.core.get.call(null, map__78897__$1, new cljs.core.Keyword(null, "current-path", "current-path", 2436513643));
        var this$__$1 = this;
        cljs.core.swap_BANG_.call(null, floor16.datum.app.call(null), cljs.core.assoc_in, cljs.core.concat.call(null, current_path, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", 1016980252), new cljs.core.Keyword(null, "loading", "loading", 1350554798)], null)), true);
        return floor16.datum.request_res.call(null, self__.res_key, function(p1__78878_SHARP_) {
          return cljs.core.swap_BANG_.call(null, floor16.datum.app.call(null), cljs.core.assoc_in, floor16.datum.kconj.call(null, current_path, new cljs.core.Keyword(null, "data", "data", 1016980252)), p1__78878_SHARP_);
        }, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", 1013907597), k], null));
      };
      floor16.datum.t78891.prototype.floor16$datum$IIdentity$ = true;
      floor16.datum.t78891.prototype.floor16$datum$IIdentity$dkey$arity$1 = function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return self__.dk;
      };
      floor16.datum.t78891.prototype.floor16$datum$IIdentity$get_by_key$arity$2 = function(this$, k) {
        var self__ = this;
        var this$__$1 = this;
        return null;
      };
      floor16.datum.t78891.prototype.cljs$core$IMeta$_meta$arity$1 = function(_78893) {
        var self__ = this;
        var _78893__$1 = this;
        return self__.meta78892;
      };
      floor16.datum.t78891.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_78893, meta78892__$1) {
        var self__ = this;
        var _78893__$1 = this;
        return new floor16.datum.t78891(self__.dk, self__.map__78890, self__.vec__78889, self__.p__78879, self__.res_key, self__.res, meta78892__$1);
      };
      floor16.datum.__GT_t78891 = function __GT_t78891(dk__$2, map__78890__$2, vec__78889__$1, p__78879__$1, res_key__$1, res__$1, meta78892) {
        return new floor16.datum.t78891(dk__$2, map__78890__$2, vec__78889__$1, p__78879__$1, res_key__$1, res__$1, meta78892);
      };
    }
    return new floor16.datum.t78891(dk__$1, map__78890__$1, vec__78889, p__78879, res_key, res, null);
  };
  var res = function(res_key, var_args) {
    var p__78879 = null;
    if (arguments.length > 1) {
      p__78879 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return res__delegate.call(this, res_key, p__78879);
  };
  res.cljs$lang$maxFixedArity = 1;
  res.cljs$lang$applyTo = function(arglist__78898) {
    var res_key = cljs.core.first(arglist__78898);
    var p__78879 = cljs.core.rest(arglist__78898);
    return res__delegate(res_key, p__78879);
  };
  res.cljs$core$IFn$_invoke$arity$variadic = res__delegate;
  return res;
}();
floor16.datum.current_for = function current_for(id, p__78899) {
  var map__78901 = p__78899;
  var map__78901__$1 = cljs.core.seq_QMARK_.call(null, map__78901) ? cljs.core.apply.call(null, cljs.core.hash_map, map__78901) : map__78901;
  var context = map__78901__$1;
  var resource_key = cljs.core.get.call(null, map__78901__$1, new cljs.core.Keyword(null, "resource-key", "resource-key", 628364178));
  var items = cljs.core.get_in.call(null, cljs.core.deref.call(null, floor16.datum.app.call(null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", 1016980252), new cljs.core.Keyword(null, "items", "items", 1114430258)], null));
  var i = floor16.datum.first_for.call(null, new cljs.core.Keyword(null, "id", "id", 1013907597), id, items);
  var surrogate = cljs.core.map_QMARK_.call(null, i) ? (new cljs.core.Keyword(null, "surrogate", "surrogate", 2826021450)).cljs$core$IFn$_invoke$arity$1(i) : null;
  var r = floor16.datum.res.call(null, resource_key);
  floor16.datum.load_by_key.call(null, r, id, context);
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", 1014010321), id, new cljs.core.Keyword(null, "surrogate", "surrogate", 2826021450), surrogate, new cljs.core.Keyword(null, "data", "data", 1016980252), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "loading", "loading", 1350554798), true], null)], null);
};
goog.provide("secretary.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
secretary.core.IRouteMatches = function() {
  var obj13857 = {};
  return obj13857;
}();
secretary.core.route_matches = function route_matches(this$, route) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.secretary$core$IRouteMatches$route_matches$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.secretary$core$IRouteMatches$route_matches$arity$2(this$, route);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = secretary.core.route_matches[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = secretary.core.route_matches["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRouteMatches.route-matches", this$);
        }
      }
    }().call(null, this$, route);
  }
};
secretary.core.IRenderRoute = function() {
  var obj13859 = {};
  return obj13859;
}();
secretary.core.render_route = function() {
  var render_route = null;
  var render_route__1 = function(this$) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.secretary$core$IRenderRoute$render_route$arity$1;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.secretary$core$IRenderRoute$render_route$arity$1(this$);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = secretary.core.render_route[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = secretary.core.render_route["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IRenderRoute.render-route", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var render_route__2 = function(this$, params) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.secretary$core$IRenderRoute$render_route$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.secretary$core$IRenderRoute$render_route$arity$2(this$, params);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = secretary.core.render_route[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = secretary.core.render_route["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IRenderRoute.render-route", this$);
          }
        }
      }().call(null, this$, params);
    }
  };
  render_route = function(this$, params) {
    switch(arguments.length) {
      case 1:
        return render_route__1.call(this, this$);
      case 2:
        return render_route__2.call(this, this$, params);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  render_route.cljs$core$IFn$_invoke$arity$1 = render_route__1;
  render_route.cljs$core$IFn$_invoke$arity$2 = render_route__2;
  return render_route;
}();
secretary.core._STAR_config_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "prefix", "prefix", 4328760836), ""], null));
secretary.core.get_config = function get_config(path) {
  var path__$1 = cljs.core.sequential_QMARK_.call(null, path) ? path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null);
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, secretary.core._STAR_config_STAR_), path__$1);
};
secretary.core.set_config_BANG_ = function set_config_BANG_(path, val) {
  var path__$1 = cljs.core.sequential_QMARK_.call(null, path) ? path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null);
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_config_STAR_, cljs.core.assoc_in, path__$1, val);
};
secretary.core.encode = encodeURIComponent;
secretary.core.decode = decodeURIComponent;
secretary.core.encode_query_params = function encode_query_params(query_params) {
  return clojure.string.join.call(null, "\x26", cljs.core.map.call(null, function(p__13862) {
    var vec__13863 = p__13862;
    var k = cljs.core.nth.call(null, vec__13863, 0, null);
    var v = cljs.core.nth.call(null, vec__13863, 1, null);
    return[cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str("\x3d"), cljs.core.str(secretary.core.encode.call(null, v instanceof cljs.core.Keyword ? cljs.core.name.call(null, v) : [cljs.core.str(v)].join("")))].join("");
  }, query_params));
};
secretary.core.decode_query_params = function decode_query_params(query_string) {
  return cljs.core.reduce.call(null, function(m, param) {
    var vec__13865 = clojure.string.split.call(null, param, /=/, 2);
    var k = cljs.core.nth.call(null, vec__13865, 0, null);
    var v = cljs.core.nth.call(null, vec__13865, 1, null);
    var v__$1 = secretary.core.decode.call(null, v);
    return cljs.core.assoc.call(null, m, k, v__$1);
  }, cljs.core.PersistentArrayMap.EMPTY, clojure.string.split.call(null, query_string, /&/));
};
secretary.core.encode_uri = function encode_uri(uri) {
  return clojure.string.join.call(null, "/", cljs.core.map.call(null, secretary.core.encode, clojure.string.split.call(null, uri, /\//)));
};
secretary.core.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var ms = cljs.core.re_matches.call(null, re, s);
  if (cljs.core.truth_(ms)) {
    if (cljs.core.sequential_QMARK_.call(null, ms)) {
      return ms;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ms, ms], null);
    }
  } else {
    return null;
  }
};
secretary.core.re_escape_chars = cljs.core.set.call(null, "\\.*+|?()[]{}$^");
secretary.core.re_escape = function re_escape(s) {
  return cljs.core.reduce.call(null, function(s__$1, c) {
    if (cljs.core.truth_(secretary.core.re_escape_chars.call(null, c))) {
      return[cljs.core.str(s__$1), cljs.core.str("\\"), cljs.core.str(c)].join("");
    } else {
      return[cljs.core.str(s__$1), cljs.core.str(c)].join("");
    }
  }, "", s);
};
secretary.core.lex_STAR_ = function lex_STAR_(s, clauses) {
  return cljs.core.some.call(null, function(p__13869) {
    var vec__13870 = p__13869;
    var re = cljs.core.nth.call(null, vec__13870, 0, null);
    var action = cljs.core.nth.call(null, vec__13870, 1, null);
    var temp__4092__auto__ = cljs.core.re_find.call(null, re, s);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__13871 = temp__4092__auto__;
      var m = cljs.core.nth.call(null, vec__13871, 0, null);
      var c = cljs.core.nth.call(null, vec__13871, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, cljs.core.count.call(null, m)), action.call(null, c)], null);
    } else {
      return null;
    }
  }, clauses);
};
secretary.core.lex_route = function lex_route(s, clauses) {
  var s__$1 = s;
  var pattern = "";
  var params = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      var vec__13874 = secretary.core.lex_STAR_.call(null, s__$1, clauses);
      var s__$2 = cljs.core.nth.call(null, vec__13874, 0, null);
      var vec__13875 = cljs.core.nth.call(null, vec__13874, 1, null);
      var r = cljs.core.nth.call(null, vec__13875, 0, null);
      var p = cljs.core.nth.call(null, vec__13875, 1, null);
      var G__13876 = s__$2;
      var G__13877 = [cljs.core.str(pattern), cljs.core.str(r)].join("");
      var G__13878 = cljs.core.conj.call(null, params, p);
      s__$1 = G__13876;
      pattern = G__13877;
      params = G__13878;
      continue;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.re_pattern.call(null, [cljs.core.str("^"), cljs.core.str(pattern), cljs.core.str("$")].join("")), cljs.core.remove.call(null, cljs.core.nil_QMARK_, params)], null);
    }
    break;
  }
};
secretary.core.compile_route = function compile_route(route) {
  var clauses = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^\*([^\s.:*\/]*)/, function(v) {
    var r = "(.*?)";
    var p = cljs.core.seq.call(null, v) ? cljs.core.keyword.call(null, v) : new cljs.core.Keyword(null, "*", "*", 1013904284);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, p], null);
  }], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^\:([^\s.:*\/]+)/, function(v) {
    var r = "([^,;?/]+)";
    var p = cljs.core.keyword.call(null, v);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, p], null);
  }], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^([^:*]+)/, function(v) {
    var r = secretary.core.re_escape.call(null, v);
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [r], null);
  }], null)], null);
  var vec__13884 = secretary.core.lex_route.call(null, route, clauses);
  var re = cljs.core.nth.call(null, vec__13884, 0, null);
  var params = cljs.core.nth.call(null, vec__13884, 1, null);
  if (typeof secretary.core.t13885 !== "undefined") {
  } else {
    secretary.core.t13885 = function(params, re, vec__13884, clauses, route, compile_route, meta13886) {
      this.params = params;
      this.re = re;
      this.vec__13884 = vec__13884;
      this.clauses = clauses;
      this.route = route;
      this.compile_route = compile_route;
      this.meta13886 = meta13886;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    secretary.core.t13885.cljs$lang$type = true;
    secretary.core.t13885.cljs$lang$ctorStr = "secretary.core/t13885";
    secretary.core.t13885.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "secretary.core/t13885");
    };
    secretary.core.t13885.prototype.secretary$core$IRouteMatches$ = true;
    secretary.core.t13885.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(_, route__$2) {
      var self__ = this;
      var ___$1 = this;
      var temp__4092__auto__ = secretary.core.re_matches_STAR_.call(null, self__.re, route__$2);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__13888 = temp__4092__auto__;
        var ___$2 = cljs.core.nth.call(null, vec__13888, 0, null);
        var ms = cljs.core.nthnext.call(null, vec__13888, 1);
        return cljs.core.merge_with.call(null, cljs.core.vector, cljs.core.PersistentArrayMap.EMPTY, cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, self__.params, cljs.core.map.call(null, secretary.core.decode, ms))));
      } else {
        return null;
      }
    };
    secretary.core.t13885.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13887) {
      var self__ = this;
      var _13887__$1 = this;
      return self__.meta13886;
    };
    secretary.core.t13885.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13887, meta13886__$1) {
      var self__ = this;
      var _13887__$1 = this;
      return new secretary.core.t13885(self__.params, self__.re, self__.vec__13884, self__.clauses, self__.route, self__.compile_route, meta13886__$1);
    };
    secretary.core.__GT_t13885 = function __GT_t13885(params__$1, re__$1, vec__13884__$1, clauses__$1, route__$1, compile_route__$1, meta13886) {
      return new secretary.core.t13885(params__$1, re__$1, vec__13884__$1, clauses__$1, route__$1, compile_route__$1, meta13886);
    };
  }
  return new secretary.core.t13885(params, re, vec__13884, clauses, route, compile_route, null);
};
secretary.core.render_route_STAR_ = function() {
  var render_route_STAR___delegate = function(obj, args) {
    if (function() {
      var G__13890 = obj;
      if (G__13890) {
        var bit__4093__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3443__auto__ = bit__4093__auto__;
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return G__13890.secretary$core$IRenderRoute$;
          }
        }())) {
          return true;
        } else {
          if (!G__13890.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, secretary.core.IRenderRoute, G__13890);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, secretary.core.IRenderRoute, G__13890);
      }
    }()) {
      return cljs.core.apply.call(null, secretary.core.render_route, obj, args);
    } else {
      return null;
    }
  };
  var render_route_STAR_ = function(obj, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return render_route_STAR___delegate.call(this, obj, args);
  };
  render_route_STAR_.cljs$lang$maxFixedArity = 1;
  render_route_STAR_.cljs$lang$applyTo = function(arglist__13891) {
    var obj = cljs.core.first(arglist__13891);
    var args = cljs.core.rest(arglist__13891);
    return render_route_STAR___delegate(obj, args);
  };
  render_route_STAR_.cljs$core$IFn$_invoke$arity$variadic = render_route_STAR___delegate;
  return render_route_STAR_;
}();
secretary.core._STAR_routes_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
secretary.core.add_route_BANG_ = function add_route_BANG_(obj, action) {
  var obj__$1 = typeof obj === "string" ? secretary.core.compile_route.call(null, obj) : obj;
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [obj__$1, action], null));
};
secretary.core.remove_route_BANG_ = function remove_route_BANG_(obj) {
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, function(rs) {
    return cljs.core.filterv.call(null, function(p__13894) {
      var vec__13895 = p__13894;
      var x = cljs.core.nth.call(null, vec__13895, 0, null);
      var _ = cljs.core.nth.call(null, vec__13895, 1, null);
      return cljs.core.not_EQ_.call(null, x, obj);
    }, rs);
  });
};
secretary.core.reset_routes_BANG_ = function reset_routes_BANG_() {
  return cljs.core.reset_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.PersistentVector.EMPTY);
};
secretary.core.locate_route = function locate_route(route) {
  return cljs.core.some.call(null, function(p__13898) {
    var vec__13899 = p__13898;
    var compiled_route = cljs.core.nth.call(null, vec__13899, 0, null);
    var action = cljs.core.nth.call(null, vec__13899, 1, null);
    var temp__4092__auto__ = secretary.core.route_matches.call(null, compiled_route, route);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var params = temp__4092__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [action, secretary.core.route_matches.call(null, compiled_route, route)], null);
    } else {
      return null;
    }
  }, cljs.core.deref.call(null, secretary.core._STAR_routes_STAR_));
};
secretary.core.dispatch_BANG_ = function dispatch_BANG_(uri) {
  var vec__13902 = clojure.string.split.call(null, uri, /\?/);
  var uri_path = cljs.core.nth.call(null, vec__13902, 0, null);
  var query_string = cljs.core.nth.call(null, vec__13902, 1, null);
  var query_params = cljs.core.truth_(query_string) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "query-params", "query-params", 1080249757), secretary.core.decode_query_params.call(null, query_string)], null) : null;
  var vec__13903 = secretary.core.locate_route.call(null, uri_path);
  var action = cljs.core.nth.call(null, vec__13903, 0, null);
  var params = cljs.core.nth.call(null, vec__13903, 1, null);
  var action__$1 = function() {
    var or__3443__auto__ = action;
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return cljs.core.identity;
    }
  }();
  var params__$1 = cljs.core.merge.call(null, params, query_params);
  return action__$1.call(null, params__$1);
};
RegExp.prototype.secretary$core$IRouteMatches$ = true;
RegExp.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(this$, route) {
  var this$__$1 = this;
  var temp__4092__auto__ = secretary.core.re_matches_STAR_.call(null, this$__$1, route);
  if (cljs.core.truth_(temp__4092__auto__)) {
    var vec__13904 = temp__4092__auto__;
    var _ = cljs.core.nth.call(null, vec__13904, 0, null);
    var ms = cljs.core.nthnext.call(null, vec__13904, 1);
    return cljs.core.vec.call(null, ms);
  } else {
    return null;
  }
};
secretary.core.IRouteMatches["string"] = true;
secretary.core.route_matches["string"] = function(this$, route) {
  return secretary.core.route_matches.call(null, secretary.core.compile_route.call(null, this$), route);
};
secretary.core.IRenderRoute["string"] = true;
secretary.core.render_route["string"] = function(this$) {
  return secretary.core.render_route.call(null, this$, cljs.core.PersistentArrayMap.EMPTY);
};
secretary.core.render_route["string"] = function(this$, params) {
  var map__13905 = params;
  var map__13905__$1 = cljs.core.seq_QMARK_.call(null, map__13905) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13905) : map__13905;
  var m = map__13905__$1;
  var query_params = cljs.core.get.call(null, map__13905__$1, new cljs.core.Keyword(null, "query-params", "query-params", 1080249757));
  var a = cljs.core.atom.call(null, m);
  var path = this$.replace(new RegExp(":[^\\s.:*/]+|\\*[^\\s.:*/]*", "g"), function(map__13905, map__13905__$1, m, query_params, a) {
    return function($1) {
      var lookup = cljs.core.keyword.call(null, cljs.core._EQ_.call(null, $1, "*") ? $1 : cljs.core.subs.call(null, $1, 1));
      var v = cljs.core.deref.call(null, a).call(null, lookup);
      var replacement = cljs.core.sequential_QMARK_.call(null, v) ? function() {
        cljs.core.swap_BANG_.call(null, a, cljs.core.assoc, lookup, cljs.core.next.call(null, v));
        return secretary.core.encode_uri.call(null, cljs.core.first.call(null, v));
      }() : cljs.core.truth_(v) ? secretary.core.encode_uri.call(null, v) : $1;
      return replacement;
    };
  }(map__13905, map__13905__$1, m, query_params, a));
  var path__$1 = [cljs.core.str(secretary.core.get_config.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", 4328760836)], null))), cljs.core.str(path)].join("");
  var temp__4090__auto__ = function() {
    var and__3431__auto__ = query_params;
    if (cljs.core.truth_(and__3431__auto__)) {
      return secretary.core.encode_query_params.call(null, query_params);
    } else {
      return and__3431__auto__;
    }
  }();
  if (cljs.core.truth_(temp__4090__auto__)) {
    var query_string = temp__4090__auto__;
    return[cljs.core.str(path__$1), cljs.core.str("?"), cljs.core.str(query_string)].join("");
  } else {
    return path__$1;
  }
};
goog.provide("floor16.navigation");
goog.require("cljs.core");
goog.require("goog.history.Html5History.TokenTransformer");
goog.require("goog.events");
goog.require("floor16.datum");
goog.require("floor16.global");
goog.require("goog.events.EventType");
goog.require("floor16.datum");
goog.require("secretary.core");
goog.require("om.core");
goog.require("om.core");
goog.require("goog.history.Html5History");
goog.require("floor16.global");
goog.require("goog.history.EventType");
goog.require("secretary.core");
goog.require("goog.events");
if (cljs.core.truth_(floor16.global.server_side_QMARK_)) {
} else {
  cljs.core.enable_console_print_BANG_.call(null);
}
floor16.navigation.system = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "server-state?", "server-state?", 715053834), true], null));
floor16.navigation.app = function app() {
  return(new cljs.core.Keyword(null, "app", "app", 1014001043)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.navigation.system));
};
floor16.navigation.decode_query = function decode_query(qstr) {
  try {
    return cljs.reader.read_string.call(null, qstr);
  } catch (e85347) {
    if (e85347 instanceof Object) {
      var err = e85347;
      cljs.core.println.call(null, "Error while parsing query string: ", err);
      return cljs.core.PersistentArrayMap.EMPTY;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e85347;
      } else {
        return null;
      }
    }
  }
};
floor16.navigation.encode_query = function encode_query(q) {
  return cljs.core.pr_str.call(null, q);
};
floor16.navigation.compose_data_key = function compose_data_key(r) {
  return function(p__85350) {
    var map__85351 = p__85350;
    var map__85351__$1 = cljs.core.seq_QMARK_.call(null, map__85351) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85351) : map__85351;
    var context = map__85351__$1;
    var result_params = cljs.core.get.call(null, map__85351__$1, new cljs.core.Keyword(null, "result-params", "result-params", 3023414440));
    var url_params = cljs.core.get.call(null, map__85351__$1, new cljs.core.Keyword(null, "url-params", "url-params", 3432736534));
    var mode_conf = cljs.core.get.call(null, map__85351__$1, new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328));
    if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "view-type", "view-type", 3689695444)).cljs$core$IFn$_invoke$arity$1(mode_conf), new cljs.core.Keyword(null, "item-view", "item-view", 3121596561))) {
      var dk = (new cljs.core.Keyword(null, "data-key", "data-key", 2801799470)).cljs$core$IFn$_invoke$arity$1(mode_conf);
      var dv = dk.call(null, url_params);
      if (cljs.core.truth_(dv)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Data-key ("), cljs.core.str(dk), cljs.core.str(") value is missed in url-params: "), cljs.core.str(url_params)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "dv", "dv", -1640528309, null)))].join(""));
      }
      return r.call(null, cljs.core.assoc_in.call(null, context, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "result-params", "result-params", 3023414440), dk], null), dv));
    } else {
      return r.call(null, context);
    }
  };
};
floor16.navigation.clear_query = function clear_query(q) {
  var map__85355 = cljs.core.deref.call(null, floor16.navigation.app.call(null));
  var map__85355__$1 = cljs.core.seq_QMARK_.call(null, map__85355) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85355) : map__85355;
  var settings = cljs.core.get.call(null, map__85355__$1, new cljs.core.Keyword(null, "settings", "settings", 2448535445));
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.remove.call(null, function(p__85356) {
    var vec__85357 = p__85356;
    var k = cljs.core.nth.call(null, vec__85357, 0, null);
    var v = cljs.core.nth.call(null, vec__85357, 1, null);
    return v == null || (cljs.core.coll_QMARK_.call(null, v) && cljs.core.empty_QMARK_.call(null, v) || cljs.core._EQ_.call(null, v, k.call(null, settings)));
  }, q));
};
floor16.navigation.compose_raw_query = function compose_raw_query(r) {
  return function(p__85360) {
    var map__85361 = p__85360;
    var map__85361__$1 = cljs.core.seq_QMARK_.call(null, map__85361) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85361) : map__85361;
    var context = map__85361__$1;
    var result_params = cljs.core.get.call(null, map__85361__$1, new cljs.core.Keyword(null, "result-params", "result-params", 3023414440));
    var url_params = cljs.core.get.call(null, map__85361__$1, new cljs.core.Keyword(null, "url-params", "url-params", 3432736534));
    var mode_conf = cljs.core.get.call(null, map__85361__$1, new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328));
    var clear = floor16.navigation.clear_query.call(null, url_params);
    if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "view-type", "view-type", 3689695444)).cljs$core$IFn$_invoke$arity$1(mode_conf), new cljs.core.Keyword(null, "list", "list", 1017226256))) {
      return r.call(null, cljs.core.empty_QMARK_.call(null, clear) ? context : cljs.core.assoc_in.call(null, context, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "result-params", "result-params", 3023414440), new cljs.core.Keyword(null, "query-params", "query-params", 1080249757), new cljs.core.Keyword(null, "q", "q", 1013904355)], null), floor16.navigation.encode_query.call(null, clear)));
    } else {
      return r.call(null, context);
    }
  };
};
floor16.navigation.compose_page_number = function compose_page_number(r) {
  return function(p__85365) {
    var map__85366 = p__85365;
    var map__85366__$1 = cljs.core.seq_QMARK_.call(null, map__85366) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85366) : map__85366;
    var context = map__85366__$1;
    var result_params = cljs.core.get.call(null, map__85366__$1, new cljs.core.Keyword(null, "result-params", "result-params", 3023414440));
    var url_params = cljs.core.get.call(null, map__85366__$1, new cljs.core.Keyword(null, "url-params", "url-params", 3432736534));
    var mode_conf = cljs.core.get.call(null, map__85366__$1, new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328));
    var o_page = cljs.core.get.call(null, map__85366__$1, new cljs.core.Keyword(null, "o-page", "o-page", 4236731551));
    var url_update_QMARK_ = cljs.core.get.call(null, map__85366__$1, new cljs.core.Keyword(null, "url-update?", "url-update?", 3542326698));
    if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "view-type", "view-type", 3689695444)).cljs$core$IFn$_invoke$arity$1(mode_conf), new cljs.core.Keyword(null, "list", "list", 1017226256))) {
      var map__85367 = url_params;
      var map__85367__$1 = cljs.core.seq_QMARK_.call(null, map__85367) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85367) : map__85367;
      var op = cljs.core.get.call(null, map__85367__$1, new cljs.core.Keyword(null, "o-page", "o-page", 4236731551));
      var page = cljs.core.truth_(url_update_QMARK_) ? 1 : function() {
        var or__3443__auto__ = o_page;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return op;
        }
      }();
      return r.call(null, cljs.core.truth_(page) ? cljs.core.assoc_in.call(null, cljs.core.assoc.call(null, context, new cljs.core.Keyword(null, "url-params", "url-params", 3432736534), cljs.core.dissoc.call(null, url_params, new cljs.core.Keyword(null, "o-page", "o-page", 4236731551))), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "result-params", "result-params", 3023414440), new cljs.core.Keyword(null, "query-params", "query-params", 
      1080249757), new cljs.core.Keyword(null, "page", "page", 1017337345)], null), page) : context);
    } else {
      return r.call(null, context);
    }
  };
};
floor16.navigation.render_url = function render_url(p__85368) {
  var map__85370 = p__85368;
  var map__85370__$1 = cljs.core.seq_QMARK_.call(null, map__85370) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85370) : map__85370;
  var context = map__85370__$1;
  var result_params = cljs.core.get.call(null, map__85370__$1, new cljs.core.Keyword(null, "result-params", "result-params", 3023414440));
  var mode_conf = cljs.core.get.call(null, map__85370__$1, new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328));
  return secretary.core.render_route.call(null, (new cljs.core.Keyword(null, "route", "route", 1122608571)).cljs$core$IFn$_invoke$arity$1(mode_conf), result_params);
};
floor16.navigation.url_to = function url_to(p__85371) {
  var map__85373 = p__85371;
  var map__85373__$1 = cljs.core.seq_QMARK_.call(null, map__85373) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85373) : map__85373;
  var context = map__85373__$1;
  var mode = cljs.core.get.call(null, map__85373__$1, new cljs.core.Keyword(null, "mode", "mode", 1017261333));
  var mconf = mode.call(null, (new cljs.core.Keyword(null, "app-modes", "app-modes", 1419288566)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.navigation.system)));
  if (cljs.core.truth_(mconf)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("App-mode conf was not found: "), cljs.core.str(mode)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "mconf", "mconf", -1536808246, null)))].join(""));
  }
  return(new cljs.core.Keyword(null, "url-composer", "url-composer", 4458618672)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.navigation.system)).call(null, cljs.core.merge.call(null, context, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328), mconf, new cljs.core.Keyword(null, "result-params", "result-params", 3023414440), cljs.core.PersistentArrayMap.EMPTY], null)));
};
floor16.navigation.handle_history_event = function handle_history_event(token) {
  return secretary.core.dispatch_BANG_.call(null, [cljs.core.str("/"), cljs.core.str(token)].join(""));
};
floor16.navigation.retrieve_token = function retrieve_token(pathPrefix, location) {
  return[cljs.core.str(cljs.core.subs.call(null, location.pathname, cljs.core.count.call(null, pathPrefix))), cljs.core.str(location.search)].join("");
};
floor16.navigation.create_url = function create_url(token, pathPrefix, location) {
  return[cljs.core.str(pathPrefix), cljs.core.str(token)].join("");
};
floor16.navigation.hTokenTransformer = function hTokenTransformer() {
  return goog.base(this);
};
goog.inherits(floor16.navigation.hTokenTransformer, goog.history.Html5History.TokenTransformer);
floor16.navigation.hTokenTransformer.prototype.retrieveToken = floor16.navigation.retrieve_token;
floor16.navigation.hTokenTransformer.prototype.createUrl = floor16.navigation.create_url;
floor16.navigation.init_history = function init_history() {
  floor16.navigation.history = new goog.history.Html5History(null, new floor16.navigation.hTokenTransformer);
  floor16.navigation.history.setUseFragment(false);
  floor16.navigation.history.setEnabled(true);
  return goog.events.listen(floor16.navigation.history, goog.history.EventType.NAVIGATE, function(p1__85374_SHARP_) {
    return floor16.navigation.handle_history_event.call(null, p1__85374_SHARP_.token);
  });
};
floor16.navigation.handle_query_params = function handle_query_params(h) {
  return function(p__85379) {
    var map__85380 = p__85379;
    var map__85380__$1 = cljs.core.seq_QMARK_.call(null, map__85380) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85380) : map__85380;
    var context = map__85380__$1;
    var result_state = cljs.core.get.call(null, map__85380__$1, new cljs.core.Keyword(null, "result-state", "result-state", 4407183955));
    var params = cljs.core.get.call(null, map__85380__$1, new cljs.core.Keyword(null, "params", "params", 4313443576));
    var mode_conf = cljs.core.get.call(null, map__85380__$1, new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328));
    var mode = cljs.core.get.call(null, map__85380__$1, new cljs.core.Keyword(null, "mode", "mode", 1017261333));
    var map__85381 = mode_conf;
    var map__85381__$1 = cljs.core.seq_QMARK_.call(null, map__85381) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85381) : map__85381;
    var query_path = cljs.core.get.call(null, map__85381__$1, new cljs.core.Keyword(null, "query-path", "query-path", 799448444));
    var view_type = cljs.core.get.call(null, map__85381__$1, new cljs.core.Keyword(null, "view-type", "view-type", 3689695444));
    var query_params = (new cljs.core.Keyword(null, "query-params", "query-params", 1080249757)).cljs$core$IFn$_invoke$arity$1(params);
    var map__85382 = cljs.core.deref.call(null, floor16.navigation.app.call(null));
    var map__85382__$1 = cljs.core.seq_QMARK_.call(null, map__85382) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85382) : map__85382;
    var settings = cljs.core.get.call(null, map__85382__$1, new cljs.core.Keyword(null, "settings", "settings", 2448535445));
    var qstr = cljs.core.get.call(null, query_params, "q");
    var page = cljs.core.get.call(null, query_params, "page");
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "list", "list", 1017226256), view_type)) {
      return h.call(null, cljs.core.update_in.call(null, context, cljs.core.cons.call(null, new cljs.core.Keyword(null, "result-state", "result-state", 4407183955), query_path), cljs.core.merge, settings, cljs.core.truth_(qstr) ? floor16.navigation.decode_query.call(null, qstr) : null, cljs.core.truth_(page) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "o-page", "o-page", 4236731551), cljs.reader.read_string.call(null, page)], null) : null));
    } else {
      return h.call(null, context);
    }
  };
};
floor16.navigation.handle_data_key = function handle_data_key(h) {
  return function(p__85385) {
    var map__85386 = p__85385;
    var map__85386__$1 = cljs.core.seq_QMARK_.call(null, map__85386) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85386) : map__85386;
    var context = map__85386__$1;
    var params = cljs.core.get.call(null, map__85386__$1, new cljs.core.Keyword(null, "params", "params", 4313443576));
    var mode_conf = cljs.core.get.call(null, map__85386__$1, new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328));
    var mode = cljs.core.get.call(null, map__85386__$1, new cljs.core.Keyword(null, "mode", "mode", 1017261333));
    if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "view-type", "view-type", 3689695444)).cljs$core$IFn$_invoke$arity$1(mode_conf), new cljs.core.Keyword(null, "item-view", "item-view", 3121596561))) {
      var dk = (new cljs.core.Keyword(null, "data-key", "data-key", 2801799470)).cljs$core$IFn$_invoke$arity$1(mode_conf);
      var dv = dk.call(null, params);
      if (cljs.core.truth_(dv)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Data-key ("), cljs.core.str(dk), cljs.core.str(") value is missed in params: "), cljs.core.str(params)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "dv", "dv", -1640528309, null)))].join(""));
      }
      return h.call(null, cljs.core.assoc_in.call(null, context, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "result-state", "result-state", 4407183955), new cljs.core.Keyword(null, "current", "current", 2140844267)], null), floor16.datum.current_for.call(null, dv, mode_conf)));
    } else {
      return h.call(null, context);
    }
  };
};
floor16.navigation.handle_route = function handle_route(p__85387) {
  var map__85390 = p__85387;
  var map__85390__$1 = cljs.core.seq_QMARK_.call(null, map__85390) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85390) : map__85390;
  var context = map__85390__$1;
  var result_state = cljs.core.get.call(null, map__85390__$1, new cljs.core.Keyword(null, "result-state", "result-state", 4407183955));
  var mode_conf = cljs.core.get.call(null, map__85390__$1, new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328));
  var mode = cljs.core.get.call(null, map__85390__$1, new cljs.core.Keyword(null, "mode", "mode", 1017261333));
  cljs.core.swap_BANG_.call(null, floor16.navigation.app.call(null), cljs.core.merge, cljs.core.assoc.call(null, result_state, new cljs.core.Keyword(null, "app-mode", "app-mode", 2135359809), mode));
  var map__85391 = mode_conf;
  var map__85391__$1 = cljs.core.seq_QMARK_.call(null, map__85391) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85391) : map__85391;
  var data_updater = cljs.core.get.call(null, map__85391__$1, new cljs.core.Keyword(null, "data-updater", "data-updater", 3159121176));
  var resource_key = cljs.core.get.call(null, map__85391__$1, new cljs.core.Keyword(null, "resource-key", "resource-key", 628364178));
  var query_path = cljs.core.get.call(null, map__85391__$1, new cljs.core.Keyword(null, "query-path", "query-path", 799448444));
  var data_path = cljs.core.get.call(null, map__85391__$1, new cljs.core.Keyword(null, "data-path", "data-path", 604226522));
  if (cljs.core.truth_(data_updater)) {
    return data_updater.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "resource-key", "resource-key", 628364178), resource_key, new cljs.core.Keyword(null, "query-path", "query-path", 799448444), query_path, new cljs.core.Keyword(null, "data-path", "data-path", 604226522), data_path], null));
  } else {
    return null;
  }
};
floor16.navigation.do_route = function do_route(p__85392) {
  var map__85394 = p__85392;
  var map__85394__$1 = cljs.core.seq_QMARK_.call(null, map__85394) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85394) : map__85394;
  var context = map__85394__$1;
  var mode_conf = cljs.core.get.call(null, map__85394__$1, new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328));
  var mode = cljs.core.get.call(null, map__85394__$1, new cljs.core.Keyword(null, "mode", "mode", 1017261333));
  if (cljs.core.truth_(mode_conf)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("App-mode conf was not found: "), cljs.core.str(mode)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "mode-conf", "mode-conf", 586063559, null)))].join(""));
  }
  return(new cljs.core.Keyword(null, "route-handler", "route-handler", 1903920952)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.navigation.system)).call(null, cljs.core.assoc.call(null, context, new cljs.core.Keyword(null, "result-state", "result-state", 4407183955), cljs.core.PersistentArrayMap.EMPTY));
};
floor16.navigation.default_data_load = function default_data_load(p__85395) {
  var map__85397 = p__85395;
  var map__85397__$1 = cljs.core.seq_QMARK_.call(null, map__85397) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85397) : map__85397;
  var data_path = cljs.core.get.call(null, map__85397__$1, new cljs.core.Keyword(null, "data-path", "data-path", 604226522));
  var query_path = cljs.core.get.call(null, map__85397__$1, new cljs.core.Keyword(null, "query-path", "query-path", 799448444));
  var resource_key = cljs.core.get.call(null, map__85397__$1, new cljs.core.Keyword(null, "resource-key", "resource-key", 628364178));
  var res = floor16.datum.res.call(null, resource_key);
  return floor16.datum.load_by_query.call(null, res, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "query", "query", 1121848378), floor16.navigation.clear_query.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, floor16.navigation.app.call(null)), query_path)), new cljs.core.Keyword(null, "data-path", "data-path", 604226522), data_path], null));
};
floor16.navigation.init_routes = function init_routes(modes) {
  var seq__85410 = cljs.core.seq.call(null, modes);
  var chunk__85411 = null;
  var count__85412 = 0;
  var i__85413 = 0;
  while (true) {
    if (i__85413 < count__85412) {
      var vec__85414 = cljs.core._nth.call(null, chunk__85411, i__85413);
      var mode = cljs.core.nth.call(null, vec__85414, 0, null);
      var conf = cljs.core.nth.call(null, vec__85414, 1, null);
      var map__85415_85422 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "data-path", "data-path", 604226522), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", 1016980252)], null), new cljs.core.Keyword(null, "query-path", "query-path", 799448444), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "query", 
      "query", 1121848378)], null), new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "data-updater", "data-updater", 3159121176), cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "list", "list", 1017226256), (new cljs.core.Keyword(null, "view-type", "view-type", 3689695444)).cljs$core$IFn$_invoke$arity$1(conf)) ? floor16.navigation.default_data_load : null], null), conf);
      var map__85415_85423__$1 = cljs.core.seq_QMARK_.call(null, map__85415_85422) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85415_85422) : map__85415_85422;
      var mode_conf_85424 = map__85415_85423__$1;
      var view_type_85425 = cljs.core.get.call(null, map__85415_85423__$1, new cljs.core.Keyword(null, "view-type", "view-type", 3689695444));
      var route_85426 = cljs.core.get.call(null, map__85415_85423__$1, new cljs.core.Keyword(null, "route", "route", 1122608571));
      var action__9194__auto___85427 = function(seq__85410, chunk__85411, count__85412, i__85413, map__85415_85422, map__85415_85423__$1, mode_conf_85424, view_type_85425, route_85426, vec__85414, mode, conf) {
        return function(params__9195__auto__) {
          if (cljs.core.map_QMARK_.call(null, params__9195__auto__)) {
            var map__85416 = params__9195__auto__;
            var map__85416__$1 = cljs.core.seq_QMARK_.call(null, map__85416) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85416) : map__85416;
            var params = map__85416__$1;
            return floor16.navigation.do_route.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "mode", "mode", 1017261333), mode, new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328), mode_conf_85424, new cljs.core.Keyword(null, "params", "params", 4313443576), params], null));
          } else {
            if (cljs.core.vector_QMARK_.call(null, params__9195__auto__)) {
              var map__85417 = params__9195__auto__;
              var map__85417__$1 = cljs.core.seq_QMARK_.call(null, map__85417) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85417) : map__85417;
              var params = map__85417__$1;
              return floor16.navigation.do_route.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "mode", "mode", 1017261333), mode, new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328), mode_conf_85424, new cljs.core.Keyword(null, "params", "params", 4313443576), params], null));
            } else {
              return null;
            }
          }
        };
      }(seq__85410, chunk__85411, count__85412, i__85413, map__85415_85422, map__85415_85423__$1, mode_conf_85424, view_type_85425, route_85426, vec__85414, mode, conf);
      secretary.core.add_route_BANG_.call(null, cljs.core.identity.call(null, route_85426), action__9194__auto___85427);
      var G__85428 = seq__85410;
      var G__85429 = chunk__85411;
      var G__85430 = count__85412;
      var G__85431 = i__85413 + 1;
      seq__85410 = G__85428;
      chunk__85411 = G__85429;
      count__85412 = G__85430;
      i__85413 = G__85431;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__85410);
      if (temp__4092__auto__) {
        var seq__85410__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__85410__$1)) {
          var c__4191__auto__ = cljs.core.chunk_first.call(null, seq__85410__$1);
          var G__85432 = cljs.core.chunk_rest.call(null, seq__85410__$1);
          var G__85433 = c__4191__auto__;
          var G__85434 = cljs.core.count.call(null, c__4191__auto__);
          var G__85435 = 0;
          seq__85410 = G__85432;
          chunk__85411 = G__85433;
          count__85412 = G__85434;
          i__85413 = G__85435;
          continue;
        } else {
          var vec__85418 = cljs.core.first.call(null, seq__85410__$1);
          var mode = cljs.core.nth.call(null, vec__85418, 0, null);
          var conf = cljs.core.nth.call(null, vec__85418, 1, null);
          var map__85419_85436 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "data-path", "data-path", 604226522), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", 1016980252)], null), new cljs.core.Keyword(null, "query-path", "query-path", 799448444), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "query", 
          "query", 1121848378)], null), new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "data-updater", "data-updater", 3159121176), cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "list", "list", 1017226256), (new cljs.core.Keyword(null, "view-type", "view-type", 3689695444)).cljs$core$IFn$_invoke$arity$1(conf)) ? floor16.navigation.default_data_load : null], null), conf);
          var map__85419_85437__$1 = cljs.core.seq_QMARK_.call(null, map__85419_85436) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85419_85436) : map__85419_85436;
          var mode_conf_85438 = map__85419_85437__$1;
          var view_type_85439 = cljs.core.get.call(null, map__85419_85437__$1, new cljs.core.Keyword(null, "view-type", "view-type", 3689695444));
          var route_85440 = cljs.core.get.call(null, map__85419_85437__$1, new cljs.core.Keyword(null, "route", "route", 1122608571));
          var action__9194__auto___85441 = function(seq__85410, chunk__85411, count__85412, i__85413, map__85419_85436, map__85419_85437__$1, mode_conf_85438, view_type_85439, route_85440, vec__85418, mode, conf, seq__85410__$1, temp__4092__auto__) {
            return function(params__9195__auto__) {
              if (cljs.core.map_QMARK_.call(null, params__9195__auto__)) {
                var map__85420 = params__9195__auto__;
                var map__85420__$1 = cljs.core.seq_QMARK_.call(null, map__85420) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85420) : map__85420;
                var params = map__85420__$1;
                return floor16.navigation.do_route.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "mode", "mode", 1017261333), mode, new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328), mode_conf_85438, new cljs.core.Keyword(null, "params", "params", 4313443576), params], null));
              } else {
                if (cljs.core.vector_QMARK_.call(null, params__9195__auto__)) {
                  var map__85421 = params__9195__auto__;
                  var map__85421__$1 = cljs.core.seq_QMARK_.call(null, map__85421) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85421) : map__85421;
                  var params = map__85421__$1;
                  return floor16.navigation.do_route.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "mode", "mode", 1017261333), mode, new cljs.core.Keyword(null, "mode-conf", "mode-conf", 3240499328), mode_conf_85438, new cljs.core.Keyword(null, "params", "params", 4313443576), params], null));
                } else {
                  return null;
                }
              }
            };
          }(seq__85410, chunk__85411, count__85412, i__85413, map__85419_85436, map__85419_85437__$1, mode_conf_85438, view_type_85439, route_85440, vec__85418, mode, conf, seq__85410__$1, temp__4092__auto__);
          secretary.core.add_route_BANG_.call(null, cljs.core.identity.call(null, route_85440), action__9194__auto___85441);
          var G__85442 = cljs.core.next.call(null, seq__85410__$1);
          var G__85443 = null;
          var G__85444 = 0;
          var G__85445 = 0;
          seq__85410 = G__85442;
          chunk__85411 = G__85443;
          count__85412 = G__85444;
          i__85413 = G__85445;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
floor16.navigation.init_nav = function init_nav(p__85446) {
  var map__85448 = p__85446;
  var map__85448__$1 = cljs.core.seq_QMARK_.call(null, map__85448) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85448) : map__85448;
  var conf = map__85448__$1;
  var server_state_QMARK_ = cljs.core.get.call(null, map__85448__$1, new cljs.core.Keyword(null, "server-state?", "server-state?", 715053834));
  var route_handler = cljs.core.get.call(null, map__85448__$1, new cljs.core.Keyword(null, "route-handler", "route-handler", 1903920952));
  var url_composer = cljs.core.get.call(null, map__85448__$1, new cljs.core.Keyword(null, "url-composer", "url-composer", 4458618672));
  var app_modes = cljs.core.get.call(null, map__85448__$1, new cljs.core.Keyword(null, "app-modes", "app-modes", 1419288566));
  var app_state = cljs.core.get.call(null, map__85448__$1, new cljs.core.Keyword(null, "app-state", "app-state", 1424976215));
  cljs.core.swap_BANG_.call(null, floor16.navigation.system, cljs.core.merge, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "app", "app", 1014001043), app_state, new cljs.core.Keyword(null, "app-modes", "app-modes", 1419288566), app_modes, new cljs.core.Keyword(null, "url-composer", "url-composer", 4458618672), function() {
    var or__3443__auto__ = url_composer;
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return floor16.navigation.compose_data_key.call(null, floor16.navigation.compose_page_number.call(null, floor16.navigation.compose_raw_query.call(null, floor16.navigation.render_url)));
    }
  }(), new cljs.core.Keyword(null, "route-handler", "route-handler", 1903920952), function() {
    var or__3443__auto__ = route_handler;
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return floor16.navigation.handle_query_params.call(null, floor16.navigation.handle_data_key.call(null, floor16.navigation.handle_route));
    }
  }()], null), server_state_QMARK_ == null ? null : new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "server-state?", "server-state?", 715053834), server_state_QMARK_], null));
  if (cljs.core.truth_(floor16.global.server_side_QMARK_)) {
  } else {
    floor16.navigation.init_history.call(null);
  }
  if (cljs.core.truth_(app_modes)) {
    return floor16.navigation.init_routes.call(null, app_modes);
  } else {
    return null;
  }
};
floor16.navigation.goto$ = function() {
  var goto$__delegate = function(link, p__85449) {
    var vec__85451 = p__85449;
    var always_update_QMARK_ = cljs.core.nth.call(null, vec__85451, 0, null);
    var link__$1 = cljs.core._EQ_.call(null, "/", cljs.core.first.call(null, link)) ? cljs.core.subs.call(null, link, 1) : link;
    if (cljs.core._EQ_.call(null, link__$1, floor16.navigation.history.getToken())) {
      if (cljs.core.truth_(always_update_QMARK_)) {
        return secretary.core.dispatch_BANG_.call(null, [cljs.core.str("/"), cljs.core.str(link__$1)].join(""));
      } else {
        return null;
      }
    } else {
      return floor16.navigation.history.setToken(cljs.core._EQ_.call(null, "/", cljs.core.first.call(null, link__$1)) ? cljs.core.subs.call(null, link__$1, 1) : link__$1);
    }
  };
  var goto$ = function(link, var_args) {
    var p__85449 = null;
    if (arguments.length > 1) {
      p__85449 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return goto$__delegate.call(this, link, p__85449);
  };
  goto$.cljs$lang$maxFixedArity = 1;
  goto$.cljs$lang$applyTo = function(arglist__85452) {
    var link = cljs.core.first(arglist__85452);
    var p__85449 = cljs.core.rest(arglist__85452);
    return goto$__delegate(link, p__85449);
  };
  goto$.cljs$core$IFn$_invoke$arity$variadic = goto$__delegate;
  return goto$;
}();
floor16.navigation.url_update = function url_update(context) {
  return floor16.navigation.goto$.call(null, floor16.navigation.url_to.call(null, cljs.core.assoc.call(null, context, new cljs.core.Keyword(null, "url-update?", "url-update?", 3542326698), true)));
};
floor16.navigation.go_back = function go_back() {
  return window.history.back();
};
goog.provide("floor16.cookies");
goog.require("cljs.core");
floor16.cookies.utc_string_expires = function utc_string_expires(v) {
  if (typeof v === "number") {
    var d = new Date;
    var ed = d.getTime() + v * 1E3;
    d.setTime(ed);
    return d.toUTCString();
  } else {
    return v;
  }
};
floor16.cookies.cset = function() {
  var cset__delegate = function(kw, v, p__9294) {
    var vec__9297 = p__9294;
    var map__9298 = cljs.core.nth.call(null, vec__9297, 0, null);
    var map__9298__$1 = cljs.core.seq_QMARK_.call(null, map__9298) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9298) : map__9298;
    var secure = cljs.core.get.call(null, map__9298__$1, new cljs.core.Keyword(null, "secure", "secure", 4402597609));
    var domain = cljs.core.get.call(null, map__9298__$1, new cljs.core.Keyword(null, "domain", "domain", 3982673974));
    var path = cljs.core.get.call(null, map__9298__$1, new cljs.core.Keyword(null, "path", "path", 1017337751));
    var expires = cljs.core.get.call(null, map__9298__$1, new cljs.core.Keyword(null, "expires", "expires", 3999636134));
    var path__$1 = function() {
      var or__3443__auto__ = path;
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return "/";
      }
    }();
    var expires__$1 = cljs.core.truth_(expires) ? floor16.cookies.utc_string_expires.call(null, expires) : null;
    var v__$1 = window.encodeURIComponent(v);
    var n = cljs.core.name.call(null, kw);
    var ck = [cljs.core.str(n), cljs.core.str("\x3d"), cljs.core.str(v__$1), cljs.core.str(cljs.core.truth_(path__$1) ? [cljs.core.str("; path\x3d"), cljs.core.str(path__$1)].join("") : null), cljs.core.str(cljs.core.truth_(expires__$1) ? [cljs.core.str("; expires\x3d"), cljs.core.str(expires__$1)].join("") : null), cljs.core.str(cljs.core.truth_(domain) ? [cljs.core.str("; domain\x3d"), cljs.core.str(domain)].join("") : null), cljs.core.str(cljs.core.truth_(secure) ? [cljs.core.str("; secure\x3d"), 
    cljs.core.str(secure)].join("") : null)].join("");
    return document.cookie = ck;
  };
  var cset = function(kw, v, var_args) {
    var p__9294 = null;
    if (arguments.length > 2) {
      p__9294 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return cset__delegate.call(this, kw, v, p__9294);
  };
  cset.cljs$lang$maxFixedArity = 2;
  cset.cljs$lang$applyTo = function(arglist__9299) {
    var kw = cljs.core.first(arglist__9299);
    arglist__9299 = cljs.core.next(arglist__9299);
    var v = cljs.core.first(arglist__9299);
    var p__9294 = cljs.core.rest(arglist__9299);
    return cset__delegate(kw, v, p__9294);
  };
  cset.cljs$core$IFn$_invoke$arity$variadic = cset__delegate;
  return cset;
}();
floor16.cookies.cget = function cget(kw) {
  var n = cljs.core.name.call(null, kw);
  var re = new RegExp([cljs.core.str("(?:^|; )"), cljs.core.str(n.replace(/([\.$?*|{}\(\)\[\]\\\\/\+^])/, "\\$1")), cljs.core.str("\x3d([^;]*)")].join(""));
  var m = document.cookie.match(re);
  if (cljs.core.truth_(m)) {
    return m[1];
  } else {
    return null;
  }
};
floor16.cookies.cremove = function cremove(kw) {
  return floor16.cookies.cset.call(null, kw, "", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "expires", "expires", 3999636134), -1], null));
};
goog.provide("floor16.auth");
goog.require("cljs.core");
goog.require("om.core");
goog.require("om.core");
goog.require("floor16.cookies");
goog.require("floor16.cookies");
goog.require("floor16.xhr");
goog.require("floor16.xhr");
floor16.auth.sys_data = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
floor16.auth.app = function app() {
  return(new cljs.core.Keyword(null, "app", "app", 1014001043)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.auth.sys_data));
};
floor16.auth.api_url = function api_url() {
  return(new cljs.core.Keyword(null, "api-url", "api-url", 4507306670)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.auth.sys_data));
};
floor16.auth.get_user_param = function get_user_param(kw) {
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, floor16.auth.app.call(null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "user", "user", 1017503549), kw], null));
};
floor16.auth.token = function token() {
  return floor16.auth.get_user_param.call(null, new cljs.core.Keyword(null, "token", "token", 1124445547));
};
floor16.auth.auth_coockie = function() {
  var auth_coockie__delegate = function(meth, p__72651) {
    var vec__72653 = p__72651;
    var t = cljs.core.nth.call(null, vec__72653, 0, null);
    if (cljs.core.truth_(floor16.auth.token)) {
      return meth.call(null, new cljs.core.Keyword(null, "session-id", "session-id", 2675709732), t);
    } else {
      return meth.call(null, new cljs.core.Keyword(null, "session-id", "session-id", 2675709732));
    }
  };
  var auth_coockie = function(meth, var_args) {
    var p__72651 = null;
    if (arguments.length > 1) {
      p__72651 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return auth_coockie__delegate.call(this, meth, p__72651);
  };
  auth_coockie.cljs$lang$maxFixedArity = 1;
  auth_coockie.cljs$lang$applyTo = function(arglist__72654) {
    var meth = cljs.core.first(arglist__72654);
    var p__72651 = cljs.core.rest(arglist__72654);
    return auth_coockie__delegate(meth, p__72651);
  };
  auth_coockie.cljs$core$IFn$_invoke$arity$variadic = auth_coockie__delegate;
  return auth_coockie;
}();
floor16.auth.handle_autologin_response = function handle_autologin_response() {
  return function(response) {
    cljs.core.println.call(null, "Autologin response:", response);
    if (cljs.core._EQ_.call(null, 200, (new cljs.core.Keyword(null, "status", "status", 4416389988)).cljs$core$IFn$_invoke$arity$1(response))) {
      return cljs.core.swap_BANG_.call(null, floor16.auth.app.call(null), cljs.core.assoc, new cljs.core.Keyword(null, "user", "user", 1017503549), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "body", "body", 1016933652)).cljs$core$IFn$_invoke$arity$1(response), new cljs.core.Keyword(null, "autologin", "autologin", 2687056524), true));
    } else {
      return floor16.auth.auth_coockie.call(null, floor16.cookies.cremove);
    }
  };
};
floor16.auth.auth_sys = function auth_sys(p__72656) {
  var map__72658 = p__72656;
  var map__72658__$1 = cljs.core.seq_QMARK_.call(null, map__72658) ? cljs.core.apply.call(null, cljs.core.hash_map, map__72658) : map__72658;
  var app = cljs.core.get.call(null, map__72658__$1, new cljs.core.Keyword(null, "app", "app", 1014001043));
  var url = cljs.core.get.call(null, map__72658__$1, new cljs.core.Keyword(null, "api-url", "api-url", 4507306670));
  cljs.core.swap_BANG_.call(null, floor16.auth.sys_data, function(p1__72655_SHARP_) {
    return cljs.core.assoc.call(null, cljs.core.assoc.call(null, p1__72655_SHARP_, new cljs.core.Keyword(null, "app", "app", 1014001043), app), new cljs.core.Keyword(null, "api-url", "api-url", 4507306670), url);
  });
  var temp__4092__auto__ = floor16.auth.auth_coockie.call(null, floor16.cookies.cget);
  if (cljs.core.truth_(temp__4092__auto__)) {
    var t = temp__4092__auto__;
    return floor16.xhr.cb_request.call(null, floor16.xhr.bearer_authorization.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 4231316563), new cljs.core.Keyword(null, "get", "get", 1014006472), new cljs.core.Keyword(null, "url", "url", 1014020321), floor16.auth.api_url.call(null)], null), t), floor16.auth.handle_autologin_response.call(null));
  } else {
    return null;
  }
};
floor16.auth.handle_login_response = function() {
  var handle_login_response__delegate = function(p__72659) {
    var vec__72661 = p__72659;
    var cb = cljs.core.nth.call(null, vec__72661, 0, null);
    var err_cb = cljs.core.nth.call(null, vec__72661, 1, null);
    return function(response) {
      cljs.core.println.call(null, "Login response:", response);
      if (cljs.core._EQ_.call(null, 200, (new cljs.core.Keyword(null, "status", "status", 4416389988)).cljs$core$IFn$_invoke$arity$1(response))) {
        cljs.core.swap_BANG_.call(null, floor16.auth.app.call(null), cljs.core.assoc, new cljs.core.Keyword(null, "user", "user", 1017503549), (new cljs.core.Keyword(null, "body", "body", 1016933652)).cljs$core$IFn$_invoke$arity$1(response));
        floor16.auth.auth_coockie.call(null, floor16.cookies.cset, floor16.auth.token.call(null));
        if (cljs.core.truth_(cb)) {
          return cb.call(null);
        } else {
          return null;
        }
      } else {
        if (cljs.core.truth_(err_cb)) {
          return err_cb.call(null);
        } else {
          return null;
        }
      }
    };
  };
  var handle_login_response = function(var_args) {
    var p__72659 = null;
    if (arguments.length > 0) {
      p__72659 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return handle_login_response__delegate.call(this, p__72659);
  };
  handle_login_response.cljs$lang$maxFixedArity = 0;
  handle_login_response.cljs$lang$applyTo = function(arglist__72662) {
    var p__72659 = cljs.core.seq(arglist__72662);
    return handle_login_response__delegate(p__72659);
  };
  handle_login_response.cljs$core$IFn$_invoke$arity$variadic = handle_login_response__delegate;
  return handle_login_response;
}();
floor16.auth.handle_logout_response = function handle_logout_response() {
  return function(response) {
    cljs.core.println.call(null, "Logout response:", response);
    floor16.auth.auth_coockie.call(null, floor16.cookies.cremove);
    return cljs.core.swap_BANG_.call(null, floor16.auth.app.call(null), cljs.core.dissoc, new cljs.core.Keyword(null, "user", "user", 1017503549));
  };
};
floor16.auth.get_user = function get_user() {
  return(new cljs.core.Keyword(null, "user", "user", 1017503549)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, floor16.auth.app.call(null)));
};
floor16.auth.do_login = function do_login(creds) {
  return do_login.call(null, creds, null, null);
};
floor16.auth.do_login = function do_login(creds, cb) {
  return do_login.call(null, creds, cb, null);
};
floor16.auth.do_login = function do_login(creds, cb, err_cb) {
  return floor16.xhr.cb_request.call(null, floor16.xhr.content_type.call(null, floor16.xhr.accept.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "method", "method", 4231316563), new cljs.core.Keyword(null, "post", "post", 1017351186), new cljs.core.Keyword(null, "url", "url", 1014020321), floor16.auth.api_url.call(null), new cljs.core.Keyword(null, "body", "body", 1016933652), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "grant_type", "grant_type", 
  1863830511), "password", new cljs.core.Keyword(null, "username", "username", 748190792), (new cljs.core.Keyword(null, "username", "username", 748190792)).cljs$core$IFn$_invoke$arity$1(creds), new cljs.core.Keyword(null, "password", "password", 2230889997), (new cljs.core.Keyword(null, "password", "password", 2230889997)).cljs$core$IFn$_invoke$arity$1(creds)], null)], null), new cljs.core.Keyword(null, "edn", "edn", 1014004513)), new cljs.core.Keyword(null, "url-encode", "url-encode", 3129387942)), 
  floor16.auth.handle_login_response.call(null, cb, err_cb));
};
floor16.auth.do_logout = function do_logout() {
  var temp__4092__auto__ = floor16.auth.token.call(null);
  if (cljs.core.truth_(temp__4092__auto__)) {
    var t = temp__4092__auto__;
    return floor16.xhr.cb_request.call(null, floor16.xhr.bearer_authorization.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 4231316563), new cljs.core.Keyword(null, "delete", "delete", 3973413149), new cljs.core.Keyword(null, "url", "url", 1014020321), floor16.auth.api_url.call(null)], null), t), floor16.auth.handle_logout_response.call(null));
  } else {
    return null;
  }
};
floor16.auth.guest_QMARK_ = function guest_QMARK_() {
  return floor16.auth.token.call(null) == null;
};
floor16.auth.autologin_QMARK_ = function autologin_QMARK_() {
  return floor16.auth.get_user_param.call(null, new cljs.core.Keyword(null, "autologin", "autologin", 2687056524));
};
goog.provide("floor16.lang");
goog.require("cljs.core");
floor16.lang.v = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ru", "ru", 1013907893), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "rub", "rub", 1014017521), new cljs.core.Keyword(null, "furniture", "furniture", 4728441700), new cljs.core.Keyword(null, "districts", "districts", 1381773847), new cljs.core.Keyword(null, "intercom", "intercom", 1584304791), new cljs.core.Keyword(null, "internet", "internet", 1584315059), new cljs.core.Keyword(null, "no", 
"no", 1013907763), new cljs.core.Keyword(null, "additionals", "additionals", 1269629086), new cljs.core.Keyword(null, "data-pager-next", "data-pager-next", 2462318642), new cljs.core.Keyword(null, "no-pets", "no-pets", 3077892914), new cljs.core.Keyword(null, "security", "security", 1963027122), new cljs.core.Keyword(null, "empty-search", "empty-search", 3924434330), new cljs.core.Keyword(null, "loggia", "loggia", 4211534189), new cljs.core.Keyword(null, "flat", "flat", 1017049835), new cljs.core.Keyword(null, 
"balcony", "balcony", 674779190), new cljs.core.Keyword(null, "no-kids", "no-kids", 3077747307), new cljs.core.Keyword(null, "not-only-russo", "not-only-russo", 630581815), new cljs.core.Keyword(null, "floor", "floor", 1111431038), new cljs.core.Keyword(null, "only-russo", "only-russo", 4375124733), new cljs.core.Keyword(null, "washer", "washer", 4513883902), new cljs.core.Keyword(null, "hasnt", "hasnt", 1112954194), new cljs.core.Keyword(null, "select-value", "select-value", 1968185554), new cljs.core.Keyword(null, 
"toilet", "toilet", 4440631679), new cljs.core.Keyword(null, "area", "area", 1016906751), new cljs.core.Keyword(null, "pets", "pets", 1017341606), new cljs.core.Keyword(null, "district", "district", 1302865664), new cljs.core.Keyword(null, "conditioner", "conditioner", 2222035578), new cljs.core.Keyword(null, "addiction", "addiction", 1628959361), new cljs.core.Keyword(null, "room", "room", 1017410637), new cljs.core.Keyword(null, "no-price", "no-price", 573419951), new cljs.core.Keyword(null, "floors", 
"floors", 4037235033), new cljs.core.Keyword(null, "loading-search", "loading-search", 3456648907), new cljs.core.Keyword(null, "building-type", "building-type", 587801125), new cljs.core.Keyword(null, "concierge", "concierge", 4418492197), new cljs.core.Keyword(null, "city", "city", 1016958173), new cljs.core.Keyword(null, "facilities", "facilities", 1550587379), new cljs.core.Keyword(null, "with-photo", "with-photo", 2103036381), new cljs.core.Keyword(null, "studio", "studio", 4416970056), new cljs.core.Keyword(null, 
"data-pager-prev", "data-pager-prev", 2462390130), new cljs.core.Keyword(null, "appartment", "appartment", 4044466290), new cljs.core.Keyword(null, "kids", "kids", 1017195999), new cljs.core.Keyword(null, "person-name", "person-name", 541966709), new cljs.core.Keyword(null, "tv", "tv", 1013907956), new cljs.core.Keyword(null, "kidsnpets", "kidsnpets", 1154728391), new cljs.core.Keyword(null, "no-address", "no-address", 2077634394), new cljs.core.Keyword(null, "frige", "frige", 1111603757), new cljs.core.Keyword(null, 
"bow-window", "bow-window", 1902675141), new cljs.core.Keyword(null, "parking", "parking", 4515669802), new cljs.core.Keyword(null, "safety", "safety", 4398977604), new cljs.core.Keyword(null, "dont-care", "dont-care", 3042246463), new cljs.core.Keyword(null, "ad", "ad", 1013907349), new cljs.core.Keyword(null, "distance", "distance", 1302364007), new cljs.core.Keyword(null, "selected", "selected", 2205476365), new cljs.core.Keyword(null, "phone-button", "phone-button", 2927685603), new cljs.core.Keyword(null, 
"restrictions", "restrictions", 4160575897), new cljs.core.Keyword(null, "has", "has", 1014007308), new cljs.core.Keyword(null, "metro", "metro", 1117692043)], ["\u0440\u0443\u0431.", "\u043c\u0435\u0431\u0435\u043b\u044c", "\u0440\u0430\u0439\u043e\u043d\u044b", "\u0434\u043e\u043c\u043e\u0444\u043e\u043d", "\u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442", "\u043d\u0435\u0442", "\u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b", 
"\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \x3e", "\u0441 \u0436\u0438\u0432\u043e\u0442\u043d\u044b\u043c\u0438 \u043d\u0435\u043b\u044c\u0437\u044f", "\u043e\u0445\u0440\u0430\u043d\u0430", "\u041f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043d\u0438 \u043e\u0434\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f. \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0437\u0430\u0434\u0430\u0442\u044c \u043c\u0435\u043d\u0435\u0435 \u0436\u0435\u0441\u0442\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f. \u0423\u0447\u0442\u0438\u0442\u0435, \u0447\u0442\u043e \u0434\u0430\u043b\u0435\u043a\u043e \u043d\u0435 \u0443 \u0432\u0441\u0435\u0445 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439 \u0443\u043a\u0430\u0437\u0430\u043d\u044b \u0432\u0441\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b. \u041a \u043f\u0440\u0438\u043c\u0435\u0440\u0443, \u0432 \u043a\u0432\u0430\u0440\u0442\u0438\u0440\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043c\u0435\u0431\u0435\u043b\u044c, \u043d\u043e \u0432 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0438 \u043e\u0431 \u044d\u0442\u043e\u043c \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043d\u0435 \u0441\u043a\u0430\u0437\u0430\u043d\u043e.", 
"\u043b\u043e\u0434\u0436\u0438\u044f", "\u043a\u0432\u0430\u0440\u0442\u0438\u0440\u0430", "\u0431\u0430\u043b\u043a\u043e\u043d", "\u0441 \u0434\u0435\u0442\u044c\u043c\u0438 \u043d\u0435\u043b\u044c\u0437\u044f", "\u0431\u0435\u0437 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0439", "\u044d\u0442\u0430\u0436", "\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0441\u043b\u0430\u0432\u044f\u043d", "\u0441\u0442\u0438\u0440\u0430\u043b\u044c\u043d\u0430\u044f \u043c\u0430\u0448\u0438\u043d\u0430", 
"\u043d\u0435\u0442", "\u0432\u044b\u0431\u0440\u0430\u0442\u044c", "\u0441\u0430\u043d\u0443\u0437\u0435\u043b", "\u043f\u043b\u043e\u0449\u0430\u0434\u044c", "\u043c\u043e\u0436\u043d\u043e \u0441 \u0436\u0438\u0432\u043e\u0442\u043d\u044b\u043c\u0438", "\u0440\u0430\u0439\u043e\u043d", "\u043a\u043e\u043d\u0434\u0438\u0446\u0438\u043e\u043d\u0435\u0440", "\u0431\u0435\u0437 \u0432\u0440\u0435\u0434\u043d\u044b\u0445 \u043f\u0440\u0438\u0432\u044b\u0447\u0435\u043a", new cljs.core.PersistentArrayMap(null, 
3, [1, "\u043a\u043e\u043c\u043d\u0430\u0442\u0430", 2, "\u043a\u043e\u043c\u043d\u0430\u0442\u044b", 5, "\u043a\u043e\u043c\u043d\u0430\u0442"], null), "\u0446\u0435\u043d\u0430 \u043f\u043e \u0434\u043e\u0433\u043e\u0432\u043e\u0440\u0435\u043d\u043d\u043e\u0441\u0442\u0438", "\u044d\u0442\u0430\u0436\u043d\u043e\u0441\u0442\u044c", "\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u0438\u0441\u043a \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439 \u043f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443...", 
"\u0442\u0438\u043f \u0434\u043e\u043c\u0430", "\u043a\u043e\u043d\u0441\u044c\u0435\u0440\u0436", "\u0413\u043e\u0440\u043e\u0434", "\u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430", "\u0442\u043e\u043b\u044c\u043a\u043e \u0441 \u0444\u043e\u0442\u043e", "\u0441\u0442\u0443\u0434\u0438\u044f", "\x3c \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0430\u044f", "\u043a\u0432\u0430\u0440\u0442\u0438\u0440\u0430", "\u043c\u043e\u0436\u043d\u043e \u0441 \u0434\u0435\u0442\u044c\u043c\u0438", "\u0430\u0440\u0435\u043d\u0434\u043e\u0434\u0430\u0442\u0435\u043b\u044c", 
"\u0442\u0435\u043b\u0435\u0432\u0438\u0437\u043e\u0440", "\u0434\u0435\u0442\u0438 \u0438 \u0436\u0438\u0432\u043e\u0442\u043d\u044b\u0435", "\u0431\u0435\u0437 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0430\u0434\u0440\u0435\u0441\u0430", "\u0445\u043e\u043b\u043e\u0434\u0438\u043b\u044c\u043d\u0438\u043a", "\u044d\u0440\u043a\u0435\u0440", "\u043f\u0430\u0440\u043a\u043e\u0432\u043a\u0430", "\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c", "\u043d\u0435 \u0432\u0430\u0436\u043d\u043e", 
new cljs.core.PersistentArrayMap(null, 3, [1, "\u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0435", 2, "\u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f", 5, "\u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439"], null), "\u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435", "\u0432\u044b\u0431\u0440\u0430\u043d\u043e", "\u043f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u043d\u043e\u043c\u0435\u0440", "\u043f\u0440\u0435\u0434\u0440\u0430\u0441\u0441\u0443\u0434\u043a\u0438", 
"\u0435\u0441\u0442\u044c", "\u043c\u0435\u0442\u0440\u043e"])], null);
floor16.lang.vocabulary = function vocabulary() {
  return(new cljs.core.Keyword(null, "ru", "ru", 1013907893)).cljs$core$IFn$_invoke$arity$1(floor16.lang.v);
};
floor16.lang.ru_plural_form = function ru_plural_form(n) {
  var d00 = cljs.core.quot.call(null, cljs.core.rem.call(null, n, 100), 10);
  var d0 = cljs.core.rem.call(null, n, 10);
  if (cljs.core._EQ_.call(null, 1, d00)) {
    return 5;
  } else {
    if (cljs.core._EQ_.call(null, d0, 0) || d0 >= 5) {
      return 5;
    } else {
      if (d0 >= 2) {
        return 2;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 1;
        } else {
          return null;
        }
      }
    }
  }
};
floor16.lang.ru_floor_ending = function ru_floor_ending(n) {
  return cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 3, [1, "", 2, "-\u0445", 5, "-\u0442\u0438"], null), floor16.lang.ru_plural_form.call(null, n));
};
floor16.lang.l = function() {
  var l__delegate = function(kw, p__82854) {
    var vec__82856 = p__82854;
    var n = cljs.core.nth.call(null, vec__82856, 0, null);
    var temp__4090__auto__ = kw.call(null, floor16.lang.vocabulary.call(null));
    if (cljs.core.truth_(temp__4090__auto__)) {
      var word = temp__4090__auto__;
      if (cljs.core.map_QMARK_.call(null, word)) {
        return cljs.core.get.call(null, word, floor16.lang.ru_plural_form.call(null, function() {
          var or__3443__auto__ = n;
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return 1;
          }
        }()));
      } else {
        return word;
      }
    } else {
      return cljs.core.name.call(null, kw);
    }
  };
  var l = function(kw, var_args) {
    var p__82854 = null;
    if (arguments.length > 1) {
      p__82854 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return l__delegate.call(this, kw, p__82854);
  };
  l.cljs$lang$maxFixedArity = 1;
  l.cljs$lang$applyTo = function(arglist__82857) {
    var kw = cljs.core.first(arglist__82857);
    var p__82854 = cljs.core.rest(arglist__82857);
    return l__delegate(kw, p__82854);
  };
  l.cljs$core$IFn$_invoke$arity$variadic = l__delegate;
  return l;
}();
floor16.lang.lstr = function() {
  var lstr__delegate = function(s, p__82858) {
    var vec__82860 = p__82858;
    var n = cljs.core.nth.call(null, vec__82860, 0, null);
    var kw = cljs.core.keyword.call(null, s);
    var temp__4090__auto__ = kw.call(null, floor16.lang.vocabulary.call(null));
    if (cljs.core.truth_(temp__4090__auto__)) {
      var word = temp__4090__auto__;
      if (cljs.core.map_QMARK_.call(null, word)) {
        return cljs.core.get.call(null, word, floor16.lang.ru_plural_form.call(null, function() {
          var or__3443__auto__ = n;
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return 1;
          }
        }()));
      } else {
        return word;
      }
    } else {
      return s;
    }
  };
  var lstr = function(s, var_args) {
    var p__82858 = null;
    if (arguments.length > 1) {
      p__82858 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return lstr__delegate.call(this, s, p__82858);
  };
  lstr.cljs$lang$maxFixedArity = 1;
  lstr.cljs$lang$applyTo = function(arglist__82861) {
    var s = cljs.core.first(arglist__82861);
    var p__82858 = cljs.core.rest(arglist__82861);
    return lstr__delegate(s, p__82858);
  };
  lstr.cljs$core$IFn$_invoke$arity$variadic = lstr__delegate;
  return lstr;
}();
goog.exportSymbol("floor16.lang.lstr", floor16.lang.lstr);
goog.provide("floor16.ui.generic");
goog.require("cljs.core");
goog.require("floor16.lang");
goog.require("cljs.core.async");
goog.require("floor16.navigation");
goog.require("floor16.navigation");
goog.require("goog.events");
goog.require("floor16.datum");
goog.require("floor16.global");
goog.require("goog.events.EventType");
goog.require("floor16.auth");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("floor16.auth");
goog.require("floor16.lang");
goog.require("floor16.datum");
goog.require("om.dom");
goog.require("floor16.global");
goog.require("cljs.core.async");
goog.require("goog.events");
floor16.ui.generic.active_QMARK_ = function active_QMARK_(owner) {
  return om.core.get_state.call(null, owner, new cljs.core.Keyword("floor16.ui.generic", "active", "floor16.ui.generic/active", 4493575432));
};
floor16.ui.generic.active_BANG_ = function active_BANG_(owner, v) {
  return om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword("floor16.ui.generic", "active", "floor16.ui.generic/active", 4493575432), v);
};
floor16.ui.generic.self_closeable = function self_closeable(cursor, owner, p__85172) {
  var map__85193 = p__85172;
  var map__85193__$1 = cljs.core.seq_QMARK_.call(null, map__85193) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85193) : map__85193;
  var opts = map__85193__$1;
  var do_close = cljs.core.get.call(null, map__85193__$1, new cljs.core.Keyword(null, "do-close", "do-close", 4607974824));
  var view = cljs.core.get.call(null, map__85193__$1, new cljs.core.Keyword(null, "view", "view", 1017523735));
  if (typeof floor16.ui.generic.t85194 !== "undefined") {
  } else {
    floor16.ui.generic.t85194 = function(view, do_close, opts, map__85193, p__85172, owner, cursor, self_closeable, meta85195) {
      this.view = view;
      this.do_close = do_close;
      this.opts = opts;
      this.map__85193 = map__85193;
      this.p__85172 = p__85172;
      this.owner = owner;
      this.cursor = cursor;
      this.self_closeable = self_closeable;
      this.meta85195 = meta85195;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.generic.t85194.cljs$lang$type = true;
    floor16.ui.generic.t85194.cljs$lang$ctorStr = "floor16.ui.generic/t85194";
    floor16.ui.generic.t85194.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.ui.generic/t85194");
    };
    floor16.ui.generic.t85194.prototype.om$core$IRenderState$ = true;
    floor16.ui.generic.t85194.prototype.om$core$IRenderState$render_state$arity$2 = function(this$, p__85197) {
      var self__ = this;
      var map__85198 = p__85197;
      var map__85198__$1 = cljs.core.seq_QMARK_.call(null, map__85198) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85198) : map__85198;
      var close_chan = cljs.core.get.call(null, map__85198__$1, new cljs.core.Keyword(null, "close-chan", "close-chan", 3200632185));
      var this$__$1 = this;
      return om.core.build.call(null, self__.view, self__.cursor, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "init-state", "init-state", 4479067398), om.core.get_state.call(null, self__.owner), new cljs.core.Keyword(null, "opts", "opts", 1017322386), cljs.core.assoc.call(null, cljs.core.dissoc.call(null, self__.opts, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "view", "view", 1017523735), new cljs.core.Keyword(null, 
      "do-close", "do-close", 4607974824)], null)), new cljs.core.Keyword(null, "close-chan", "close-chan", 3200632185), close_chan)], null));
    };
    floor16.ui.generic.t85194.prototype.om$core$IWillUnmount$ = true;
    floor16.ui.generic.t85194.prototype.om$core$IWillUnmount$will_unmount$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      var temp__4092__auto__ = om.core.get_state.call(null, self__.owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("floor16.ui.generic", "window-listener", "floor16.ui.generic/window-listener", 1117526547)], null));
      if (cljs.core.truth_(temp__4092__auto__)) {
        var mouse_handler = temp__4092__auto__;
        return goog.events.unlisten(window, goog.events.EventType.MOUSEDOWN, mouse_handler);
      } else {
        return null;
      }
    };
    floor16.ui.generic.t85194.prototype.om$core$IDidMount$ = true;
    floor16.ui.generic.t85194.prototype.om$core$IDidMount$did_mount$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      var mouse_handler = function(p1__85171_SHARP_) {
        if (cljs.core.truth_(self__.do_close)) {
          if (floor16.global.in_QMARK_.call(null, p1__85171_SHARP_, om.core.get_node.call(null, self__.owner))) {
            return null;
          } else {
            p1__85171_SHARP_.stopPropagation();
            return self__.do_close.call(null);
          }
        } else {
          return null;
        }
      };
      goog.events.listen(window, goog.events.EventType.MOUSEDOWN, mouse_handler);
      return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("floor16.ui.generic", "window-listener", "floor16.ui.generic/window-listener", 1117526547)], null), mouse_handler);
    };
    floor16.ui.generic.t85194.prototype.om$core$IWillMount$ = true;
    floor16.ui.generic.t85194.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var close_chan = cljs.core.async.chan.call(null);
      om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "close-chan", "close-chan", 3200632185), close_chan);
      var c__6217__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function() {
        var f__6218__auto__ = function() {
          var switch__6202__auto__ = function(state_85203) {
            var state_val_85204 = state_85203[1];
            if (state_val_85204 === 2) {
              var inst_85200 = state_85203[2];
              var inst_85201 = self__.do_close.call(null);
              var state_85203__$1 = function() {
                var statearr_85205 = state_85203;
                statearr_85205[7] = inst_85200;
                return statearr_85205;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_85203__$1, inst_85201);
            } else {
              if (state_val_85204 === 1) {
                var state_85203__$1 = state_85203;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_85203__$1, 2, close_chan);
              } else {
                return null;
              }
            }
          };
          return function(switch__6202__auto__) {
            return function() {
              var state_machine__6203__auto__ = null;
              var state_machine__6203__auto____0 = function() {
                var statearr_85209 = [null, null, null, null, null, null, null, null];
                statearr_85209[0] = state_machine__6203__auto__;
                statearr_85209[1] = 1;
                return statearr_85209;
              };
              var state_machine__6203__auto____1 = function(state_85203) {
                while (true) {
                  var ret_value__6204__auto__ = function() {
                    try {
                      while (true) {
                        var result__6205__auto__ = switch__6202__auto__.call(null, state_85203);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6205__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6205__auto__;
                        }
                        break;
                      }
                    } catch (e85210) {
                      if (e85210 instanceof Object) {
                        var ex__6206__auto__ = e85210;
                        var statearr_85211_85213 = state_85203;
                        statearr_85211_85213[5] = ex__6206__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_85203);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e85210;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6204__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__85214 = state_85203;
                    state_85203 = G__85214;
                    continue;
                  } else {
                    return ret_value__6204__auto__;
                  }
                  break;
                }
              };
              state_machine__6203__auto__ = function(state_85203) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6203__auto____0.call(this);
                  case 1:
                    return state_machine__6203__auto____1.call(this, state_85203);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6203__auto____0;
              state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6203__auto____1;
              return state_machine__6203__auto__;
            }();
          }(switch__6202__auto__);
        }();
        var state__6219__auto__ = function() {
          var statearr_85212 = f__6218__auto__.call(null);
          statearr_85212[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6217__auto__;
          return statearr_85212;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6219__auto__);
      });
      return c__6217__auto__;
    };
    floor16.ui.generic.t85194.prototype.cljs$core$IMeta$_meta$arity$1 = function(_85196) {
      var self__ = this;
      var _85196__$1 = this;
      return self__.meta85195;
    };
    floor16.ui.generic.t85194.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_85196, meta85195__$1) {
      var self__ = this;
      var _85196__$1 = this;
      return new floor16.ui.generic.t85194(self__.view, self__.do_close, self__.opts, self__.map__85193, self__.p__85172, self__.owner, self__.cursor, self__.self_closeable, meta85195__$1);
    };
    floor16.ui.generic.__GT_t85194 = function __GT_t85194(view__$1, do_close__$1, opts__$1, map__85193__$2, p__85172__$1, owner__$1, cursor__$1, self_closeable__$1, meta85195) {
      return new floor16.ui.generic.t85194(view__$1, do_close__$1, opts__$1, map__85193__$2, p__85172__$1, owner__$1, cursor__$1, self_closeable__$1, meta85195);
    };
  }
  return new floor16.ui.generic.t85194(view, do_close, opts, map__85193__$1, p__85172, owner, cursor, self_closeable, null);
};
floor16.ui.generic.drop_down_menu = function drop_down_menu(cursor, owner, p__85215) {
  var map__85222 = p__85215;
  var map__85222__$1 = cljs.core.seq_QMARK_.call(null, map__85222) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85222) : map__85222;
  var opts = map__85222__$1;
  var nil_caption = cljs.core.get.call(null, map__85222__$1, new cljs.core.Keyword(null, "nil-caption", "nil-caption", 1496742300));
  var can_nil = cljs.core.get.call(null, map__85222__$1, new cljs.core.Keyword(null, "can-nil", "can-nil", 1562520070));
  var after_update = cljs.core.get.call(null, map__85222__$1, new cljs.core.Keyword(null, "after-update", "after-update", 4410540364));
  var close_chan = cljs.core.get.call(null, map__85222__$1, new cljs.core.Keyword(null, "close-chan", "close-chan", 3200632185));
  var dict = cljs.core.get.call(null, map__85222__$1, new cljs.core.Keyword(null, "dict", "dict", 1016987432));
  var data_key = cljs.core.get.call(null, map__85222__$1, new cljs.core.Keyword(null, "data-key", "data-key", 2801799470));
  if (typeof floor16.ui.generic.t85223 !== "undefined") {
  } else {
    floor16.ui.generic.t85223 = function(drop_down_menu, opts, map__85222, nil_caption, can_nil, dict, data_key, after_update, owner, cursor, p__85215, close_chan, meta85224) {
      this.drop_down_menu = drop_down_menu;
      this.opts = opts;
      this.map__85222 = map__85222;
      this.nil_caption = nil_caption;
      this.can_nil = can_nil;
      this.dict = dict;
      this.data_key = data_key;
      this.after_update = after_update;
      this.owner = owner;
      this.cursor = cursor;
      this.p__85215 = p__85215;
      this.close_chan = close_chan;
      this.meta85224 = meta85224;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.generic.t85223.cljs$lang$type = true;
    floor16.ui.generic.t85223.cljs$lang$ctorStr = "floor16.ui.generic/t85223";
    floor16.ui.generic.t85223.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.ui.generic/t85223");
    };
    floor16.ui.generic.t85223.prototype.om$core$IRenderState$ = true;
    floor16.ui.generic.t85223.prototype.om$core$IRenderState$render_state$arity$2 = function(this$, p__85226) {
      var self__ = this;
      var map__85227 = p__85226;
      var map__85227__$1 = cljs.core.seq_QMARK_.call(null, map__85227) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85227) : map__85227;
      var ss = map__85227__$1;
      var items = cljs.core.get.call(null, map__85227__$1, new cljs.core.Keyword(null, "items", "items", 1114430258));
      var this$__$1 = this;
      var dk = floor16.datum.dkey.call(null, self__.dict);
      var dn = floor16.datum.dname.call(null, self__.dict);
      return cljs.core.apply.call(null, om.dom.ul, {"className":"drop-down-menu"}, cljs.core.map.call(null, function(i) {
        return React.DOM.li({"onClick":function(e) {
          om.core.update_BANG_.call(null, self__.cursor, self__.data_key, dk.call(null, i));
          if (cljs.core.truth_(self__.after_update)) {
            self__.after_update.call(null);
          } else {
          }
          return cljs.core.async.put_BANG_.call(null, self__.close_chan, new cljs.core.Keyword(null, "close", "close", 1108660586));
        }}, dn.call(null, i));
      }, cljs.core.truth_(self__.can_nil) ? cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.PersistentArrayMap.fromArray([dk, null, dn, self__.nil_caption], true, false), items)) : items));
    };
    floor16.ui.generic.t85223.prototype.om$core$IWillReceiveProps$ = true;
    floor16.ui.generic.t85223.prototype.om$core$IWillReceiveProps$will_receive_props$arity$2 = function(this$, next_props) {
      var self__ = this;
      var this$__$1 = this;
      return floor16.datum.load_all.call(null, self__.dict, self__.owner, new cljs.core.Keyword(null, "items", "items", 1114430258));
    };
    floor16.ui.generic.t85223.prototype.om$core$IWillMount$ = true;
    floor16.ui.generic.t85223.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return floor16.datum.load_all.call(null, self__.dict, self__.owner, new cljs.core.Keyword(null, "items", "items", 1114430258));
    };
    floor16.ui.generic.t85223.prototype.cljs$core$IMeta$_meta$arity$1 = function(_85225) {
      var self__ = this;
      var _85225__$1 = this;
      return self__.meta85224;
    };
    floor16.ui.generic.t85223.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_85225, meta85224__$1) {
      var self__ = this;
      var _85225__$1 = this;
      return new floor16.ui.generic.t85223(self__.drop_down_menu, self__.opts, self__.map__85222, self__.nil_caption, self__.can_nil, self__.dict, self__.data_key, self__.after_update, self__.owner, self__.cursor, self__.p__85215, self__.close_chan, meta85224__$1);
    };
    floor16.ui.generic.__GT_t85223 = function __GT_t85223(drop_down_menu__$1, opts__$1, map__85222__$2, nil_caption__$1, can_nil__$1, dict__$1, data_key__$1, after_update__$1, owner__$1, cursor__$1, p__85215__$1, close_chan__$1, meta85224) {
      return new floor16.ui.generic.t85223(drop_down_menu__$1, opts__$1, map__85222__$2, nil_caption__$1, can_nil__$1, dict__$1, data_key__$1, after_update__$1, owner__$1, cursor__$1, p__85215__$1, close_chan__$1, meta85224);
    };
  }
  return new floor16.ui.generic.t85223(drop_down_menu, opts, map__85222__$1, nil_caption, can_nil, dict, data_key, after_update, owner, cursor, p__85215, close_chan, null);
};
floor16.ui.generic.select = function select(cursor, owner, p__85228) {
  var map__85233 = p__85228;
  var map__85233__$1 = cljs.core.seq_QMARK_.call(null, map__85233) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85233) : map__85233;
  var opts = map__85233__$1;
  var can_nil = cljs.core.get.call(null, map__85233__$1, new cljs.core.Keyword(null, "can-nil", "can-nil", 1562520070));
  var after_update = cljs.core.get.call(null, map__85233__$1, new cljs.core.Keyword(null, "after-update", "after-update", 4410540364));
  var dict = cljs.core.get.call(null, map__85233__$1, new cljs.core.Keyword(null, "dict", "dict", 1016987432));
  var selector = cljs.core.get.call(null, map__85233__$1, new cljs.core.Keyword(null, "selector", "selector", 2205476689));
  var placeholder = cljs.core.get.call(null, map__85233__$1, new cljs.core.Keyword(null, "placeholder", "placeholder", 1612151013));
  var className = cljs.core.get.call(null, map__85233__$1, new cljs.core.Keyword(null, "className", "className", 1004015509));
  var data_key = cljs.core.get.call(null, map__85233__$1, new cljs.core.Keyword(null, "data-key", "data-key", 2801799470));
  if (typeof floor16.ui.generic.t85234 !== "undefined") {
  } else {
    floor16.ui.generic.t85234 = function(opts, className, select, placeholder, can_nil, selector, dict, p__85228, data_key, after_update, owner, cursor, map__85233, meta85235) {
      this.opts = opts;
      this.className = className;
      this.select = select;
      this.placeholder = placeholder;
      this.can_nil = can_nil;
      this.selector = selector;
      this.dict = dict;
      this.p__85228 = p__85228;
      this.data_key = data_key;
      this.after_update = after_update;
      this.owner = owner;
      this.cursor = cursor;
      this.map__85233 = map__85233;
      this.meta85235 = meta85235;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.generic.t85234.cljs$lang$type = true;
    floor16.ui.generic.t85234.cljs$lang$ctorStr = "floor16.ui.generic/t85234";
    floor16.ui.generic.t85234.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.ui.generic/t85234");
    };
    floor16.ui.generic.t85234.prototype.om$core$IRender$ = true;
    floor16.ui.generic.t85234.prototype.om$core$IRender$render$arity$1 = function(this__4987__auto__) {
      var self__ = this;
      var this__4987__auto____$1 = this;
      var v = self__.data_key.call(null, self__.cursor);
      var display_name = cljs.core.truth_(v) ? cljs.core.coll_QMARK_.call(null, v) ? [cljs.core.str(function() {
        var or__3443__auto__ = self__.placeholder;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return floor16.lang.l.call(null, new cljs.core.Keyword(null, "selected", "selected", 2205476365));
        }
      }()), cljs.core.str(": "), cljs.core.str(cljs.core.count.call(null, v))].join("") : floor16.datum.name_by_key.call(null, self__.dict, v) : null;
      var placeholder__$2 = function() {
        var or__3443__auto__ = self__.placeholder;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return floor16.lang.l.call(null, new cljs.core.Keyword(null, "select-value", "select-value", 1968185554));
        }
      }();
      var selector__$2 = function() {
        var or__3443__auto__ = self__.selector;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return floor16.ui.generic.drop_down_menu;
        }
      }();
      return React.DOM.span({"className":[cljs.core.str(cljs.core.name.call(null, self__.data_key)), cljs.core.str(" "), cljs.core.str(self__.className)].join("")}, React.DOM.span({"onMouseDown":function(e) {
        if (cljs.core.truth_(floor16.ui.generic.active_QMARK_.call(null, self__.owner))) {
        } else {
          floor16.ui.generic.active_BANG_.call(null, self__.owner, true);
        }
        return e.preventDefault();
      }, "className":"gen-select"}, v == null || cljs.core.coll_QMARK_.call(null, v) && cljs.core.empty_QMARK_.call(null, v) ? React.DOM.span({"className":"placeholder"}, placeholder__$2) : React.DOM.span({"className":"value"}, display_name), React.DOM.span({"className":"btn"}, React.DOM.div({"className":[cljs.core.str("drop-arrow "), cljs.core.str(cljs.core.truth_(floor16.ui.generic.active_QMARK_.call(null, self__.owner)) ? "arrow-up" : "arrow-down")].join("")})), cljs.core.truth_(floor16.ui.generic.active_QMARK_.call(null, 
      self__.owner)) ? om.core.build.call(null, floor16.ui.generic.self_closeable, self__.cursor, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "view", "view", 1017523735), selector__$2, new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), self__.data_key, new cljs.core.Keyword(null, "do-close", "do-close", 4607974824), function() {
        return floor16.ui.generic.active_BANG_.call(null, self__.owner, false);
      }, new cljs.core.Keyword(null, "dict", "dict", 1016987432), self__.dict, new cljs.core.Keyword(null, "can-nil", "can-nil", 1562520070), self__.can_nil, new cljs.core.Keyword(null, "nil-caption", "nil-caption", 1496742300), placeholder__$2, new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), self__.after_update], null)], null)) : null));
    };
    floor16.ui.generic.t85234.prototype.cljs$core$IMeta$_meta$arity$1 = function(_85236) {
      var self__ = this;
      var _85236__$1 = this;
      return self__.meta85235;
    };
    floor16.ui.generic.t85234.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_85236, meta85235__$1) {
      var self__ = this;
      var _85236__$1 = this;
      return new floor16.ui.generic.t85234(self__.opts, self__.className, self__.select, self__.placeholder, self__.can_nil, self__.selector, self__.dict, self__.p__85228, self__.data_key, self__.after_update, self__.owner, self__.cursor, self__.map__85233, meta85235__$1);
    };
    floor16.ui.generic.__GT_t85234 = function __GT_t85234(opts__$1, className__$1, select__$1, placeholder__$1, can_nil__$1, selector__$1, dict__$1, p__85228__$1, data_key__$1, after_update__$1, owner__$1, cursor__$1, map__85233__$2, meta85235) {
      return new floor16.ui.generic.t85234(opts__$1, className__$1, select__$1, placeholder__$1, can_nil__$1, selector__$1, dict__$1, p__85228__$1, data_key__$1, after_update__$1, owner__$1, cursor__$1, map__85233__$2, meta85235);
    };
  }
  return new floor16.ui.generic.t85234(opts, className, select, placeholder, can_nil, selector, dict, p__85228, data_key, after_update, owner, cursor, map__85233__$1, null);
};
floor16.ui.generic.bool_get = function bool_get(dk, cursor) {
  if (cljs.core.map_QMARK_.call(null, cursor)) {
    return cljs.core.get.call(null, cursor, dk);
  } else {
    return cljs.core.some.call(null, function(p1__85237_SHARP_) {
      return cljs.core._EQ_.call(null, dk, p1__85237_SHARP_);
    }, cursor);
  }
};
floor16.ui.generic.bool_upd = function bool_upd(dk, v, cursor) {
  if (cljs.core.vector_QMARK_.call(null, cljs.core.deref.call(null, cursor))) {
    if (cljs.core.truth_(v)) {
      return om.core.transact_BANG_.call(null, cursor, function(p1__85238_SHARP_) {
        return cljs.core.vec.call(null, cljs.core.distinct.call(null, cljs.core.conj.call(null, p1__85238_SHARP_, dk)));
      });
    } else {
      return om.core.transact_BANG_.call(null, cursor, function(p1__85239_SHARP_) {
        return cljs.core.vec.call(null, cljs.core.remove.call(null, function(x) {
          return cljs.core._EQ_.call(null, x, dk);
        }, p1__85239_SHARP_));
      });
    }
  } else {
    if (cljs.core.truth_(v)) {
      return om.core.update_BANG_.call(null, cursor, dk, v);
    } else {
      return om.core.transact_BANG_.call(null, cursor, function(p1__85240_SHARP_) {
        return cljs.core.dissoc.call(null, p1__85240_SHARP_, dk);
      });
    }
  }
};
floor16.ui.generic.checkbtn = function checkbtn(cursor, owner, p__85241) {
  var map__85246 = p__85241;
  var map__85246__$1 = cljs.core.seq_QMARK_.call(null, map__85246) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85246) : map__85246;
  var opts = map__85246__$1;
  var after_update = cljs.core.get.call(null, map__85246__$1, new cljs.core.Keyword(null, "after-update", "after-update", 4410540364));
  var className = cljs.core.get.call(null, map__85246__$1, new cljs.core.Keyword(null, "className", "className", 1004015509));
  var caption = cljs.core.get.call(null, map__85246__$1, new cljs.core.Keyword(null, "caption", "caption", 1566477656));
  var data_key = cljs.core.get.call(null, map__85246__$1, new cljs.core.Keyword(null, "data-key", "data-key", 2801799470));
  if (typeof floor16.ui.generic.t85247 !== "undefined") {
  } else {
    floor16.ui.generic.t85247 = function(opts, className, p__85241, caption, data_key, map__85246, after_update, owner, cursor, checkbtn, meta85248) {
      this.opts = opts;
      this.className = className;
      this.p__85241 = p__85241;
      this.caption = caption;
      this.data_key = data_key;
      this.map__85246 = map__85246;
      this.after_update = after_update;
      this.owner = owner;
      this.cursor = cursor;
      this.checkbtn = checkbtn;
      this.meta85248 = meta85248;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.generic.t85247.cljs$lang$type = true;
    floor16.ui.generic.t85247.cljs$lang$ctorStr = "floor16.ui.generic/t85247";
    floor16.ui.generic.t85247.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.ui.generic/t85247");
    };
    floor16.ui.generic.t85247.prototype.om$core$IRender$ = true;
    floor16.ui.generic.t85247.prototype.om$core$IRender$render$arity$1 = function(this__4987__auto__) {
      var self__ = this;
      var this__4987__auto____$1 = this;
      var v = floor16.ui.generic.bool_get.call(null, self__.data_key, self__.cursor);
      var caption__$2 = function() {
        var or__3443__auto__ = self__.caption;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return floor16.lang.l.call(null, self__.data_key);
        }
      }();
      return React.DOM.div({"className":[cljs.core.str("gen-checkbtn "), cljs.core.str(self__.className)].join("")}, om.dom.input.call(null, {"onChange":function(e) {
        floor16.ui.generic.bool_upd.call(null, self__.data_key, e.target.checked, self__.cursor);
        if (cljs.core.truth_(self__.after_update)) {
          return self__.after_update.call(null);
        } else {
          return null;
        }
      }, "checked":cljs.core.boolean$.call(null, v), "type":"checkbox"}), React.DOM.label(null, caption__$2));
    };
    floor16.ui.generic.t85247.prototype.cljs$core$IMeta$_meta$arity$1 = function(_85249) {
      var self__ = this;
      var _85249__$1 = this;
      return self__.meta85248;
    };
    floor16.ui.generic.t85247.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_85249, meta85248__$1) {
      var self__ = this;
      var _85249__$1 = this;
      return new floor16.ui.generic.t85247(self__.opts, self__.className, self__.p__85241, self__.caption, self__.data_key, self__.map__85246, self__.after_update, self__.owner, self__.cursor, self__.checkbtn, meta85248__$1);
    };
    floor16.ui.generic.__GT_t85247 = function __GT_t85247(opts__$1, className__$1, p__85241__$1, caption__$1, data_key__$1, map__85246__$2, after_update__$1, owner__$1, cursor__$1, checkbtn__$1, meta85248) {
      return new floor16.ui.generic.t85247(opts__$1, className__$1, p__85241__$1, caption__$1, data_key__$1, map__85246__$2, after_update__$1, owner__$1, cursor__$1, checkbtn__$1, meta85248);
    };
  }
  return new floor16.ui.generic.t85247(opts, className, p__85241, caption, data_key, map__85246__$1, after_update, owner, cursor, checkbtn, null);
};
floor16.ui.generic.checkbtn_list = function checkbtn_list(cursor, owner, p__85251) {
  var map__85258 = p__85251;
  var map__85258__$1 = cljs.core.seq_QMARK_.call(null, map__85258) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85258) : map__85258;
  var opts = map__85258__$1;
  var after_update = cljs.core.get.call(null, map__85258__$1, new cljs.core.Keyword(null, "after-update", "after-update", 4410540364));
  var item_class = cljs.core.get.call(null, map__85258__$1, new cljs.core.Keyword(null, "item-class", "item-class", 1910395312));
  var items = cljs.core.get.call(null, map__85258__$1, new cljs.core.Keyword(null, "items", "items", 1114430258));
  var dict = cljs.core.get.call(null, map__85258__$1, new cljs.core.Keyword(null, "dict", "dict", 1016987432));
  var className = cljs.core.get.call(null, map__85258__$1, new cljs.core.Keyword(null, "className", "className", 1004015509));
  var data_key = cljs.core.get.call(null, map__85258__$1, new cljs.core.Keyword(null, "data-key", "data-key", 2801799470));
  if (typeof floor16.ui.generic.t85259 !== "undefined") {
  } else {
    floor16.ui.generic.t85259 = function(checkbtn_list, opts, className, map__85258, items, dict, p__85251, data_key, after_update, owner, item_class, cursor, meta85260) {
      this.checkbtn_list = checkbtn_list;
      this.opts = opts;
      this.className = className;
      this.map__85258 = map__85258;
      this.items = items;
      this.dict = dict;
      this.p__85251 = p__85251;
      this.data_key = data_key;
      this.after_update = after_update;
      this.owner = owner;
      this.item_class = item_class;
      this.cursor = cursor;
      this.meta85260 = meta85260;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.generic.t85259.cljs$lang$type = true;
    floor16.ui.generic.t85259.cljs$lang$ctorStr = "floor16.ui.generic/t85259";
    floor16.ui.generic.t85259.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.ui.generic/t85259");
    };
    floor16.ui.generic.t85259.prototype.om$core$IRenderState$ = true;
    floor16.ui.generic.t85259.prototype.om$core$IRenderState$render_state$arity$2 = function(this$, p__85262) {
      var self__ = this;
      var map__85263 = p__85262;
      var map__85263__$1 = cljs.core.seq_QMARK_.call(null, map__85263) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85263) : map__85263;
      var items__$2 = cljs.core.get.call(null, map__85263__$1, new cljs.core.Keyword(null, "items", "items", 1114430258));
      var this$__$1 = this;
      return cljs.core.apply.call(null, om.dom.ul, {"className":[cljs.core.str("gen-checkbtn-list "), cljs.core.str(self__.className)].join("")}, cljs.core.map.call(null, function(p1__85250_SHARP_) {
        return React.DOM.li({"key":(new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(p1__85250_SHARP_)}, om.core.build.call(null, floor16.ui.generic.checkbtn, cljs.core.truth_(self__.data_key) ? self__.data_key.call(null, self__.cursor) : self__.cursor, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), (new cljs.core.Keyword(null, 
        "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(p1__85250_SHARP_), new cljs.core.Keyword(null, "caption", "caption", 1566477656), (new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(p1__85250_SHARP_), new cljs.core.Keyword(null, "className", "className", 1004015509), self__.item_class, new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), self__.after_update], null)], null)));
      }, items__$2));
    };
    floor16.ui.generic.t85259.prototype.om$core$IWillMount$ = true;
    floor16.ui.generic.t85259.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.items)) {
        return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "items", "items", 1114430258), self__.items);
      } else {
        return floor16.datum.load_all.call(null, self__.dict, self__.owner, new cljs.core.Keyword(null, "items", "items", 1114430258));
      }
    };
    floor16.ui.generic.t85259.prototype.cljs$core$IMeta$_meta$arity$1 = function(_85261) {
      var self__ = this;
      var _85261__$1 = this;
      return self__.meta85260;
    };
    floor16.ui.generic.t85259.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_85261, meta85260__$1) {
      var self__ = this;
      var _85261__$1 = this;
      return new floor16.ui.generic.t85259(self__.checkbtn_list, self__.opts, self__.className, self__.map__85258, self__.items, self__.dict, self__.p__85251, self__.data_key, self__.after_update, self__.owner, self__.item_class, self__.cursor, meta85260__$1);
    };
    floor16.ui.generic.__GT_t85259 = function __GT_t85259(checkbtn_list__$1, opts__$1, className__$1, map__85258__$2, items__$1, dict__$1, p__85251__$1, data_key__$1, after_update__$1, owner__$1, item_class__$1, cursor__$1, meta85260) {
      return new floor16.ui.generic.t85259(checkbtn_list__$1, opts__$1, className__$1, map__85258__$2, items__$1, dict__$1, p__85251__$1, data_key__$1, after_update__$1, owner__$1, item_class__$1, cursor__$1, meta85260);
    };
  }
  return new floor16.ui.generic.t85259(checkbtn_list, opts, className, map__85258__$1, items, dict, p__85251, data_key, after_update, owner, item_class, cursor, null);
};
floor16.ui.generic.sort_select = function sort_select(data, owner, opts) {
  if (typeof floor16.ui.generic.t85267 !== "undefined") {
  } else {
    floor16.ui.generic.t85267 = function(opts, owner, data, sort_select, meta85268) {
      this.opts = opts;
      this.owner = owner;
      this.data = data;
      this.sort_select = sort_select;
      this.meta85268 = meta85268;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.generic.t85267.cljs$lang$type = true;
    floor16.ui.generic.t85267.cljs$lang$ctorStr = "floor16.ui.generic/t85267";
    floor16.ui.generic.t85267.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.ui.generic/t85267");
    };
    floor16.ui.generic.t85267.prototype.om$core$IRender$ = true;
    floor16.ui.generic.t85267.prototype.om$core$IRender$render$arity$1 = function(this__4987__auto__) {
      var self__ = this;
      var this__4987__auto____$1 = this;
      return React.DOM.div({"className":""}, "gen-sort-select");
    };
    floor16.ui.generic.t85267.prototype.cljs$core$IMeta$_meta$arity$1 = function(_85269) {
      var self__ = this;
      var _85269__$1 = this;
      return self__.meta85268;
    };
    floor16.ui.generic.t85267.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_85269, meta85268__$1) {
      var self__ = this;
      var _85269__$1 = this;
      return new floor16.ui.generic.t85267(self__.opts, self__.owner, self__.data, self__.sort_select, meta85268__$1);
    };
    floor16.ui.generic.__GT_t85267 = function __GT_t85267(opts__$1, owner__$1, data__$1, sort_select__$1, meta85268) {
      return new floor16.ui.generic.t85267(opts__$1, owner__$1, data__$1, sort_select__$1, meta85268);
    };
  }
  return new floor16.ui.generic.t85267(opts, owner, data, sort_select, null);
};
floor16.ui.generic.view_select = function view_select(data, owner, opts) {
  if (typeof floor16.ui.generic.t85273 !== "undefined") {
  } else {
    floor16.ui.generic.t85273 = function(opts, owner, data, view_select, meta85274) {
      this.opts = opts;
      this.owner = owner;
      this.data = data;
      this.view_select = view_select;
      this.meta85274 = meta85274;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.generic.t85273.cljs$lang$type = true;
    floor16.ui.generic.t85273.cljs$lang$ctorStr = "floor16.ui.generic/t85273";
    floor16.ui.generic.t85273.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.ui.generic/t85273");
    };
    floor16.ui.generic.t85273.prototype.om$core$IRender$ = true;
    floor16.ui.generic.t85273.prototype.om$core$IRender$render$arity$1 = function(this__4987__auto__) {
      var self__ = this;
      var this__4987__auto____$1 = this;
      return React.DOM.div({"className":""}, "gen-view-select");
    };
    floor16.ui.generic.t85273.prototype.cljs$core$IMeta$_meta$arity$1 = function(_85275) {
      var self__ = this;
      var _85275__$1 = this;
      return self__.meta85274;
    };
    floor16.ui.generic.t85273.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_85275, meta85274__$1) {
      var self__ = this;
      var _85275__$1 = this;
      return new floor16.ui.generic.t85273(self__.opts, self__.owner, self__.data, self__.view_select, meta85274__$1);
    };
    floor16.ui.generic.__GT_t85273 = function __GT_t85273(opts__$1, owner__$1, data__$1, view_select__$1, meta85274) {
      return new floor16.ui.generic.t85273(opts__$1, owner__$1, data__$1, view_select__$1, meta85274);
    };
  }
  return new floor16.ui.generic.t85273(opts, owner, data, view_select, null);
};
floor16.ui.generic.empty_view = function empty_view(cursor, owner, p__85276) {
  var map__85281 = p__85276;
  var map__85281__$1 = cljs.core.seq_QMARK_.call(null, map__85281) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85281) : map__85281;
  var opts = map__85281__$1;
  var empty_text = cljs.core.get.call(null, map__85281__$1, new cljs.core.Keyword(null, "empty-text", "empty-text", 4203552031));
  if (typeof floor16.ui.generic.t85282 !== "undefined") {
  } else {
    floor16.ui.generic.t85282 = function(empty_text, opts, map__85281, p__85276, owner, cursor, empty_view, meta85283) {
      this.empty_text = empty_text;
      this.opts = opts;
      this.map__85281 = map__85281;
      this.p__85276 = p__85276;
      this.owner = owner;
      this.cursor = cursor;
      this.empty_view = empty_view;
      this.meta85283 = meta85283;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.generic.t85282.cljs$lang$type = true;
    floor16.ui.generic.t85282.cljs$lang$ctorStr = "floor16.ui.generic/t85282";
    floor16.ui.generic.t85282.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.ui.generic/t85282");
    };
    floor16.ui.generic.t85282.prototype.om$core$IRender$ = true;
    floor16.ui.generic.t85282.prototype.om$core$IRender$render$arity$1 = function(this__4987__auto__) {
      var self__ = this;
      var this__4987__auto____$1 = this;
      return React.DOM.div({"className":"empty"}, self__.empty_text);
    };
    floor16.ui.generic.t85282.prototype.cljs$core$IMeta$_meta$arity$1 = function(_85284) {
      var self__ = this;
      var _85284__$1 = this;
      return self__.meta85283;
    };
    floor16.ui.generic.t85282.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_85284, meta85283__$1) {
      var self__ = this;
      var _85284__$1 = this;
      return new floor16.ui.generic.t85282(self__.empty_text, self__.opts, self__.map__85281, self__.p__85276, self__.owner, self__.cursor, self__.empty_view, meta85283__$1);
    };
    floor16.ui.generic.__GT_t85282 = function __GT_t85282(empty_text__$1, opts__$1, map__85281__$2, p__85276__$1, owner__$1, cursor__$1, empty_view__$1, meta85283) {
      return new floor16.ui.generic.t85282(empty_text__$1, opts__$1, map__85281__$2, p__85276__$1, owner__$1, cursor__$1, empty_view__$1, meta85283);
    };
  }
  return new floor16.ui.generic.t85282(empty_text, opts, map__85281__$1, p__85276, owner, cursor, empty_view, null);
};
floor16.ui.generic.data_header = function data_header(p__85286, owner, p__85287) {
  var map__85293 = p__85286;
  var map__85293__$1 = cljs.core.seq_QMARK_.call(null, map__85293) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85293) : map__85293;
  var cursor = map__85293__$1;
  var data = cljs.core.get.call(null, map__85293__$1, new cljs.core.Keyword(null, "data", "data", 1016980252));
  var query = cljs.core.get.call(null, map__85293__$1, new cljs.core.Keyword(null, "query", "query", 1121848378));
  var map__85294 = p__85287;
  var map__85294__$1 = cljs.core.seq_QMARK_.call(null, map__85294) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85294) : map__85294;
  var data_header_opts_class = cljs.core.get.call(null, map__85294__$1, new cljs.core.Keyword(null, "data-header-opts-class", "data-header-opts-class", 2922150106));
  var data_header_total_class = cljs.core.get.call(null, map__85294__$1, new cljs.core.Keyword(null, "data-header-total-class", "data-header-total-class", 1355009252));
  var data_header_total_kword = cljs.core.get.call(null, map__85294__$1, new cljs.core.Keyword(null, "data-header-total-kword", "data-header-total-kword", 1362738529));
  var data_header_class = cljs.core.get.call(null, map__85294__$1, new cljs.core.Keyword(null, "data-header-class", "data-header-class", 2790141677));
  var header_opts = cljs.core.get.call(null, map__85294__$1, new cljs.core.Keyword(null, "header-opts", "header-opts", 2151738066));
  if (typeof floor16.ui.generic.t85295 !== "undefined") {
  } else {
    floor16.ui.generic.t85295 = function(map__85294, query, map__85293, data_header_total_class, data, p__85286, data_header_class, data_header, p__85287, header_opts, owner, cursor, data_header_opts_class, data_header_total_kword, meta85296) {
      this.map__85294 = map__85294;
      this.query = query;
      this.map__85293 = map__85293;
      this.data_header_total_class = data_header_total_class;
      this.data = data;
      this.p__85286 = p__85286;
      this.data_header_class = data_header_class;
      this.data_header = data_header;
      this.p__85287 = p__85287;
      this.header_opts = header_opts;
      this.owner = owner;
      this.cursor = cursor;
      this.data_header_opts_class = data_header_opts_class;
      this.data_header_total_kword = data_header_total_kword;
      this.meta85296 = meta85296;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.generic.t85295.cljs$lang$type = true;
    floor16.ui.generic.t85295.cljs$lang$ctorStr = "floor16.ui.generic/t85295";
    floor16.ui.generic.t85295.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.ui.generic/t85295");
    };
    floor16.ui.generic.t85295.prototype.om$core$IRender$ = true;
    floor16.ui.generic.t85295.prototype.om$core$IRender$render$arity$1 = function(this__4987__auto__) {
      var self__ = this;
      var this__4987__auto____$1 = this;
      return React.DOM.div({"className":[cljs.core.str("data-header "), cljs.core.str(self__.data_header_class)].join("")}, function() {
        var temp__4092__auto__ = (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(self__.data);
        if (cljs.core.truth_(temp__4092__auto__)) {
          var total = temp__4092__auto__;
          return React.DOM.div({"className":[cljs.core.str("total "), cljs.core.str(self__.data_header_total_class)].join("")}, React.DOM.span({"className":"count-nums"}, cljs.core._EQ_.call(null, 0, total) ? floor16.lang.l.call(null, new cljs.core.Keyword(null, "no", "no", 1013907763)) : total), React.DOM.span({"className":"count-words"}, floor16.lang.l.call(null, function() {
            var or__3443__auto__ = self__.data_header_total_kword;
            if (cljs.core.truth_(or__3443__auto__)) {
              return or__3443__auto__;
            } else {
              return new cljs.core.Keyword(null, "total-kw", "total-kw", 4458928135);
            }
          }(), total)));
        } else {
          return null;
        }
      }(), cljs.core.apply.call(null, om.dom.div, {"className":[cljs.core.str("opts "), cljs.core.str(self__.data_header_opts_class)].join("")}, cljs.core.map.call(null, function(p1__85285_SHARP_) {
        return(new cljs.core.Keyword(null, "view", "view", 1017523735)).cljs$core$IFn$_invoke$arity$1(cljs.core.val.call(null, p1__85285_SHARP_));
      }, self__.header_opts)));
    };
    floor16.ui.generic.t85295.prototype.cljs$core$IMeta$_meta$arity$1 = function(_85297) {
      var self__ = this;
      var _85297__$1 = this;
      return self__.meta85296;
    };
    floor16.ui.generic.t85295.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_85297, meta85296__$1) {
      var self__ = this;
      var _85297__$1 = this;
      return new floor16.ui.generic.t85295(self__.map__85294, self__.query, self__.map__85293, self__.data_header_total_class, self__.data, self__.p__85286, self__.data_header_class, self__.data_header, self__.p__85287, self__.header_opts, self__.owner, self__.cursor, self__.data_header_opts_class, self__.data_header_total_kword, meta85296__$1);
    };
    floor16.ui.generic.__GT_t85295 = function __GT_t85295(map__85294__$2, query__$1, map__85293__$2, data_header_total_class__$1, data__$1, p__85286__$1, data_header_class__$1, data_header__$1, p__85287__$1, header_opts__$1, owner__$1, cursor__$1, data_header_opts_class__$1, data_header_total_kword__$1, meta85296) {
      return new floor16.ui.generic.t85295(map__85294__$2, query__$1, map__85293__$2, data_header_total_class__$1, data__$1, p__85286__$1, data_header_class__$1, data_header__$1, p__85287__$1, header_opts__$1, owner__$1, cursor__$1, data_header_opts_class__$1, data_header_total_kword__$1, meta85296);
    };
  }
  return new floor16.ui.generic.t85295(map__85294__$1, query, map__85293__$1, data_header_total_class, data, p__85286, data_header_class, data_header, p__85287, header_opts, owner, cursor, data_header_opts_class, data_header_total_kword, null);
};
floor16.ui.generic.page_item = function page_item(query, owner, p__85298) {
  var map__85300 = p__85298;
  var map__85300__$1 = cljs.core.seq_QMARK_.call(null, map__85300) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85300) : map__85300;
  var list_mode = cljs.core.get.call(null, map__85300__$1, new cljs.core.Keyword(null, "list-mode", "list-mode", 4038414564));
  var className = cljs.core.get.call(null, map__85300__$1, new cljs.core.Keyword(null, "className", "className", 1004015509));
  var text = cljs.core.get.call(null, map__85300__$1, new cljs.core.Keyword(null, "text", "text", 1017460895));
  var current_QMARK_ = cljs.core.get.call(null, map__85300__$1, new cljs.core.Keyword(null, "current?", "current?", 1589306712));
  var index = cljs.core.get.call(null, map__85300__$1, new cljs.core.Keyword(null, "index", "index", 1114250308));
  var url = cljs.core.truth_(index) ? floor16.navigation.url_to.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "mode", "mode", 1017261333), list_mode, new cljs.core.Keyword(null, "url-params", "url-params", 3432736534), cljs.core.assoc.call(null, query, new cljs.core.Keyword(null, "o-page", "o-page", 4236731551), index)], null)) : null;
  return React.DOM.li({"className":[cljs.core.str("pager-item "), cljs.core.str(cljs.core.truth_(current_QMARK_) ? "current " : null), cljs.core.str(cljs.core.truth_(className) ? className : null)].join(""), "key":index}, React.DOM.a({"onClick":function(e) {
    e.preventDefault();
    if (cljs.core.truth_(url)) {
      floor16.navigation.goto$.call(null, url);
      var temp__4090__auto__ = document.getElementById("list-view");
      if (cljs.core.truth_(temp__4090__auto__)) {
        var n = temp__4090__auto__;
        return window.scrollTo(0, n.offsetTop);
      } else {
        return window.scrollTo(0, 0);
      }
    } else {
      return null;
    }
  }, "href":url}, function() {
    var or__3443__auto__ = text;
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return index;
    }
  }()));
};
floor16.ui.generic.data_pager = function data_pager(p__85302, owner, p__85303) {
  var map__85309 = p__85302;
  var map__85309__$1 = cljs.core.seq_QMARK_.call(null, map__85309) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85309) : map__85309;
  var cursor = map__85309__$1;
  var data = cljs.core.get.call(null, map__85309__$1, new cljs.core.Keyword(null, "data", "data", 1016980252));
  var query = cljs.core.get.call(null, map__85309__$1, new cljs.core.Keyword(null, "query", "query", 1121848378));
  var map__85310 = p__85303;
  var map__85310__$1 = cljs.core.seq_QMARK_.call(null, map__85310) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85310) : map__85310;
  var opts = map__85310__$1;
  var list_mode = cljs.core.get.call(null, map__85310__$1, new cljs.core.Keyword(null, "list-mode", "list-mode", 4038414564));
  if (typeof floor16.ui.generic.t85311 !== "undefined") {
  } else {
    floor16.ui.generic.t85311 = function(opts, map__85309, query, list_mode, data, data_pager, p__85303, p__85302, owner, cursor, map__85310, meta85312) {
      this.opts = opts;
      this.map__85309 = map__85309;
      this.query = query;
      this.list_mode = list_mode;
      this.data = data;
      this.data_pager = data_pager;
      this.p__85303 = p__85303;
      this.p__85302 = p__85302;
      this.owner = owner;
      this.cursor = cursor;
      this.map__85310 = map__85310;
      this.meta85312 = meta85312;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.generic.t85311.cljs$lang$type = true;
    floor16.ui.generic.t85311.cljs$lang$ctorStr = "floor16.ui.generic/t85311";
    floor16.ui.generic.t85311.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.ui.generic/t85311");
    };
    floor16.ui.generic.t85311.prototype.om$core$IRender$ = true;
    floor16.ui.generic.t85311.prototype.om$core$IRender$render$arity$1 = function(this__4987__auto__) {
      var self__ = this;
      var this__4987__auto____$1 = this;
      var max_pages = 9;
      var middle = cljs.core.quot.call(null, max_pages, 2);
      var total = (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(self__.data);
      var offset = (new cljs.core.Keyword(null, "offset", "offset", 4289091589)).cljs$core$IFn$_invoke$arity$1(self__.data);
      var limit = (new cljs.core.Keyword(null, "limit", "limit", 1116880685)).cljs$core$IFn$_invoke$arity$1(self__.data);
      var pg_count = Math.ceil(total / limit);
      var pg_num = cljs.core.quot.call(null, offset, limit) + 1;
      var cur_pg = function() {
        var or__3443__auto__ = (new cljs.core.Keyword(null, "o-page", "o-page", 4236731551)).cljs$core$IFn$_invoke$arity$1(self__.query);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return pg_num;
        }
      }();
      var can_right = pg_count - cur_pg;
      var to_show = function() {
        var x__3757__auto__ = max_pages;
        var y__3758__auto__ = pg_count;
        return x__3757__auto__ < y__3758__auto__ ? x__3757__auto__ : y__3758__auto__;
      }();
      var left = cur_pg - function() {
        var x__3757__auto__ = cur_pg;
        var y__3758__auto__ = function() {
          var x__3750__auto__ = middle + 1;
          var y__3751__auto__ = to_show - can_right;
          return x__3750__auto__ > y__3751__auto__ ? x__3750__auto__ : y__3751__auto__;
        }();
        return x__3757__auto__ < y__3758__auto__ ? x__3757__auto__ : y__3758__auto__;
      }();
      var right = cur_pg + function() {
        var x__3757__auto__ = can_right;
        var y__3758__auto__ = function() {
          var x__3750__auto__ = middle;
          var y__3751__auto__ = to_show - cur_pg;
          return x__3750__auto__ > y__3751__auto__ ? x__3750__auto__ : y__3751__auto__;
        }();
        return x__3757__auto__ < y__3758__auto__ ? x__3757__auto__ : y__3758__auto__;
      }();
      return cljs.core.apply.call(null, om.dom.ul, {"className":"data-pager"}, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [om.core.build.call(null, floor16.ui.generic.page_item, self__.query, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "index", "index", 1114250308), cur_pg > 1 ? cur_pg - 1 : null, new cljs.core.Keyword(null, 
      "text", "text", 1017460895), floor16.lang.l.call(null, new cljs.core.Keyword(null, "data-pager-prev", "data-pager-prev", 2462390130)), new cljs.core.Keyword(null, "list-mode", "list-mode", 4038414564), self__.list_mode, new cljs.core.Keyword(null, "className", "className", 1004015509), [cljs.core.str("prev"), cljs.core.str(cur_pg <= 1 ? " disabled" : null)].join("")], null)], null))], null), cljs.core.map.call(null, function(p1__85301_SHARP_) {
        return om.core.build.call(null, floor16.ui.generic.page_item, self__.query, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), p1__85301_SHARP_, new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "index", "index", 1114250308), p1__85301_SHARP_, new cljs.core.Keyword(null, "current?", "current?", 1589306712), cljs.core._EQ_.call(null, p1__85301_SHARP_, cur_pg), 
        new cljs.core.Keyword(null, "list-mode", "list-mode", 4038414564), self__.list_mode], null)], null));
      }, cljs.core.range.call(null, left + 1, right + 1)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [om.core.build.call(null, floor16.ui.generic.page_item, self__.query, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "index", "index", 1114250308), cur_pg < pg_count ? cur_pg + 1 : null, new cljs.core.Keyword(null, "text", "text", 1017460895), 
      floor16.lang.l.call(null, new cljs.core.Keyword(null, "data-pager-next", "data-pager-next", 2462318642)), new cljs.core.Keyword(null, "list-mode", "list-mode", 4038414564), self__.list_mode, new cljs.core.Keyword(null, "className", "className", 1004015509), [cljs.core.str("next"), cljs.core.str(cur_pg >= pg_count ? " disabled" : null)].join("")], null)], null))], null)));
    };
    floor16.ui.generic.t85311.prototype.cljs$core$IMeta$_meta$arity$1 = function(_85313) {
      var self__ = this;
      var _85313__$1 = this;
      return self__.meta85312;
    };
    floor16.ui.generic.t85311.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_85313, meta85312__$1) {
      var self__ = this;
      var _85313__$1 = this;
      return new floor16.ui.generic.t85311(self__.opts, self__.map__85309, self__.query, self__.list_mode, self__.data, self__.data_pager, self__.p__85303, self__.p__85302, self__.owner, self__.cursor, self__.map__85310, meta85312__$1);
    };
    floor16.ui.generic.__GT_t85311 = function __GT_t85311(opts__$1, map__85309__$2, query__$1, list_mode__$1, data__$1, data_pager__$1, p__85303__$1, p__85302__$1, owner__$1, cursor__$1, map__85310__$2, meta85312) {
      return new floor16.ui.generic.t85311(opts__$1, map__85309__$2, query__$1, list_mode__$1, data__$1, data_pager__$1, p__85303__$1, p__85302__$1, owner__$1, cursor__$1, map__85310__$2, meta85312);
    };
  }
  return new floor16.ui.generic.t85311(opts, map__85309__$1, query, list_mode, data, data_pager, p__85303, p__85302, owner, cursor, map__85310__$1, null);
};
floor16.ui.generic.load_progress = function load_progress(data, owner, opts) {
  if (typeof floor16.ui.generic.t85317 !== "undefined") {
  } else {
    floor16.ui.generic.t85317 = function(opts, owner, data, load_progress, meta85318) {
      this.opts = opts;
      this.owner = owner;
      this.data = data;
      this.load_progress = load_progress;
      this.meta85318 = meta85318;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.generic.t85317.cljs$lang$type = true;
    floor16.ui.generic.t85317.cljs$lang$ctorStr = "floor16.ui.generic/t85317";
    floor16.ui.generic.t85317.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.ui.generic/t85317");
    };
    floor16.ui.generic.t85317.prototype.om$core$IRender$ = true;
    floor16.ui.generic.t85317.prototype.om$core$IRender$render$arity$1 = function(this__4987__auto__) {
      var self__ = this;
      var this__4987__auto____$1 = this;
      return React.DOM.div({"className":"load-progress"});
    };
    floor16.ui.generic.t85317.prototype.cljs$core$IMeta$_meta$arity$1 = function(_85319) {
      var self__ = this;
      var _85319__$1 = this;
      return self__.meta85318;
    };
    floor16.ui.generic.t85317.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_85319, meta85318__$1) {
      var self__ = this;
      var _85319__$1 = this;
      return new floor16.ui.generic.t85317(self__.opts, self__.owner, self__.data, self__.load_progress, meta85318__$1);
    };
    floor16.ui.generic.__GT_t85317 = function __GT_t85317(opts__$1, owner__$1, data__$1, load_progress__$1, meta85318) {
      return new floor16.ui.generic.t85317(opts__$1, owner__$1, data__$1, load_progress__$1, meta85318);
    };
  }
  return new floor16.ui.generic.t85317(opts, owner, data, load_progress, null);
};
floor16.ui.generic.list_view = function list_view(p__85321, owner, p__85322) {
  var map__85328 = p__85321;
  var map__85328__$1 = cljs.core.seq_QMARK_.call(null, map__85328) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85328) : map__85328;
  var cursor = map__85328__$1;
  var data = cljs.core.get.call(null, map__85328__$1, new cljs.core.Keyword(null, "data", "data", 1016980252));
  var query = cljs.core.get.call(null, map__85328__$1, new cljs.core.Keyword(null, "query", "query", 1121848378));
  var map__85329 = p__85322;
  var map__85329__$1 = cljs.core.seq_QMARK_.call(null, map__85329) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85329) : map__85329;
  var res = cljs.core.get.call(null, map__85329__$1, new cljs.core.Keyword(null, "res", "res", 1014017042));
  var data_head = cljs.core.get.call(null, map__85329__$1, new cljs.core.Keyword(null, "data-head", "data-head", 603991445));
  var top_filter = cljs.core.get.call(null, map__85329__$1, new cljs.core.Keyword(null, "top-filter", "top-filter", 2858888802));
  var main_container_class = cljs.core.get.call(null, map__85329__$1, new cljs.core.Keyword(null, "main-container-class", "main-container-class", 2418625674));
  var list_mode = cljs.core.get.call(null, map__85329__$1, new cljs.core.Keyword(null, "list-mode", "list-mode", 4038414564));
  var data_header_total_class = cljs.core.get.call(null, map__85329__$1, new cljs.core.Keyword(null, "data-header-total-class", "data-header-total-class", 1355009252));
  var empty_text = cljs.core.get.call(null, map__85329__$1, new cljs.core.Keyword(null, "empty-text", "empty-text", 4203552031));
  var side_filter = cljs.core.get.call(null, map__85329__$1, new cljs.core.Keyword(null, "side-filter", "side-filter", 945679392));
  var data_header_class = cljs.core.get.call(null, map__85329__$1, new cljs.core.Keyword(null, "data-header-class", "data-header-class", 2790141677));
  var item_view_mode = cljs.core.get.call(null, map__85329__$1, new cljs.core.Keyword(null, "item-view-mode", "item-view-mode", 4070495491));
  var header_opts = cljs.core.get.call(null, map__85329__$1, new cljs.core.Keyword(null, "header-opts", "header-opts", 2151738066));
  var data_container_class = cljs.core.get.call(null, map__85329__$1, new cljs.core.Keyword(null, "data-container-class", "data-container-class", 3307025531));
  var data_empty = cljs.core.get.call(null, map__85329__$1, new cljs.core.Keyword(null, "data-empty", "data-empty", 1188992220));
  var data_header_opts_class = cljs.core.get.call(null, map__85329__$1, new cljs.core.Keyword(null, "data-header-opts-class", "data-header-opts-class", 2922150106));
  var data_header_total_kword = cljs.core.get.call(null, map__85329__$1, new cljs.core.Keyword(null, "data-header-total-kword", "data-header-total-kword", 1362738529));
  var kw_id = cljs.core.get.call(null, map__85329__$1, new cljs.core.Keyword(null, "kw-id", "kw-id", 1116312718));
  var loading_text = cljs.core.get.call(null, map__85329__$1, new cljs.core.Keyword(null, "loading-text", "loading-text", 2379603600));
  var item_view = cljs.core.get.call(null, map__85329__$1, new cljs.core.Keyword(null, "item-view", "item-view", 3121596561));
  if (typeof floor16.ui.generic.t85330 !== "undefined") {
  } else {
    floor16.ui.generic.t85330 = function(res, list_view, data_head, query, top_filter, main_container_class, list_mode, data_header_total_class, empty_text, data, side_filter, data_header_class, p__85322, item_view_mode, p__85321, map__85329, map__85328, header_opts, data_container_class, owner, cursor, data_empty, data_header_opts_class, data_header_total_kword, kw_id, loading_text, item_view, meta85331) {
      this.res = res;
      this.list_view = list_view;
      this.data_head = data_head;
      this.query = query;
      this.top_filter = top_filter;
      this.main_container_class = main_container_class;
      this.list_mode = list_mode;
      this.data_header_total_class = data_header_total_class;
      this.empty_text = empty_text;
      this.data = data;
      this.side_filter = side_filter;
      this.data_header_class = data_header_class;
      this.p__85322 = p__85322;
      this.item_view_mode = item_view_mode;
      this.p__85321 = p__85321;
      this.map__85329 = map__85329;
      this.map__85328 = map__85328;
      this.header_opts = header_opts;
      this.data_container_class = data_container_class;
      this.owner = owner;
      this.cursor = cursor;
      this.data_empty = data_empty;
      this.data_header_opts_class = data_header_opts_class;
      this.data_header_total_kword = data_header_total_kword;
      this.kw_id = kw_id;
      this.loading_text = loading_text;
      this.item_view = item_view;
      this.meta85331 = meta85331;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.generic.t85330.cljs$lang$type = true;
    floor16.ui.generic.t85330.cljs$lang$ctorStr = "floor16.ui.generic/t85330";
    floor16.ui.generic.t85330.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.ui.generic/t85330");
    };
    floor16.ui.generic.t85330.prototype.om$core$IRenderState$ = true;
    floor16.ui.generic.t85330.prototype.om$core$IRenderState$render_state$arity$2 = function(this$, state) {
      var self__ = this;
      var this$__$1 = this;
      var kw_id__$2 = function() {
        var or__3443__auto__ = self__.kw_id;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return new cljs.core.Keyword(null, "id", "id", 1013907597);
        }
      }();
      var items = (new cljs.core.Keyword(null, "items", "items", 1114430258)).cljs$core$IFn$_invoke$arity$1(self__.data);
      var no_items_QMARK_ = cljs.core.empty_QMARK_.call(null, items);
      var loading_QMARK_ = (new cljs.core.Keyword(null, "loading", "loading", 1350554798)).cljs$core$IFn$_invoke$arity$1(self__.data);
      return React.DOM.div({"id":"list-view"}, cljs.core.truth_(self__.top_filter) ? om.core.build.call(null, self__.top_filter, self__.query) : null, React.DOM.div({"className":[cljs.core.str("main-container "), cljs.core.str(self__.main_container_class)].join("")}, React.DOM.div({"className":[cljs.core.str("data-container "), cljs.core.str(self__.data_container_class)].join("")}, cljs.core.truth_(loading_QMARK_) ? om.core.build.call(null, floor16.ui.generic.load_progress, self__.data) : null, cljs.core.truth_(self__.data_head) ? 
      om.core.build.call(null, self__.data_head, self__.cursor) : om.core.build.call(null, floor16.ui.generic.data_header, self__.cursor, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "header-opts", "header-opts", 2151738066), self__.header_opts, new cljs.core.Keyword(null, "data-header-class", "data-header-class", 2790141677), self__.data_header_class, new cljs.core.Keyword(null, 
      "data-header-total-kword", "data-header-total-kword", 1362738529), self__.data_header_total_kword, new cljs.core.Keyword(null, "data-header-total-class", "data-header-total-class", 1355009252), self__.data_header_total_class, new cljs.core.Keyword(null, "data-header-opts-class", "data-header-opts-class", 2922150106), self__.data_header_opts_class], null)], null)), no_items_QMARK_ ? cljs.core.truth_(self__.data_empty) ? om.core.build.call(null, self__.data_empty, self__.data, new cljs.core.PersistentArrayMap(null, 
      1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "empty-text", "empty-text", 4203552031), cljs.core.truth_(loading_QMARK_) ? self__.loading_text : self__.empty_text], null)], null)) : om.core.build.call(null, floor16.ui.generic.empty_view, self__.data, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
      "empty-text", "empty-text", 4203552031), cljs.core.truth_(loading_QMARK_) ? self__.loading_text : self__.empty_text], null)], null)) : cljs.core.apply.call(null, om.dom.ul, null, cljs.core.map.call(null, function(p1__85320_SHARP_) {
        return React.DOM.li({"className":"data-item clearfix", "key":kw_id__$2.call(null, p1__85320_SHARP_)}, om.core.build.call(null, self__.item_view, p1__85320_SHARP_));
      }, items)), no_items_QMARK_ ? null : om.core.build.call(null, floor16.ui.generic.data_pager, self__.cursor, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "list-mode", "list-mode", 4038414564), self__.list_mode], null)], null))), cljs.core.truth_(self__.side_filter) ? om.core.build.call(null, self__.side_filter, self__.query) : null));
    };
    floor16.ui.generic.t85330.prototype.cljs$core$IMeta$_meta$arity$1 = function(_85332) {
      var self__ = this;
      var _85332__$1 = this;
      return self__.meta85331;
    };
    floor16.ui.generic.t85330.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_85332, meta85331__$1) {
      var self__ = this;
      var _85332__$1 = this;
      return new floor16.ui.generic.t85330(self__.res, self__.list_view, self__.data_head, self__.query, self__.top_filter, self__.main_container_class, self__.list_mode, self__.data_header_total_class, self__.empty_text, self__.data, self__.side_filter, self__.data_header_class, self__.p__85322, self__.item_view_mode, self__.p__85321, self__.map__85329, self__.map__85328, self__.header_opts, self__.data_container_class, self__.owner, self__.cursor, self__.data_empty, self__.data_header_opts_class, 
      self__.data_header_total_kword, self__.kw_id, self__.loading_text, self__.item_view, meta85331__$1);
    };
    floor16.ui.generic.__GT_t85330 = function __GT_t85330(res__$1, list_view__$1, data_head__$1, query__$1, top_filter__$1, main_container_class__$1, list_mode__$1, data_header_total_class__$1, empty_text__$1, data__$1, side_filter__$1, data_header_class__$1, p__85322__$1, item_view_mode__$1, p__85321__$1, map__85329__$2, map__85328__$2, header_opts__$1, data_container_class__$1, owner__$1, cursor__$1, data_empty__$1, data_header_opts_class__$1, data_header_total_kword__$1, kw_id__$1, loading_text__$1, 
    item_view__$1, meta85331) {
      return new floor16.ui.generic.t85330(res__$1, list_view__$1, data_head__$1, query__$1, top_filter__$1, main_container_class__$1, list_mode__$1, data_header_total_class__$1, empty_text__$1, data__$1, side_filter__$1, data_header_class__$1, p__85322__$1, item_view_mode__$1, p__85321__$1, map__85329__$2, map__85328__$2, header_opts__$1, data_container_class__$1, owner__$1, cursor__$1, data_empty__$1, data_header_opts_class__$1, data_header_total_kword__$1, kw_id__$1, loading_text__$1, item_view__$1, 
      meta85331);
    };
  }
  return new floor16.ui.generic.t85330(res, list_view, data_head, query, top_filter, main_container_class, list_mode, data_header_total_class, empty_text, data, side_filter, data_header_class, p__85322, item_view_mode, p__85321, map__85329__$1, map__85328__$1, header_opts, data_container_class, owner, cursor, data_empty, data_header_opts_class, data_header_total_kword, kw_id, loading_text, item_view, null);
};
floor16.ui.generic.box_group = function box_group(cursor, owner, p__85333) {
  var map__85340 = p__85333;
  var map__85340__$1 = cljs.core.seq_QMARK_.call(null, map__85340) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85340) : map__85340;
  var opts = map__85340__$1;
  var caption = cljs.core.get.call(null, map__85340__$1, new cljs.core.Keyword(null, "caption", "caption", 1566477656));
  var view = cljs.core.get.call(null, map__85340__$1, new cljs.core.Keyword(null, "view", "view", 1017523735));
  var init_opened = cljs.core.get.call(null, map__85340__$1, new cljs.core.Keyword(null, "init-opened", "init-opened", 941682488));
  if (typeof floor16.ui.generic.t85341 !== "undefined") {
  } else {
    floor16.ui.generic.t85341 = function(init_opened, view, caption, opts, map__85340, p__85333, owner, cursor, box_group, meta85342) {
      this.init_opened = init_opened;
      this.view = view;
      this.caption = caption;
      this.opts = opts;
      this.map__85340 = map__85340;
      this.p__85333 = p__85333;
      this.owner = owner;
      this.cursor = cursor;
      this.box_group = box_group;
      this.meta85342 = meta85342;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.generic.t85341.cljs$lang$type = true;
    floor16.ui.generic.t85341.cljs$lang$ctorStr = "floor16.ui.generic/t85341";
    floor16.ui.generic.t85341.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.ui.generic/t85341");
    };
    floor16.ui.generic.t85341.prototype.om$core$IRenderState$ = true;
    floor16.ui.generic.t85341.prototype.om$core$IRenderState$render_state$arity$2 = function(this$, p__85344) {
      var self__ = this;
      var map__85345 = p__85344;
      var map__85345__$1 = cljs.core.seq_QMARK_.call(null, map__85345) ? cljs.core.apply.call(null, cljs.core.hash_map, map__85345) : map__85345;
      var opened = cljs.core.get.call(null, map__85345__$1, new cljs.core.Keyword(null, "opened", "opened", 4298292187));
      var this$__$1 = this;
      return React.DOM.div({"className":"box-group"}, React.DOM.span({"onMouseDown":function(e) {
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "opened", "opened", 4298292187), cljs.core.not.call(null, opened));
        return e.preventDefault();
      }, "className":"box-group-header clearfix"}, React.DOM.div({"className":[cljs.core.str("box-arrow "), cljs.core.str(cljs.core.truth_(opened) ? "arrow-down" : "arrow-right")].join("")}), React.DOM.span({"className":"box-caption"}, self__.caption)), cljs.core.truth_(opened) ? React.DOM.div({"className":"box-group-content"}, self__.view) : null);
    };
    floor16.ui.generic.t85341.prototype.om$core$IInitState$ = true;
    floor16.ui.generic.t85341.prototype.om$core$IInitState$init_state$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opened", "opened", 4298292187), self__.init_opened], null);
    };
    floor16.ui.generic.t85341.prototype.cljs$core$IMeta$_meta$arity$1 = function(_85343) {
      var self__ = this;
      var _85343__$1 = this;
      return self__.meta85342;
    };
    floor16.ui.generic.t85341.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_85343, meta85342__$1) {
      var self__ = this;
      var _85343__$1 = this;
      return new floor16.ui.generic.t85341(self__.init_opened, self__.view, self__.caption, self__.opts, self__.map__85340, self__.p__85333, self__.owner, self__.cursor, self__.box_group, meta85342__$1);
    };
    floor16.ui.generic.__GT_t85341 = function __GT_t85341(init_opened__$1, view__$1, caption__$1, opts__$1, map__85340__$2, p__85333__$1, owner__$1, cursor__$1, box_group__$1, meta85342) {
      return new floor16.ui.generic.t85341(init_opened__$1, view__$1, caption__$1, opts__$1, map__85340__$2, p__85333__$1, owner__$1, cursor__$1, box_group__$1, meta85342);
    };
  }
  return new floor16.ui.generic.t85341(init_opened, view, caption, opts, map__85340__$1, p__85333, owner, cursor, box_group, null);
};
goog.provide("floor16.pages.search");
goog.require("cljs.core");
goog.require("floor16.lang");
goog.require("cljs.core.async");
goog.require("goog.events");
goog.require("goog.events.EventType");
goog.require("floor16.auth");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("floor16.auth");
goog.require("floor16.lang");
goog.require("floor16.ui.generic");
goog.require("om.dom");
goog.require("cljs.core.async");
goog.require("goog.events");
goog.require("floor16.ui.generic");
floor16.pages.search.simple_filter = function simple_filter(filt, owner) {
  if (typeof floor16.pages.search.t9457 !== "undefined") {
  } else {
    floor16.pages.search.t9457 = function(owner, filt, simple_filter, meta9458) {
      this.owner = owner;
      this.filt = filt;
      this.simple_filter = simple_filter;
      this.meta9458 = meta9458;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.pages.search.t9457.cljs$lang$type = true;
    floor16.pages.search.t9457.cljs$lang$ctorStr = "floor16.pages.search/t9457";
    floor16.pages.search.t9457.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.pages.search/t9457");
    };
    floor16.pages.search.t9457.prototype.om$core$IRender$ = true;
    floor16.pages.search.t9457.prototype.om$core$IRender$render$arity$1 = function(this__4987__auto__) {
      var self__ = this;
      var this__4987__auto____$1 = this;
      return React.DOM.div({"className":"simple-filter"}, om.core.build.call(null, floor16.ui.generic.select, self__.filt, floor16.ui.generic.add_filter_chan.call(null, self__.owner, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), new cljs.core.Keyword(null, "city-id", "city-id", 1799296047), new cljs.core.Keyword(null, "placeholder", "placeholder", 
      1612151013), floor16.lang.l.call(null, new cljs.core.Keyword(null, "city", "city", 1016958173)), new cljs.core.Keyword(null, "resource", "resource", 672839552), floor16.ui.generic.res_city.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "common", "common", 3954056541), new cljs.core.Keyword(null, "refs", "refs", 1017400754), new cljs.core.Keyword(null, "cities", "cities", 3948719803)], null))], null)], null))));
    };
    floor16.pages.search.t9457.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9459) {
      var self__ = this;
      var _9459__$1 = this;
      return self__.meta9458;
    };
    floor16.pages.search.t9457.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9459, meta9458__$1) {
      var self__ = this;
      var _9459__$1 = this;
      return new floor16.pages.search.t9457(self__.owner, self__.filt, self__.simple_filter, meta9458__$1);
    };
    floor16.pages.search.__GT_t9457 = function __GT_t9457(owner__$1, filt__$1, simple_filter__$1, meta9458) {
      return new floor16.pages.search.t9457(owner__$1, filt__$1, simple_filter__$1, meta9458);
    };
  }
  return new floor16.pages.search.t9457(owner, filt, simple_filter, null);
};
floor16.pages.search.extended_filter = function extended_filter(data, owner, opts) {
  if (typeof floor16.pages.search.t9463 !== "undefined") {
  } else {
    floor16.pages.search.t9463 = function(opts, owner, data, extended_filter, meta9464) {
      this.opts = opts;
      this.owner = owner;
      this.data = data;
      this.extended_filter = extended_filter;
      this.meta9464 = meta9464;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.pages.search.t9463.cljs$lang$type = true;
    floor16.pages.search.t9463.cljs$lang$ctorStr = "floor16.pages.search/t9463";
    floor16.pages.search.t9463.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.pages.search/t9463");
    };
    floor16.pages.search.t9463.prototype.om$core$IRender$ = true;
    floor16.pages.search.t9463.prototype.om$core$IRender$render$arity$1 = function(this__4987__auto__) {
      var self__ = this;
      var this__4987__auto____$1 = this;
      return React.DOM.div({"className":""}, "extended-filter");
    };
    floor16.pages.search.t9463.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9465) {
      var self__ = this;
      var _9465__$1 = this;
      return self__.meta9464;
    };
    floor16.pages.search.t9463.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9465, meta9464__$1) {
      var self__ = this;
      var _9465__$1 = this;
      return new floor16.pages.search.t9463(self__.opts, self__.owner, self__.data, self__.extended_filter, meta9464__$1);
    };
    floor16.pages.search.__GT_t9463 = function __GT_t9463(opts__$1, owner__$1, data__$1, extended_filter__$1, meta9464) {
      return new floor16.pages.search.t9463(opts__$1, owner__$1, data__$1, extended_filter__$1, meta9464);
    };
  }
  return new floor16.pages.search.t9463(opts, owner, data, extended_filter, null);
};
floor16.pages.search.ad_item_view = function ad_item_view(item, owner, opts) {
  if (typeof floor16.pages.search.t9469 !== "undefined") {
  } else {
    floor16.pages.search.t9469 = function(opts, owner, item, ad_item_view, meta9470) {
      this.opts = opts;
      this.owner = owner;
      this.item = item;
      this.ad_item_view = ad_item_view;
      this.meta9470 = meta9470;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.pages.search.t9469.cljs$lang$type = true;
    floor16.pages.search.t9469.cljs$lang$ctorStr = "floor16.pages.search/t9469";
    floor16.pages.search.t9469.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.pages.search/t9469");
    };
    floor16.pages.search.t9469.prototype.om$core$IRender$ = true;
    floor16.pages.search.t9469.prototype.om$core$IRender$render$arity$1 = function(this__4987__auto__) {
      var self__ = this;
      var this__4987__auto____$1 = this;
      return React.DOM.div({"className":""}, "ad-item-view");
    };
    floor16.pages.search.t9469.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9471) {
      var self__ = this;
      var _9471__$1 = this;
      return self__.meta9470;
    };
    floor16.pages.search.t9469.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9471, meta9470__$1) {
      var self__ = this;
      var _9471__$1 = this;
      return new floor16.pages.search.t9469(self__.opts, self__.owner, self__.item, self__.ad_item_view, meta9470__$1);
    };
    floor16.pages.search.__GT_t9469 = function __GT_t9469(opts__$1, owner__$1, item__$1, ad_item_view__$1, meta9470) {
      return new floor16.pages.search.t9469(opts__$1, owner__$1, item__$1, ad_item_view__$1, meta9470);
    };
  }
  return new floor16.pages.search.t9469(opts, owner, item, ad_item_view, null);
};
floor16.pages.search.page = function page(cursor, owner, p__9472) {
  var map__9477 = p__9472;
  var map__9477__$1 = cljs.core.seq_QMARK_.call(null, map__9477) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9477) : map__9477;
  var opts = map__9477__$1;
  var page_path = cljs.core.get.call(null, map__9477__$1, new cljs.core.Keyword(null, "page-path", "page-path", 1851480085));
  var page_id = cljs.core.get.call(null, map__9477__$1, new cljs.core.Keyword(null, "page-id", "page-id", 4505274507));
  if (typeof floor16.pages.search.t9478 !== "undefined") {
  } else {
    floor16.pages.search.t9478 = function(page_id, page_path, opts, map__9477, p__9472, owner, cursor, page, meta9479) {
      this.page_id = page_id;
      this.page_path = page_path;
      this.opts = opts;
      this.map__9477 = map__9477;
      this.p__9472 = p__9472;
      this.owner = owner;
      this.cursor = cursor;
      this.page = page;
      this.meta9479 = meta9479;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.pages.search.t9478.cljs$lang$type = true;
    floor16.pages.search.t9478.cljs$lang$ctorStr = "floor16.pages.search/t9478";
    floor16.pages.search.t9478.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.pages.search/t9478");
    };
    floor16.pages.search.t9478.prototype.om$core$IRender$ = true;
    floor16.pages.search.t9478.prototype.om$core$IRender$render$arity$1 = function(this__4987__auto__) {
      var self__ = this;
      var this__4987__auto____$1 = this;
      return React.DOM.div({"id":"sec-home"}, React.DOM.div({"className":"design-layer", "id":"spot"}), React.DOM.div({"className":"design-layer", "id":"icons"}), React.DOM.div({"className":"design-layer", "id":"cells"}), React.DOM.div({"className":"container"}, floor16.auth.guest_QMARK_.call(null) ? React.DOM.div({"className":"advert"}, React.DOM.div({"className":"eight columns", "id":"slogan"}, React.DOM.h1(null, React.DOM.img({"alt":"\u041d\u0430\u0439\u0434\u0438 \u0436\u0438\u043b\u044c\u0435 \u0441\u0430\u043c! \u041f\u0440\u044f\u043c\u0430\u044f \u0430\u0440\u0435\u043d\u0434\u0430 \u043e\u0442 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u0438\u043a\u043e\u0432!", 
      "src":"/img/slogan.png"})), React.DOM.p(null, "\u0415\u0436\u0435\u0434\u043d\u0435\u0432\u043d\u044b\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0431\u0430\u0437\u044b \u0436\u0438\u043b\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432", React.DOM.br(null), "SMS \u0438 E-mail \u0440\u0430\u0441\u0441\u044b\u043b\u043a\u0430 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432", React.DOM.br(null), 
      "\u0413\u0438\u0431\u043a\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u0442\u0430\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438")), React.DOM.div({"className":"offset-by-one six columns", "id":"scheme"}, React.DOM.img({"alt":"\u0423\u0434\u043e\u0431\u043d\u044b\u0439 \u043f\u043e\u0438\u0441\u043a. \u0415\u0436\u0435\u0434\u043d\u0435\u0432\u043d\u044b\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f. \u0410\u0432\u0442\u043e\u043f\u043e\u0434\u0431\u043e\u0440 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432. SMS \u0438 E-mail \u0440\u0430\u0441\u0441\u044b\u043b\u043a\u0430. \u041e\u043d\u043b\u0430\u0439\u043d \u043a\u043e\u043d\u0441\u0443\u043b\u044c\u0442\u0430\u0446\u0438\u0438.", 
      "src":"/img/scheme.png"})), React.DOM.div({"className":"clear"})) : null, function() {
        var pg = cljs.core.get_in.call(null, self__.cursor, self__.page_path);
        if (cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "filter", "filter", 4034379498)).cljs$core$IFn$_invoke$arity$1(pg))) {
          return om.core.build.call(null, floor16.pages.search.simple_filter, (new cljs.core.Keyword(null, "filter", "filter", 4034379498)).cljs$core$IFn$_invoke$arity$1(pg));
        } else {
          return om.core.build.call(null, floor16.ui.generic.list_view, pg, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "top-filter", "top-filter", 2858888802), floor16.pages.search.simple_filter, new cljs.core.Keyword(null, "side-filter", "side-filter", 945679392), floor16.pages.search.extended_filter, new cljs.core.Keyword(null, "header-opts", "header-opts", 2151738066), 
          new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "sort", "sort", 1017440528), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "view", "view", 1017523735), floor16.ui.generic.sort_select], null), new cljs.core.Keyword(null, "views", "views", 1126108640), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "view", "view", 1017523735), floor16.ui.generic.view_select], null)], null), new cljs.core.Keyword(null, "empty-text", "empty-text", 
          4203552031), floor16.lang.l.call(null, new cljs.core.Keyword(null, "empty-search", "empty-search", 3924434330)), new cljs.core.Keyword(null, "item-view", "item-view", 3121596561), floor16.pages.search.ad_item_view, new cljs.core.Keyword(null, "res", "res", 1014017042), floor16.ui.generic.res_city.call(null, cljs.core.conj.call(null, self__.page_path, new cljs.core.Keyword(null, "data", "data", 1016980252)))], null)], null));
        }
      }()));
    };
    floor16.pages.search.t9478.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9480) {
      var self__ = this;
      var _9480__$1 = this;
      return self__.meta9479;
    };
    floor16.pages.search.t9478.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9480, meta9479__$1) {
      var self__ = this;
      var _9480__$1 = this;
      return new floor16.pages.search.t9478(self__.page_id, self__.page_path, self__.opts, self__.map__9477, self__.p__9472, self__.owner, self__.cursor, self__.page, meta9479__$1);
    };
    floor16.pages.search.__GT_t9478 = function __GT_t9478(page_id__$1, page_path__$1, opts__$1, map__9477__$2, p__9472__$1, owner__$1, cursor__$1, page__$1, meta9479) {
      return new floor16.pages.search.t9478(page_id__$1, page_path__$1, opts__$1, map__9477__$2, p__9472__$1, owner__$1, cursor__$1, page__$1, meta9479);
    };
  }
  return new floor16.pages.search.t9478(page_id, page_path, opts, map__9477__$1, p__9472, owner, cursor, page, null);
};
goog.provide("floor16.app");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("floor16.navigation");
goog.require("floor16.navigation");
goog.require("goog.events");
goog.require("goog.events.EventType");
goog.require("floor16.pages.search");
goog.require("floor16.auth");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("floor16.auth");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("floor16.ui.generic");
goog.require("om.dom");
goog.require("cljs.core.async");
goog.require("goog.events");
goog.require("floor16.ui.generic");
cljs.core.enable_console_print_BANG_.call(null);
goog.provide("floor16.resources");
goog.require("cljs.core");
floor16.resources.IResource = function() {
  var obj9482 = {};
  return obj9482;
}();
floor16.resources.all = function all(this$, state) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.floor16$resources$IResource$all$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.floor16$resources$IResource$all$arity$2(this$, state);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = floor16.resources.all[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = floor16.resources.all["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IResource.all", this$);
        }
      }
    }().call(null, this$, state);
  }
};
floor16.resources.by_key = function by_key(this$, state, k) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.floor16$resources$IResource$by_key$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.floor16$resources$IResource$by_key$arity$3(this$, state, k);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = floor16.resources.by_key[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = floor16.resources.by_key["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IResource.by-key", this$);
        }
      }
    }().call(null, this$, state, k);
  }
};
floor16.resources.name_by_key = function name_by_key(this$, state, k) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.floor16$resources$IResource$name_by_key$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.floor16$resources$IResource$name_by_key$arity$3(this$, state, k);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = floor16.resources.name_by_key[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = floor16.resources.name_by_key["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IResource.name-by-key", this$);
        }
      }
    }().call(null, this$, state, k);
  }
};
floor16.resources.d_key = function d_key(this$) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.floor16$resources$IResource$d_key$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.floor16$resources$IResource$d_key$arity$1(this$);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = floor16.resources.d_key[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = floor16.resources.d_key["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IResource.d-key", this$);
        }
      }
    }().call(null, this$);
  }
};
floor16.resources.d_name = function d_name(this$) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.floor16$resources$IResource$d_name$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.floor16$resources$IResource$d_name$arity$1(this$);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = floor16.resources.d_name[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = floor16.resources.d_name["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IResource.d-name", this$);
        }
      }
    }().call(null, this$);
  }
};
floor16.resources.by_query = function by_query(this$, state, query) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.floor16$resources$IResource$by_query$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.floor16$resources$IResource$by_query$arity$3(this$, state, query);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = floor16.resources.by_query[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = floor16.resources.by_query["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IResource.by-query", this$);
        }
      }
    }().call(null, this$, state, query);
  }
};
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.array");
goog.require("goog.events");
goog.require("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_handler) {
  goog.Disposable.call(this);
  this.handler_ = opt_handler;
  this.keys_ = [];
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture, opt_handler) {
  if (!goog.isArray(type)) {
    goog.events.EventHandler.typeArray_[0] = (type);
    type = goog.events.EventHandler.typeArray_;
  }
  for (var i = 0;i < type.length;i++) {
    var key = (goog.events.listen(src, type[i], opt_fn || this, opt_capture || false, opt_handler || (this.handler_ || this)));
    this.keys_.push(key);
  }
  return this;
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.listenOnce(src, type[i], opt_fn, opt_capture, opt_handler);
    }
  } else {
    var key = (goog.events.listenOnce(src, type, opt_fn || this, opt_capture, opt_handler || (this.handler_ || this)));
    this.keys_.push(key);
  }
  return this;
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler || (this.handler_ || this), this);
  return this;
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  return this.keys_.length;
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_handler);
    }
  } else {
    var listener = goog.events.getListener(src, type, opt_fn || this, opt_capture, opt_handler || (this.handler_ || this));
    if (listener) {
      var key = listener.key;
      goog.events.unlistenByKey(key);
      goog.array.remove(this.keys_, key);
    }
  }
  return this;
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler || (this.handler_ || this), this);
  return this;
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.array.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_.length = 0;
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll();
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.style.bidi");
goog.require("goog.dom");
goog.require("goog.style");
goog.require("goog.userAgent");
goog.style.bidi.getScrollLeft = function(element) {
  var isRtl = goog.style.isRightToLeft(element);
  if (isRtl && goog.userAgent.GECKO) {
    return-element.scrollLeft;
  } else {
    if (isRtl && !(goog.userAgent.IE && goog.userAgent.isVersion("8"))) {
      var overflowX = goog.style.getComputedOverflowX(element);
      if (overflowX == "visible") {
        return element.scrollLeft;
      } else {
        return element.scrollWidth - element.clientWidth - element.scrollLeft;
      }
    }
  }
  return element.scrollLeft;
};
goog.style.bidi.getOffsetStart = function(element) {
  var offsetLeftForReal = element.offsetLeft;
  var bestParent = element.offsetParent;
  if (!bestParent && goog.style.getComputedPosition(element) == "fixed") {
    bestParent = goog.dom.getOwnerDocument(element).documentElement;
  }
  if (!bestParent) {
    return offsetLeftForReal;
  }
  if (goog.userAgent.GECKO) {
    var borderWidths = goog.style.getBorderBox(bestParent);
    offsetLeftForReal += borderWidths.left;
  } else {
    if (goog.userAgent.isDocumentMode(8)) {
      var borderWidths = goog.style.getBorderBox(bestParent);
      offsetLeftForReal -= borderWidths.left;
    }
  }
  if (goog.style.isRightToLeft(bestParent)) {
    var elementRightOffset = offsetLeftForReal + element.offsetWidth;
    return bestParent.clientWidth - elementRightOffset;
  }
  return offsetLeftForReal;
};
goog.style.bidi.setScrollOffset = function(element, offsetStart) {
  offsetStart = Math.max(offsetStart, 0);
  if (!goog.style.isRightToLeft(element)) {
    element.scrollLeft = offsetStart;
  } else {
    if (goog.userAgent.GECKO) {
      element.scrollLeft = -offsetStart;
    } else {
      if (!(goog.userAgent.IE && goog.userAgent.isVersion("8"))) {
        element.scrollLeft = element.scrollWidth - offsetStart - element.clientWidth;
      } else {
        element.scrollLeft = offsetStart;
      }
    }
  }
};
goog.style.bidi.setPosition = function(elem, left, top, isRtl) {
  if (!goog.isNull(top)) {
    elem.style.top = top + "px";
  }
  if (isRtl) {
    elem.style.right = left + "px";
    elem.style.left = "";
  } else {
    elem.style.left = left + "px";
    elem.style.right = "";
  }
};
goog.provide("goog.fx.DragEvent");
goog.provide("goog.fx.Dragger");
goog.provide("goog.fx.Dragger.EventType");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.Event");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.style");
goog.require("goog.style.bidi");
goog.require("goog.userAgent");
goog.fx.Dragger = function(target, opt_handle, opt_limits) {
  goog.events.EventTarget.call(this);
  this.target = target;
  this.handle = opt_handle || target;
  this.limits = opt_limits || new goog.math.Rect(NaN, NaN, NaN, NaN);
  this.document_ = goog.dom.getOwnerDocument(target);
  this.eventHandler_ = new goog.events.EventHandler(this);
  goog.events.listen(this.handle, [goog.events.EventType.TOUCHSTART, goog.events.EventType.MOUSEDOWN], this.startDrag, false, this);
};
goog.inherits(goog.fx.Dragger, goog.events.EventTarget);
goog.fx.Dragger.HAS_SET_CAPTURE_ = goog.userAgent.IE || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.3");
goog.fx.Dragger.EventType = {EARLY_CANCEL:"earlycancel", START:"start", BEFOREDRAG:"beforedrag", DRAG:"drag", END:"end"};
goog.fx.Dragger.prototype.target;
goog.fx.Dragger.prototype.handle;
goog.fx.Dragger.prototype.limits;
goog.fx.Dragger.prototype.rightToLeft_;
goog.fx.Dragger.prototype.clientX = 0;
goog.fx.Dragger.prototype.clientY = 0;
goog.fx.Dragger.prototype.screenX = 0;
goog.fx.Dragger.prototype.screenY = 0;
goog.fx.Dragger.prototype.startX = 0;
goog.fx.Dragger.prototype.startY = 0;
goog.fx.Dragger.prototype.deltaX = 0;
goog.fx.Dragger.prototype.deltaY = 0;
goog.fx.Dragger.prototype.pageScroll;
goog.fx.Dragger.prototype.enabled_ = true;
goog.fx.Dragger.prototype.dragging_ = false;
goog.fx.Dragger.prototype.hysteresisDistanceSquared_ = 0;
goog.fx.Dragger.prototype.mouseDownTime_ = 0;
goog.fx.Dragger.prototype.document_;
goog.fx.Dragger.prototype.eventHandler_;
goog.fx.Dragger.prototype.scrollTarget_;
goog.fx.Dragger.prototype.ieDragStartCancellingOn_ = false;
goog.fx.Dragger.prototype.useRightPositioningForRtl_ = false;
goog.fx.Dragger.prototype.enableRightPositioningForRtl = function(useRightPositioningForRtl) {
  this.useRightPositioningForRtl_ = useRightPositioningForRtl;
};
goog.fx.Dragger.prototype.getHandler = function() {
  return this.eventHandler_;
};
goog.fx.Dragger.prototype.setLimits = function(limits) {
  this.limits = limits || new goog.math.Rect(NaN, NaN, NaN, NaN);
};
goog.fx.Dragger.prototype.setHysteresis = function(distance) {
  this.hysteresisDistanceSquared_ = Math.pow(distance, 2);
};
goog.fx.Dragger.prototype.getHysteresis = function() {
  return Math.sqrt(this.hysteresisDistanceSquared_);
};
goog.fx.Dragger.prototype.setScrollTarget = function(scrollTarget) {
  this.scrollTarget_ = scrollTarget;
};
goog.fx.Dragger.prototype.setCancelIeDragStart = function(cancelIeDragStart) {
  this.ieDragStartCancellingOn_ = cancelIeDragStart;
};
goog.fx.Dragger.prototype.getEnabled = function() {
  return this.enabled_;
};
goog.fx.Dragger.prototype.setEnabled = function(enabled) {
  this.enabled_ = enabled;
};
goog.fx.Dragger.prototype.disposeInternal = function() {
  goog.fx.Dragger.superClass_.disposeInternal.call(this);
  goog.events.unlisten(this.handle, [goog.events.EventType.TOUCHSTART, goog.events.EventType.MOUSEDOWN], this.startDrag, false, this);
  this.cleanUpAfterDragging_();
  this.target = null;
  this.handle = null;
  this.eventHandler_ = null;
};
goog.fx.Dragger.prototype.isRightToLeft_ = function() {
  if (!goog.isDef(this.rightToLeft_)) {
    this.rightToLeft_ = goog.style.isRightToLeft(this.target);
  }
  return this.rightToLeft_;
};
goog.fx.Dragger.prototype.startDrag = function(e) {
  var isMouseDown = e.type == goog.events.EventType.MOUSEDOWN;
  if (this.enabled_ && (!this.dragging_ && (!isMouseDown || e.isMouseActionButton()))) {
    this.maybeReinitTouchEvent_(e);
    if (this.hysteresisDistanceSquared_ == 0) {
      if (this.fireDragStart_(e)) {
        this.dragging_ = true;
        e.preventDefault();
      } else {
        return;
      }
    } else {
      e.preventDefault();
    }
    this.setupDragHandlers();
    this.clientX = this.startX = e.clientX;
    this.clientY = this.startY = e.clientY;
    this.screenX = e.screenX;
    this.screenY = e.screenY;
    this.deltaX = this.useRightPositioningForRtl_ ? goog.style.bidi.getOffsetStart(this.target) : this.target.offsetLeft;
    this.deltaY = this.target.offsetTop;
    this.pageScroll = goog.dom.getDomHelper(this.document_).getDocumentScroll();
    this.mouseDownTime_ = goog.now();
  } else {
    this.dispatchEvent(goog.fx.Dragger.EventType.EARLY_CANCEL);
  }
};
goog.fx.Dragger.prototype.setupDragHandlers = function() {
  var doc = this.document_;
  var docEl = doc.documentElement;
  var useCapture = !goog.fx.Dragger.HAS_SET_CAPTURE_;
  this.eventHandler_.listen(doc, [goog.events.EventType.TOUCHMOVE, goog.events.EventType.MOUSEMOVE], this.handleMove_, useCapture);
  this.eventHandler_.listen(doc, [goog.events.EventType.TOUCHEND, goog.events.EventType.MOUSEUP], this.endDrag, useCapture);
  if (goog.fx.Dragger.HAS_SET_CAPTURE_) {
    docEl.setCapture(false);
    this.eventHandler_.listen(docEl, goog.events.EventType.LOSECAPTURE, this.endDrag);
  } else {
    this.eventHandler_.listen(goog.dom.getWindow(doc), goog.events.EventType.BLUR, this.endDrag);
  }
  if (goog.userAgent.IE && this.ieDragStartCancellingOn_) {
    this.eventHandler_.listen(doc, goog.events.EventType.DRAGSTART, goog.events.Event.preventDefault);
  }
  if (this.scrollTarget_) {
    this.eventHandler_.listen(this.scrollTarget_, goog.events.EventType.SCROLL, this.onScroll_, useCapture);
  }
};
goog.fx.Dragger.prototype.fireDragStart_ = function(e) {
  return this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.START, this, e.clientX, e.clientY, e));
};
goog.fx.Dragger.prototype.cleanUpAfterDragging_ = function() {
  this.eventHandler_.removeAll();
  if (goog.fx.Dragger.HAS_SET_CAPTURE_) {
    this.document_.releaseCapture();
  }
};
goog.fx.Dragger.prototype.endDrag = function(e, opt_dragCanceled) {
  this.cleanUpAfterDragging_();
  if (this.dragging_) {
    this.maybeReinitTouchEvent_(e);
    this.dragging_ = false;
    var x = this.limitX(this.deltaX);
    var y = this.limitY(this.deltaY);
    var dragCanceled = opt_dragCanceled || e.type == goog.events.EventType.TOUCHCANCEL;
    this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.END, this, e.clientX, e.clientY, e, x, y, dragCanceled));
  } else {
    this.dispatchEvent(goog.fx.Dragger.EventType.EARLY_CANCEL);
  }
  if (e.type == goog.events.EventType.TOUCHEND || e.type == goog.events.EventType.TOUCHCANCEL) {
    e.preventDefault();
  }
};
goog.fx.Dragger.prototype.endDragCancel = function(e) {
  this.endDrag(e, true);
};
goog.fx.Dragger.prototype.maybeReinitTouchEvent_ = function(e) {
  var type = e.type;
  if (type == goog.events.EventType.TOUCHSTART || type == goog.events.EventType.TOUCHMOVE) {
    e.init(e.getBrowserEvent().targetTouches[0], e.currentTarget);
  } else {
    if (type == goog.events.EventType.TOUCHEND || type == goog.events.EventType.TOUCHCANCEL) {
      e.init(e.getBrowserEvent().changedTouches[0], e.currentTarget);
    }
  }
};
goog.fx.Dragger.prototype.handleMove_ = function(e) {
  if (this.enabled_) {
    this.maybeReinitTouchEvent_(e);
    var sign = this.useRightPositioningForRtl_ && this.isRightToLeft_() ? -1 : 1;
    var dx = sign * (e.clientX - this.clientX);
    var dy = e.clientY - this.clientY;
    this.clientX = e.clientX;
    this.clientY = e.clientY;
    this.screenX = e.screenX;
    this.screenY = e.screenY;
    if (!this.dragging_) {
      var diffX = this.startX - this.clientX;
      var diffY = this.startY - this.clientY;
      var distance = diffX * diffX + diffY * diffY;
      if (distance > this.hysteresisDistanceSquared_) {
        if (this.fireDragStart_(e)) {
          this.dragging_ = true;
        } else {
          if (!this.isDisposed()) {
            this.endDrag(e);
          }
          return;
        }
      }
    }
    var pos = this.calculatePosition_(dx, dy);
    var x = pos.x;
    var y = pos.y;
    if (this.dragging_) {
      var rv = this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.BEFOREDRAG, this, e.clientX, e.clientY, e, x, y));
      if (rv) {
        this.doDrag(e, x, y, false);
        e.preventDefault();
      }
    }
  }
};
goog.fx.Dragger.prototype.calculatePosition_ = function(dx, dy) {
  var pageScroll = goog.dom.getDomHelper(this.document_).getDocumentScroll();
  dx += pageScroll.x - this.pageScroll.x;
  dy += pageScroll.y - this.pageScroll.y;
  this.pageScroll = pageScroll;
  this.deltaX += dx;
  this.deltaY += dy;
  var x = this.limitX(this.deltaX);
  var y = this.limitY(this.deltaY);
  return new goog.math.Coordinate(x, y);
};
goog.fx.Dragger.prototype.onScroll_ = function(e) {
  var pos = this.calculatePosition_(0, 0);
  e.clientX = this.clientX;
  e.clientY = this.clientY;
  this.doDrag(e, pos.x, pos.y, true);
};
goog.fx.Dragger.prototype.doDrag = function(e, x, y, dragFromScroll) {
  this.defaultAction(x, y);
  this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.DRAG, this, e.clientX, e.clientY, e, x, y));
};
goog.fx.Dragger.prototype.limitX = function(x) {
  var rect = this.limits;
  var left = !isNaN(rect.left) ? rect.left : null;
  var width = !isNaN(rect.width) ? rect.width : 0;
  var maxX = left != null ? left + width : Infinity;
  var minX = left != null ? left : -Infinity;
  return Math.min(maxX, Math.max(minX, x));
};
goog.fx.Dragger.prototype.limitY = function(y) {
  var rect = this.limits;
  var top = !isNaN(rect.top) ? rect.top : null;
  var height = !isNaN(rect.height) ? rect.height : 0;
  var maxY = top != null ? top + height : Infinity;
  var minY = top != null ? top : -Infinity;
  return Math.min(maxY, Math.max(minY, y));
};
goog.fx.Dragger.prototype.defaultAction = function(x, y) {
  if (this.useRightPositioningForRtl_ && this.isRightToLeft_()) {
    this.target.style.right = x + "px";
  } else {
    this.target.style.left = x + "px";
  }
  this.target.style.top = y + "px";
};
goog.fx.Dragger.prototype.isDragging = function() {
  return this.dragging_;
};
goog.fx.DragEvent = function(type, dragobj, clientX, clientY, browserEvent, opt_actX, opt_actY, opt_dragCanceled) {
  goog.events.Event.call(this, type);
  this.clientX = clientX;
  this.clientY = clientY;
  this.browserEvent = browserEvent;
  this.left = goog.isDef(opt_actX) ? opt_actX : dragobj.deltaX;
  this.top = goog.isDef(opt_actY) ? opt_actY : dragobj.deltaY;
  this.dragger = dragobj;
  this.dragCanceled = !!opt_dragCanceled;
};
goog.inherits(goog.fx.DragEvent, goog.events.Event);
goog.provide("floor16.ui.range_edit");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("goog.math.Rect");
goog.require("goog.events");
goog.require("clojure.string");
goog.require("floor16.global");
goog.require("goog.events.EventType");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("clojure.string");
goog.require("om.dom");
goog.require("floor16.global");
goog.require("cljs.core.async");
goog.require("goog.events");
goog.require("goog.fx.Dragger.EventType");
goog.require("goog.fx.Dragger");
floor16.ui.range_edit.ExtendedDragger = function ExtendedDragger(el, limit) {
  return goog.base(this, el, null, limit);
};
goog.inherits(floor16.ui.range_edit.ExtendedDragger, goog.fx.Dragger);
floor16.ui.range_edit.ExtendedDragger.prototype.defaultAction = function(x, y) {
  return null;
};
floor16.ui.range_edit.val_to_pos = function val_to_pos(value, min_btm, max_top) {
  return 100 * value / (max_top - min_btm);
};
floor16.ui.range_edit.step_round = function step_round(v, step) {
  return Math.floor.call(null, v / step) * step;
};
floor16.ui.range_edit.pos_to_val = function pos_to_val(pos, min_btm, max_top, step, width, self_width, current) {
  var pos__$1 = pos + self_width / 2;
  var raw = (max_top - min_btm) * pos__$1 / width;
  var stepped = floor16.ui.range_edit.step_round.call(null, raw, step);
  var delta = stepped - raw;
  var half_step = step / 2;
  if (Math.abs.call(null, delta) < half_step) {
    return current;
  } else {
    return stepped;
  }
};
floor16.ui.range_edit.slider_handle = function slider_handle(range_value, owner, p__17932) {
  var map__17937 = p__17932;
  var map__17937__$1 = cljs.core.seq_QMARK_.call(null, map__17937) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17937) : map__17937;
  var opts = map__17937__$1;
  var comm = cljs.core.get.call(null, map__17937__$1, new cljs.core.Keyword(null, "comm", "comm", 1016963710));
  var step = cljs.core.get.call(null, map__17937__$1, new cljs.core.Keyword(null, "step", "step", 1017444926), 1);
  var max_top = cljs.core.get.call(null, map__17937__$1, new cljs.core.Keyword(null, "max-top", "max-top", 1856863454));
  var min_bottom = cljs.core.get.call(null, map__17937__$1, new cljs.core.Keyword(null, "min-bottom", "min-bottom", 2894918008));
  var bound = cljs.core.get.call(null, map__17937__$1, new cljs.core.Keyword(null, "bound", "bound", 1107832048));
  if (typeof floor16.ui.range_edit.t17938 !== "undefined") {
  } else {
    floor16.ui.range_edit.t17938 = function(step, opts, p__17932, bound, slider_handle, range_value, comm, owner, max_top, min_bottom, map__17937, meta17939) {
      this.step = step;
      this.opts = opts;
      this.p__17932 = p__17932;
      this.bound = bound;
      this.slider_handle = slider_handle;
      this.range_value = range_value;
      this.comm = comm;
      this.owner = owner;
      this.max_top = max_top;
      this.min_bottom = min_bottom;
      this.map__17937 = map__17937;
      this.meta17939 = meta17939;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.range_edit.t17938.cljs$lang$type = true;
    floor16.ui.range_edit.t17938.cljs$lang$ctorStr = "floor16.ui.range-edit/t17938";
    floor16.ui.range_edit.t17938.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.ui.range-edit/t17938");
    };
    floor16.ui.range_edit.t17938.prototype.om$core$IRender$ = true;
    floor16.ui.range_edit.t17938.prototype.om$core$IRender$render$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return React.DOM.span({"onClick":function(p1__17931_SHARP_) {
        return p1__17931_SHARP_.stopPropagation();
      }, "onMouseDown":function(e) {
        return e.target.focus();
      }, "tabIndex":9999, "style":{"left":[cljs.core.str(floor16.ui.range_edit.val_to_pos.call(null, self__.bound.call(null, self__.range_value), self__.min_bottom, self__.max_top)), cljs.core.str("%")].join("")}, "className":"slider-handle"});
    };
    floor16.ui.range_edit.t17938.prototype.om$core$IWillUnmount$ = true;
    floor16.ui.range_edit.t17938.prototype.om$core$IWillUnmount$will_unmount$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      var temp__4092__auto__ = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "dragger", "dragger", 2926434578));
      if (cljs.core.truth_(temp__4092__auto__)) {
        var dr = temp__4092__auto__;
        return dr.dispose();
      } else {
        return null;
      }
    };
    floor16.ui.range_edit.t17938.prototype.om$core$IDidMount$ = true;
    floor16.ui.range_edit.t17938.prototype.om$core$IDidMount$did_mount$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      var node = om.core.get_node.call(null, self__.owner);
      var nodeWidth = node.offsetWidth;
      var parentWidth = node.parentNode.offsetWidth;
      var dragger = new floor16.ui.range_edit.ExtendedDragger(node, null, new goog.math.Rect(0, node.offsetTop, parentWidth, 0));
      var drag_handler = function(node, nodeWidth, parentWidth, dragger) {
        return function(publish) {
          return function(node, nodeWidth, parentWidth, dragger) {
            return function(e) {
              return cljs.core.async.put_BANG_.call(null, self__.comm, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "bound", "bound", 1107832048), self__.bound, new cljs.core.Keyword(null, "publish", "publish", 778539137), publish, new cljs.core.Keyword(null, "value", "value", 1125876963), floor16.ui.range_edit.pos_to_val.call(null, e.left, self__.min_bottom, self__.max_top, self__.step, parentWidth, nodeWidth, self__.bound.call(null, cljs.core.deref.call(null, self__.range_value)))], 
              null));
            };
          }(node, nodeWidth, parentWidth, dragger);
        };
      }(node, nodeWidth, parentWidth, dragger);
      om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "dragger", "dragger", 2926434578), dragger);
      goog.events.listen(dragger, goog.fx.Dragger.EventType.DRAG, drag_handler.call(null, false));
      return goog.events.listen(dragger, goog.fx.Dragger.EventType.END, drag_handler.call(null, true));
    };
    floor16.ui.range_edit.t17938.prototype.cljs$core$IMeta$_meta$arity$1 = function(_17940) {
      var self__ = this;
      var _17940__$1 = this;
      return self__.meta17939;
    };
    floor16.ui.range_edit.t17938.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_17940, meta17939__$1) {
      var self__ = this;
      var _17940__$1 = this;
      return new floor16.ui.range_edit.t17938(self__.step, self__.opts, self__.p__17932, self__.bound, self__.slider_handle, self__.range_value, self__.comm, self__.owner, self__.max_top, self__.min_bottom, self__.map__17937, meta17939__$1);
    };
    floor16.ui.range_edit.__GT_t17938 = function __GT_t17938(step__$1, opts__$1, p__17932__$1, bound__$1, slider_handle__$1, range_value__$1, comm__$1, owner__$1, max_top__$1, min_bottom__$1, map__17937__$2, meta17939) {
      return new floor16.ui.range_edit.t17938(step__$1, opts__$1, p__17932__$1, bound__$1, slider_handle__$1, range_value__$1, comm__$1, owner__$1, max_top__$1, min_bottom__$1, map__17937__$2, meta17939);
    };
  }
  return new floor16.ui.range_edit.t17938(step, opts, p__17932, bound, slider_handle, range_value, comm, owner, max_top, min_bottom, map__17937__$1, null);
};
floor16.ui.range_edit.slider_range = function slider_range(range_value, owner, p__17941) {
  var map__17946 = p__17941;
  var map__17946__$1 = cljs.core.seq_QMARK_.call(null, map__17946) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17946) : map__17946;
  var max_top = cljs.core.get.call(null, map__17946__$1, new cljs.core.Keyword(null, "max-top", "max-top", 1856863454));
  var min_bottom = cljs.core.get.call(null, map__17946__$1, new cljs.core.Keyword(null, "min-bottom", "min-bottom", 2894918008));
  if (typeof floor16.ui.range_edit.t17947 !== "undefined") {
  } else {
    floor16.ui.range_edit.t17947 = function(min_bottom, max_top, map__17946, p__17941, owner, range_value, slider_range, meta17948) {
      this.min_bottom = min_bottom;
      this.max_top = max_top;
      this.map__17946 = map__17946;
      this.p__17941 = p__17941;
      this.owner = owner;
      this.range_value = range_value;
      this.slider_range = slider_range;
      this.meta17948 = meta17948;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.range_edit.t17947.cljs$lang$type = true;
    floor16.ui.range_edit.t17947.cljs$lang$ctorStr = "floor16.ui.range-edit/t17947";
    floor16.ui.range_edit.t17947.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.ui.range-edit/t17947");
    };
    floor16.ui.range_edit.t17947.prototype.om$core$IRender$ = true;
    floor16.ui.range_edit.t17947.prototype.om$core$IRender$render$arity$1 = function(this__4987__auto__) {
      var self__ = this;
      var this__4987__auto____$1 = this;
      return React.DOM.div({"style":{"width":[cljs.core.str(floor16.ui.range_edit.val_to_pos.call(null, (new cljs.core.Keyword(null, "top", "top", 1014019271)).cljs$core$IFn$_invoke$arity$1(self__.range_value) - (new cljs.core.Keyword(null, "btm", "btm", 1014002125)).cljs$core$IFn$_invoke$arity$1(self__.range_value), self__.min_bottom, self__.max_top)), cljs.core.str("%")].join(""), "left":[cljs.core.str(floor16.ui.range_edit.val_to_pos.call(null, (new cljs.core.Keyword(null, "btm", "btm", 1014002125)).cljs$core$IFn$_invoke$arity$1(self__.range_value), 
      self__.min_bottom, self__.max_top)), cljs.core.str("%")].join("")}, "className":"slider-range"});
    };
    floor16.ui.range_edit.t17947.prototype.cljs$core$IMeta$_meta$arity$1 = function(_17949) {
      var self__ = this;
      var _17949__$1 = this;
      return self__.meta17948;
    };
    floor16.ui.range_edit.t17947.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_17949, meta17948__$1) {
      var self__ = this;
      var _17949__$1 = this;
      return new floor16.ui.range_edit.t17947(self__.min_bottom, self__.max_top, self__.map__17946, self__.p__17941, self__.owner, self__.range_value, self__.slider_range, meta17948__$1);
    };
    floor16.ui.range_edit.__GT_t17947 = function __GT_t17947(min_bottom__$1, max_top__$1, map__17946__$2, p__17941__$1, owner__$1, range_value__$1, slider_range__$1, meta17948) {
      return new floor16.ui.range_edit.t17947(min_bottom__$1, max_top__$1, map__17946__$2, p__17941__$1, owner__$1, range_value__$1, slider_range__$1, meta17948);
    };
  }
  return new floor16.ui.range_edit.t17947(min_bottom, max_top, map__17946__$1, p__17941, owner, range_value, slider_range, null);
};
floor16.ui.range_edit.parse_int = function parse_int(v) {
  var v__$1 = clojure.string.replace.call(null, v, /\s/, "");
  if (cljs.core.not.call(null, v__$1) || cljs.core.empty_QMARK_.call(null, v__$1)) {
    return 0;
  } else {
    if (cljs.core.truth_(cljs.core.re_find.call(null, /\D/, v__$1))) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return parseInt(v__$1);
      } else {
        return null;
      }
    }
  }
};
floor16.ui.range_edit.actualize = function actualize(cursor) {
  var state = cursor.state;
  var path = cursor.path;
  if (cljs.core.empty_QMARK_.call(null, path)) {
    return cljs.core.deref.call(null, state);
  } else {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path);
  }
};
floor16.ui.range_edit.range_textbox = function range_textbox(range_value, owner, p__17950) {
  var map__17955 = p__17950;
  var map__17955__$1 = cljs.core.seq_QMARK_.call(null, map__17955) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17955) : map__17955;
  var comm = cljs.core.get.call(null, map__17955__$1, new cljs.core.Keyword(null, "comm", "comm", 1016963710));
  var bound = cljs.core.get.call(null, map__17955__$1, new cljs.core.Keyword(null, "bound", "bound", 1107832048));
  if (typeof floor16.ui.range_edit.t17956 !== "undefined") {
  } else {
    floor16.ui.range_edit.t17956 = function(bound, comm, map__17955, p__17950, owner, range_value, range_textbox, meta17957) {
      this.bound = bound;
      this.comm = comm;
      this.map__17955 = map__17955;
      this.p__17950 = p__17950;
      this.owner = owner;
      this.range_value = range_value;
      this.range_textbox = range_textbox;
      this.meta17957 = meta17957;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.range_edit.t17956.cljs$lang$type = true;
    floor16.ui.range_edit.t17956.cljs$lang$ctorStr = "floor16.ui.range-edit/t17956";
    floor16.ui.range_edit.t17956.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.ui.range-edit/t17956");
    };
    floor16.ui.range_edit.t17956.prototype.om$core$IRender$ = true;
    floor16.ui.range_edit.t17956.prototype.om$core$IRender$render$arity$1 = function(this__4987__auto__) {
      var self__ = this;
      var this__4987__auto____$1 = this;
      var handle_change = function(e) {
        var temp__4090__auto__ = floor16.ui.range_edit.parse_int.call(null, e.target.value);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var v = temp__4090__auto__;
          return cljs.core.async.put_BANG_.call(null, self__.comm, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "bound", "bound", 1107832048), self__.bound, new cljs.core.Keyword(null, "value", "value", 1125876963), v, new cljs.core.Keyword(null, "publish", "publish", 778539137), true], null));
        } else {
          return om.core.refresh_BANG_.call(null, self__.owner);
        }
      };
      return om.dom.input.call(null, {"onBlur":function(e) {
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 3420907786), false);
        return handle_change.call(null, e);
      }, "onFocus":function(_) {
        return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "editing", "editing", 3420907786), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.bound.call(null, cljs.core.deref.call(null, self__.range_value))], null));
      }, "onChange":function(e) {
        return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "value", "value", 1125876963), clojure.string.replace.call(null, e.target.value, /\s/, ""));
      }, "onKeyDown":function(e) {
        if (cljs.core._EQ_.call(null, floor16.global.ENTER, floor16.global.key_event__GT_keycode.call(null, e))) {
          return e.target.blur();
        } else {
          return null;
        }
      }, "value":floor16.global.price_to_str.call(null, cljs.core.truth_(om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 3420907786))) ? om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "value", "value", 1125876963)) : self__.bound.call(null, self__.range_value)), "maxLength":7, "className":cljs.core.name.call(null, self__.bound), "type":"text"});
    };
    floor16.ui.range_edit.t17956.prototype.cljs$core$IMeta$_meta$arity$1 = function(_17958) {
      var self__ = this;
      var _17958__$1 = this;
      return self__.meta17957;
    };
    floor16.ui.range_edit.t17956.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_17958, meta17957__$1) {
      var self__ = this;
      var _17958__$1 = this;
      return new floor16.ui.range_edit.t17956(self__.bound, self__.comm, self__.map__17955, self__.p__17950, self__.owner, self__.range_value, self__.range_textbox, meta17957__$1);
    };
    floor16.ui.range_edit.__GT_t17956 = function __GT_t17956(bound__$1, comm__$1, map__17955__$2, p__17950__$1, owner__$1, range_value__$1, range_textbox__$1, meta17957) {
      return new floor16.ui.range_edit.t17956(bound__$1, comm__$1, map__17955__$2, p__17950__$1, owner__$1, range_value__$1, range_textbox__$1, meta17957);
    };
  }
  return new floor16.ui.range_edit.t17956(bound, comm, map__17955__$1, p__17950, owner, range_value, range_textbox, null);
};
floor16.ui.range_edit.handle_slider_click = function handle_slider_click(p__17959) {
  var map__17962 = p__17959;
  var map__17962__$1 = cljs.core.seq_QMARK_.call(null, map__17962) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17962) : map__17962;
  var opts = map__17962__$1;
  var owner = cljs.core.get.call(null, map__17962__$1, new cljs.core.Keyword(null, "owner", "owner", 1120069157));
  var step = cljs.core.get.call(null, map__17962__$1, new cljs.core.Keyword(null, "step", "step", 1017444926));
  var max_top = cljs.core.get.call(null, map__17962__$1, new cljs.core.Keyword(null, "max-top", "max-top", 1856863454));
  var min_bottom = cljs.core.get.call(null, map__17962__$1, new cljs.core.Keyword(null, "min-bottom", "min-bottom", 2894918008));
  var range_value = cljs.core.get.call(null, map__17962__$1, new cljs.core.Keyword(null, "range-value", "range-value", 3446091859));
  return function(e) {
    var node = om.core.get_node.call(null, owner, "slider");
    var pos = e.pageX - node.getBoundingClientRect().left;
    var raw = (max_top - min_bottom) * pos / node.offsetWidth;
    var stepped = cljs.core.quot.call(null, raw, step) * step;
    var v = Math.abs.call(null, stepped - raw) < Math.abs.call(null, step + stepped - raw) ? stepped : step + stepped;
    var map__17963 = floor16.ui.range_edit.actualize.call(null, range_value);
    var map__17963__$1 = cljs.core.seq_QMARK_.call(null, map__17963) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17963) : map__17963;
    var top = cljs.core.get.call(null, map__17963__$1, new cljs.core.Keyword(null, "top", "top", 1014019271));
    var btm = cljs.core.get.call(null, map__17963__$1, new cljs.core.Keyword(null, "btm", "btm", 1014002125));
    var bound = Math.abs.call(null, btm - raw) < Math.abs.call(null, top - raw) ? new cljs.core.Keyword(null, "btm", "btm", 1014002125) : new cljs.core.Keyword(null, "top", "top", 1014019271);
    return cljs.core.async.put_BANG_.call(null, om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "comm", "comm", 1016963710)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 1125876963), v, new cljs.core.Keyword(null, "bound", "bound", 1107832048), bound, new cljs.core.Keyword(null, "publish", "publish", 778539137), true], null));
  };
};
floor16.ui.range_edit.range_editor = function range_editor(range_value, owner, p__17964) {
  var map__17999 = p__17964;
  var map__17999__$1 = cljs.core.seq_QMARK_.call(null, map__17999) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17999) : map__17999;
  var opts = map__17999__$1;
  var after_update = cljs.core.get.call(null, map__17999__$1, new cljs.core.Keyword(null, "after-update", "after-update", 4410540364));
  var caption = cljs.core.get.call(null, map__17999__$1, new cljs.core.Keyword(null, "caption", "caption", 1566477656));
  var no_text_boxes = cljs.core.get.call(null, map__17999__$1, new cljs.core.Keyword(null, "no-text-boxes", "no-text-boxes", 1736451607));
  var step = cljs.core.get.call(null, map__17999__$1, new cljs.core.Keyword(null, "step", "step", 1017444926));
  var max_top = cljs.core.get.call(null, map__17999__$1, new cljs.core.Keyword(null, "max-top", "max-top", 1856863454));
  var min_bottom = cljs.core.get.call(null, map__17999__$1, new cljs.core.Keyword(null, "min-bottom", "min-bottom", 2894918008));
  var config = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "btm", "btm", 1014002125), function(v) {
    var x__3757__auto__ = function() {
      var x__3750__auto__ = min_bottom;
      var y__3751__auto__ = v;
      return x__3750__auto__ > y__3751__auto__ ? x__3750__auto__ : y__3751__auto__;
    }();
    var y__3758__auto__ = (new cljs.core.Keyword(null, "top", "top", 1014019271)).cljs$core$IFn$_invoke$arity$1(floor16.ui.range_edit.actualize.call(null, range_value));
    return x__3757__auto__ < y__3758__auto__ ? x__3757__auto__ : y__3758__auto__;
  }, new cljs.core.Keyword(null, "top", "top", 1014019271), function(v) {
    var x__3750__auto__ = function() {
      var x__3757__auto__ = max_top;
      var y__3758__auto__ = v;
      return x__3757__auto__ < y__3758__auto__ ? x__3757__auto__ : y__3758__auto__;
    }();
    var y__3751__auto__ = (new cljs.core.Keyword(null, "btm", "btm", 1014002125)).cljs$core$IFn$_invoke$arity$1(floor16.ui.range_edit.actualize.call(null, range_value));
    return x__3750__auto__ > y__3751__auto__ ? x__3750__auto__ : y__3751__auto__;
  }], null);
  var handle_change = function(config) {
    return function(p__18000) {
      var map__18001 = p__18000;
      var map__18001__$1 = cljs.core.seq_QMARK_.call(null, map__18001) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18001) : map__18001;
      var e = map__18001__$1;
      var publish = cljs.core.get.call(null, map__18001__$1, new cljs.core.Keyword(null, "publish", "publish", 778539137));
      var value = cljs.core.get.call(null, map__18001__$1, new cljs.core.Keyword(null, "value", "value", 1125876963));
      var bound = cljs.core.get.call(null, map__18001__$1, new cljs.core.Keyword(null, "bound", "bound", 1107832048));
      var v = function() {
        var or__3443__auto__ = value;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return bound.call(null, floor16.ui.range_edit.actualize.call(null, range_value));
        }
      }();
      om.core.transact_BANG_.call(null, range_value, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [bound], null), function(v, map__18001, map__18001__$1, e, publish, value, bound, config) {
        return function(_) {
          return bound.call(null, config).call(null, v);
        };
      }(v, map__18001, map__18001__$1, e, publish, value, bound, config));
      if (cljs.core.truth_(function() {
        var and__3431__auto__ = publish;
        if (cljs.core.truth_(and__3431__auto__)) {
          return after_update;
        } else {
          return and__3431__auto__;
        }
      }())) {
        return after_update.call(null);
      } else {
        return null;
      }
    };
  }(config);
  if (typeof floor16.ui.range_edit.t18002 !== "undefined") {
  } else {
    floor16.ui.range_edit.t18002 = function(step, map__17999, opts, handle_change, range_editor, no_text_boxes, config, range_value, caption, after_update, owner, max_top, p__17964, min_bottom, meta18003) {
      this.step = step;
      this.map__17999 = map__17999;
      this.opts = opts;
      this.handle_change = handle_change;
      this.range_editor = range_editor;
      this.no_text_boxes = no_text_boxes;
      this.config = config;
      this.range_value = range_value;
      this.caption = caption;
      this.after_update = after_update;
      this.owner = owner;
      this.max_top = max_top;
      this.p__17964 = p__17964;
      this.min_bottom = min_bottom;
      this.meta18003 = meta18003;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.ui.range_edit.t18002.cljs$lang$type = true;
    floor16.ui.range_edit.t18002.cljs$lang$ctorStr = "floor16.ui.range-edit/t18002";
    floor16.ui.range_edit.t18002.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.ui.range-edit/t18002");
    };
    floor16.ui.range_edit.t18002.prototype.om$core$IRender$ = true;
    floor16.ui.range_edit.t18002.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var new_opts = cljs.core.assoc.call(null, self__.opts, new cljs.core.Keyword(null, "comm", "comm", 1016963710), om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "comm", "comm", 1016963710)));
      var top_opts = cljs.core.assoc.call(null, new_opts, new cljs.core.Keyword(null, "bound", "bound", 1107832048), new cljs.core.Keyword(null, "top", "top", 1014019271));
      var bottom_opts = cljs.core.assoc.call(null, new_opts, new cljs.core.Keyword(null, "bound", "bound", 1107832048), new cljs.core.Keyword(null, "btm", "btm", 1014002125));
      return React.DOM.div(null, React.DOM.div({"className":[cljs.core.str("range-edit-wrapper"), cljs.core.str(cljs.core.truth_(self__.no_text_boxes) ? " no-text-boxes" : null)].join("")}, cljs.core.truth_(self__.no_text_boxes) ? React.DOM.span({"className":"header clearfix"}, cljs.core.truth_(self__.caption) ? React.DOM.span({"className":"caption"}, self__.caption) : null, React.DOM.span({"className":"bounds"}, (new cljs.core.Keyword(null, "btm", "btm", 1014002125)).cljs$core$IFn$_invoke$arity$1(self__.range_value), 
      " - ", (new cljs.core.Keyword(null, "top", "top", 1014019271)).cljs$core$IFn$_invoke$arity$1(self__.range_value))) : null, cljs.core.truth_(self__.no_text_boxes) ? null : om.core.build.call(null, floor16.ui.range_edit.range_textbox, self__.range_value, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), bottom_opts], null)), React.DOM.div({"onClick":floor16.ui.range_edit.handle_slider_click.call(null, new cljs.core.PersistentArrayMap(null, 5, 
      [new cljs.core.Keyword(null, "range-value", "range-value", 3446091859), self__.range_value, new cljs.core.Keyword(null, "min-bottom", "min-bottom", 2894918008), self__.min_bottom, new cljs.core.Keyword(null, "max-top", "max-top", 1856863454), self__.max_top, new cljs.core.Keyword(null, "step", "step", 1017444926), self__.step, new cljs.core.Keyword(null, "owner", "owner", 1120069157), self__.owner], null)), "className":"slider", "ref":"slider"}, om.core.build.call(null, floor16.ui.range_edit.slider_range, 
      self__.range_value, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), self__.opts], null)), om.core.build.call(null, floor16.ui.range_edit.slider_handle, self__.range_value, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), bottom_opts], null)), om.core.build.call(null, floor16.ui.range_edit.slider_handle, self__.range_value, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
      "opts", "opts", 1017322386), top_opts], null))), cljs.core.truth_(self__.no_text_boxes) ? null : om.core.build.call(null, floor16.ui.range_edit.range_textbox, self__.range_value, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), top_opts], null))));
    };
    floor16.ui.range_edit.t18002.prototype.om$core$IWillMount$ = true;
    floor16.ui.range_edit.t18002.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(floor16.global.server_side_QMARK_)) {
        return null;
      } else {
        var comm = cljs.core.async.chan.call(null);
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "comm", "comm", 1016963710), comm);
        var c__6217__auto__ = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function() {
          var f__6218__auto__ = function() {
            var switch__6202__auto__ = function(state_18017) {
              var state_val_18018 = state_18017[1];
              if (state_val_18018 === 7) {
                var inst_18008 = state_18017[2];
                var inst_18009 = self__.handle_change.call(null, inst_18008);
                var state_18017__$1 = function() {
                  var statearr_18019 = state_18017;
                  statearr_18019[7] = inst_18009;
                  return statearr_18019;
                }();
                var statearr_18020_18033 = state_18017__$1;
                statearr_18020_18033[2] = null;
                statearr_18020_18033[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_18018 === 6) {
                  var inst_18013 = state_18017[2];
                  var state_18017__$1 = state_18017;
                  var statearr_18021_18034 = state_18017__$1;
                  statearr_18021_18034[2] = inst_18013;
                  statearr_18021_18034[1] = 3;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_18018 === 5) {
                    var state_18017__$1 = state_18017;
                    var statearr_18022_18035 = state_18017__$1;
                    statearr_18022_18035[2] = null;
                    statearr_18022_18035[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_18018 === 4) {
                      var state_18017__$1 = state_18017;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18017__$1, 7, comm);
                    } else {
                      if (state_val_18018 === 3) {
                        var inst_18015 = state_18017[2];
                        var state_18017__$1 = state_18017;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18017__$1, inst_18015);
                      } else {
                        if (state_val_18018 === 2) {
                          var state_18017__$1 = state_18017;
                          if (true) {
                            var statearr_18023_18036 = state_18017__$1;
                            statearr_18023_18036[1] = 4;
                          } else {
                            var statearr_18024_18037 = state_18017__$1;
                            statearr_18024_18037[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_18018 === 1) {
                            var state_18017__$1 = state_18017;
                            var statearr_18025_18038 = state_18017__$1;
                            statearr_18025_18038[2] = null;
                            statearr_18025_18038[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            return null;
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
            return function(switch__6202__auto__) {
              return function() {
                var state_machine__6203__auto__ = null;
                var state_machine__6203__auto____0 = function() {
                  var statearr_18029 = [null, null, null, null, null, null, null, null];
                  statearr_18029[0] = state_machine__6203__auto__;
                  statearr_18029[1] = 1;
                  return statearr_18029;
                };
                var state_machine__6203__auto____1 = function(state_18017) {
                  while (true) {
                    var ret_value__6204__auto__ = function() {
                      try {
                        while (true) {
                          var result__6205__auto__ = switch__6202__auto__.call(null, state_18017);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6205__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                            continue;
                          } else {
                            return result__6205__auto__;
                          }
                          break;
                        }
                      } catch (e18030) {
                        if (e18030 instanceof Object) {
                          var ex__6206__auto__ = e18030;
                          var statearr_18031_18039 = state_18017;
                          statearr_18031_18039[5] = ex__6206__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18017);
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e18030;
                          } else {
                            return null;
                          }
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6204__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      var G__18040 = state_18017;
                      state_18017 = G__18040;
                      continue;
                    } else {
                      return ret_value__6204__auto__;
                    }
                    break;
                  }
                };
                state_machine__6203__auto__ = function(state_18017) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6203__auto____0.call(this);
                    case 1:
                      return state_machine__6203__auto____1.call(this, state_18017);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6203__auto____0;
                state_machine__6203__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6203__auto____1;
                return state_machine__6203__auto__;
              }();
            }(switch__6202__auto__);
          }();
          var state__6219__auto__ = function() {
            var statearr_18032 = f__6218__auto__.call(null);
            statearr_18032[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6217__auto__;
            return statearr_18032;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6219__auto__);
        });
        return c__6217__auto__;
      }
    };
    floor16.ui.range_edit.t18002.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18004) {
      var self__ = this;
      var _18004__$1 = this;
      return self__.meta18003;
    };
    floor16.ui.range_edit.t18002.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18004, meta18003__$1) {
      var self__ = this;
      var _18004__$1 = this;
      return new floor16.ui.range_edit.t18002(self__.step, self__.map__17999, self__.opts, self__.handle_change, self__.range_editor, self__.no_text_boxes, self__.config, self__.range_value, self__.caption, self__.after_update, self__.owner, self__.max_top, self__.p__17964, self__.min_bottom, meta18003__$1);
    };
    floor16.ui.range_edit.__GT_t18002 = function __GT_t18002(step__$1, map__17999__$2, opts__$1, handle_change__$1, range_editor__$1, no_text_boxes__$1, config__$1, range_value__$1, caption__$1, after_update__$1, owner__$1, max_top__$1, p__17964__$1, min_bottom__$1, meta18003) {
      return new floor16.ui.range_edit.t18002(step__$1, map__17999__$2, opts__$1, handle_change__$1, range_editor__$1, no_text_boxes__$1, config__$1, range_value__$1, caption__$1, after_update__$1, owner__$1, max_top__$1, p__17964__$1, min_bottom__$1, meta18003);
    };
  }
  return new floor16.ui.range_edit.t18002(step, map__17999__$1, opts, handle_change, range_editor, no_text_boxes, config, range_value, caption, after_update, owner, max_top, p__17964, min_bottom, null);
};
goog.provide("floor16.maps");
goog.require("cljs.core");
goog.require("floor16.lang");
goog.require("cljs.core.async");
goog.require("goog.events");
goog.require("floor16.datum");
goog.require("floor16.global");
goog.require("goog.events.EventType");
goog.require("floor16.auth");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("floor16.auth");
goog.require("floor16.lang");
goog.require("floor16.datum");
goog.require("om.dom");
goog.require("floor16.global");
goog.require("cljs.core.async");
goog.require("goog.events");
floor16.maps.map_viewer = function map_viewer(p__79751, owner, p__79752) {
  var map__79761 = p__79751;
  var map__79761__$1 = cljs.core.seq_QMARK_.call(null, map__79761) ? cljs.core.apply.call(null, cljs.core.hash_map, map__79761) : map__79761;
  var cursor = map__79761__$1;
  var lng = cljs.core.get.call(null, map__79761__$1, new cljs.core.Keyword(null, "lng", "lng", 1014011543));
  var lat = cljs.core.get.call(null, map__79761__$1, new cljs.core.Keyword(null, "lat", "lat", 1014011153));
  var map__79762 = p__79752;
  var map__79762__$1 = cljs.core.seq_QMARK_.call(null, map__79762) ? cljs.core.apply.call(null, cljs.core.hash_map, map__79762) : map__79762;
  var opts = map__79762__$1;
  var map_near_zoom = cljs.core.get.call(null, map__79762__$1, new cljs.core.Keyword(null, "map-near-zoom", "map-near-zoom", 1261833881), 16);
  var marker_text = cljs.core.get.call(null, map__79762__$1, new cljs.core.Keyword(null, "marker-text", "marker-text", 1195924050));
  var className = cljs.core.get.call(null, map__79762__$1, new cljs.core.Keyword(null, "className", "className", 1004015509));
  var map_zoom = cljs.core.get.call(null, map__79762__$1, new cljs.core.Keyword(null, "map-zoom", "map-zoom", 1146981654), 14);
  if (typeof floor16.maps.t79763 !== "undefined") {
  } else {
    floor16.maps.t79763 = function(p__79751, opts, className, map_viewer, p__79752, map_near_zoom, map_zoom, lng, marker_text, owner, cursor, map__79761, map__79762, lat, meta79764) {
      this.p__79751 = p__79751;
      this.opts = opts;
      this.className = className;
      this.map_viewer = map_viewer;
      this.p__79752 = p__79752;
      this.map_near_zoom = map_near_zoom;
      this.map_zoom = map_zoom;
      this.lng = lng;
      this.marker_text = marker_text;
      this.owner = owner;
      this.cursor = cursor;
      this.map__79761 = map__79761;
      this.map__79762 = map__79762;
      this.lat = lat;
      this.meta79764 = meta79764;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.maps.t79763.cljs$lang$type = true;
    floor16.maps.t79763.cljs$lang$ctorStr = "floor16.maps/t79763";
    floor16.maps.t79763.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.maps/t79763");
    };
    floor16.maps.t79763.prototype.om$core$IRenderState$ = true;
    floor16.maps.t79763.prototype.om$core$IRenderState$render_state$arity$2 = function(this$, p__79766) {
      var self__ = this;
      var map__79767 = p__79766;
      var map__79767__$1 = cljs.core.seq_QMARK_.call(null, map__79767) ? cljs.core.apply.call(null, cljs.core.hash_map, map__79767) : map__79767;
      var has_pano = cljs.core.get.call(null, map__79767__$1, new cljs.core.Keyword(null, "has-pano", "has-pano", 1108440631));
      var this$__$1 = this;
      return React.DOM.div({"className":[cljs.core.str("map-viewer "), cljs.core.str(self__.className)].join("")}, React.DOM.div({"className":cljs.core.truth_(has_pano) ? "eight columns alpha" : "sixteen columns alpha omega no-pano", "id":"map"}), cljs.core.truth_(has_pano) ? React.DOM.div({"className":"eight columns omega", "id":"pano"}) : null);
    };
    floor16.maps.t79763.prototype.om$core$IDidUpdate$ = true;
    floor16.maps.t79763.prototype.om$core$IDidUpdate$did_update$arity$3 = function(this$, prev_props, prev_state) {
      var self__ = this;
      var this$__$1 = this;
      var map__79768 = om.core.get_state.call(null, self__.owner);
      var map__79768__$1 = cljs.core.seq_QMARK_.call(null, map__79768) ? cljs.core.apply.call(null, cljs.core.hash_map, map__79768) : map__79768;
      var max_radius = cljs.core.get.call(null, map__79768__$1, new cljs.core.Keyword(null, "max-radius", "max-radius", 867568781));
      var radius = cljs.core.get.call(null, map__79768__$1, new cljs.core.Keyword(null, "radius", "radius", 4370292740));
      var build_map = cljs.core.get.call(null, map__79768__$1, new cljs.core.Keyword(null, "build-map", "build-map", 3906727151));
      if (cljs.core.truth_(build_map)) {
        var lat_lng_79769 = new google.maps.LatLng(self__.lat, self__.lng);
        var gmap_79770 = new google.maps.Map(document.getElementById("map"), {"panControl":false, "zoom":cljs.core.truth_(function() {
          var and__3431__auto__ = radius;
          if (cljs.core.truth_(and__3431__auto__)) {
            return radius <= max_radius / 4;
          } else {
            return and__3431__auto__;
          }
        }()) ? self__.map_near_zoom : self__.map_zoom, "center":lat_lng_79769});
        var marker_79771 = new google.maps.Marker({"title":self__.marker_text, "map":gmap_79770, "position":lat_lng_79769});
        var temp__4092__auto___79772 = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "pano-lat-lng", "pano-lat-lng", 2243852814));
        if (cljs.core.truth_(temp__4092__auto___79772)) {
          var pano_lat_lng_79773 = temp__4092__auto___79772;
          gmap_79770.setStreetView(new google.maps.StreetViewPanorama(document.getElementById("pano"), {"pov":{"pitch":0, "heading":50}, "addressControl":false, "position":pano_lat_lng_79773}));
        } else {
        }
        return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "build-map", "build-map", 3906727151), false);
      } else {
        return null;
      }
    };
    floor16.maps.t79763.prototype.om$core$IDidMount$ = true;
    floor16.maps.t79763.prototype.om$core$IDidMount$did_mount$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      var service = new google.maps.StreetViewService;
      var lat_lng = new google.maps.LatLng(self__.lat, self__.lng);
      var max_radius = 2E3;
      var svs_handler = function(service, lat_lng, max_radius) {
        return function svs_handler(data, status) {
          var r = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "radius", "radius", 4370292740));
          if (cljs.core._EQ_.call(null, status, google.maps.StreetViewStatus.OK)) {
            return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "radius", "radius", 4370292740), r, new cljs.core.Keyword(null, "max-radius", "max-radius", 867568781), max_radius, new cljs.core.Keyword(null, "has-pano", "has-pano", 1108440631), true, new cljs.core.Keyword(null, "build-map", "build-map", 3906727151), true, new cljs.core.Keyword(null, "pano-lat-lng", "pano-lat-lng", 2243852814), data.location.latLng], null))
            ;
          } else {
            if (r <= max_radius) {
              var new_rad = r + (r <= max_radius / 2 ? 50 : 100);
              om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "radius", "radius", 4370292740), new_rad);
              return service.getPanoramaByLocation(lat_lng, new_rad, svs_handler);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "has-pano", "has-pano", 1108440631), false, new cljs.core.Keyword(null, "build-map", "build-map", 3906727151), true], null));
              } else {
                return null;
              }
            }
          }
        };
      }(service, lat_lng, max_radius);
      return service.getPanoramaByLocation(lat_lng, om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "radius", "radius", 4370292740)), svs_handler);
    };
    floor16.maps.t79763.prototype.om$core$IInitState$ = true;
    floor16.maps.t79763.prototype.om$core$IInitState$init_state$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "radius", "radius", 4370292740), 40, new cljs.core.Keyword(null, "has-pano", "has-pano", 1108440631), true, new cljs.core.Keyword(null, "build-map", "build-map", 3906727151), false], null);
    };
    floor16.maps.t79763.prototype.cljs$core$IMeta$_meta$arity$1 = function(_79765) {
      var self__ = this;
      var _79765__$1 = this;
      return self__.meta79764;
    };
    floor16.maps.t79763.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_79765, meta79764__$1) {
      var self__ = this;
      var _79765__$1 = this;
      return new floor16.maps.t79763(self__.p__79751, self__.opts, self__.className, self__.map_viewer, self__.p__79752, self__.map_near_zoom, self__.map_zoom, self__.lng, self__.marker_text, self__.owner, self__.cursor, self__.map__79761, self__.map__79762, self__.lat, meta79764__$1);
    };
    floor16.maps.__GT_t79763 = function __GT_t79763(p__79751__$1, opts__$1, className__$1, map_viewer__$1, p__79752__$1, map_near_zoom__$1, map_zoom__$1, lng__$1, marker_text__$1, owner__$1, cursor__$1, map__79761__$2, map__79762__$2, lat__$1, meta79764) {
      return new floor16.maps.t79763(p__79751__$1, opts__$1, className__$1, map_viewer__$1, p__79752__$1, map_near_zoom__$1, map_zoom__$1, lng__$1, marker_text__$1, owner__$1, cursor__$1, map__79761__$2, map__79762__$2, lat__$1, meta79764);
    };
  }
  return new floor16.maps.t79763(p__79751, opts, className, map_viewer, p__79752, map_near_zoom, map_zoom, lng, marker_text, owner, cursor, map__79761__$1, map__79762__$1, lat, null);
};
goog.provide("floor16.photo");
goog.require("cljs.core");
goog.require("floor16.lang");
goog.require("cljs.core.async");
goog.require("goog.events");
goog.require("floor16.datum");
goog.require("floor16.global");
goog.require("goog.events.EventType");
goog.require("floor16.auth");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("floor16.auth");
goog.require("floor16.lang");
goog.require("floor16.datum");
goog.require("om.dom");
goog.require("floor16.global");
goog.require("cljs.core.async");
goog.require("goog.events");
floor16.photo.photo_viewer = function photo_viewer(imgs, owner, p__70976) {
  var map__70983 = p__70976;
  var map__70983__$1 = cljs.core.seq_QMARK_.call(null, map__70983) ? cljs.core.apply.call(null, cljs.core.hash_map, map__70983) : map__70983;
  var opts = map__70983__$1;
  var img_alt = cljs.core.get.call(null, map__70983__$1, new cljs.core.Keyword(null, "img-alt", "img-alt", 2929647633));
  var className = cljs.core.get.call(null, map__70983__$1, new cljs.core.Keyword(null, "className", "className", 1004015509));
  if (typeof floor16.photo.t70984 !== "undefined") {
  } else {
    floor16.photo.t70984 = function(className, img_alt, opts, map__70983, p__70976, owner, imgs, photo_viewer, meta70985) {
      this.className = className;
      this.img_alt = img_alt;
      this.opts = opts;
      this.map__70983 = map__70983;
      this.p__70976 = p__70976;
      this.owner = owner;
      this.imgs = imgs;
      this.photo_viewer = photo_viewer;
      this.meta70985 = meta70985;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.photo.t70984.cljs$lang$type = true;
    floor16.photo.t70984.cljs$lang$ctorStr = "floor16.photo/t70984";
    floor16.photo.t70984.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.photo/t70984");
    };
    floor16.photo.t70984.prototype.om$core$IRenderState$ = true;
    floor16.photo.t70984.prototype.om$core$IRenderState$render_state$arity$2 = function(this$, p__70987) {
      var self__ = this;
      var map__70988 = p__70987;
      var map__70988__$1 = cljs.core.seq_QMARK_.call(null, map__70988) ? cljs.core.apply.call(null, cljs.core.hash_map, map__70988) : map__70988;
      var current = cljs.core.get.call(null, map__70988__$1, new cljs.core.Keyword(null, "current", "current", 2140844267), 0);
      var this$__$1 = this;
      var total = cljs.core.count.call(null, self__.imgs);
      return React.DOM.div({"className":[cljs.core.str("photo-viewer "), cljs.core.str(self__.className)].join("")}, React.DOM.img({"onClick":function() {
        return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "current", "current", 2140844267), cljs.core.mod.call(null, current + 1, total));
      }, "alt":[cljs.core.str(self__.img_alt), cljs.core.str(" \u0444\u043e\u0442\u043e: "), cljs.core.str(current + 1), cljs.core.str(" \u0438\u0437 "), cljs.core.str(total)].join(""), "src":cljs.core.get.call(null, self__.imgs, current)}), total > 1 ? React.DOM.span({"onClick":function() {
        return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "current", "current", 2140844267), cljs.core.mod.call(null, current - 1, total));
      }, "className":"arrow prev"}) : null, total > 1 ? React.DOM.span({"onClick":function() {
        return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "current", "current", 2140844267), cljs.core.mod.call(null, current + 1, total));
      }, "className":"arrow next"}) : null, React.DOM.span({"className":"photo-number"}, [cljs.core.str(current + 1), cljs.core.str("/"), cljs.core.str(total)].join("")));
    };
    floor16.photo.t70984.prototype.om$core$IInitState$ = true;
    floor16.photo.t70984.prototype.om$core$IInitState$init_state$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "current", "current", 2140844267), 0], null);
    };
    floor16.photo.t70984.prototype.cljs$core$IMeta$_meta$arity$1 = function(_70986) {
      var self__ = this;
      var _70986__$1 = this;
      return self__.meta70985;
    };
    floor16.photo.t70984.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_70986, meta70985__$1) {
      var self__ = this;
      var _70986__$1 = this;
      return new floor16.photo.t70984(self__.className, self__.img_alt, self__.opts, self__.map__70983, self__.p__70976, self__.owner, self__.imgs, self__.photo_viewer, meta70985__$1);
    };
    floor16.photo.__GT_t70984 = function __GT_t70984(className__$1, img_alt__$1, opts__$1, map__70983__$2, p__70976__$1, owner__$1, imgs__$1, photo_viewer__$1, meta70985) {
      return new floor16.photo.t70984(className__$1, img_alt__$1, opts__$1, map__70983__$2, p__70976__$1, owner__$1, imgs__$1, photo_viewer__$1, meta70985);
    };
  }
  return new floor16.photo.t70984(className, img_alt, opts, map__70983__$1, p__70976, owner, imgs, photo_viewer, null);
};
goog.provide("floor16.appsearch");
goog.require("cljs.core");
goog.require("floor16.lang");
goog.require("cljs.core.async");
goog.require("floor16.navigation");
goog.require("floor16.photo");
goog.require("floor16.navigation");
goog.require("clojure.string");
goog.require("floor16.datum");
goog.require("floor16.lang");
goog.require("floor16.global");
goog.require("floor16.maps");
goog.require("floor16.datum");
goog.require("secretary.core");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("floor16.xhr");
goog.require("floor16.lang");
goog.require("floor16.ui.range_edit");
goog.require("floor16.maps");
goog.require("floor16.photo");
goog.require("clojure.string");
goog.require("floor16.ui.generic");
goog.require("floor16.ui.range_edit");
goog.require("om.dom");
goog.require("floor16.global");
goog.require("cljs.core.async");
goog.require("floor16.xhr");
goog.require("secretary.core");
goog.require("floor16.ui.generic");
floor16.appsearch.astate = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
floor16.appsearch.app_modes = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "init", "init", 1017141378), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "route", "route", 1122608571), "/", new cljs.core.Keyword(null, "view-type", "view-type", 3689695444), new cljs.core.Keyword(null, "list", "list", 1017226256), new cljs.core.Keyword(null, "data-path", "data-path", 604226522), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.Keyword(null, "data", "data", 1016980252)], null), new cljs.core.Keyword(null, "query-path", "query-path", 799448444), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "query", "query", 1121848378)], null), new cljs.core.Keyword(null, "resource-key", "resource-key", 628364178), new cljs.core.Keyword(null, "pub", "pub", 1014015599)], null), new cljs.core.Keyword(null, "grid", "grid", 1017085624), new cljs.core.PersistentArrayMap(null, 
5, [new cljs.core.Keyword(null, "route", "route", 1122608571), "/ads/", new cljs.core.Keyword(null, "view-type", "view-type", 3689695444), new cljs.core.Keyword(null, "list", "list", 1017226256), new cljs.core.Keyword(null, "data-path", "data-path", 604226522), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", 1016980252)], null), new cljs.core.Keyword(null, "query-path", "query-path", 799448444), new cljs.core.PersistentVector(null, 
1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "query", "query", 1121848378)], null), new cljs.core.Keyword(null, "resource-key", "resource-key", 628364178), new cljs.core.Keyword(null, "pub", "pub", 1014015599)], null), new cljs.core.Keyword(null, "ad", "ad", 1013907349), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "route", "route", 1122608571), "/ads/:seoid", new cljs.core.Keyword(null, "view-type", "view-type", 3689695444), new cljs.core.Keyword(null, 
"item-view", "item-view", 3121596561), new cljs.core.Keyword(null, "resource-key", "resource-key", 628364178), new cljs.core.Keyword(null, "pub", "pub", 1014015599), new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), new cljs.core.Keyword(null, "seoid", "seoid", 1123228074), new cljs.core.Keyword(null, "current-path", "current-path", 2436513643), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "current", "current", 2140844267)], 
null)], null)], null);
floor16.appsearch.after_update = function after_update(query) {
  return function() {
    return floor16.navigation.url_update.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "mode", "mode", 1017261333), new cljs.core.Keyword(null, "grid", "grid", 1017085624), new cljs.core.Keyword(null, "url-params", "url-params", 3432736534), cljs.core.deref.call(null, query)], null));
  };
};
floor16.appsearch.simple_filter = function simple_filter(query, owner) {
  if (typeof floor16.appsearch.t84378 !== "undefined") {
  } else {
    floor16.appsearch.t84378 = function(owner, query, simple_filter, meta84379) {
      this.owner = owner;
      this.query = query;
      this.simple_filter = simple_filter;
      this.meta84379 = meta84379;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.appsearch.t84378.cljs$lang$type = true;
    floor16.appsearch.t84378.cljs$lang$ctorStr = "floor16.appsearch/t84378";
    floor16.appsearch.t84378.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.appsearch/t84378");
    };
    floor16.appsearch.t84378.prototype.om$core$IRender$ = true;
    floor16.appsearch.t84378.prototype.om$core$IRender$render$arity$1 = function(this__4987__auto__) {
      var self__ = this;
      var this__4987__auto____$1 = this;
      return React.DOM.div({"className":"simple-filter"}, function() {
        var after_update = floor16.appsearch.after_update.call(null, self__.query);
        return React.DOM.div({"className":"container"}, React.DOM.div({"className":"location four columns"}, om.core.build.call(null, floor16.ui.generic.select, self__.query, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), new cljs.core.Keyword(null, "city", "city", 1016958173), new cljs.core.Keyword(null, "placeholder", "placeholder", 1612151013), 
        floor16.lang.l.call(null, new cljs.core.Keyword(null, "city", "city", 1016958173)), new cljs.core.Keyword(null, "dict", "dict", 1016987432), floor16.datum.dict.call(null, new cljs.core.Keyword(null, "cities", "cities", 3948719803)), new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), function(_) {
          om.core.transact_BANG_.call(null, self__.query, function(p1__84374_SHARP_) {
            return cljs.core.assoc.call(null, cljs.core.assoc.call(null, p1__84374_SHARP_, new cljs.core.Keyword(null, "metros", "metros", 4231326188), cljs.core.PersistentVector.EMPTY), new cljs.core.Keyword(null, "districts", "districts", 1381773847), cljs.core.PersistentVector.EMPTY);
          });
          return after_update.call(null);
        }], null)], null)), om.core.build.call(null, floor16.ui.generic.select, self__.query, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), new cljs.core.Keyword(null, "metro", "metro", 1117692043), new cljs.core.Keyword(null, "placeholder", "placeholder", 1612151013), floor16.lang.l.call(null, new cljs.core.Keyword(null, "metro", "metro", 
        1117692043)), new cljs.core.Keyword(null, "className", "className", 1004015509), [cljs.core.str("two columns"), cljs.core.str(cljs.core.truth_((new cljs.core.Keyword(null, "city", "city", 1016958173)).cljs$core$IFn$_invoke$arity$1(self__.query)) ? null : " disabled")].join(""), new cljs.core.Keyword(null, "dict", "dict", 1016987432), floor16.datum.dict.call(null, new cljs.core.Keyword(null, "metros", "metros", 4231326188), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
        "parent", "parent", 4313447452), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cities", "cities", 3948719803), (new cljs.core.Keyword(null, "city", "city", 1016958173)).cljs$core$IFn$_invoke$arity$1(self__.query)], null)], null)), new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), after_update, new cljs.core.Keyword(null, "selector", "selector", 2205476689), floor16.ui.generic.checkbtn_list], null)], null)), 
        om.core.build.call(null, floor16.ui.generic.select, self__.query, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), new cljs.core.Keyword(null, "district", "district", 1302865664), new cljs.core.Keyword(null, "placeholder", "placeholder", 1612151013), floor16.lang.l.call(null, new cljs.core.Keyword(null, "districts", "districts", 1381773847)), 
        new cljs.core.Keyword(null, "className", "className", 1004015509), [cljs.core.str("two columns"), cljs.core.str(cljs.core.truth_((new cljs.core.Keyword(null, "city", "city", 1016958173)).cljs$core$IFn$_invoke$arity$1(self__.query)) ? null : " disabled")].join(""), new cljs.core.Keyword(null, "dict", "dict", 1016987432), floor16.datum.dict.call(null, new cljs.core.Keyword(null, "districts", "districts", 1381773847), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "parent", 
        "parent", 4313447452), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cities", "cities", 3948719803), (new cljs.core.Keyword(null, "city", "city", 1016958173)).cljs$core$IFn$_invoke$arity$1(self__.query)], null)], null)), new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), after_update, new cljs.core.Keyword(null, "selector", "selector", 2205476689), floor16.ui.generic.checkbtn_list], null)], null))), React.DOM.div({"className":"object-types four columns"}, 
        React.DOM.div({"className":"rooms clearfix"}, om.core.build.call(null, floor16.ui.generic.checkbtn, (new cljs.core.Keyword(null, "appartment-type", "appartment-type", 4242935641)).cljs$core$IFn$_invoke$arity$1(self__.query), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), new cljs.core.Keyword(null, "room", "room", 1017410637), new cljs.core.Keyword(null, 
        "className", "className", 1004015509), "room two columns", new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), after_update], null)], null)), om.core.build.call(null, floor16.ui.generic.checkbtn, (new cljs.core.Keyword(null, "appartment-type", "appartment-type", 4242935641)).cljs$core$IFn$_invoke$arity$1(self__.query), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
        "data-key", "data-key", 2801799470), new cljs.core.Keyword(null, "studio", "studio", 4416970056), new cljs.core.Keyword(null, "className", "className", 1004015509), "two columns", new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), after_update], null)], null))), React.DOM.div({"className":"appartments"}, React.DOM.span({"className":"flats-label"}, [cljs.core.str(floor16.lang.l.call(null, new cljs.core.Keyword(null, "flat", "flat", 1017049835))), cljs.core.str(":")].join("")), 
        om.core.build.call(null, floor16.ui.generic.checkbtn, (new cljs.core.Keyword(null, "appartment-type", "appartment-type", 4242935641)).cljs$core$IFn$_invoke$arity$1(self__.query), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), new cljs.core.Keyword(null, "appartment1", "appartment1", 4767014563), new cljs.core.Keyword(null, "caption", 
        "caption", 1566477656), "1", new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), after_update], null)], null)), om.core.build.call(null, floor16.ui.generic.checkbtn, (new cljs.core.Keyword(null, "appartment-type", "appartment-type", 4242935641)).cljs$core$IFn$_invoke$arity$1(self__.query), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "data-key", 
        "data-key", 2801799470), new cljs.core.Keyword(null, "appartment2", "appartment2", 4767014564), new cljs.core.Keyword(null, "caption", "caption", 1566477656), "2", new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), after_update], null)], null)), om.core.build.call(null, floor16.ui.generic.checkbtn, (new cljs.core.Keyword(null, "appartment-type", "appartment-type", 4242935641)).cljs$core$IFn$_invoke$arity$1(self__.query), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
        "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), new cljs.core.Keyword(null, "appartment3", "appartment3", 4767014565), new cljs.core.Keyword(null, "caption", "caption", 1566477656), "3", new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), after_update], null)], null)), om.core.build.call(null, floor16.ui.generic.checkbtn, (new cljs.core.Keyword(null, "appartment-type", "appartment-type", 
        4242935641)).cljs$core$IFn$_invoke$arity$1(self__.query), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), new cljs.core.Keyword(null, "appartment4", "appartment4", 4767014566), new cljs.core.Keyword(null, "caption", "caption", 1566477656), "4+", new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), after_update], 
        null)], null)))), React.DOM.div({"className":"price six columns"}, React.DOM.div({"className":"range"}, om.core.build.call(null, floor16.ui.range_edit.range_editor, (new cljs.core.Keyword(null, "price", "price", 1120838843)).cljs$core$IFn$_invoke$arity$1(self__.query), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "min-bottom", "min-bottom", 2894918008), cljs.core.get_in.call(null, 
        cljs.core.deref.call(null, floor16.appsearch.astate), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "price", "price", 1120838843), new cljs.core.Keyword(null, "btm", "btm", 1014002125)], null)), new cljs.core.Keyword(null, "max-top", "max-top", 1856863454), cljs.core.get_in.call(null, cljs.core.deref.call(null, floor16.appsearch.astate), new cljs.core.PersistentVector(null, 
        3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "price", "price", 1120838843), new cljs.core.Keyword(null, "top", "top", 1014019271)], null)), new cljs.core.Keyword(null, "step", "step", 1017444926), 500, new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), after_update], null)], null))), React.DOM.div({"className":"options"}, om.core.build.call(null, floor16.ui.generic.select, self__.query, 
        new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), new cljs.core.Keyword(null, "published", "published", 2461308256), new cljs.core.Keyword(null, "placeholder", "placeholder", 1612151013), floor16.lang.l.call(null, new cljs.core.Keyword(null, "published", "published", 2461308256)), new cljs.core.Keyword(null, "className", "className", 
        1004015509), "three columns", new cljs.core.Keyword(null, "dict", "dict", 1016987432), floor16.datum.dict.call(null, new cljs.core.Keyword(null, "pubsettings", "pubsettings", 4794291602)), new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), after_update], null)], null)), om.core.build.call(null, floor16.ui.generic.checkbtn, self__.query, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 
        3, [new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), new cljs.core.Keyword(null, "with-photo", "with-photo", 2103036381), new cljs.core.Keyword(null, "className", "className", 1004015509), "with-photo three columns", new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), after_update], null)], null)))), function() {
          var url = floor16.navigation.url_to.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "mode", "mode", 1017261333), new cljs.core.Keyword(null, "grid", "grid", 1017085624), new cljs.core.Keyword(null, "url-params", "url-params", 3432736534), self__.query], null));
          return React.DOM.div({"className":"two columns"}, React.DOM.a({"onClick":function(e) {
            floor16.navigation.goto$.call(null, url, true);
            return e.preventDefault();
          }, "className":"search-btn", "href":url}, "\u041d\u0430\u0439\u0442\u0438 \u0436\u0438\u043b\u044c\u0435"));
        }());
      }());
    };
    floor16.appsearch.t84378.prototype.cljs$core$IMeta$_meta$arity$1 = function(_84380) {
      var self__ = this;
      var _84380__$1 = this;
      return self__.meta84379;
    };
    floor16.appsearch.t84378.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_84380, meta84379__$1) {
      var self__ = this;
      var _84380__$1 = this;
      return new floor16.appsearch.t84378(self__.owner, self__.query, self__.simple_filter, meta84379__$1);
    };
    floor16.appsearch.__GT_t84378 = function __GT_t84378(owner__$1, query__$1, simple_filter__$1, meta84379) {
      return new floor16.appsearch.t84378(owner__$1, query__$1, simple_filter__$1, meta84379);
    };
  }
  return new floor16.appsearch.t84378(owner, query, simple_filter, null);
};
floor16.appsearch.extended_filter = function extended_filter(query, owner, opts) {
  if (typeof floor16.appsearch.t84384 !== "undefined") {
  } else {
    floor16.appsearch.t84384 = function(opts, owner, query, extended_filter, meta84385) {
      this.opts = opts;
      this.owner = owner;
      this.query = query;
      this.extended_filter = extended_filter;
      this.meta84385 = meta84385;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.appsearch.t84384.cljs$lang$type = true;
    floor16.appsearch.t84384.cljs$lang$ctorStr = "floor16.appsearch/t84384";
    floor16.appsearch.t84384.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.appsearch/t84384");
    };
    floor16.appsearch.t84384.prototype.om$core$IRender$ = true;
    floor16.appsearch.t84384.prototype.om$core$IRender$render$arity$1 = function(this__4987__auto__) {
      var self__ = this;
      var this__4987__auto____$1 = this;
      var after_update = floor16.appsearch.after_update.call(null, self__.query);
      return React.DOM.div({"className":"four columns offset-by-one"}, React.DOM.div({"className":"extended-filter"}, React.DOM.span({"className":"box-header"}, floor16.lang.l.call(null, new cljs.core.Keyword(null, "additionals", "additionals", 1269629086))), om.core.build.call(null, floor16.ui.generic.box_group, self__.query, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "view", 
      "view", 1017523735), React.DOM.div(null, om.core.build.call(null, floor16.ui.range_edit.range_editor, (new cljs.core.Keyword(null, "total-area", "total-area", 4556748008)).cljs$core$IFn$_invoke$arity$1(self__.query), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "min-bottom", "min-bottom", 2894918008), cljs.core.get_in.call(null, cljs.core.deref.call(null, floor16.appsearch.astate), 
      new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "total-area", "total-area", 4556748008), new cljs.core.Keyword(null, "btm", "btm", 1014002125)], null)), new cljs.core.Keyword(null, "max-top", "max-top", 1856863454), cljs.core.get_in.call(null, cljs.core.deref.call(null, floor16.appsearch.astate), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "total-area", "total-area", 4556748008), new cljs.core.Keyword(null, "top", "top", 1014019271)], null)), new cljs.core.Keyword(null, "step", "step", 1017444926), 1, new cljs.core.Keyword(null, "no-text-boxes", "no-text-boxes", 1736451607), true, new cljs.core.Keyword(null, "caption", "caption", 1566477656), "\u043e\u0431\u0449\u0430\u044f, \u043a\u0432.\u043c. ", new cljs.core.Keyword(null, "after-update", 
      "after-update", 4410540364), after_update], null)], null)), om.core.build.call(null, floor16.ui.range_edit.range_editor, (new cljs.core.Keyword(null, "living-area", "living-area", 2672354467)).cljs$core$IFn$_invoke$arity$1(self__.query), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "min-bottom", "min-bottom", 2894918008), cljs.core.get_in.call(null, cljs.core.deref.call(null, 
      floor16.appsearch.astate), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "living-area", "living-area", 2672354467), new cljs.core.Keyword(null, "btm", "btm", 1014002125)], null)), new cljs.core.Keyword(null, "max-top", "max-top", 1856863454), cljs.core.get_in.call(null, cljs.core.deref.call(null, floor16.appsearch.astate), new cljs.core.PersistentVector(null, 3, 
      5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "living-area", "living-area", 2672354467), new cljs.core.Keyword(null, "top", "top", 1014019271)], null)), new cljs.core.Keyword(null, "step", "step", 1017444926), 1, new cljs.core.Keyword(null, "no-text-boxes", "no-text-boxes", 1736451607), true, new cljs.core.Keyword(null, "caption", "caption", 1566477656), "\u0436\u0438\u043b\u0430\u044f, \u043a\u0432.\u043c. ", 
      new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), after_update], null)], null)), om.core.build.call(null, floor16.ui.range_edit.range_editor, (new cljs.core.Keyword(null, "kitchen-area", "kitchen-area", 1575433352)).cljs$core$IFn$_invoke$arity$1(self__.query), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "min-bottom", "min-bottom", 2894918008), 
      cljs.core.get_in.call(null, cljs.core.deref.call(null, floor16.appsearch.astate), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "kitchen-area", "kitchen-area", 1575433352), new cljs.core.Keyword(null, "btm", "btm", 1014002125)], null)), new cljs.core.Keyword(null, "max-top", "max-top", 1856863454), cljs.core.get_in.call(null, cljs.core.deref.call(null, floor16.appsearch.astate), 
      new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "kitchen-area", "kitchen-area", 1575433352), new cljs.core.Keyword(null, "top", "top", 1014019271)], null)), new cljs.core.Keyword(null, "step", "step", 1017444926), 1, new cljs.core.Keyword(null, "no-text-boxes", "no-text-boxes", 1736451607), true, new cljs.core.Keyword(null, "caption", "caption", 1566477656), "\u043a\u0443\u0445\u043d\u044f, \u043a\u0432.\u043c. ", 
      new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), after_update], null)], null))), new cljs.core.Keyword(null, "caption", "caption", 1566477656), floor16.lang.l.call(null, new cljs.core.Keyword(null, "area", "area", 1016906751))], null)], null)), om.core.build.call(null, floor16.ui.generic.box_group, self__.query, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
      "view", "view", 1017523735), React.DOM.div(null, om.core.build.call(null, floor16.ui.range_edit.range_editor, (new cljs.core.Keyword(null, "floor", "floor", 1111431038)).cljs$core$IFn$_invoke$arity$1(self__.query), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "min-bottom", "min-bottom", 2894918008), cljs.core.get_in.call(null, cljs.core.deref.call(null, floor16.appsearch.astate), 
      new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "floor", "floor", 1111431038), new cljs.core.Keyword(null, "btm", "btm", 1014002125)], null)), new cljs.core.Keyword(null, "max-top", "max-top", 1856863454), cljs.core.get_in.call(null, cljs.core.deref.call(null, floor16.appsearch.astate), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "floor", "floor", 1111431038), new cljs.core.Keyword(null, "top", "top", 1014019271)], null)), new cljs.core.Keyword(null, "step", "step", 1017444926), 1, new cljs.core.Keyword(null, "no-text-boxes", "no-text-boxes", 1736451607), true, new cljs.core.Keyword(null, "caption", "caption", 1566477656), "\u044d\u0442\u0430\u0436 ", new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), 
      after_update], null)], null)), om.core.build.call(null, floor16.ui.range_edit.range_editor, (new cljs.core.Keyword(null, "floors", "floors", 4037235033)).cljs$core$IFn$_invoke$arity$1(self__.query), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "min-bottom", "min-bottom", 2894918008), cljs.core.get_in.call(null, cljs.core.deref.call(null, floor16.appsearch.astate), new cljs.core.PersistentVector(null, 
      3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "floors", "floors", 4037235033), new cljs.core.Keyword(null, "btm", "btm", 1014002125)], null)), new cljs.core.Keyword(null, "max-top", "max-top", 1856863454), cljs.core.get_in.call(null, cljs.core.deref.call(null, floor16.appsearch.astate), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", 
      "settings", 2448535445), new cljs.core.Keyword(null, "floors", "floors", 4037235033), new cljs.core.Keyword(null, "top", "top", 1014019271)], null)), new cljs.core.Keyword(null, "step", "step", 1017444926), 1, new cljs.core.Keyword(null, "no-text-boxes", "no-text-boxes", 1736451607), true, new cljs.core.Keyword(null, "caption", "caption", 1566477656), "\u044d\u0442\u0430\u0436\u0435\u0439 \u0432 \u0434\u043e\u043c\u0435 ", new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), 
      after_update], null)], null))), new cljs.core.Keyword(null, "caption", "caption", 1566477656), floor16.lang.l.call(null, new cljs.core.Keyword(null, "floors", "floors", 4037235033))], null)], null)), om.core.build.call(null, floor16.ui.generic.box_group, self__.query, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "view", "view", 1017523735), om.core.build.call(null, floor16.ui.generic.checkbtn_list, 
      self__.query, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), new cljs.core.Keyword(null, "building-type", "building-type", 587801125), new cljs.core.Keyword(null, "className", "className", 1004015509), "clearfix", new cljs.core.Keyword(null, "dict", "dict", 1016987432), floor16.datum.dict.call(null, new cljs.core.Keyword(null, "building-types", 
      "building-types", 689609618)), new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), after_update], null)], null)), new cljs.core.Keyword(null, "caption", "caption", 1566477656), floor16.lang.l.call(null, new cljs.core.Keyword(null, "building-type", "building-type", 587801125))], null)], null)), om.core.build.call(null, floor16.ui.generic.box_group, self__.query, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 
      2, [new cljs.core.Keyword(null, "view", "view", 1017523735), om.core.build.call(null, floor16.ui.generic.checkbtn_list, self__.query, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), new cljs.core.Keyword(null, "toilet", "toilet", 4440631679), new cljs.core.Keyword(null, "className", "className", 1004015509), "clearfix", new cljs.core.Keyword(null, 
      "dict", "dict", 1016987432), floor16.datum.dict.call(null, new cljs.core.Keyword(null, "layout-types", "layout-types", 1812779912)), new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), after_update], null)], null)), new cljs.core.Keyword(null, "caption", "caption", 1566477656), floor16.lang.l.call(null, new cljs.core.Keyword(null, "toilet", "toilet", 4440631679))], null)], null)), om.core.build.call(null, floor16.ui.generic.box_group, self__.query, new cljs.core.PersistentArrayMap(null, 
      1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "view", "view", 1017523735), om.core.build.call(null, floor16.ui.generic.checkbtn_list, self__.query, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "className", "className", 1004015509), "clearfix", new cljs.core.Keyword(null, "item-class", 
      "item-class", 1910395312), "small", new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), after_update, new cljs.core.Keyword(null, "items", "items", 1114430258), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "balcony", "balcony", 674779190)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
      "id", "id", 1013907597), new cljs.core.Keyword(null, "furniture", "furniture", 4728441700)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "internet", "internet", 1584315059)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "tv", "tv", 1013907956)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
      "id", "id", 1013907597), new cljs.core.Keyword(null, "frige", "frige", 1111603757)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "washer", "washer", 4513883902)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "conditioner", "conditioner", 2222035578)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
      "id", "id", 1013907597), new cljs.core.Keyword(null, "parking", "parking", 4515669802)], null)], null)], null)], null)), new cljs.core.Keyword(null, "caption", "caption", 1566477656), floor16.lang.l.call(null, new cljs.core.Keyword(null, "facilities", "facilities", 1550587379))], null)], null)), om.core.build.call(null, floor16.ui.generic.box_group, self__.query, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 
      2, [new cljs.core.Keyword(null, "view", "view", 1017523735), om.core.build.call(null, floor16.ui.generic.checkbtn_list, self__.query, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "className", "className", 1004015509), "clearfix", new cljs.core.Keyword(null, "item-class", "item-class", 1910395312), "small", new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), 
      after_update, new cljs.core.Keyword(null, "items", "items", 1114430258), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "intercom", "intercom", 1584304791)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "security", "security", 1963027122)], null), new cljs.core.PersistentArrayMap(null, 
      1, [new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "concierge", "concierge", 4418492197)], null)], null)], null)], null)), new cljs.core.Keyword(null, "caption", "caption", 1566477656), floor16.lang.l.call(null, new cljs.core.Keyword(null, "safety", "safety", 4398977604))], null)], null)), om.core.build.call(null, floor16.ui.generic.box_group, self__.query, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 
      2, [new cljs.core.Keyword(null, "view", "view", 1017523735), om.core.build.call(null, floor16.ui.range_edit.range_editor, (new cljs.core.Keyword(null, "distance", "distance", 1302364007)).cljs$core$IFn$_invoke$arity$1(self__.query), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "min-bottom", "min-bottom", 2894918008), cljs.core.get_in.call(null, cljs.core.deref.call(null, 
      floor16.appsearch.astate), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "distance", "distance", 1302364007), new cljs.core.Keyword(null, "btm", "btm", 1014002125)], null)), new cljs.core.Keyword(null, "max-top", "max-top", 1856863454), cljs.core.get_in.call(null, cljs.core.deref.call(null, floor16.appsearch.astate), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "distance", "distance", 1302364007), new cljs.core.Keyword(null, "top", "top", 1014019271)], null)), new cljs.core.Keyword(null, "step", "step", 1017444926), 1, new cljs.core.Keyword(null, "no-text-boxes", "no-text-boxes", 1736451607), true, new cljs.core.Keyword(null, "caption", "caption", 1566477656), "\u0414\u043e \u043c\u0435\u0442\u0440\u043e \u043f\u0435\u0448\u043a\u043e\u043c, \u043c\u0438\u043d ", 
      new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), after_update], null)], null)), new cljs.core.Keyword(null, "caption", "caption", 1566477656), floor16.lang.l.call(null, new cljs.core.Keyword(null, "distance", "distance", 1302364007))], null)], null)), om.core.build.call(null, floor16.ui.generic.box_group, self__.query, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
      "view", "view", 1017523735), om.core.build.call(null, floor16.ui.generic.checkbtn_list, self__.query, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "className", "className", 1004015509), "clearfix", new cljs.core.Keyword(null, "item-class", "item-class", 1910395312), "small", new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), after_update, new cljs.core.Keyword(null, 
      "items", "items", 1114430258), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "kids", "kids", 1017195999)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "pets", "pets", 1017341606)], null)], null)], null)], null)), new cljs.core.Keyword(null, "caption", 
      "caption", 1566477656), floor16.lang.l.call(null, new cljs.core.Keyword(null, "kidsnpets", "kidsnpets", 1154728391))], null)], null)), om.core.build.call(null, floor16.ui.generic.box_group, self__.query, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "view", "view", 1017523735), om.core.build.call(null, floor16.ui.generic.checkbtn_list, self__.query, new cljs.core.PersistentArrayMap(null, 
      1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "className", "className", 1004015509), "clearfix", new cljs.core.Keyword(null, "item-class", "item-class", 1910395312), "small", new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), after_update, new cljs.core.Keyword(null, "items", "items", 1114430258), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
      1, [new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "not-only-russo", "not-only-russo", 630581815)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "only-russo", "only-russo", 4375124733)], null)], null)], null)], null)), new cljs.core.Keyword(null, "caption", "caption", 1566477656), floor16.lang.l.call(null, new cljs.core.Keyword(null, "restrictions", "restrictions", 4160575897))], 
      null)], null))));
    };
    floor16.appsearch.t84384.prototype.cljs$core$IMeta$_meta$arity$1 = function(_84386) {
      var self__ = this;
      var _84386__$1 = this;
      return self__.meta84385;
    };
    floor16.appsearch.t84384.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_84386, meta84385__$1) {
      var self__ = this;
      var _84386__$1 = this;
      return new floor16.appsearch.t84384(self__.opts, self__.owner, self__.query, self__.extended_filter, meta84385__$1);
    };
    floor16.appsearch.__GT_t84384 = function __GT_t84384(opts__$1, owner__$1, query__$1, extended_filter__$1, meta84385) {
      return new floor16.appsearch.t84384(opts__$1, owner__$1, query__$1, extended_filter__$1, meta84385);
    };
  }
  return new floor16.appsearch.t84384(opts, owner, query, extended_filter, null);
};
floor16.appsearch.compose_title = function compose_title(p__84387, area_or_photo_kw) {
  var map__84389 = p__84387;
  var map__84389__$1 = cljs.core.seq_QMARK_.call(null, map__84389) ? cljs.core.apply.call(null, cljs.core.hash_map, map__84389) : map__84389;
  var item = map__84389__$1;
  var imgs_cnt = cljs.core.get.call(null, map__84389__$1, new cljs.core.Keyword(null, "imgs-cnt", "imgs-cnt", 4630463134));
  var total_area = cljs.core.get.call(null, map__84389__$1, new cljs.core.Keyword(null, "total-area", "total-area", 4556748008));
  var appartment_type = cljs.core.get.call(null, map__84389__$1, new cljs.core.Keyword(null, "appartment-type", "appartment-type", 4242935641));
  return[cljs.core.str("\u041f\u0435\u0440\u0435\u0439\u0442\u0438 \u043a \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044e: \u0441\u0434\u0430\u0435\u0442\u0441\u044f "), cljs.core.str(appartment_type), cljs.core.str(cljs.core.truth_(function() {
    var and__3431__auto__ = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "area", "area", 1016906751), area_or_photo_kw);
    if (and__3431__auto__) {
      return total_area;
    } else {
      return and__3431__auto__;
    }
  }()) ? [cljs.core.str(" \u043f\u043b\u043e\u0449\u0430\u0434\u044c\u044e "), cljs.core.str(total_area)].join("") : null), cljs.core.str(cljs.core.truth_(function() {
    var and__3431__auto__ = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "photo", "photo", 1120547236), area_or_photo_kw);
    if (and__3431__auto__) {
      var and__3431__auto____$1 = imgs_cnt;
      if (cljs.core.truth_(and__3431__auto____$1)) {
        return 0 < imgs_cnt;
      } else {
        return and__3431__auto____$1;
      }
    } else {
      return and__3431__auto__;
    }
  }()) ? [cljs.core.str(" "), cljs.core.str(imgs_cnt), cljs.core.str(" \u0444\u043e\u0442\u043e")].join("") : null), cljs.core.str("...")].join("");
};
floor16.appsearch.compose_str = function compose_str(p__84390) {
  var map__84392 = p__84390;
  var map__84392__$1 = cljs.core.seq_QMARK_.call(null, map__84392) ? cljs.core.apply.call(null, cljs.core.hash_map, map__84392) : map__84392;
  var item = map__84392__$1;
  var floors = cljs.core.get.call(null, map__84392__$1, new cljs.core.Keyword(null, "floors", "floors", 4037235033));
  var floor = cljs.core.get.call(null, map__84392__$1, new cljs.core.Keyword(null, "floor", "floor", 1111431038));
  var total_area = cljs.core.get.call(null, map__84392__$1, new cljs.core.Keyword(null, "total-area", "total-area", 4556748008));
  var appartment_type = cljs.core.get.call(null, map__84392__$1, new cljs.core.Keyword(null, "appartment-type", "appartment-type", 4242935641));
  return[cljs.core.str("\u0421\u0434\u0430\u0435\u0442\u0441\u044f "), cljs.core.str(appartment_type), cljs.core.str(cljs.core.truth_(total_area) ? [cljs.core.str(" "), cljs.core.str(total_area), cljs.core.str("\u043a\u0432.\u043c. ")].join("") : null), cljs.core.str(cljs.core.truth_(floor) ? [cljs.core.str("\u043d\u0430 "), cljs.core.str(floor), cljs.core.str("-\u043c \u044d\u0442\u0430\u0436\u0435 ")].join("") : null), cljs.core.str(cljs.core.truth_(floors) ? [cljs.core.str(" "), cljs.core.str(floors), 
  cljs.core.str(floor16.lang.ru_floor_ending.call(null, floors)), cljs.core.str(" "), cljs.core.str(cljs.core.truth_(floor) ? "\u044d\u0442\u0430\u0436\u043d\u043e\u0433\u043e \u0434\u043e\u043c\u0430" : "\u044d\u0442\u0430\u0436\u043d\u043e\u043c \u0434\u043e\u043c\u0435")].join("") : null)].join("");
};
floor16.appsearch.render_metdis = function render_metdis(p__84393, className) {
  var map__84395 = p__84393;
  var map__84395__$1 = cljs.core.seq_QMARK_.call(null, map__84395) ? cljs.core.apply.call(null, cljs.core.hash_map, map__84395) : map__84395;
  var item = map__84395__$1;
  var district = cljs.core.get.call(null, map__84395__$1, new cljs.core.Keyword(null, "district", "district", 1302865664));
  var distance = cljs.core.get.call(null, map__84395__$1, new cljs.core.Keyword(null, "distance", "distance", 1302364007));
  var metro = cljs.core.get.call(null, map__84395__$1, new cljs.core.Keyword(null, "metro", "metro", 1117692043));
  return React.DOM.span({"className":className}, cljs.core.truth_(metro) ? React.DOM.strong({"className":"metro"}, React.DOM.i(null), metro) : null, cljs.core.truth_(metro) ? React.DOM.span({"title":"\u043f\u0435\u0448\u043a\u043e\u043c", "className":"distance"}, [cljs.core.str("(\u223c"), cljs.core.str(distance), cljs.core.str(" \u043c\u0438\u043d.) ")].join("")) : null, cljs.core.truth_(district) ? React.DOM.strong({"className":"district"}, React.DOM.i(null), district) : null);
};
floor16.appsearch.compose_digest = function compose_digest(p__84396) {
  var map__84398 = p__84396;
  var map__84398__$1 = cljs.core.seq_QMARK_.call(null, map__84398) ? cljs.core.apply.call(null, cljs.core.hash_map, map__84398) : map__84398;
  var item = map__84398__$1;
  var district = cljs.core.get.call(null, map__84398__$1, new cljs.core.Keyword(null, "district", "district", 1302865664));
  var distance = cljs.core.get.call(null, map__84398__$1, new cljs.core.Keyword(null, "distance", "distance", 1302364007));
  var metro = cljs.core.get.call(null, map__84398__$1, new cljs.core.Keyword(null, "metro", "metro", 1117692043));
  var building_type = cljs.core.get.call(null, map__84398__$1, new cljs.core.Keyword(null, "building-type", "building-type", 587801125));
  var floors = cljs.core.get.call(null, map__84398__$1, new cljs.core.Keyword(null, "floors", "floors", 4037235033));
  var floor = cljs.core.get.call(null, map__84398__$1, new cljs.core.Keyword(null, "floor", "floor", 1111431038));
  var total_area = cljs.core.get.call(null, map__84398__$1, new cljs.core.Keyword(null, "total-area", "total-area", 4556748008));
  var appartment_type = cljs.core.get.call(null, map__84398__$1, new cljs.core.Keyword(null, "appartment-type", "appartment-type", 4242935641));
  return React.DOM.span({"className":"digest"}, React.DOM.span({"className":"first-line six columns"}, React.DOM.span(null, "\u0421\u0434\u0430\u0435\u0442\u0441\u044f "), React.DOM.strong(null, appartment_type), cljs.core.truth_(total_area) ? React.DOM.strong(null, " ", total_area, "\u043c", React.DOM.sup(null, 2), " ") : null), React.DOM.span({"className":"second-line six columns"}, cljs.core.truth_(floor) ? React.DOM.span(null, "\u043d\u0430 ", React.DOM.strong(null, floor), "-\u043c \u044d\u0442\u0430\u0436\u0435 ") : 
  null, cljs.core.truth_(function() {
    var and__3431__auto__ = cljs.core.not.call(null, floor);
    if (and__3431__auto__) {
      var or__3443__auto__ = floors;
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return building_type;
      }
    } else {
      return and__3431__auto__;
    }
  }()) ? React.DOM.span(null, "\u0432 ") : null, cljs.core.truth_(floors) ? React.DOM.span(null, " ", React.DOM.strong(null, floors), [cljs.core.str(floor16.lang.ru_floor_ending.call(null, floors)), cljs.core.str(" ")].join(""), cljs.core.truth_(floor) ? "\u044d\u0442\u0430\u0436\u043d\u043e\u0433\u043e " : "\u044d\u0442\u0430\u0436\u043d\u043e\u043c ") : null, cljs.core.truth_(building_type) ? React.DOM.strong(null, clojure.string.replace.call(null, building_type, /\u044b\u0439$/, cljs.core.truth_(floor) ? 
  "\u043e\u0433\u043e " : "\u043e\u043c ")) : null, cljs.core.truth_(function() {
    var or__3443__auto__ = floors;
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return building_type;
    }
  }()) ? cljs.core.truth_(floor) ? "\u0434\u043e\u043c\u0430 " : "\u0434\u043e\u043c\u0435 " : null), floor16.appsearch.render_metdis.call(null, item, "third-line six columns"));
};
floor16.appsearch.get_add_fields = function get_add_fields(p__84400, has) {
  var map__84402 = p__84400;
  var map__84402__$1 = cljs.core.seq_QMARK_.call(null, map__84402) ? cljs.core.apply.call(null, cljs.core.hash_map, map__84402) : map__84402;
  var item = map__84402__$1;
  var bow_window = cljs.core.get.call(null, map__84402__$1, new cljs.core.Keyword(null, "bow-window", "bow-window", 1902675141));
  var loggia = cljs.core.get.call(null, map__84402__$1, new cljs.core.Keyword(null, "loggia", "loggia", 4211534189));
  var balcony = cljs.core.get.call(null, map__84402__$1, new cljs.core.Keyword(null, "balcony", "balcony", 674779190));
  var src = new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "balcony", "balcony", 674779190), new cljs.core.Keyword(null, "loggia", "loggia", 4211534189), new cljs.core.Keyword(null, "bow-window", "bow-window", 1902675141), new cljs.core.Keyword(null, "furniture", "furniture", 4728441700), new cljs.core.Keyword(null, "internet", "internet", 1584315059), new cljs.core.Keyword(null, "tv", "tv", 1013907956), new cljs.core.Keyword(null, 
  "frige", "frige", 1111603757), new cljs.core.Keyword(null, "washer", "washer", 4513883902), new cljs.core.Keyword(null, "conditioner", "conditioner", 2222035578), new cljs.core.Keyword(null, "parking", "parking", 4515669802), new cljs.core.Keyword(null, "intercom", "intercom", 1584304791), new cljs.core.Keyword(null, "security", "security", 1963027122), new cljs.core.Keyword(null, "concierge", "concierge", 4418492197), new cljs.core.Keyword(null, "kids", "kids", 1017195999), new cljs.core.Keyword(null, 
  "pets", "pets", 1017341606), new cljs.core.Keyword(null, "addiction", "addiction", 1628959361)], null);
  return cljs.core.vec.call(null, cljs.core.filter.call(null, function(p1__84399_SHARP_) {
    return cljs.core._EQ_.call(null, has, p1__84399_SHARP_.call(null, item));
  }, src));
};
floor16.appsearch.render_has = function() {
  var render_has__delegate = function(item, has, p__84404) {
    var vec__84406 = p__84404;
    var no_label = cljs.core.nth.call(null, vec__84406, 0, null);
    var fields = floor16.appsearch.get_add_fields.call(null, item, has);
    if (cljs.core.seq.call(null, fields)) {
      return cljs.core.apply.call(null, om.dom.span, {"className":cljs.core.truth_(has) ? "has" : "hasnt"}, cljs.core.concat.call(null, cljs.core.truth_(no_label) ? null : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.span({"key":"lbl", "className":"lbl"}, floor16.lang.l.call(null, cljs.core.truth_(has) ? new cljs.core.Keyword(null, "has", "has", 1014007308) : new cljs.core.Keyword(null, "hasnt", "hasnt", 1112954194)))], null), cljs.core.map.call(null, 
      function(p1__84403_SHARP_) {
        return React.DOM.i({"key":cljs.core.name.call(null, p1__84403_SHARP_), "title":cljs.core.not.call(null, has) && (cljs.core._EQ_.call(null, p1__84403_SHARP_, new cljs.core.Keyword(null, "kids", "kids", 1017195999)) || cljs.core._EQ_.call(null, p1__84403_SHARP_, new cljs.core.Keyword(null, "pets", "pets", 1017341606))) ? floor16.lang.l.call(null, cljs.core.keyword.call(null, [cljs.core.str("no-"), cljs.core.str(cljs.core.name.call(null, p1__84403_SHARP_))].join(""))) : floor16.lang.l.call(null, 
        p1__84403_SHARP_), "className":[cljs.core.str("icon "), cljs.core.str(cljs.core.name.call(null, p1__84403_SHARP_))].join("")});
      }, fields)));
    } else {
      return "";
    }
  };
  var render_has = function(item, has, var_args) {
    var p__84404 = null;
    if (arguments.length > 2) {
      p__84404 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return render_has__delegate.call(this, item, has, p__84404);
  };
  render_has.cljs$lang$maxFixedArity = 2;
  render_has.cljs$lang$applyTo = function(arglist__84407) {
    var item = cljs.core.first(arglist__84407);
    arglist__84407 = cljs.core.next(arglist__84407);
    var has = cljs.core.first(arglist__84407);
    var p__84404 = cljs.core.rest(arglist__84407);
    return render_has__delegate(item, has, p__84404);
  };
  render_has.cljs$core$IFn$_invoke$arity$variadic = render_has__delegate;
  return render_has;
}();
floor16.appsearch.get_time_text = function get_time_text(p__84408) {
  var map__84410 = p__84408;
  var map__84410__$1 = cljs.core.seq_QMARK_.call(null, map__84410) ? cljs.core.apply.call(null, cljs.core.hash_map, map__84410) : map__84410;
  var item = map__84410__$1;
  var created = cljs.core.get.call(null, map__84410__$1, new cljs.core.Keyword(null, "created", "created", 2042458714));
  return created;
};
floor16.appsearch.phone_button = function phone_button(p__84411, owner, p__84412) {
  var map__84418 = p__84411;
  var map__84418__$1 = cljs.core.seq_QMARK_.call(null, map__84418) ? cljs.core.apply.call(null, cljs.core.hash_map, map__84418) : map__84418;
  var cursor = map__84418__$1;
  var phone = cljs.core.get.call(null, map__84418__$1, new cljs.core.Keyword(null, "phone", "phone", 1120547040));
  var seoid = cljs.core.get.call(null, map__84418__$1, new cljs.core.Keyword(null, "seoid", "seoid", 1123228074));
  var map__84419 = p__84412;
  var map__84419__$1 = cljs.core.seq_QMARK_.call(null, map__84419) ? cljs.core.apply.call(null, cljs.core.hash_map, map__84419) : map__84419;
  var opts = map__84419__$1;
  var title = cljs.core.get.call(null, map__84419__$1, new cljs.core.Keyword(null, "title", "title", 1124275658), floor16.lang.l.call(null, new cljs.core.Keyword(null, "phone-button", "phone-button", 2927685603)));
  var className = cljs.core.get.call(null, map__84419__$1, new cljs.core.Keyword(null, "className", "className", 1004015509));
  if (typeof floor16.appsearch.t84420 !== "undefined") {
  } else {
    floor16.appsearch.t84420 = function(opts, className, map__84418, phone_button, map__84419, p__84412, p__84411, owner, title, cursor, phone, seoid, meta84421) {
      this.opts = opts;
      this.className = className;
      this.map__84418 = map__84418;
      this.phone_button = phone_button;
      this.map__84419 = map__84419;
      this.p__84412 = p__84412;
      this.p__84411 = p__84411;
      this.owner = owner;
      this.title = title;
      this.cursor = cursor;
      this.phone = phone;
      this.seoid = seoid;
      this.meta84421 = meta84421;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.appsearch.t84420.cljs$lang$type = true;
    floor16.appsearch.t84420.cljs$lang$ctorStr = "floor16.appsearch/t84420";
    floor16.appsearch.t84420.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.appsearch/t84420");
    };
    floor16.appsearch.t84420.prototype.om$core$IRender$ = true;
    floor16.appsearch.t84420.prototype.om$core$IRender$render$arity$1 = function(this__4987__auto__) {
      var self__ = this;
      var this__4987__auto____$1 = this;
      var response_handler = function(x) {
        return om.core.update_BANG_.call(null, self__.cursor, new cljs.core.Keyword(null, "phone", "phone", 1120547040), x);
      };
      if (cljs.core.truth_(self__.phone)) {
        return React.DOM.span({"className":[cljs.core.str("show-phone opened "), cljs.core.str(cljs.core.count.call(null, self__.phone) > 1 ? "cnt " : null), cljs.core.str(self__.className)].join("")}, clojure.string.join.call(null, " ", self__.phone));
      } else {
        return React.DOM.span({"onClick":function() {
          return floor16.datum.api_get.call(null, new cljs.core.Keyword(null, "private", "private", 699406581), response_handler, self__.seoid);
        }, "className":[cljs.core.str("show-phone "), cljs.core.str(self__.className)].join("")}, self__.title);
      }
    };
    floor16.appsearch.t84420.prototype.cljs$core$IMeta$_meta$arity$1 = function(_84422) {
      var self__ = this;
      var _84422__$1 = this;
      return self__.meta84421;
    };
    floor16.appsearch.t84420.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_84422, meta84421__$1) {
      var self__ = this;
      var _84422__$1 = this;
      return new floor16.appsearch.t84420(self__.opts, self__.className, self__.map__84418, self__.phone_button, self__.map__84419, self__.p__84412, self__.p__84411, self__.owner, self__.title, self__.cursor, self__.phone, self__.seoid, meta84421__$1);
    };
    floor16.appsearch.__GT_t84420 = function __GT_t84420(opts__$1, className__$1, map__84418__$2, phone_button__$1, map__84419__$2, p__84412__$1, p__84411__$1, owner__$1, title__$1, cursor__$1, phone__$1, seoid__$1, meta84421) {
      return new floor16.appsearch.t84420(opts__$1, className__$1, map__84418__$2, phone_button__$1, map__84419__$2, p__84412__$1, p__84411__$1, owner__$1, title__$1, cursor__$1, phone__$1, seoid__$1, meta84421);
    };
  }
  return new floor16.appsearch.t84420(opts, className, map__84418__$1, phone_button, map__84419__$1, p__84412, p__84411, owner, title, cursor, phone, seoid, null);
};
floor16.appsearch.render_price = function() {
  var render_price__delegate = function(p__84423, p__84424) {
    var map__84427 = p__84423;
    var map__84427__$1 = cljs.core.seq_QMARK_.call(null, map__84427) ? cljs.core.apply.call(null, cljs.core.hash_map, map__84427) : map__84427;
    var item = map__84427__$1;
    var plus_utilities = cljs.core.get.call(null, map__84427__$1, new cljs.core.Keyword(null, "plus-utilities", "plus-utilities", 1251631625));
    var deposit = cljs.core.get.call(null, map__84427__$1, new cljs.core.Keyword(null, "deposit", "deposit", 2568358416));
    var price = cljs.core.get.call(null, map__84427__$1, new cljs.core.Keyword(null, "price", "price", 1120838843));
    var vec__84428 = p__84424;
    var className = cljs.core.nth.call(null, vec__84428, 0, null);
    return React.DOM.span({"className":[cljs.core.str(cljs.core.truth_(price) ? null : "no "), cljs.core.str("price "), cljs.core.str(className)].join("")}, cljs.core.truth_(price) ? React.DOM.span({"className":"val"}, floor16.global.price_to_str.call(null, price)) : null, cljs.core.truth_(price) ? React.DOM.span({"className":"cur"}, floor16.lang.l.call(null, new cljs.core.Keyword(null, "rub", "rub", 1014017521))) : null, cljs.core.truth_(price) ? null : floor16.lang.l.call(null, new cljs.core.Keyword(null, 
    "no-price", "no-price", 573419951)));
  };
  var render_price = function(p__84423, var_args) {
    var p__84424 = null;
    if (arguments.length > 1) {
      p__84424 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return render_price__delegate.call(this, p__84423, p__84424);
  };
  render_price.cljs$lang$maxFixedArity = 1;
  render_price.cljs$lang$applyTo = function(arglist__84429) {
    var p__84423 = cljs.core.first(arglist__84429);
    var p__84424 = cljs.core.rest(arglist__84429);
    return render_price__delegate(p__84423, p__84424);
  };
  render_price.cljs$core$IFn$_invoke$arity$variadic = render_price__delegate;
  return render_price;
}();
floor16.appsearch.ad_item_view = function ad_item_view(p__84430, owner, opts) {
  var map__84432 = p__84430;
  var map__84432__$1 = cljs.core.seq_QMARK_.call(null, map__84432) ? cljs.core.apply.call(null, cljs.core.hash_map, map__84432) : map__84432;
  var item = map__84432__$1;
  var price = cljs.core.get.call(null, map__84432__$1, new cljs.core.Keyword(null, "price", "price", 1120838843));
  var address = cljs.core.get.call(null, map__84432__$1, new cljs.core.Keyword(null, "address", "address", 4161179494));
  var description = cljs.core.get.call(null, map__84432__$1, new cljs.core.Keyword(null, "description", "description", 3584325486));
  var imgs_cnt = cljs.core.get.call(null, map__84432__$1, new cljs.core.Keyword(null, "imgs-cnt", "imgs-cnt", 4630463134));
  var plus_utilities = cljs.core.get.call(null, map__84432__$1, new cljs.core.Keyword(null, "plus-utilities", "plus-utilities", 1251631625));
  var floor = cljs.core.get.call(null, map__84432__$1, new cljs.core.Keyword(null, "floor", "floor", 1111431038));
  var floors = cljs.core.get.call(null, map__84432__$1, new cljs.core.Keyword(null, "floors", "floors", 4037235033));
  var thumb = cljs.core.get.call(null, map__84432__$1, new cljs.core.Keyword(null, "thumb", "thumb", 1124246856));
  var deposit = cljs.core.get.call(null, map__84432__$1, new cljs.core.Keyword(null, "deposit", "deposit", 2568358416));
  var seoid = cljs.core.get.call(null, map__84432__$1, new cljs.core.Keyword(null, "seoid", "seoid", 1123228074));
  var url = floor16.navigation.url_to.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "mode", "mode", 1017261333), new cljs.core.Keyword(null, "ad", "ad", 1013907349), new cljs.core.Keyword(null, "url-params", "url-params", 3432736534), item], null));
  var title = floor16.appsearch.compose_title.call(null, item, new cljs.core.Keyword(null, "area", "area", 1016906751));
  var link_handler = function(url, title) {
    return function(e) {
      if (cljs.core._EQ_.call(null, 0, e.button)) {
        floor16.navigation.goto$.call(null, url);
        var temp__4090__auto___84433 = document.getElementById("ad");
        if (cljs.core.truth_(temp__4090__auto___84433)) {
          var n_84434 = temp__4090__auto___84433;
          window.scrollTo(0, n_84434.offsetTop);
        } else {
          window.scrollTo(0, 0);
        }
        return e.preventDefault();
      } else {
        return null;
      }
    };
  }(url, title);
  return React.DOM.div({"className":"ad-item eleven columns"}, React.DOM.span({"className":"pub-date"}, floor16.appsearch.get_time_text.call(null, item)), React.DOM.a({"onClick":link_handler, "title":floor16.appsearch.compose_title.call(null, item, new cljs.core.Keyword(null, "photo", "photo", 1120547236)), "href":url, "className":"thumb two columns"}, cljs.core.truth_(thumb) ? React.DOM.img({"alt":floor16.appsearch.compose_str.call(null, item), "src":thumb}) : null, cljs.core.truth_(function() {
    var and__3431__auto__ = imgs_cnt;
    if (cljs.core.truth_(and__3431__auto__)) {
      return 0 < imgs_cnt;
    } else {
      return and__3431__auto__;
    }
  }()) ? React.DOM.span({"className":"photo-count"}, imgs_cnt) : null), React.DOM.div({"className":"descr six columns"}, React.DOM.a({"onClick":link_handler, "title":title, "href":url, "className":"address six columns"}, cljs.core.truth_(address) ? address : floor16.lang.l.call(null, new cljs.core.Keyword(null, "no-address", "no-address", 2077634394))), floor16.appsearch.compose_digest.call(null, item)), React.DOM.div({"className":"cond three columns"}, floor16.appsearch.render_price.call(null, item, 
  ""), React.DOM.div({"className":"price-details"}, cljs.core.truth_(price) ? [cljs.core.str(cljs.core.truth_(deposit) ? "+ \u0434\u0435\u043f\u043e\u0437\u0438\u0442 " : null), cljs.core.str(cljs.core.truth_(plus_utilities) ? "+ \u043a\u043e\u043c.\u043f\u043b\u0430\u0442\u0435\u0436\u0438" : null)].join("") : null), om.core.build.call(null, floor16.appsearch.phone_button, item, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "className", "className", 1004015509), "three columns"], null)], null))), React.DOM.span({"className":"additionals offset-by-two nine columns"}, React.DOM.span({"className":"icons"}, floor16.appsearch.render_has.call(null, item, true), floor16.appsearch.render_has.call(null, item, false))));
};
floor16.appsearch.compose_areas = function compose_areas(p__84435) {
  var map__84437 = p__84435;
  var map__84437__$1 = cljs.core.seq_QMARK_.call(null, map__84437) ? cljs.core.apply.call(null, cljs.core.hash_map, map__84437) : map__84437;
  var kitchen_area = cljs.core.get.call(null, map__84437__$1, new cljs.core.Keyword(null, "kitchen-area", "kitchen-area", 1575433352));
  var living_area = cljs.core.get.call(null, map__84437__$1, new cljs.core.Keyword(null, "living-area", "living-area", 2672354467));
  var total_area = cljs.core.get.call(null, map__84437__$1, new cljs.core.Keyword(null, "total-area", "total-area", 4556748008));
  if (cljs.core.truth_(function() {
    var and__3431__auto__ = total_area;
    if (cljs.core.truth_(and__3431__auto__)) {
      var and__3431__auto____$1 = living_area;
      if (cljs.core.truth_(and__3431__auto____$1)) {
        return kitchen_area;
      } else {
        return and__3431__auto____$1;
      }
    } else {
      return and__3431__auto__;
    }
  }())) {
    return[cljs.core.str(total_area), cljs.core.str(" / "), cljs.core.str(living_area), cljs.core.str(" / "), cljs.core.str(kitchen_area)].join("");
  } else {
    if (cljs.core.truth_(function() {
      var and__3431__auto__ = living_area;
      if (cljs.core.truth_(and__3431__auto__)) {
        return kitchen_area;
      } else {
        return and__3431__auto__;
      }
    }())) {
      return[cljs.core.str("x / "), cljs.core.str(living_area), cljs.core.str(" / "), cljs.core.str(kitchen_area)].join("");
    } else {
      if (cljs.core.truth_(function() {
        var and__3431__auto__ = total_area;
        if (cljs.core.truth_(and__3431__auto__)) {
          return kitchen_area;
        } else {
          return and__3431__auto__;
        }
      }())) {
        return[cljs.core.str(total_area), cljs.core.str(" / x / "), cljs.core.str(kitchen_area)].join("");
      } else {
        if (cljs.core.truth_(function() {
          var and__3431__auto__ = total_area;
          if (cljs.core.truth_(and__3431__auto__)) {
            return living_area;
          } else {
            return and__3431__auto__;
          }
        }())) {
          return[cljs.core.str(total_area), cljs.core.str(" / "), cljs.core.str(living_area), cljs.core.str(" / x")].join("");
        } else {
          if (cljs.core.truth_(total_area)) {
            return[cljs.core.str(total_area)].join("");
          } else {
            return null;
          }
        }
      }
    }
  }
};
floor16.appsearch.compose_floors = function compose_floors(p__84438) {
  var map__84440 = p__84438;
  var map__84440__$1 = cljs.core.seq_QMARK_.call(null, map__84440) ? cljs.core.apply.call(null, cljs.core.hash_map, map__84440) : map__84440;
  var floors = cljs.core.get.call(null, map__84440__$1, new cljs.core.Keyword(null, "floors", "floors", 4037235033));
  var floor = cljs.core.get.call(null, map__84440__$1, new cljs.core.Keyword(null, "floor", "floor", 1111431038));
  if (cljs.core.truth_(function() {
    var and__3431__auto__ = floor;
    if (cljs.core.truth_(and__3431__auto__)) {
      return floors;
    } else {
      return and__3431__auto__;
    }
  }())) {
    return[cljs.core.str(floor), cljs.core.str(" / "), cljs.core.str(floors)].join("");
  } else {
    if (cljs.core.truth_(floor)) {
      return[cljs.core.str(floor)].join("");
    } else {
      if (cljs.core.truth_(floors)) {
        return[cljs.core.str("x / "), cljs.core.str(floors)].join("");
      } else {
        return null;
      }
    }
  }
};
floor16.appsearch.render_props = function() {
  var render_props__delegate = function(p__84441, p__84442) {
    var map__84445 = p__84441;
    var map__84445__$1 = cljs.core.seq_QMARK_.call(null, map__84445) ? cljs.core.apply.call(null, cljs.core.hash_map, map__84445) : map__84445;
    var cursor = map__84445__$1;
    var person_name = cljs.core.get.call(null, map__84445__$1, new cljs.core.Keyword(null, "person-name", "person-name", 541966709));
    var toilet = cljs.core.get.call(null, map__84445__$1, new cljs.core.Keyword(null, "toilet", "toilet", 4440631679));
    var building_type = cljs.core.get.call(null, map__84445__$1, new cljs.core.Keyword(null, "building-type", "building-type", 587801125));
    var vec__84446 = p__84442;
    var className = cljs.core.nth.call(null, vec__84446, 0, null);
    var areas = floor16.appsearch.compose_areas.call(null, cursor);
    var floors = floor16.appsearch.compose_floors.call(null, cursor);
    var has = floor16.appsearch.get_add_fields.call(null, cursor, true);
    var hasnt = floor16.appsearch.get_add_fields.call(null, cursor, false);
    return React.DOM.table({"className":[cljs.core.str("props "), cljs.core.str(className)].join("")}, React.DOM.tbody(null, cljs.core.truth_(areas) ? React.DOM.tr(null, React.DOM.td({"className":"key"}, floor16.lang.l.call(null, new cljs.core.Keyword(null, "area", "area", 1016906751))), React.DOM.td(null, [cljs.core.str(areas), cljs.core.str(" \u043c")].join(""), React.DOM.sup(null, "2"))) : null, cljs.core.truth_(floors) ? React.DOM.tr(null, React.DOM.td({"className":"key"}, floor16.lang.l.call(null, 
    new cljs.core.Keyword(null, "floor", "floor", 1111431038))), React.DOM.td(null, floors)) : null, cljs.core.truth_(building_type) ? React.DOM.tr(null, React.DOM.td({"className":"key"}, floor16.lang.l.call(null, new cljs.core.Keyword(null, "building-type", "building-type", 587801125))), React.DOM.td(null, building_type)) : null, cljs.core.truth_(toilet) ? React.DOM.tr(null, React.DOM.td({"className":"key"}, floor16.lang.l.call(null, new cljs.core.Keyword(null, "toilet", "toilet", 4440631679))), 
    React.DOM.td(null, toilet)) : null, cljs.core.seq.call(null, has) || cljs.core.seq.call(null, hasnt) ? React.DOM.tr({"className":"break"}, React.DOM.td(null)) : null, cljs.core.seq.call(null, has) ? React.DOM.tr(null, React.DOM.td({"className":"key"}, floor16.lang.l.call(null, new cljs.core.Keyword(null, "has", "has", 1014007308))), React.DOM.td(null, floor16.appsearch.render_has.call(null, cursor, true, true))) : null, cljs.core.seq.call(null, hasnt) ? React.DOM.tr(null, React.DOM.td({"className":"key"}, 
    floor16.lang.l.call(null, new cljs.core.Keyword(null, "hasnt", "hasnt", 1112954194))), React.DOM.td(null, floor16.appsearch.render_has.call(null, cursor, false, true))) : null, cljs.core.truth_(person_name) ? React.DOM.tr({"className":"break"}, React.DOM.td(null)) : null, cljs.core.truth_(person_name) ? React.DOM.tr(null, React.DOM.td({"className":"key"}, floor16.lang.l.call(null, new cljs.core.Keyword(null, "person-name", "person-name", 541966709))), React.DOM.td(null, person_name)) : null));
  };
  var render_props = function(p__84441, var_args) {
    var p__84442 = null;
    if (arguments.length > 1) {
      p__84442 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return render_props__delegate.call(this, p__84441, p__84442);
  };
  render_props.cljs$lang$maxFixedArity = 1;
  render_props.cljs$lang$applyTo = function(arglist__84447) {
    var p__84441 = cljs.core.first(arglist__84447);
    var p__84442 = cljs.core.rest(arglist__84447);
    return render_props__delegate(p__84441, p__84442);
  };
  render_props.cljs$core$IFn$_invoke$arity$variadic = render_props__delegate;
  return render_props;
}();
floor16.appsearch.ad_view = function ad_view(p__84448, owner) {
  var map__84454 = p__84448;
  var map__84454__$1 = cljs.core.seq_QMARK_.call(null, map__84454) ? cljs.core.apply.call(null, cljs.core.hash_map, map__84454) : map__84454;
  var cursor = map__84454__$1;
  var current = cljs.core.get.call(null, map__84454__$1, new cljs.core.Keyword(null, "current", "current", 2140844267));
  var query = cljs.core.get.call(null, map__84454__$1, new cljs.core.Keyword(null, "query", "query", 1121848378));
  var map__84455 = (new cljs.core.Keyword(null, "data", "data", 1016980252)).cljs$core$IFn$_invoke$arity$1(current);
  var map__84455__$1 = cljs.core.seq_QMARK_.call(null, map__84455) ? cljs.core.apply.call(null, cljs.core.hash_map, map__84455) : map__84455;
  var data = map__84455__$1;
  var price = cljs.core.get.call(null, map__84455__$1, new cljs.core.Keyword(null, "price", "price", 1120838843));
  var address = cljs.core.get.call(null, map__84455__$1, new cljs.core.Keyword(null, "address", "address", 4161179494));
  var description = cljs.core.get.call(null, map__84455__$1, new cljs.core.Keyword(null, "description", "description", 3584325486));
  var plus_utilities = cljs.core.get.call(null, map__84455__$1, new cljs.core.Keyword(null, "plus-utilities", "plus-utilities", 1251631625));
  var imgs = cljs.core.get.call(null, map__84455__$1, new cljs.core.Keyword(null, "imgs", "imgs", 1017140354));
  var loading = cljs.core.get.call(null, map__84455__$1, new cljs.core.Keyword(null, "loading", "loading", 1350554798));
  var appartment_type = cljs.core.get.call(null, map__84455__$1, new cljs.core.Keyword(null, "appartment-type", "appartment-type", 4242935641));
  var created = cljs.core.get.call(null, map__84455__$1, new cljs.core.Keyword(null, "created", "created", 2042458714));
  var deposit = cljs.core.get.call(null, map__84455__$1, new cljs.core.Keyword(null, "deposit", "deposit", 2568358416));
  var lat = cljs.core.get.call(null, map__84455__$1, new cljs.core.Keyword(null, "lat", "lat", 1014011153));
  if (typeof floor16.appsearch.t84456 !== "undefined") {
  } else {
    floor16.appsearch.t84456 = function(price, address, query, description, map__84454, plus_utilities, data, imgs, current, ad_view, loading, appartment_type, owner, cursor, p__84448, created, map__84455, deposit, lat, meta84457) {
      this.price = price;
      this.address = address;
      this.query = query;
      this.description = description;
      this.map__84454 = map__84454;
      this.plus_utilities = plus_utilities;
      this.data = data;
      this.imgs = imgs;
      this.current = current;
      this.ad_view = ad_view;
      this.loading = loading;
      this.appartment_type = appartment_type;
      this.owner = owner;
      this.cursor = cursor;
      this.p__84448 = p__84448;
      this.created = created;
      this.map__84455 = map__84455;
      this.deposit = deposit;
      this.lat = lat;
      this.meta84457 = meta84457;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.appsearch.t84456.cljs$lang$type = true;
    floor16.appsearch.t84456.cljs$lang$ctorStr = "floor16.appsearch/t84456";
    floor16.appsearch.t84456.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.appsearch/t84456");
    };
    floor16.appsearch.t84456.prototype.om$core$IRender$ = true;
    floor16.appsearch.t84456.prototype.om$core$IRender$render$arity$1 = function(this__4987__auto__) {
      var self__ = this;
      var this__4987__auto____$1 = this;
      if (cljs.core.truth_(self__.loading)) {
        return React.DOM.div(null, self__.loading);
      } else {
        return React.DOM.div({"id":"ad", "className":"ad-view"}, om.core.build.call(null, floor16.appsearch.simple_filter, self__.query), React.DOM.div({"className":"container"}, React.DOM.h2({"className":"ad-header row sixteen columns"}, React.DOM.span({"className":"twelve columns alpha"}, React.DOM.span({"className":"rent-word"}, "\u0441\u0434\u0430\u0435\u0442\u0441\u044f "), React.DOM.span({"className":"app-type"}, [cljs.core.str(" "), cljs.core.str(self__.appartment_type)].join("")), React.DOM.span({"className":"pub"}, 
        [cljs.core.str("\u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043e "), cljs.core.str(self__.created)].join(""))), React.DOM.span({"className":"price-wrap four columns omega"}, floor16.appsearch.render_price.call(null, self__.data, ""), React.DOM.span({"className":"price-details"}, cljs.core.truth_(self__.price) ? [cljs.core.str(cljs.core.truth_(self__.deposit) ? "+ \u0434\u0435\u043f\u043e\u0437\u0438\u0442 " : null), cljs.core.str(cljs.core.truth_(self__.plus_utilities) ? 
        "+ \u043a\u043e\u043c.\u043f\u043b\u0430\u0442\u0435\u0436\u0438" : null)].join("") : null))), React.DOM.div({"className":"six columns"}, React.DOM.div({"className":[cljs.core.str("info"), cljs.core.str(cljs.core.empty_QMARK_.call(null, self__.imgs) ? " auto" : null)].join("")}, React.DOM.span({"className":"address"}, cljs.core.truth_(self__.address) ? self__.address : floor16.lang.l.call(null, new cljs.core.Keyword(null, "no-address", "no-address", 2077634394))), floor16.appsearch.render_metdis.call(null, 
        self__.data, ""), floor16.appsearch.render_props.call(null, self__.data), om.core.build.call(null, floor16.appsearch.phone_button, self__.data))), cljs.core.seq.call(null, self__.imgs) ? React.DOM.div({"className":"ten columns"}, om.core.build.call(null, floor16.photo.photo_viewer, self__.imgs, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "img-alt", "img-alt", 2929647633), 
        floor16.appsearch.compose_str.call(null, self__.data)], null)], null))) : null, cljs.core.truth_(self__.description) ? React.DOM.div({"className":[cljs.core.str("description "), cljs.core.str(cljs.core.seq.call(null, self__.imgs) ? "sixteen" : "ten"), cljs.core.str(" columns")].join("")}, React.DOM.h3({"className":""}, "\u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435"), React.DOM.p(null, self__.description)) : null, cljs.core.truth_(self__.lat) ? React.DOM.div({"className":"location sixteen columns"}, 
        React.DOM.h3({"className":""}, "\u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435"), om.core.build.call(null, floor16.maps.map_viewer, self__.data, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", 1004015509), "row sixteen columns alpha omega"], null)], null))) : null));
      }
    };
    floor16.appsearch.t84456.prototype.cljs$core$IMeta$_meta$arity$1 = function(_84458) {
      var self__ = this;
      var _84458__$1 = this;
      return self__.meta84457;
    };
    floor16.appsearch.t84456.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_84458, meta84457__$1) {
      var self__ = this;
      var _84458__$1 = this;
      return new floor16.appsearch.t84456(self__.price, self__.address, self__.query, self__.description, self__.map__84454, self__.plus_utilities, self__.data, self__.imgs, self__.current, self__.ad_view, self__.loading, self__.appartment_type, self__.owner, self__.cursor, self__.p__84448, self__.created, self__.map__84455, self__.deposit, self__.lat, meta84457__$1);
    };
    floor16.appsearch.__GT_t84456 = function __GT_t84456(price__$1, address__$1, query__$1, description__$1, map__84454__$2, plus_utilities__$1, data__$1, imgs__$1, current__$1, ad_view__$1, loading__$1, appartment_type__$1, owner__$1, cursor__$1, p__84448__$1, created__$1, map__84455__$2, deposit__$1, lat__$1, meta84457) {
      return new floor16.appsearch.t84456(price__$1, address__$1, query__$1, description__$1, map__84454__$2, plus_utilities__$1, data__$1, imgs__$1, current__$1, ad_view__$1, loading__$1, appartment_type__$1, owner__$1, cursor__$1, p__84448__$1, created__$1, map__84455__$2, deposit__$1, lat__$1, meta84457);
    };
  }
  return new floor16.appsearch.t84456(price, address, query, description, map__84454__$1, plus_utilities, data, imgs, current, ad_view, loading, appartment_type, owner, cursor, p__84448, created, map__84455__$1, deposit, lat, null);
};
floor16.appsearch.app = function app(p__84459, owner) {
  var map__84464 = p__84459;
  var map__84464__$1 = cljs.core.seq_QMARK_.call(null, map__84464) ? cljs.core.apply.call(null, cljs.core.hash_map, map__84464) : map__84464;
  var cursor = map__84464__$1;
  var current = cljs.core.get.call(null, map__84464__$1, new cljs.core.Keyword(null, "current", "current", 2140844267));
  var data = cljs.core.get.call(null, map__84464__$1, new cljs.core.Keyword(null, "data", "data", 1016980252));
  var query = cljs.core.get.call(null, map__84464__$1, new cljs.core.Keyword(null, "query", "query", 1121848378));
  var app_mode = cljs.core.get.call(null, map__84464__$1, new cljs.core.Keyword(null, "app-mode", "app-mode", 2135359809));
  if (typeof floor16.appsearch.t84465 !== "undefined") {
  } else {
    floor16.appsearch.t84465 = function(app_mode, query, data, current, cursor, map__84464, owner, p__84459, app, meta84466) {
      this.app_mode = app_mode;
      this.query = query;
      this.data = data;
      this.current = current;
      this.cursor = cursor;
      this.map__84464 = map__84464;
      this.owner = owner;
      this.p__84459 = p__84459;
      this.app = app;
      this.meta84466 = meta84466;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    floor16.appsearch.t84465.cljs$lang$type = true;
    floor16.appsearch.t84465.cljs$lang$ctorStr = "floor16.appsearch/t84465";
    floor16.appsearch.t84465.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "floor16.appsearch/t84465");
    };
    floor16.appsearch.t84465.prototype.om$core$IRender$ = true;
    floor16.appsearch.t84465.prototype.om$core$IRender$render$arity$1 = function(this__4987__auto__) {
      var self__ = this;
      var this__4987__auto____$1 = this;
      return React.DOM.div(null, cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "ad", "ad", 1013907349), self__.app_mode) ? om.core.build.call(null, floor16.appsearch.ad_view, self__.cursor) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? om.core.build.call(null, floor16.ui.generic.list_view, self__.cursor, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "main-container-class", 
      "main-container-class", 2418625674), new cljs.core.Keyword(null, "list-mode", "list-mode", 4038414564), new cljs.core.Keyword(null, "data-header-total-class", "data-header-total-class", 1355009252), new cljs.core.Keyword(null, "empty-text", "empty-text", 4203552031), new cljs.core.Keyword(null, "side-filter", "side-filter", 945679392), new cljs.core.Keyword(null, "data-header-class", "data-header-class", 2790141677), new cljs.core.Keyword(null, "header-opts", "header-opts", 2151738066), new cljs.core.Keyword(null, 
      "data-container-class", "data-container-class", 3307025531), new cljs.core.Keyword(null, "data-header-opts-class", "data-header-opts-class", 2922150106), new cljs.core.Keyword(null, "data-header-total-kword", "data-header-total-kword", 1362738529), new cljs.core.Keyword(null, "loading-text", "loading-text", 2379603600), new cljs.core.Keyword(null, "item-view", "item-view", 3121596561), new cljs.core.Keyword(null, "res", "res", 1014017042), new cljs.core.Keyword(null, "top-filter", "top-filter", 
      2858888802)], ["container", new cljs.core.Keyword(null, "grid", "grid", 1017085624), "four columns", floor16.lang.l.call(null, new cljs.core.Keyword(null, "empty-search", "empty-search", 3924434330)), floor16.appsearch.extended_filter, "clearfix", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "sort", "sort", 1017440528), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "view", "view", 1017523735), React.DOM.span(null, React.DOM.span({"className":"order-label four columns"}, 
      "\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e"), om.core.build.call(null, floor16.ui.generic.select, self__.query, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "data-key", "data-key", 2801799470), new cljs.core.Keyword(null, "order", "order", 1119910592), new cljs.core.Keyword(null, "placeholder", "placeholder", 1612151013), floor16.lang.l.call(null, 
      new cljs.core.Keyword(null, "order", "order", 1119910592)), new cljs.core.Keyword(null, "className", "className", 1004015509), "three columns", new cljs.core.Keyword(null, "dict", "dict", 1016987432), floor16.datum.dict.call(null, new cljs.core.Keyword(null, "ordersettings", "ordersettings", 4205185251)), new cljs.core.Keyword(null, "after-update", "after-update", 4410540364), floor16.appsearch.after_update.call(null, self__.query)], null)], null)))], null)], null), "eleven columns", "seven columns", 
      new cljs.core.Keyword(null, "ad", "ad", 1013907349), floor16.lang.l.call(null, new cljs.core.Keyword(null, "loading-search", "loading-search", 3456648907)), floor16.appsearch.ad_item_view, floor16.datum.res.call(null, new cljs.core.Keyword(null, "ads", "ads", 1014000674)), floor16.appsearch.simple_filter])], null)) : null);
    };
    floor16.appsearch.t84465.prototype.cljs$core$IMeta$_meta$arity$1 = function(_84467) {
      var self__ = this;
      var _84467__$1 = this;
      return self__.meta84466;
    };
    floor16.appsearch.t84465.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_84467, meta84466__$1) {
      var self__ = this;
      var _84467__$1 = this;
      return new floor16.appsearch.t84465(self__.app_mode, self__.query, self__.data, self__.current, self__.cursor, self__.map__84464, self__.owner, self__.p__84459, self__.app, meta84466__$1);
    };
    floor16.appsearch.__GT_t84465 = function __GT_t84465(app_mode__$1, query__$1, data__$1, current__$1, cursor__$1, map__84464__$2, owner__$1, p__84459__$1, app__$1, meta84466) {
      return new floor16.appsearch.t84465(app_mode__$1, query__$1, data__$1, current__$1, cursor__$1, map__84464__$2, owner__$1, p__84459__$1, app__$1, meta84466);
    };
  }
  return new floor16.appsearch.t84465(app_mode, query, data, current, cursor, map__84464__$1, owner, p__84459, app, null);
};
floor16.appsearch.prepare_data = function prepare_data(p__84468) {
  var map__84470 = p__84468;
  var map__84470__$1 = cljs.core.seq_QMARK_.call(null, map__84470) ? cljs.core.apply.call(null, cljs.core.hash_map, map__84470) : map__84470;
  var data = map__84470__$1;
  var current = cljs.core.get.call(null, map__84470__$1, new cljs.core.Keyword(null, "current", "current", 2140844267));
  var settings = cljs.core.get.call(null, map__84470__$1, new cljs.core.Keyword(null, "settings", "settings", 2448535445));
  var query = cljs.core.get.call(null, map__84470__$1, new cljs.core.Keyword(null, "query", "query", 1121848378));
  var app_mode = cljs.core.get.call(null, map__84470__$1, new cljs.core.Keyword(null, "app-mode", "app-mode", 2135359809));
  if (cljs.core.truth_(query)) {
    return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "query", "query", 1121848378), cljs.core.merge.call(null, settings, query, cljs.core.truth_(function() {
      var and__3431__auto__ = current;
      if (cljs.core.truth_(and__3431__auto__)) {
        return(new cljs.core.Keyword(null, "appartment-type", "appartment-type", 4242935641)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "data", "data", 1016980252)).cljs$core$IFn$_invoke$arity$1(current));
      } else {
        return and__3431__auto__;
      }
    }()) ? null : null));
  } else {
    return data;
  }
};
floor16.appsearch.main = function main(edn_data) {
  var data = floor16.appsearch.prepare_data.call(null, cljs.reader.read_string.call(null, edn_data));
  cljs.core.println.call(null, "Main: ", data);
  cljs.core.reset_BANG_.call(null, floor16.appsearch.astate, data);
  floor16.datum.init_data.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "app-state", "app-state", 1424976215), floor16.appsearch.astate], null));
  floor16.navigation.init_nav.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "app-state", "app-state", 1424976215), floor16.appsearch.astate, new cljs.core.Keyword(null, "app-modes", "app-modes", 1419288566), floor16.appsearch.app_modes], null));
  return om.core.root.call(null, floor16.appsearch.app, floor16.appsearch.astate, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), document.getElementById("app-search")], null));
};
goog.exportSymbol("floor16.appsearch.main", floor16.appsearch.main);
floor16.appsearch.render = function render(edn_data) {
  floor16.global.server_side_QMARK_ = true;
  var data = floor16.appsearch.prepare_data.call(null, cljs.reader.read_string.call(null, edn_data));
  cljs.core.reset_BANG_.call(null, floor16.appsearch.astate, data);
  floor16.datum.init_data.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "app-state", "app-state", 1424976215), floor16.appsearch.astate, new cljs.core.Keyword(null, "local?", "local?", 4211409318), true], null));
  floor16.navigation.init_nav.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "app-state", "app-state", 1424976215), floor16.appsearch.astate, new cljs.core.Keyword(null, "app-modes", "app-modes", 1419288566), floor16.appsearch.app_modes], null));
  return om.dom.render_to_str.call(null, om.core.build.call(null, floor16.appsearch.app, cljs.core.deref.call(null, floor16.appsearch.astate)));
};
goog.exportSymbol("floor16.appsearch.render", floor16.appsearch.render);
